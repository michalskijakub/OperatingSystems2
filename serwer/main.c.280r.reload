
;; Function main (main, funcdef_no=6, decl_uid=6269, cgraph_uid=6, symbol_order=7)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=192, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 17:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 25:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 26:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 29:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 32:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 39:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 52:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 53:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 56:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 58:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpdi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 64:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 75:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 76:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 79:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 82:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 98:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 100:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 102:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 103:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 106:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 113:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 114:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=21: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            alt=24: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=25,overall=10,losers=1 -- refuse
            alt=26: Bad operand -- refuse
	 Choosing alt 4 in insn 115:  (0) r  (1) i {*movdi_internal}
      Creating newreg=151, assigning class GENERAL_REGS to r151
  115: r151:DI=0x705f31705f6d6873
    Inserting insn reload after:
  290: [frame:DI-0x62]=r151:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 290:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 117:  (0) m  (1) qn {*movqi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 118:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 120:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 121:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 124:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 127:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 129:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 133:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 134:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 137:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 139:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 144:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 146:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 150:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 151:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 154:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 155:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 156:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 158:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 161:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 162:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 164:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 166:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 169:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 170:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 172:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 174:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 178:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 181:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 182:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 185:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 186:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 189:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 191:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 198:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 199:  (0) m  (1) qn {*movqi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=3,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=5,overall=9,losers=1,rld_nregs=1
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=6,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=8,overall=16,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=9,overall=22,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=10,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=11: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=12,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=13,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=14,overall=10,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=16,overall=15,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=19,overall=15,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=20: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=21: Bad operand -- refuse
            Staticly defined alt reject+=6
            alt=22: Bad operand -- refuse
            alt=23: Bad operand -- refuse
            alt=24: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=25,overall=10,losers=1 -- refuse
            alt=26: Bad operand -- refuse
	 Choosing alt 4 in insn 200:  (0) r  (1) i {*movdi_internal}
      Creating newreg=152, assigning class GENERAL_REGS to r152
  200: r152:DI=0x705f32705f6d6873
    Inserting insn reload after:
  291: [frame:DI-0x92]=r152:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 291:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=18,losers=2 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 201:  (0) m  (1) rn {*movhi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=2,overall=18,losers=2,rld_nregs=2
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill Non-pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            1 Non input pseudo reload: reject++
            alt=4,overall=22,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=18,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=6,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=7,overall=15,losers=1 -- refuse
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 202:  (0) m  (1) qn {*movqi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 203:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 204:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 205:  (0) r  (1) r  (2) le {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 206:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 209:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 212:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 214:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 218:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 219:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 222:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 224:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 229:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 231:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 232:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 233:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 234:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 235:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 236:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 239:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 240:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 241:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 243:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (1) rBwBz {*call_value}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 246:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 247:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 249:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 251:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 254:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 255:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 258:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 259:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 264:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (1) rBwBz {*call_value}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 267:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6 7
EBB 8 9
EBB 10
EBB 11
EBB 12

********** Pseudo live ranges #1: **********

  BB 12
   Insn 281: point = 0, n_alt = -1
   Insn 280: point = 0, n_alt = -2
   Insn 276: point = 1, n_alt = -2
  BB 5
   Insn 285: point = 4, n_alt = -1
   Insn 67: point = 4, n_alt = 0
   Insn 66: point = 5, n_alt = 0
   Insn 65: point = 5, n_alt = 3
   Insn 64: point = 5, n_alt = 4
  BB 3
   Insn 283: point = 5, n_alt = -1
   Insn 42: point = 5, n_alt = 0
   Insn 41: point = 6, n_alt = 0
   Insn 40: point = 6, n_alt = 3
   Insn 39: point = 6, n_alt = 4
  BB 11
   Insn 271: point = 6, n_alt = 0
   Insn 270: point = 7, n_alt = 0
   Insn 269: point = 7, n_alt = 0
   Insn 268: point = 7, n_alt = -2
   Insn 267: point = 8, n_alt = 3
   Insn 266: point = 9, n_alt = 0
   Insn 265: point = 9, n_alt = -2
   Insn 264: point = 10, n_alt = 3
  BB 9
   Insn 287: point = 11, n_alt = -1
   Insn 192: point = 11, n_alt = 0
   Insn 191: point = 11, n_alt = 4
   Insn 190: point = 11, n_alt = 0
   Insn 189: point = 11, n_alt = 4
   Insn 188: point = 11, n_alt = 0
   Insn 187: point = 11, n_alt = -2
   Insn 186: point = 12, n_alt = 2
   Insn 185: point = 12, n_alt = 3
   Insn 184: point = 13, n_alt = 0
   Insn 183: point = 13, n_alt = -2
   Insn 182: point = 14, n_alt = 2
   Insn 181: point = 14, n_alt = 3
   Insn 180: point = 15, n_alt = 0
   Insn 179: point = 15, n_alt = -2
   Insn 178: point = 16, n_alt = 2
   Insn 177: point = 16, n_alt = 3
   Insn 176: point = 17, n_alt = 0
   Insn 175: point = 17, n_alt = -2
   Insn 174: point = 18, n_alt = 2
   Insn 173: point = 18, n_alt = -2
   Insn 172: point = 19, n_alt = 3
   Insn 171: point = 20, n_alt = -2
   Insn 170: point = 21, n_alt = 3
   Insn 169: point = 22, n_alt = 3
   Insn 168: point = 23, n_alt = 0
   Insn 167: point = 23, n_alt = -2
   Insn 166: point = 24, n_alt = 2
   Insn 165: point = 24, n_alt = -2
   Insn 164: point = 25, n_alt = 3
   Insn 163: point = 26, n_alt = -2
   Insn 162: point = 27, n_alt = 3
   Insn 161: point = 28, n_alt = 3
   Insn 160: point = 29, n_alt = 0
   Insn 159: point = 29, n_alt = -2
   Insn 158: point = 30, n_alt = 2
   Insn 157: point = 30, n_alt = -2
   Insn 156: point = 31, n_alt = 3
   Insn 155: point = 32, n_alt = 4
   Insn 154: point = 32, n_alt = 3
   Insn 153: point = 33, n_alt = 0
   Insn 152: point = 33, n_alt = -2
   Insn 151: point = 34, n_alt = 4
   Insn 150: point = 34, n_alt = 2
   Insn 149: point = 34, n_alt = 0
   Insn 148: point = 36, n_alt = 3
   Insn 147: point = 37, n_alt = 1
   Insn 146: point = 38, n_alt = 3
   Insn 145: point = 39, n_alt = 1
   Insn 144: point = 40, n_alt = 3
   Insn 143: point = 41, n_alt = -2
   Insn 142: point = 42, n_alt = 0
   Insn 141: point = 42, n_alt = 0
   Insn 140: point = 42, n_alt = -2
   Insn 139: point = 43, n_alt = 2
   Insn 138: point = 43, n_alt = 0
   Insn 137: point = 44, n_alt = 5
   Insn 136: point = 45, n_alt = -2
   Insn 135: point = 46, n_alt = 0
   Insn 134: point = 46, n_alt = 2
   Insn 133: point = 46, n_alt = 2
   Insn 132: point = 46, n_alt = 0
   Insn 131: point = 46, n_alt = 0
   Insn 130: point = 46, n_alt = -2
   Insn 129: point = 47, n_alt = 2
   Insn 128: point = 47, n_alt = 0
   Insn 127: point = 48, n_alt = 1
   Insn 126: point = 49, n_alt = -2
   Insn 125: point = 50, n_alt = 0
   Insn 124: point = 50, n_alt = 4
   Insn 123: point = 50, n_alt = 0
   Insn 122: point = 50, n_alt = 0
   Insn 121: point = 50, n_alt = 5
   Insn 120: point = 51, n_alt = 3
   Insn 119: point = 52, n_alt = 5
   Insn 118: point = 53, n_alt = 3
   Insn 117: point = 54, n_alt = 8
   Insn 116: point = 54, n_alt = 3
   Insn 290: point = 54, n_alt = 5
   Insn 115: point = 55, n_alt = 4
   Insn 114: point = 56, n_alt = 8
   Insn 113: point = 56, n_alt = 3
   Insn 112: point = 56, n_alt = 1
  BB 10
   Insn 261: point = 56, n_alt = 0
   Insn 260: point = 56, n_alt = -2
   Insn 259: point = 57, n_alt = 2
   Insn 258: point = 57, n_alt = 3
   Insn 257: point = 58, n_alt = 0
   Insn 256: point = 58, n_alt = -2
   Insn 255: point = 59, n_alt = 2
   Insn 254: point = 59, n_alt = 3
   Insn 253: point = 60, n_alt = 0
   Insn 252: point = 60, n_alt = -2
   Insn 251: point = 61, n_alt = 2
   Insn 250: point = 61, n_alt = -2
   Insn 249: point = 62, n_alt = 3
   Insn 248: point = 63, n_alt = -2
   Insn 247: point = 64, n_alt = 3
   Insn 246: point = 65, n_alt = 3
   Insn 245: point = 66, n_alt = 0
   Insn 244: point = 66, n_alt = -2
   Insn 243: point = 67, n_alt = 2
   Insn 242: point = 67, n_alt = -2
   Insn 241: point = 68, n_alt = 3
   Insn 240: point = 69, n_alt = 4
   Insn 239: point = 69, n_alt = 3
   Insn 238: point = 70, n_alt = 0
   Insn 237: point = 70, n_alt = -2
   Insn 236: point = 71, n_alt = 4
   Insn 235: point = 71, n_alt = 2
   Insn 234: point = 71, n_alt = 0
   Insn 233: point = 73, n_alt = 3
   Insn 232: point = 74, n_alt = 1
   Insn 231: point = 75, n_alt = 3
   Insn 230: point = 76, n_alt = 1
   Insn 229: point = 77, n_alt = 3
   Insn 228: point = 78, n_alt = -2
   Insn 227: point = 79, n_alt = 0
   Insn 226: point = 79, n_alt = 0
   Insn 225: point = 79, n_alt = -2
   Insn 224: point = 80, n_alt = 2
   Insn 223: point = 80, n_alt = 0
   Insn 222: point = 81, n_alt = 5
   Insn 221: point = 82, n_alt = -2
   Insn 220: point = 83, n_alt = 0
   Insn 219: point = 83, n_alt = 2
   Insn 218: point = 83, n_alt = 2
   Insn 217: point = 83, n_alt = 0
   Insn 216: point = 83, n_alt = 0
   Insn 215: point = 83, n_alt = -2
   Insn 214: point = 84, n_alt = 2
   Insn 213: point = 84, n_alt = 0
   Insn 212: point = 85, n_alt = 1
   Insn 211: point = 86, n_alt = -2
   Insn 210: point = 87, n_alt = 0
   Insn 209: point = 87, n_alt = 4
   Insn 208: point = 87, n_alt = 0
   Insn 207: point = 87, n_alt = 0
   Insn 206: point = 87, n_alt = 5
   Insn 205: point = 88, n_alt = 3
   Insn 204: point = 89, n_alt = 5
   Insn 203: point = 90, n_alt = 3
   Insn 202: point = 91, n_alt = 8
   Insn 201: point = 91, n_alt = 3
   Insn 291: point = 91, n_alt = 5
   Insn 200: point = 92, n_alt = 4
   Insn 199: point = 93, n_alt = 8
   Insn 198: point = 93, n_alt = 3
   Insn 197: point = 93, n_alt = 1
  BB 8
   Insn 110: point = 93, n_alt = -1
   Insn 109: point = 93, n_alt = 0
   Insn 108: point = 94, n_alt = 0
   Insn 107: point = 95, n_alt = 0
   Insn 106: point = 95, n_alt = 4
   Insn 105: point = 95, n_alt = 0
   Insn 104: point = 95, n_alt = -2
   Insn 103: point = 96, n_alt = 2
   Insn 102: point = 96, n_alt = 3
   Insn 101: point = 97, n_alt = 0
   Insn 100: point = 97, n_alt = 4
   Insn 99: point = 97, n_alt = 0
   Insn 98: point = 97, n_alt = 4
   Insn 97: point = 97, n_alt = 0
   Insn 96: point = 97, n_alt = -2
   Insn 95: point = 98, n_alt = 3
   Insn 94: point = 99, n_alt = 0
   Insn 93: point = 99, n_alt = -2
   Insn 92: point = 100, n_alt = 3
  BB 7
   Insn 89: point = 101, n_alt = 1
  BB 6
   Insn 87: point = 101, n_alt = -1
   Insn 86: point = 101, n_alt = 0
   Insn 85: point = 102, n_alt = 0
   Insn 84: point = 104, n_alt = 3
   Insn 83: point = 105, n_alt = 0
   Insn 82: point = 107, n_alt = 3
   Insn 81: point = 108, n_alt = 0
   Insn 80: point = 108, n_alt = -2
   Insn 79: point = 109, n_alt = 3
   Insn 78: point = 110, n_alt = 0
   Insn 77: point = 110, n_alt = -2
   Insn 76: point = 111, n_alt = 3
   Insn 75: point = 112, n_alt = 1
   Insn 74: point = 113, n_alt = 3
   Insn 73: point = 114, n_alt = -2
   Insn 72: point = 115, n_alt = 0
  BB 4
   Insn 62: point = 115, n_alt = -1
   Insn 61: point = 115, n_alt = 0
   Insn 60: point = 115, n_alt = 0
   Insn 59: point = 115, n_alt = -2
   Insn 58: point = 116, n_alt = 2
   Insn 57: point = 116, n_alt = 0
   Insn 56: point = 117, n_alt = 5
   Insn 55: point = 118, n_alt = -2
   Insn 54: point = 119, n_alt = 0
   Insn 53: point = 119, n_alt = 2
   Insn 52: point = 119, n_alt = 2
   Insn 51: point = 119, n_alt = 0
   Insn 50: point = 119, n_alt = 0
   Insn 49: point = 119, n_alt = -2
   Insn 48: point = 120, n_alt = 2
   Insn 47: point = 120, n_alt = 0
  BB 2
   Insn 37: point = 121, n_alt = -1
   Insn 36: point = 121, n_alt = 0
   Insn 35: point = 121, n_alt = 1
   Insn 34: point = 122, n_alt = -2
   Insn 33: point = 123, n_alt = 0
   Insn 32: point = 123, n_alt = 4
   Insn 31: point = 123, n_alt = 0
   Insn 30: point = 123, n_alt = 0
   Insn 29: point = 123, n_alt = 5
   Insn 28: point = 124, n_alt = -2
   Insn 27: point = 125, n_alt = 0
   Insn 26: point = 125, n_alt = 3
   Insn 25: point = 125, n_alt = 4
   Insn 24: point = 125, n_alt = 0
   Insn 23: point = 125, n_alt = 0
   Insn 22: point = 125, n_alt = 0
   Insn 21: point = 125, n_alt = 5
   Insn 20: point = 126, n_alt = -2
   Insn 19: point = 127, n_alt = 0
   Insn 18: point = 127, n_alt = 3
   Insn 17: point = 127, n_alt = 4
   Insn 16: point = 127, n_alt = 0
   Insn 15: point = 127, n_alt = 0
   Insn 14: point = 127, n_alt = 0
   Insn 13: point = 127, n_alt = 0
   Insn 12: point = 127, n_alt = 0
   Insn 11: point = 127, n_alt = -2
   Insn 10: point = 128, n_alt = 0
   Insn 9: point = 128, n_alt = 3
   Insn 8: point = 129, n_alt = 0
   Insn 7: point = 129, n_alt = 0
   Insn 6: point = 129, n_alt = 0
   Insn 5: point = 129, n_alt = 0
 r87: [127..128]
 r88: [112..114]
 r89: [101..105]
 r90: [101..102]
 r91: [93..94]
 r92: [39..41]
 r93: [33..34]
 r94: [15..16]
 r95: [13..14]
 r96: [11..12]
 r97: [76..78]
 r98: [70..71]
 r99: [58..59]
 r100: [56..57]
 r101: [9..10]
 r102: [7..8]
 r103: [2..6]
 r104: [0..1]
 r105: [125..126]
 r106: [123..124]
 r107: [121..122]
 r108: [119..120]
 r109: [117..118]
 r110: [115..116]
 r111: [112..113]
 r112: [110..111]
 r113: [108..109]
 r114: [106..107]
 r115: [103..104]
 r116: [99..100]
 r117: [97..98]
 r118: [95..96]
 r119: [52..53]
 r120: [50..51]
 r121: [48..49]
 r122: [46..47]
 r123: [44..45]
 r124: [42..43]
 r125: [39..40]
 r126: [37..38]
 r127: [35..36]
 r128: [29..32]
 r129: [30..31]
 r130: [26..28]
 r131: [23..27]
 r132: [24..25]
 r133: [20..22]
 r134: [17..21]
 r135: [18..19]
 r136: [89..90]
 r137: [87..88]
 r138: [85..86]
 r139: [83..84]
 r140: [81..82]
 r141: [79..80]
 r142: [76..77]
 r143: [74..75]
 r144: [72..73]
 r145: [66..69]
 r146: [67..68]
 r147: [63..65]
 r148: [60..64]
 r149: [61..62]
 r151: [54..55]
 r152: [91..92]
Compressing live ranges: from 129 to 112 - 86%
Ranges after the compression:
 r87: [110..111]
 r88: [96..97]
 r89: [86..89]
 r90: [86..87]
 r91: [78..79]
 r92: [30..31]
 r93: [24..25]
 r94: [12..13]
 r95: [10..11]
 r96: [8..9]
 r97: [62..63]
 r98: [56..57]
 r99: [48..49]
 r100: [46..47]
 r101: [6..7]
 r102: [4..5]
 r103: [2..3]
 r104: [0..1]
 r105: [108..109]
 r106: [106..107]
 r107: [104..105]
 r108: [102..103]
 r109: [100..101]
 r110: [98..99]
 r111: [96..97]
 r112: [94..95]
 r113: [92..93]
 r114: [90..91]
 r115: [88..89]
 r116: [84..85]
 r117: [82..83]
 r118: [80..81]
 r119: [42..43]
 r120: [40..41]
 r121: [38..39]
 r122: [36..37]
 r123: [34..35]
 r124: [32..33]
 r125: [30..31]
 r126: [28..29]
 r127: [26..27]
 r128: [22..23]
 r129: [22..23]
 r130: [20..21]
 r131: [18..21]
 r132: [18..19]
 r133: [16..17]
 r134: [14..17]
 r135: [14..15]
 r136: [74..75]
 r137: [72..73]
 r138: [70..71]
 r139: [68..69]
 r140: [66..67]
 r141: [64..65]
 r142: [62..63]
 r143: [60..61]
 r144: [58..59]
 r145: [54..55]
 r146: [54..55]
 r147: [52..53]
 r148: [50..53]
 r149: [50..51]
 r151: [44..45]
 r152: [76..77]

********** Assignment #1: **********

	 Assigning to 151 (cl=GENERAL_REGS, orig=151, freq=2000, tfirst=151, tfreq=2000)...
	   Assign 0 to reload r151 (freq=2000)
	 Assigning to 152 (cl=GENERAL_REGS, orig=152, freq=2000, tfirst=152, tfreq=2000)...
	   Assign 0 to reload r152 (freq=2000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=192, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 9
changing reg in insn 11
changing reg in insn 73
changing reg in insn 75
changing reg in insn 83
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 108
changing reg in insn 109
changing reg in insn 143
changing reg in insn 145
changing reg in insn 149
changing reg in insn 152
changing reg in insn 177
changing reg in insn 179
changing reg in insn 181
changing reg in insn 183
changing reg in insn 185
changing reg in insn 187
changing reg in insn 228
changing reg in insn 230
changing reg in insn 234
changing reg in insn 237
changing reg in insn 254
changing reg in insn 256
changing reg in insn 258
changing reg in insn 260
changing reg in insn 264
changing reg in insn 265
changing reg in insn 267
changing reg in insn 268
changing reg in insn 271
changing reg in insn 67
changing reg in insn 42
changing reg in insn 276
changing reg in insn 276
changing reg in insn 280
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 34
changing reg in insn 35
changing reg in insn 47
changing reg in insn 49
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 95
changing reg in insn 96
changing reg in insn 102
changing reg in insn 104
changing reg in insn 118
changing reg in insn 119
changing reg in insn 120
changing reg in insn 121
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 140
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 154
changing reg in insn 159
changing reg in insn 156
changing reg in insn 157
changing reg in insn 161
changing reg in insn 163
changing reg in insn 162
changing reg in insn 167
changing reg in insn 164
changing reg in insn 165
changing reg in insn 169
changing reg in insn 171
changing reg in insn 170
changing reg in insn 175
changing reg in insn 172
changing reg in insn 173
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 215
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 225
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 232
changing reg in insn 233
changing reg in insn 234
changing reg in insn 239
changing reg in insn 244
changing reg in insn 241
changing reg in insn 242
changing reg in insn 246
changing reg in insn 248
changing reg in insn 247
changing reg in insn 252
changing reg in insn 249
changing reg in insn 250
deleting insn with uid = 20.
deleting insn with uid = 28.
deleting insn with uid = 34.
deleting insn with uid = 55.
deleting insn with uid = 126.
deleting insn with uid = 136.
deleting insn with uid = 157.
deleting insn with uid = 165.
deleting insn with uid = 173.
deleting insn with uid = 211.
deleting insn with uid = 221.
deleting insn with uid = 242.
deleting insn with uid = 250.
deleting insn with uid = 276.
starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={99d,61u} r1={70d,22u} r2={58d,10u} r4={73d,25u} r5={86d,38u} r6={1d,75u} r7={1d,59u} r8={47d} r9={47d} r10={47d} r11={47d} r12={47d} r13={47d} r14={47d} r15={47d} r17={65d,4u} r18={47d} r19={47d} r20={1d,1u,2e} r21={48d} r22={48d} r23={48d} r24={48d} r25={48d} r26={48d} r27={48d} r28={48d} r29={47d} r30={47d} r31={47d} r32={47d} r33={47d} r34={47d} r35={47d} r36={47d} r37={51d,3u} r38={51d,3u} r39={47d} r40={47d} r45={47d} r46={47d} r47={47d} r48={47d} r49={47d} r50={47d} r51={47d} r52={47d} r53={47d} r54={47d} r55={47d} r56={47d} r57={47d} r58={47d} r59={47d} r60={47d} r61={47d} r62={47d} r63={47d} r64={47d} r65={47d} r66={47d} r67={47d} r68={47d} r69={47d} r70={47d} r71={47d} r72={47d} r73={47d} r74={47d} r75={47d} r76={47d} r77={47d} r78={47d} r79={47d} r80={47d} 
;;    total ref usage 3875{3572d,301u,2e} in 241{194 regular + 47 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 105 106 107
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 5 2 6 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("initscr") [flags 0x41]  <function_decl 0x7f7410536500 initscr>) [0 initscr S1 A8])
            (const_int 0 [0]))) "main.c":27 700 {*call_value}
     (nil)
    (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("nonl") [flags 0x41]  <function_decl 0x7f7410551100 nonl>) [0 nonl S1 A8])
            (const_int 0 [0]))) "main.c":29 700 {*call_value}
     (nil)
    (nil))
(call_insn 7 6 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("cbreak") [flags 0x41]  <function_decl 0x7f741052b800 cbreak>) [0 cbreak S1 A8])
            (const_int 0 [0]))) "main.c":30 700 {*call_value}
     (nil)
    (nil))
(call_insn 8 7 9 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("noecho") [flags 0x41]  <function_decl 0x7f7410551000 noecho>) [0 noecho S1 A8])
            (const_int 0 [0]))) "main.c":31 700 {*call_value}
     (nil)
    (nil))
(insn 9 8 10 2 (set (reg/f:DI 0 ax [orig:87 stdscr.0_1 ] [87])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7410527c60 stdscr>) [8 stdscr+0 S8 A64])) "main.c":32 85 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) "main.c":32 86 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:87 stdscr.0_1 ] [87])) "main.c":32 85 {*movdi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("keypad") [flags 0x41]  <function_decl 0x7f741053a400 keypad>) [0 keypad S1 A8])
            (const_int 0 [0]))) "main.c":32 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f741055a300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "main.c":33 700 {*call_value}
     (nil)
    (nil))
(insn 14 13 15 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":35 86 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "main.c":35 86 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "main.c":35 86 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f74101d7000 *.LC0>)) "main.c":35 85 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":35 88 {*movqi_internal}
     (nil))
(call_insn 19 18 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7410449a00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "main.c":35 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 21 19 22 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 sem+0 S8 A64])
        (reg:DI 0 ax [105])) "main.c":35 85 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "main.c":36 86 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "main.c":36 86 {*movsi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "main.c":36 86 {*movsi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f74101d7090 *.LC1>)) "main.c":36 85 {*movdi_internal}
     (nil))
(insn 26 25 27 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":36 88 {*movqi_internal}
     (nil))
(call_insn 27 26 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7410449a00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "main.c":36 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 29 27 30 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 sem2+0 S8 A64])
        (reg:DI 0 ax [106])) "main.c":36 85 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "main.c":38 86 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "main.c":38 86 {*movsi_internal}
     (nil))
(insn 32 31 33 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f74101d7120 *.LC2>)) "main.c":38 85 {*movdi_internal}
     (nil))
(call_insn 33 32 35 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f74107d9b00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "main.c":38 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 35 33 36 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 fd+0 S4 A32])
        (reg:SI 0 ax [107])) "main.c":38 86 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 fd+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "main.c":39 11 {*cmpsi_1}
     (nil))
(jump_insn 37 36 38 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "main.c":39 682 {*jcc}
     (nil)
 -> 45)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103
(note 38 37 39 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f74101d71b0 *.LC3>)) "main.c":41 85 {*movdi_internal}
     (nil))
(insn 40 39 41 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":41 88 {*movqi_internal}
     (nil))
(call_insn 41 40 42 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f74106e0800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":41 700 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 42 41 283 3 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (const_int 1 [0x1])) "main.c":42 86 {*movsi_internal}
     (nil))
(jump_insn 283 42 284 3 (set (pc)
        (label_ref 274)) "main.c":42 683 {jump}
     (nil)
 -> 274)
;;  succ:       12 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103

(barrier 284 283 45)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 108 109 110
(code_label 45 284 46 4 2 (nil) [1 uses])
(note 46 45 47 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 4 (set (reg:SI 0 ax [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 fd+0 S4 A32])) "main.c":45 86 {*movsi_internal}
     (nil))
(insn 48 47 49 4 (set (reg:DI 38 r9)
        (const_int 0 [0])) "main.c":45 85 {*movdi_internal}
     (nil))
(insn 49 48 50 4 (set (reg:SI 37 r8)
        (reg:SI 0 ax [108])) "main.c":45 86 {*movsi_internal}
     (nil))
(insn 50 49 51 4 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":45 86 {*movsi_internal}
     (nil))
(insn 51 50 52 4 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":45 86 {*movsi_internal}
     (nil))
(insn 52 51 53 4 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "main.c":45 85 {*movdi_internal}
     (nil))
(insn 53 52 54 4 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":45 85 {*movdi_internal}
     (nil))
(call_insn 54 53 56 4 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f74107d9000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "main.c":45 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 56 54 57 4 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 pidinfo+0 S8 A64])
        (reg:DI 0 ax [109])) "main.c":45 85 {*movdi_internal}
     (nil))
(insn 57 56 58 4 (set (reg:SI 0 ax [110])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 fd+0 S4 A32])) "main.c":46 86 {*movsi_internal}
     (nil))
(insn 58 57 59 4 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "main.c":46 85 {*movdi_internal}
     (nil))
(insn 59 58 60 4 (set (reg:SI 5 di)
        (reg:SI 0 ax [110])) "main.c":46 86 {*movsi_internal}
     (nil))
(call_insn 60 59 61 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftruncate") [flags 0x41]  <function_decl 0x7f7410437f00 ftruncate>) [0 ftruncate S1 A8])
            (const_int 0 [0]))) "main.c":46 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 61 60 62 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [3 pidinfo+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) "main.c":47 12 {*cmpdi_1}
     (nil))
(jump_insn 62 61 63 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "main.c":47 682 {*jcc}
     (nil)
 -> 70)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103
(note 63 62 64 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 5 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f74101d7240 *.LC4>)) "main.c":49 85 {*movdi_internal}
     (nil))
(insn 65 64 66 5 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":49 88 {*movqi_internal}
     (nil))
(call_insn 66 65 67 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f74106e0800 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":49 700 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 67 66 285 5 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (const_int 1 [0x1])) "main.c":50 86 {*movsi_internal}
     (nil))
(jump_insn 285 67 286 5 (set (pc)
        (label_ref 274)) "main.c":50 683 {jump}
     (nil)
 -> 274)
;;  succ:       12 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103

(barrier 286 285 70)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 88 89 90 111 112 113 114 115
(code_label 70 286 71 6 4 (nil) [1 uses])
(note 71 70 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 72 71 73 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7410428200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "main.c":53 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 73 72 74 6 (set (reg:SI 1 dx [orig:88 _2 ] [88])
        (reg:SI 0 ax)) "main.c":53 86 {*movsi_internal}
     (nil))
(insn 74 73 75 6 (set (reg/f:DI 0 ax [111])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 pidinfo+0 S8 A64])) "main.c":53 85 {*movdi_internal}
     (nil))
(insn 75 74 76 6 (set (mem:SI (reg/f:DI 0 ax [111]) [1 pidinfo_37->pid1+0 S4 A32])
        (reg:SI 1 dx [orig:88 _2 ] [88])) "main.c":53 86 {*movsi_internal}
     (nil))
(insn 76 75 77 6 (set (reg:DI 0 ax [112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 sem+0 S8 A64])) "main.c":54 85 {*movdi_internal}
     (nil))
(insn 77 76 78 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [112])) "main.c":54 85 {*movdi_internal}
     (nil))
(call_insn 78 77 79 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f741046c000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "main.c":54 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 79 78 80 6 (set (reg:DI 0 ax [113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 sem2+0 S8 A64])) "main.c":55 85 {*movdi_internal}
     (nil))
(insn 80 79 81 6 (set (reg:DI 5 di)
        (reg:DI 0 ax [113])) "main.c":55 85 {*movdi_internal}
     (nil))
(call_insn 81 80 82 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7410449d00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "main.c":55 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 82 81 83 6 (set (reg/f:DI 0 ax [114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 pidinfo+0 S8 A64])) "main.c":57 85 {*movdi_internal}
     (nil))
(insn 83 82 84 6 (set (reg:SI 1 dx [orig:89 _3 ] [89])
        (mem:SI (reg/f:DI 0 ax [114]) [1 pidinfo_37->pid1+0 S4 A32])) "main.c":57 86 {*movsi_internal}
     (nil))
(insn 84 83 85 6 (set (reg/f:DI 0 ax [115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 pidinfo+0 S8 A64])) "main.c":57 85 {*movdi_internal}
     (nil))
(insn 85 84 86 6 (set (reg:SI 0 ax [orig:90 _4 ] [90])
        (mem:SI (plus:DI (reg/f:DI 0 ax [115])
                (const_int 4 [0x4])) [1 pidinfo_37->pid2+0 S4 A32])) "main.c":57 86 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [orig:89 _3 ] [89])
            (reg:SI 0 ax [orig:90 _4 ] [90]))) "main.c":57 11 {*cmpsi_1}
     (nil))
(jump_insn 87 86 88 6 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 90)
            (pc))) "main.c":57 682 {*jcc}
     (nil)
 -> 90)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 88 87 89 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 7 (set (mem/c:SI (symbol_ref:DI ("SERWER") [flags 0x2]  <var_decl 0x7f74105b8480 SERWER>) [1 SERWER+0 S4 A32])
        (const_int 1 [0x1])) "main.c":59 86 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 91 116 117 118
(code_label 90 89 91 8 5 (nil) [1 uses])
(note 91 90 92 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 8 (set (reg:DI 0 ax [116])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [2 sem+0 S8 A64])) "main.c":61 85 {*movdi_internal}
     (nil))
(insn 93 92 94 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [116])) "main.c":61 85 {*movdi_internal}
     (nil))
(call_insn 94 93 95 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f741046c000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "main.c":61 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 95 94 96 8 (set (reg:DI 0 ax [117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 sem2+0 S8 A64])) "main.c":62 85 {*movdi_internal}
     (nil))
(insn 96 95 97 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [117])) "main.c":62 85 {*movdi_internal}
     (nil))
(call_insn 97 96 98 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7410449d00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "main.c":62 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 98 97 99 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f74101d7000 *.LC0>)) "main.c":64 85 {*movdi_internal}
     (nil))
(call_insn 99 98 100 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_unlink") [flags 0x41]  <function_decl 0x7f7410449c00 sem_unlink>) [0 sem_unlink S1 A8])
            (const_int 0 [0]))) "main.c":64 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f74101d7090 *.LC1>)) "main.c":65 85 {*movdi_internal}
     (nil))
(call_insn 101 100 102 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_unlink") [flags 0x41]  <function_decl 0x7f7410449c00 sem_unlink>) [0 sem_unlink S1 A8])
            (const_int 0 [0]))) "main.c":65 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 102 101 103 8 (set (reg:DI 0 ax [118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 pidinfo+0 S8 A64])) "main.c":67 85 {*movdi_internal}
     (nil))
(insn 103 102 104 8 (set (reg:DI 4 si)
        (const_int 8 [0x8])) "main.c":67 85 {*movdi_internal}
     (nil))
(insn 104 103 105 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [118])) "main.c":67 85 {*movdi_internal}
     (nil))
(call_insn 105 104 106 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("munmap") [flags 0x41]  <function_decl 0x7f74107d9100 munmap>) [0 munmap S1 A8])
            (const_int 0 [0]))) "main.c":67 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 106 105 107 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f74101d7120 *.LC2>)) "main.c":69 85 {*movdi_internal}
     (nil))
(call_insn 107 106 108 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f74107d9c00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "main.c":69 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 108 107 109 8 (set (reg:SI 0 ax [orig:91 SERWER.1_5 ] [91])
        (mem/c:SI (symbol_ref:DI ("SERWER") [flags 0x2]  <var_decl 0x7f74105b8480 SERWER>) [1 SERWER+0 S4 A32])) "main.c":72 86 {*movsi_internal}
     (nil))
(insn 109 108 110 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:91 SERWER.1_5 ] [91])
            (const_int 1 [0x1]))) "main.c":72 11 {*cmpsi_1}
     (nil))
(jump_insn 110 109 111 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 195)
            (pc))) "main.c":72 682 {*jcc}
     (nil)
 -> 195)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 92 93 94 95 96 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135
(note 111 110 112 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 112 111 113 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -87 [0xffffffffffffffa9])) [0 n1+0 S4 A8])
        (const_int 1601005683 [0x5f6d6873])) "main.c":74 86 {*movsi_internal}
     (nil))
(insn 113 112 114 9 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -83 [0xffffffffffffffad])) [0 n1+4 S2 A8])
        (const_int 12656 [0x3170])) "main.c":74 87 {*movhi_internal}
     (nil))
(insn 114 113 115 9 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -81 [0xffffffffffffffaf])) [0 n1+6 S1 A8])
        (const_int 0 [0])) "main.c":74 88 {*movqi_internal}
     (nil))
(insn 115 114 290 9 (set (reg:DI 0 ax [151])
        (const_int 8097245013742545011 [0x705f31705f6d6873])) "main.c":75 85 {*movdi_internal}
     (nil))
(insn 290 115 116 9 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -98 [0xffffffffffffff9e])) [0 n2+0 S8 A16])
        (reg:DI 0 ax [151])) "main.c":75 85 {*movdi_internal}
     (nil))
(insn 116 290 117 9 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -90 [0xffffffffffffffa6])) [0 n2+8 S2 A16])
        (const_int 28015 [0x6d6f])) "main.c":75 87 {*movhi_internal}
     (nil))
(insn 117 116 118 9 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [0 n2+10 S1 A16])
        (const_int 0 [0])) "main.c":75 88 {*movqi_internal}
     (nil))
(insn 118 117 119 9 (parallel [
            (set (reg:DI 0 ax [119])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -87 [0xffffffffffffffa9])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":76 222 {*adddi_1}
     (nil))
(insn 119 118 120 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [6 player_create.name1+0 S8 A64])
        (reg:DI 0 ax [119])) "main.c":76 85 {*movdi_internal}
     (nil))
(insn 120 119 121 9 (parallel [
            (set (reg:DI 0 ax [120])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -98 [0xffffffffffffff9e])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":77 222 {*adddi_1}
     (nil))
(insn 121 120 122 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [6 player_create.name2+0 S8 A64])
        (reg:DI 0 ax [120])) "main.c":77 85 {*movdi_internal}
     (nil))
(insn 122 121 123 9 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "main.c":80 86 {*movsi_internal}
     (nil))
(insn 123 122 124 9 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "main.c":80 86 {*movsi_internal}
     (nil))
(insn 124 123 125 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f74101d72d0 *.LC5>)) "main.c":80 85 {*movdi_internal}
     (nil))
(call_insn 125 124 127 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f74107d9b00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "main.c":80 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 127 125 128 9 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 fd2+0 S4 A32])
        (reg:SI 0 ax [121])) "main.c":80 86 {*movsi_internal}
     (nil))
(insn 128 127 129 9 (set (reg:SI 0 ax [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 fd2+0 S4 A32])) "main.c":82 86 {*movsi_internal}
     (nil))
(insn 129 128 130 9 (set (reg:DI 38 r9)
        (const_int 0 [0])) "main.c":82 85 {*movdi_internal}
     (nil))
(insn 130 129 131 9 (set (reg:SI 37 r8)
        (reg:SI 0 ax [122])) "main.c":82 86 {*movsi_internal}
     (nil))
(insn 131 130 132 9 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":82 86 {*movsi_internal}
     (nil))
(insn 132 131 133 9 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":82 86 {*movsi_internal}
     (nil))
(insn 133 132 134 9 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "main.c":82 85 {*movdi_internal}
     (nil))
(insn 134 133 135 9 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":82 85 {*movdi_internal}
     (nil))
(call_insn 135 134 137 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f74107d9000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "main.c":82 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 137 135 138 9 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 playerinfo+0 S8 A64])
        (reg:DI 0 ax [123])) "main.c":82 85 {*movdi_internal}
     (nil))
(insn 138 137 139 9 (set (reg:SI 0 ax [124])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 fd2+0 S4 A32])) "main.c":83 86 {*movsi_internal}
     (nil))
(insn 139 138 140 9 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "main.c":83 85 {*movdi_internal}
     (nil))
(insn 140 139 141 9 (set (reg:SI 5 di)
        (reg:SI 0 ax [124])) "main.c":83 86 {*movsi_internal}
     (nil))
(call_insn 141 140 142 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftruncate") [flags 0x41]  <function_decl 0x7f7410437f00 ftruncate>) [0 ftruncate S1 A8])
            (const_int 0 [0]))) "main.c":83 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 142 141 143 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7410428200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "main.c":84 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 143 142 144 9 (set (reg:SI 1 dx [orig:92 _6 ] [92])
        (reg:SI 0 ax)) "main.c":84 86 {*movsi_internal}
     (nil))
(insn 144 143 145 9 (set (reg/f:DI 0 ax [125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 playerinfo+0 S8 A64])) "main.c":84 85 {*movdi_internal}
     (nil))
(insn 145 144 146 9 (set (mem:SI (reg/f:DI 0 ax [125]) [1 playerinfo_59->PID+0 S4 A64])
        (reg:SI 1 dx [orig:92 _6 ] [92])) "main.c":84 86 {*movsi_internal}
     (nil))
(insn 146 145 147 9 (set (reg/f:DI 0 ax [126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 playerinfo+0 S8 A64])) "main.c":85 85 {*movdi_internal}
     (nil))
(insn 147 146 148 9 (set (mem:SI (plus:DI (reg/f:DI 0 ax [126])
                (const_int 8 [0x8])) [1 playerinfo_59->numer+0 S4 A64])
        (const_int 1 [0x1])) "main.c":85 86 {*movsi_internal}
     (nil))
(insn 148 147 149 9 (set (reg/f:DI 0 ax [127])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [4 playerinfo+0 S8 A64])) "main.c":86 85 {*movdi_internal}
     (nil))
(insn 149 148 150 9 (parallel [
            (set (reg/f:DI 0 ax [orig:93 _7 ] [93])
                (plus:DI (reg/f:DI 0 ax [127])
                    (const_int 41 [0x29])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":86 222 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [4 playerinfo+0 S8 A64])
            (const_int 41 [0x29]))
        (nil)))
(insn 150 149 151 9 (set (reg:DI 1 dx)
        (const_int 5 [0x5])) "main.c":86 85 {*movdi_internal}
     (nil))
(insn 151 150 152 9 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f74101d7360 *.LC6>)) "main.c":86 85 {*movdi_internal}
     (nil))
(insn 152 151 153 9 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:93 _7 ] [93])) "main.c":86 85 {*movdi_internal}
     (nil))
(call_insn 153 152 154 9 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f74106d5200 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "main.c":86 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 154 153 155 9 (parallel [
            (set (reg:DI 0 ax [128])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":90 222 {*adddi_1}
     (nil))
(insn 155 154 156 9 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f74101d72d0 *.LC5>)) "main.c":90 85 {*movdi_internal}
     (nil))
(insn 156 155 158 9 (set (reg:DI 1 dx [129])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("quit_quit") [flags 0x41]  <function_decl 0x7f7410606b00 quit_quit>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "main.c":90 85 {*movdi_internal}
     (nil))
(insn 158 156 159 9 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":90 85 {*movdi_internal}
     (nil))
(insn 159 158 160 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [128])) "main.c":90 85 {*movdi_internal}
     (nil))
(call_insn 160 159 161 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f74104d0700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "main.c":90 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 161 160 162 9 (parallel [
            (set (reg:DI 1 dx [130])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":91 222 {*adddi_1}
     (nil))
(insn 162 161 163 9 (parallel [
            (set (reg:DI 0 ax [131])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":91 222 {*adddi_1}
     (nil))
(insn 163 162 164 9 (set (reg:DI 2 cx)
        (reg:DI 1 dx [130])) "main.c":91 85 {*movdi_internal}
     (nil))
(insn 164 163 166 9 (set (reg:DI 1 dx [132])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("gracz_fun") [flags 0x41]  <function_decl 0x7f7410606d00 gracz_fun>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "main.c":91 85 {*movdi_internal}
     (nil))
(insn 166 164 167 9 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":91 85 {*movdi_internal}
     (nil))
(insn 167 166 168 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [131])) "main.c":91 85 {*movdi_internal}
     (nil))
(call_insn 168 167 169 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f74104d0700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "main.c":91 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 169 168 170 9 (parallel [
            (set (reg:DI 1 dx [133])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":92 222 {*adddi_1}
     (nil))
(insn 170 169 171 9 (parallel [
            (set (reg:DI 0 ax [134])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":92 222 {*adddi_1}
     (nil))
(insn 171 170 172 9 (set (reg:DI 2 cx)
        (reg:DI 1 dx [133])) "main.c":92 85 {*movdi_internal}
     (nil))
(insn 172 171 174 9 (set (reg:DI 1 dx [135])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("serwer_serwer") [flags 0x41]  <function_decl 0x7f7410606c00 serwer_serwer>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "main.c":92 85 {*movdi_internal}
     (nil))
(insn 174 172 175 9 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":92 85 {*movdi_internal}
     (nil))
(insn 175 174 176 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [134])) "main.c":92 85 {*movdi_internal}
     (nil))
(call_insn 176 175 177 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f74104d0700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "main.c":92 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 177 176 178 9 (set (reg:DI 0 ax [orig:94 quit.2_8 ] [94])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [7 quit+0 S8 A64])) "main.c":93 85 {*movdi_internal}
     (nil))
(insn 178 177 179 9 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":93 85 {*movdi_internal}
     (nil))
(insn 179 178 180 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:94 quit.2_8 ] [94])) "main.c":93 85 {*movdi_internal}
     (nil))
(call_insn 180 179 181 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f74104d0900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "main.c":93 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 181 180 182 9 (set (reg:DI 0 ax [orig:95 gracz1.3_9 ] [95])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [7 gracz1+0 S8 A64])) "main.c":94 85 {*movdi_internal}
     (nil))
(insn 182 181 183 9 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":94 85 {*movdi_internal}
     (nil))
(insn 183 182 184 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:95 gracz1.3_9 ] [95])) "main.c":94 85 {*movdi_internal}
     (nil))
(call_insn 184 183 185 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f74104d0900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "main.c":94 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 185 184 186 9 (set (reg:DI 0 ax [orig:96 serw.4_10 ] [96])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [7 serw+0 S8 A64])) "main.c":95 85 {*movdi_internal}
     (nil))
(insn 186 185 187 9 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":95 85 {*movdi_internal}
     (nil))
(insn 187 186 188 9 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:96 serw.4_10 ] [96])) "main.c":95 85 {*movdi_internal}
     (nil))
(call_insn 188 187 189 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f74104d0900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "main.c":95 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 189 188 190 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f74101d72d0 *.LC5>)) "main.c":96 85 {*movdi_internal}
     (nil))
(call_insn 190 189 191 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f74107d9c00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "main.c":96 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 191 190 192 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f74101d73f0 *.LC7>)) "main.c":97 85 {*movdi_internal}
     (nil))
(call_insn 192 191 287 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f74107d9c00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "main.c":97 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 287 192 288 9 (set (pc)
        (label_ref 262)) 683 {jump}
     (nil)
 -> 262)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 288 287 195)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       8
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 97 98 99 100 136 137 138 139 140 141 142 143 144 145 146 147 148 149
(code_label 195 288 196 10 6 (nil) [1 uses])
(note 196 195 197 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 197 196 198 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -135 [0xffffffffffffff79])) [0 n1+0 S4 A8])
        (const_int 1601005683 [0x5f6d6873])) "main.c":101 86 {*movsi_internal}
     (nil))
(insn 198 197 199 10 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -131 [0xffffffffffffff7d])) [0 n1+4 S2 A8])
        (const_int 12912 [0x3270])) "main.c":101 87 {*movhi_internal}
     (nil))
(insn 199 198 200 10 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -129 [0xffffffffffffff7f])) [0 n1+6 S1 A8])
        (const_int 0 [0])) "main.c":101 88 {*movqi_internal}
     (nil))
(insn 200 199 291 10 (set (reg:DI 0 ax [152])
        (const_int 8097246113254172787 [0x705f32705f6d6873])) "main.c":102 85 {*movdi_internal}
     (nil))
(insn 291 200 201 10 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -146 [0xffffffffffffff6e])) [0 n2+0 S8 A16])
        (reg:DI 0 ax [152])) "main.c":102 85 {*movdi_internal}
     (nil))
(insn 201 291 202 10 (set (mem/c:HI (plus:DI (reg/f:DI 6 bp)
                (const_int -138 [0xffffffffffffff76])) [0 n2+8 S2 A16])
        (const_int 28015 [0x6d6f])) "main.c":102 87 {*movhi_internal}
     (nil))
(insn 202 201 203 10 (set (mem/c:QI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [0 n2+10 S1 A16])
        (const_int 0 [0])) "main.c":102 88 {*movqi_internal}
     (nil))
(insn 203 202 204 10 (parallel [
            (set (reg:DI 0 ax [136])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -135 [0xffffffffffffff79])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":103 222 {*adddi_1}
     (nil))
(insn 204 203 205 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [6 player_create.name1+0 S8 A64])
        (reg:DI 0 ax [136])) "main.c":103 85 {*movdi_internal}
     (nil))
(insn 205 204 206 10 (parallel [
            (set (reg:DI 0 ax [137])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -146 [0xffffffffffffff6e])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":104 222 {*adddi_1}
     (nil))
(insn 206 205 207 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [6 player_create.name2+0 S8 A64])
        (reg:DI 0 ax [137])) "main.c":104 85 {*movdi_internal}
     (nil))
(insn 207 206 208 10 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "main.c":107 86 {*movsi_internal}
     (nil))
(insn 208 207 209 10 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "main.c":107 86 {*movsi_internal}
     (nil))
(insn 209 208 210 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f74101d73f0 *.LC7>)) "main.c":107 85 {*movdi_internal}
     (nil))
(call_insn 210 209 212 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f74107d9b00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "main.c":107 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 212 210 213 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 fd2+0 S4 A32])
        (reg:SI 0 ax [138])) "main.c":107 86 {*movsi_internal}
     (nil))
(insn 213 212 214 10 (set (reg:SI 0 ax [139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 fd2+0 S4 A32])) "main.c":109 86 {*movsi_internal}
     (nil))
(insn 214 213 215 10 (set (reg:DI 38 r9)
        (const_int 0 [0])) "main.c":109 85 {*movdi_internal}
     (nil))
(insn 215 214 216 10 (set (reg:SI 37 r8)
        (reg:SI 0 ax [139])) "main.c":109 86 {*movsi_internal}
     (nil))
(insn 216 215 217 10 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "main.c":109 86 {*movsi_internal}
     (nil))
(insn 217 216 218 10 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "main.c":109 86 {*movsi_internal}
     (nil))
(insn 218 217 219 10 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "main.c":109 85 {*movdi_internal}
     (nil))
(insn 219 218 220 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "main.c":109 85 {*movdi_internal}
     (nil))
(call_insn 220 219 222 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f74107d9000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "main.c":109 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 222 220 223 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 playerinfo2+0 S8 A64])
        (reg:DI 0 ax [140])) "main.c":109 85 {*movdi_internal}
     (nil))
(insn 223 222 224 10 (set (reg:SI 0 ax [141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 fd2+0 S4 A32])) "main.c":110 86 {*movsi_internal}
     (nil))
(insn 224 223 225 10 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "main.c":110 85 {*movdi_internal}
     (nil))
(insn 225 224 226 10 (set (reg:SI 5 di)
        (reg:SI 0 ax [141])) "main.c":110 86 {*movsi_internal}
     (nil))
(call_insn 226 225 227 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("ftruncate") [flags 0x41]  <function_decl 0x7f7410437f00 ftruncate>) [0 ftruncate S1 A8])
            (const_int 0 [0]))) "main.c":110 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(call_insn 227 226 228 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7410428200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "main.c":111 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 228 227 229 10 (set (reg:SI 1 dx [orig:97 _11 ] [97])
        (reg:SI 0 ax)) "main.c":111 86 {*movsi_internal}
     (nil))
(insn 229 228 230 10 (set (reg/f:DI 0 ax [142])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 playerinfo2+0 S8 A64])) "main.c":111 85 {*movdi_internal}
     (nil))
(insn 230 229 231 10 (set (mem:SI (reg/f:DI 0 ax [142]) [1 playerinfo2_85->PID+0 S4 A64])
        (reg:SI 1 dx [orig:97 _11 ] [97])) "main.c":111 86 {*movsi_internal}
     (nil))
(insn 231 230 232 10 (set (reg/f:DI 0 ax [143])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 playerinfo2+0 S8 A64])) "main.c":112 85 {*movdi_internal}
     (nil))
(insn 232 231 233 10 (set (mem:SI (plus:DI (reg/f:DI 0 ax [143])
                (const_int 8 [0x8])) [1 playerinfo2_85->numer+0 S4 A64])
        (const_int 2 [0x2])) "main.c":112 86 {*movsi_internal}
     (nil))
(insn 233 232 234 10 (set (reg/f:DI 0 ax [144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 playerinfo2+0 S8 A64])) "main.c":113 85 {*movdi_internal}
     (nil))
(insn 234 233 235 10 (parallel [
            (set (reg/f:DI 0 ax [orig:98 _12 ] [98])
                (plus:DI (reg/f:DI 0 ax [144])
                    (const_int 41 [0x29])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":113 222 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])) [4 playerinfo2+0 S8 A64])
            (const_int 41 [0x29]))
        (nil)))
(insn 235 234 236 10 (set (reg:DI 1 dx)
        (const_int 5 [0x5])) "main.c":113 85 {*movdi_internal}
     (nil))
(insn 236 235 237 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f74101d7360 *.LC6>)) "main.c":113 85 {*movdi_internal}
     (nil))
(insn 237 236 238 10 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:98 _12 ] [98])) "main.c":113 85 {*movdi_internal}
     (nil))
(call_insn 238 237 239 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcpy") [flags 0x41]  <function_decl 0x7f74106d5200 memcpy>) [0 __builtin_memcpy S1 A8])
            (const_int 0 [0]))) "main.c":113 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 239 238 240 10 (parallel [
            (set (reg:DI 0 ax [145])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -168 [0xffffffffffffff58])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":118 222 {*adddi_1}
     (nil))
(insn 240 239 241 10 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f74101d73f0 *.LC7>)) "main.c":118 85 {*movdi_internal}
     (nil))
(insn 241 240 243 10 (set (reg:DI 1 dx [146])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("quit_quit") [flags 0x41]  <function_decl 0x7f7410606b00 quit_quit>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "main.c":118 85 {*movdi_internal}
     (nil))
(insn 243 241 244 10 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":118 85 {*movdi_internal}
     (nil))
(insn 244 243 245 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [145])) "main.c":118 85 {*movdi_internal}
     (nil))
(call_insn 245 244 246 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f74104d0700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "main.c":118 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 246 245 247 10 (parallel [
            (set (reg:DI 1 dx [147])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":119 222 {*adddi_1}
     (nil))
(insn 247 246 248 10 (parallel [
            (set (reg:DI 0 ax [148])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":119 222 {*adddi_1}
     (nil))
(insn 248 247 249 10 (set (reg:DI 2 cx)
        (reg:DI 1 dx [147])) "main.c":119 85 {*movdi_internal}
     (nil))
(insn 249 248 251 10 (set (reg:DI 1 dx [149])
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("gracz_fun") [flags 0x41]  <function_decl 0x7f7410606d00 gracz_fun>)
                    ] UNSPEC_GOTPCREL)) [11  S8 A8])) "main.c":119 85 {*movdi_internal}
     (nil))
(insn 251 249 252 10 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":119 85 {*movdi_internal}
     (nil))
(insn 252 251 253 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [148])) "main.c":119 85 {*movdi_internal}
     (nil))
(call_insn 253 252 254 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f74104d0700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "main.c":119 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 254 253 255 10 (set (reg:DI 0 ax [orig:99 quit.5_13 ] [99])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [7 quit+0 S8 A64])) "main.c":120 85 {*movdi_internal}
     (nil))
(insn 255 254 256 10 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":120 85 {*movdi_internal}
     (nil))
(insn 256 255 257 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:99 quit.5_13 ] [99])) "main.c":120 85 {*movdi_internal}
     (nil))
(call_insn 257 256 258 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f74104d0900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "main.c":120 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 258 257 259 10 (set (reg:DI 0 ax [orig:100 gracz1.6_14 ] [100])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [7 gracz1+0 S8 A64])) "main.c":121 85 {*movdi_internal}
     (nil))
(insn 259 258 260 10 (set (reg:DI 4 si)
        (const_int 0 [0])) "main.c":121 85 {*movdi_internal}
     (nil))
(insn 260 259 261 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:100 gracz1.6_14 ] [100])) "main.c":121 85 {*movdi_internal}
     (nil))
(call_insn 261 260 262 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f74104d0900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "main.c":121 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 102 103
(code_label 262 261 263 11 7 (nil) [1 uses])
(note 263 262 264 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 264 263 265 11 (set (reg/f:DI 0 ax [orig:101 stdscr.7_15 ] [101])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7410527c60 stdscr>) [8 stdscr+0 S8 A64])) "main.c":124 85 {*movdi_internal}
     (nil))
(insn 265 264 266 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:101 stdscr.7_15 ] [101])) "main.c":124 85 {*movdi_internal}
     (nil))
(call_insn 266 265 267 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wclear") [flags 0x41]  <function_decl 0x7f7410561800 wclear>) [0 wclear S1 A8])
            (const_int 0 [0]))) "main.c":124 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 267 266 268 11 (set (reg/f:DI 0 ax [orig:102 stdscr.8_16 ] [102])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7410527c60 stdscr>) [8 stdscr+0 S8 A64])) "main.c":125 85 {*movdi_internal}
     (nil))
(insn 268 267 269 11 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:102 stdscr.8_16 ] [102])) "main.c":125 85 {*movdi_internal}
     (nil))
(call_insn 269 268 270 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wrefresh") [flags 0x41]  <function_decl 0x7f741056a300 wrefresh>) [0 wrefresh S1 A8])
            (const_int 0 [0]))) "main.c":125 700 {*call_value}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(call_insn 270 269 271 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("endwin") [flags 0x41]  <function_decl 0x7f7410533000 endwin>) [0 endwin S1 A8])
            (const_int 0 [0]))) "main.c":126 700 {*call_value}
     (nil)
    (nil))
(insn 271 270 274 11 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (const_int 0 [0])) "main.c":127 86 {*movsi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              3 [always] 
;;              5 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 103
;; lr  def 	 0 [ax] 104
(code_label 274 271 275 12 8 (nil) [2 uses])
(note 275 274 280 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 280 275 281 12 (set (reg/i:SI 0 ax)
        (reg:SI 0 ax [orig:104 <retval> ] [104])) "main.c":128 86 {*movsi_internal}
     (nil))
(insn 281 280 289 12 (use (reg/i:SI 0 ax)) "main.c":128 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 289 281 0 NOTE_INSN_DELETED)
