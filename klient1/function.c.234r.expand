
;; Function pobierz_plansze (pobierz_plansze, funcdef_no=6, decl_uid=6214, cgraph_uid=6, symbol_order=9)

pobierz_plansze ()
{
  int j;
  int i;
  int i;
  char * * tab;
  struct FILE * fp;
  char * * D.6557;
  long unsigned int _1;
  long unsigned int _2;
  char * * _3;
  void * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  char * * _8;
  char * _9;
  sizetype _10;
  char * _11;
  char _12;
  char * * _13;
  char * _14;
  char * _15;
  char * * _19;
  char * * _27;
  char * * _43;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  fp_26 = fopen ("./plansza.txt", "r");
  if (fp_26 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _27 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 4, loop depth 0
;;    pred:       2
  tab_29 = malloc (200);
  i_30 = 0;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       6
  _1 = (long unsigned int) i_16;
  _2 = _1 * 8;
  _3 = tab_29 + _2;
  _4 = malloc (35);
  *_3 = _4;
  i_33 = i_16 + 1;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  # i_16 = PHI <i_30(4), i_33(5)>
  if (i_16 <= 20)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  i_34 = 0;
  goto <bb 12>; [INV]
;;    succ:       12

;;   basic block 8, loop depth 1
;;    pred:       12
  j_35 = 0;
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 9, loop depth 2
;;    pred:       10
  _5 = getc (fp_26);
  _6 = (long unsigned int) i_17;
  _7 = _6 * 8;
  _8 = tab_29 + _7;
  _9 = *_8;
  _10 = (sizetype) j_18;
  _11 = _9 + _10;
  _12 = (char) _5;
  *_11 = _12;
  j_38 = j_18 + 1;
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       8
;;                9
  # j_18 = PHI <j_35(8), j_38(9)>
  if (j_18 <= 30)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       9
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  getc (fp_26);
  i_40 = i_17 + 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       7
;;                11
  # i_17 = PHI <i_34(7), i_40(11)>
  if (i_17 <= 20)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       8
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  _13 = tab_29 + 160;
  _14 = *_13;
  _15 = _14 + 30;
  *_15 = 77;
  fclose (fp_26);
  _43 = tab_29;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       3
;;                13
  # _19 = PHI <_27(3), _43(13)>
<L11>:
  return _19;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (i_16 - 16 )
Partition 17 (i_17 - 17 )
Partition 18 (j_18 - 18 )
Partition 19 (_19 - 19 )
Partition 26 (fp_26 - 26 )
Partition 27 (_27 - 27 )
Partition 29 (tab_29 - 29 )
Partition 30 (i_30 - 30 )
Partition 33 (i_33 - 33 )
Partition 34 (i_34 - 34 )
Partition 35 (j_35 - 35 )
Partition 38 (j_38 - 38 )
Partition 40 (i_40 - 40 )
Partition 43 (_43 - 43 )
Partition 44 (_44(D) - 44 )


Coalescible Partition map 

Partition 0, base 0 (i_16 - 16 30 33 )
Partition 1, base 1 (i_17 - 17 34 40 )
Partition 2, base 2 (j_18 - 18 35 38 )
Partition 3, base 3 (_19 - 19 27 43 )
Partition 12, base 4 (_44(D) - 44 )


Partition map 

Partition 0 (i_16 - 16 )
Partition 1 (i_17 - 17 )
Partition 2 (j_18 - 18 )
Partition 3 (_19 - 19 )
Partition 4 (_27 - 27 )
Partition 5 (i_30 - 30 )
Partition 6 (i_33 - 33 )
Partition 7 (i_34 - 34 )
Partition 8 (j_35 - 35 )
Partition 9 (j_38 - 38 )
Partition 10 (i_40 - 40 )
Partition 11 (_43 - 43 )
Partition 12 (_44(D) - 44 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_16 <-> i_30
(2147483646, 0) i_16 <-> i_33
(2147483646, 0) j_18 <-> j_35
(2147483646, 0) j_18 <-> j_38
(2147483646, 0) i_17 <-> i_34
(2147483646, 0) i_17 <-> i_40
(10000, 0) _19 <-> _27
(10000, 0) _19 <-> _43

Partition map 

Partition 0 (i_16 - 16 )
Partition 1 (i_17 - 17 )
Partition 2 (j_18 - 18 )
Partition 3 (_19 - 19 )
Partition 4 (_27 - 27 )
Partition 5 (i_30 - 30 )
Partition 6 (i_33 - 33 )
Partition 7 (i_34 - 34 )
Partition 8 (j_35 - 35 )
Partition 9 (j_38 - 38 )
Partition 10 (i_40 - 40 )
Partition 11 (_43 - 43 )
Partition 12 (_44(D) - 44 )

Coalesce list: (16)i_16 & (30)i_30 [map: 0, 5] : Success -> 0
Coalesce list: (16)i_16 & (33)i_33 [map: 0, 6] : Success -> 0
Coalesce list: (18)j_18 & (35)j_35 [map: 2, 8] : Success -> 2
Coalesce list: (18)j_18 & (38)j_38 [map: 2, 9] : Success -> 2
Coalesce list: (17)i_17 & (34)i_34 [map: 1, 7] : Success -> 1
Coalesce list: (17)i_17 & (40)i_40 [map: 1, 10] : Success -> 1
Coalesce list: (19)_19 & (27)_27 [map: 3, 4] : Success -> 3
Coalesce list: (19)_19 & (43)_43 [map: 3, 11] : Success -> 3
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (i_16 - 16 30 33 )
Partition 16 (i_17 - 17 34 40 )
Partition 17 (j_18 - 18 35 38 )
Partition 18 (_19 - 19 27 43 )
Partition 19 (fp_26 - 26 )
Partition 20 (tab_29 - 29 )
Partition 21 (_44(D) - 44 )

pobierz_plansze ()
{
  int j;
  int i;
  int i;
  char * * tab;
  struct FILE * fp;
  char * * D.6557;
  long unsigned int _1;
  long unsigned int _2;
  char * * _3;
  void * _4;
  int _5;
  long unsigned int _6;
  long unsigned int _7;
  char * * _8;
  char * _9;
  sizetype _10;
  char * _11;
  char _12;
  char * * _13;
  char * _14;
  char * _15;
  char * * _19;
  char * * _27;
  char * * _43;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  fp_26 = fopen ("./plansza.txt", "r");
  if (fp_26 == 0B)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _27 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 4, loop depth 0
;;    pred:       2
  tab_29 = malloc (200);
  i_30 = 0;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       6
  _1 = (long unsigned int) i_16;
  _2 = _1 * 8;
  _3 = tab_29 + _2;
  _4 = malloc (35);
  *_3 = _4;
  i_33 = i_16 + 1;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       4
;;                5
  # i_16 = PHI <i_30(4), i_33(5)>
  if (i_16 <= 20)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       5
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  i_34 = 0;
  goto <bb 12>; [INV]
;;    succ:       12

;;   basic block 8, loop depth 1
;;    pred:       12
  j_35 = 0;
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 9, loop depth 2
;;    pred:       10
  _5 = getc (fp_26);
  _6 = (long unsigned int) i_17;
  _7 = _6 * 8;
  _8 = tab_29 + _7;
  _9 = *_8;
  _10 = (sizetype) j_18;
  _11 = _9 + _10;
  _12 = (char) _5;
  *_11 = _12;
  j_38 = j_18 + 1;
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       8
;;                9
  # j_18 = PHI <j_35(8), j_38(9)>
  if (j_18 <= 30)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       9
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  getc (fp_26);
  i_40 = i_17 + 1;
;;    succ:       12

;;   basic block 12, loop depth 1
;;    pred:       7
;;                11
  # i_17 = PHI <i_34(7), i_40(11)>
  if (i_17 <= 20)
    goto <bb 8>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       8
;;                13

;;   basic block 13, loop depth 0
;;    pred:       12
  _13 = tab_29 + 160;
  _14 = *_13;
  _15 = _14 + 30;
  *_15 = 77;
  fclose (fp_26);
  _43 = tab_29;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       3
;;                13
  # _19 = PHI <_27(3), _43(13)>
<L11>:
  return _19;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; fp_26 = fopen ("./plansza.txt", "r");

(insn 5 4 6 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7cd0e9c900 *.LC0>)) "function.c":58 -1
     (nil))

(insn 6 5 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7cd0e9c990 *.LC1>)) "function.c":58 -1
     (nil))

(call_insn 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7cd131f700 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "function.c":58 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

(insn 8 7 9 (set (reg:DI 104)
        (reg:DI 0 ax)) "function.c":58 -1
     (nil))

(insn 9 8 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])
        (reg:DI 104)) "function.c":58 -1
     (nil))

;; if (fp_26 == 0B)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])
            (const_int 0 [0]))) "function.c":59 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":59 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _27 = 0B;

(insn 13 12 0 (set (reg/f:DI 102 [ _19 ])
        (const_int 0 [0])) "function.c":61 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 4

;; 

(code_label 16 15 17 2 (nil) [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; tab_29 = malloc (200);

(insn 18 17 19 (set (reg:DI 5 di)
        (const_int 200 [0xc8])) "function.c":63 -1
     (nil))

(call_insn 19 18 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7cd1261c00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "function.c":63 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 20 19 21 (set (reg/f:DI 105)
        (reg:DI 0 ax)) "function.c":63 -1
     (expr_list:REG_NOALIAS (reg/f:DI 105)
        (nil)))

(insn 21 20 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
        (reg/f:DI 105)) "function.c":63 -1
     (nil))

;; i_30 = 0;

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":64 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _1 = (long unsigned int) i_16;

(insn 26 25 27 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":66 -1
     (nil))

(insn 27 26 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 106))) "function.c":66 -1
     (nil))

;; _2 = _1 * 8;

(insn 28 27 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (ashift:DI (reg:DI 87 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":66 -1
     (nil))

;; _3 = tab_29 + _2;

(insn 29 28 30 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":66 -1
     (nil))

(insn 30 29 0 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":66 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
            (reg:DI 88 [ _2 ]))
        (nil)))

;; _4 = malloc (35);

(insn 31 30 32 (set (reg:DI 5 di)
        (const_int 35 [0x23])) "function.c":66 -1
     (nil))

(call_insn 32 31 33 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7cd1261c00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "function.c":66 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 33 32 34 (set (reg/f:DI 108)
        (reg:DI 0 ax)) "function.c":66 -1
     (expr_list:REG_NOALIAS (reg/f:DI 108)
        (nil)))

(insn 34 33 0 (set (reg/f:DI 90 [ _4 ])
        (reg/f:DI 108)) "function.c":66 -1
     (nil))

;; *_3 = _4;

(insn 35 34 0 (set (mem/f:DI (reg/f:DI 89 [ _3 ]) [10 *_3+0 S8 A64])
        (reg/f:DI 90 [ _4 ])) "function.c":66 -1
     (nil))

;; i_33 = i_16 + 1;

(insn 36 35 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":64 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 37 36 38 4 (nil) [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_16 <= 20)

(insn 40 38 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 20 [0x14]))) "function.c":64 -1
     (nil))

(jump_insn 41 40 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "function.c":64 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; i_34 = 0;

(insn 43 42 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":68 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; j_35 = 0;

(insn 47 46 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":70 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _5 = getc (fp_26);

(insn 51 50 52 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])) "function.c":72 -1
     (nil))

(insn 52 51 53 (set (reg:DI 5 di)
        (reg:DI 109)) "function.c":72 -1
     (nil))

(call_insn 53 52 54 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getc") [flags 0x41]  <function_decl 0x7f7cd1324200 getc>) [0 getc S1 A8])
            (const_int 0 [0]))) "function.c":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 54 53 0 (set (reg:SI 91 [ _5 ])
        (reg:SI 0 ax)) "function.c":72 -1
     (nil))

;; _6 = (long unsigned int) i_17;

(insn 55 54 56 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])) "function.c":72 -1
     (nil))

(insn 56 55 0 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 110))) "function.c":72 -1
     (nil))

;; _7 = _6 * 8;

(insn 57 56 0 (parallel [
            (set (reg:DI 93 [ _7 ])
                (ashift:DI (reg:DI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":72 -1
     (nil))

;; _8 = tab_29 + _7;

(insn 58 57 59 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":72 -1
     (nil))

(insn 59 58 0 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":72 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
            (reg:DI 93 [ _7 ]))
        (nil)))

;; _9 = *_8;

(insn 60 59 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 94 [ _8 ]) [10 *_8+0 S8 A64])) "function.c":72 -1
     (nil))

;; _10 = (sizetype) j_18;

(insn 61 60 62 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])) "function.c":72 -1
     (nil))

(insn 62 61 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 112))) "function.c":72 -1
     (nil))

;; _11 = _9 + _10;

(insn 63 62 0 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 95 [ _9 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":72 -1
     (nil))

;; _12 = (char) _5;

(insn 64 63 0 (set (reg:QI 98 [ _12 ])
        (subreg:QI (reg:SI 91 [ _5 ]) 0)) "function.c":72 -1
     (nil))

;; *_11 = _12;

(insn 65 64 0 (set (mem:QI (reg/f:DI 97 [ _11 ]) [0 *_11+0 S1 A8])
        (reg:QI 98 [ _12 ])) "function.c":72 -1
     (nil))

;; j_38 = j_18 + 1;

(insn 66 65 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":70 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 67 66 68 7 (nil) [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_18 <= 30)

(insn 70 68 71 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
            (const_int 30 [0x1e]))) "function.c":70 -1
     (nil))

(jump_insn 71 70 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "function.c":70 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; getc (fp_26);

(insn 73 72 74 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])) "function.c":74 -1
     (nil))

(insn 74 73 75 (set (reg:DI 5 di)
        (reg:DI 113)) "function.c":74 -1
     (nil))

(call_insn 75 74 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getc") [flags 0x41]  <function_decl 0x7f7cd1324200 getc>) [0 getc S1 A8])
            (const_int 0 [0]))) "function.c":74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; i_40 = i_17 + 1;

(insn 76 75 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":68 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 77 76 78 6 (nil) [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_17 <= 20)

(insn 80 78 81 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
            (const_int 20 [0x14]))) "function.c":68 -1
     (nil))

(jump_insn 81 80 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "function.c":68 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _13 = tab_29 + 160;

(insn 83 82 84 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":76 -1
     (nil))

(insn 84 83 0 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":76 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
            (const_int 160 [0xa0]))
        (nil)))

;; _14 = *_13;

(insn 85 84 0 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [10 *_13+0 S8 A64])) "function.c":76 -1
     (nil))

;; _15 = _14 + 30;

(insn 86 85 0 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg/f:DI 100 [ _14 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":76 -1
     (nil))

;; *_15 = 77;

(insn 87 86 0 (set (mem:QI (reg/f:DI 101 [ _15 ]) [0 *_15+0 S1 A8])
        (const_int 77 [0x4d])) "function.c":76 -1
     (nil))

;; fclose (fp_26);

(insn 88 87 89 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])) "function.c":77 -1
     (nil))

(insn 89 88 90 (set (reg:DI 5 di)
        (reg:DI 115)) "function.c":77 -1
     (nil))

(call_insn 90 89 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7cd131f400 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "function.c":77 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _43 = tab_29;

(insn 91 90 0 (set (reg/f:DI 102 [ _19 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":78 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; <L11>:

(code_label 92 91 93 3 (nil) [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; return _19;

(insn 94 93 95 (set (reg/f:DI 103 [ <retval> ])
        (reg/f:DI 102 [ _19 ])) -1
     (nil))

(jump_insn 95 94 96 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 96 95 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 95.
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f7cd0e9c900 *.LC0>)) "function.c":58 -1
     (nil))
(insn 6 5 7 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f7cd0e9c990 *.LC1>)) "function.c":58 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fopen") [flags 0x41]  <function_decl 0x7f7cd131f700 fopen>) [0 fopen S1 A8])
            (const_int 0 [0]))) "function.c":58 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 8 7 9 2 (set (reg:DI 104)
        (reg:DI 0 ax)) "function.c":58 -1
     (nil))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])
        (reg:DI 104)) "function.c":58 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])
            (const_int 0 [0]))) "function.c":59 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 16)
            (pc))) "function.c":59 -1
     (nil)
 -> 16)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg/f:DI 102 [ _19 ])
        (const_int 0 [0])) "function.c":61 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (label_ref 92)) "function.c":61 -1
     (nil)
 -> 92)
;;  succ:       15

(barrier 15 14 16)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 16 15 17 5 2 (nil) [1 uses])
(note 17 16 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:DI 5 di)
        (const_int 200 [0xc8])) "function.c":63 -1
     (nil))
(call_insn 19 18 20 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7cd1261c00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "function.c":63 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 20 19 21 5 (set (reg/f:DI 105)
        (reg:DI 0 ax)) "function.c":63 -1
     (expr_list:REG_NOALIAS (reg/f:DI 105)
        (nil)))
(insn 21 20 22 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
        (reg/f:DI 105)) "function.c":63 -1
     (nil))
(insn 22 21 23 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":64 -1
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (label_ref 37)) "function.c":64 -1
     (nil)
 -> 37)
;;  succ:       7

(barrier 24 23 39)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 39 24 25 6 5 (nil) [1 uses])
(note 25 39 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":66 -1
     (nil))
(insn 27 26 28 6 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 106))) "function.c":66 -1
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 88 [ _2 ])
                (ashift:DI (reg:DI 87 [ _1 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":66 -1
     (nil))
(insn 29 28 30 6 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":66 -1
     (nil))
(insn 30 29 31 6 (parallel [
            (set (reg/f:DI 89 [ _3 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg/f:DI 107)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":66 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
            (reg:DI 88 [ _2 ]))
        (nil)))
(insn 31 30 32 6 (set (reg:DI 5 di)
        (const_int 35 [0x23])) "function.c":66 -1
     (nil))
(call_insn 32 31 33 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f7cd1261c00 malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "function.c":66 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 33 32 34 6 (set (reg/f:DI 108)
        (reg:DI 0 ax)) "function.c":66 -1
     (expr_list:REG_NOALIAS (reg/f:DI 108)
        (nil)))
(insn 34 33 35 6 (set (reg/f:DI 90 [ _4 ])
        (reg/f:DI 108)) "function.c":66 -1
     (nil))
(insn 35 34 36 6 (set (mem/f:DI (reg/f:DI 89 [ _3 ]) [10 *_3+0 S8 A64])
        (reg/f:DI 90 [ _4 ])) "function.c":66 -1
     (nil))
(insn 36 35 37 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":64 -1
     (nil))
;;  succ:       7 (FALLTHRU,DFS_BACK)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              6 (FALLTHRU,DFS_BACK)
(code_label 37 36 38 7 4 (nil) [1 uses])
(note 38 37 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 38 41 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 20 [0x14]))) "function.c":64 -1
     (nil))
(jump_insn 41 40 42 7 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 39)
            (pc))) "function.c":64 -1
     (nil)
 -> 39)
;;  succ:       6
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 42 41 43 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 8 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":68 -1
     (nil))
(jump_insn 44 43 45 8 (set (pc)
        (label_ref 77)) "function.c":68 -1
     (nil)
 -> 77)
;;  succ:       13

(barrier 45 44 79)
;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 79 45 46 9 9 (nil) [1 uses])
(note 46 79 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":70 -1
     (nil))
(jump_insn 48 47 49 9 (set (pc)
        (label_ref 67)) "function.c":70 -1
     (nil)
 -> 67)
;;  succ:       11

(barrier 49 48 69)
;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 69 49 50 10 8 (nil) [1 uses])
(note 50 69 51 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 10 (set (reg:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])) "function.c":72 -1
     (nil))
(insn 52 51 53 10 (set (reg:DI 5 di)
        (reg:DI 109)) "function.c":72 -1
     (nil))
(call_insn 53 52 54 10 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getc") [flags 0x41]  <function_decl 0x7f7cd1324200 getc>) [0 getc S1 A8])
            (const_int 0 [0]))) "function.c":72 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 54 53 55 10 (set (reg:SI 91 [ _5 ])
        (reg:SI 0 ax)) "function.c":72 -1
     (nil))
(insn 55 54 56 10 (set (reg:SI 110)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])) "function.c":72 -1
     (nil))
(insn 56 55 57 10 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 110))) "function.c":72 -1
     (nil))
(insn 57 56 58 10 (parallel [
            (set (reg:DI 93 [ _7 ])
                (ashift:DI (reg:DI 92 [ _6 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":72 -1
     (nil))
(insn 58 57 59 10 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":72 -1
     (nil))
(insn 59 58 60 10 (parallel [
            (set (reg/f:DI 94 [ _8 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (reg/f:DI 111)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":72 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
            (reg:DI 93 [ _7 ]))
        (nil)))
(insn 60 59 61 10 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 94 [ _8 ]) [10 *_8+0 S8 A64])) "function.c":72 -1
     (nil))
(insn 61 60 62 10 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])) "function.c":72 -1
     (nil))
(insn 62 61 63 10 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 112))) "function.c":72 -1
     (nil))
(insn 63 62 64 10 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 95 [ _9 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":72 -1
     (nil))
(insn 64 63 65 10 (set (reg:QI 98 [ _12 ])
        (subreg:QI (reg:SI 91 [ _5 ]) 0)) "function.c":72 -1
     (nil))
(insn 65 64 66 10 (set (mem:QI (reg/f:DI 97 [ _11 ]) [0 *_11+0 S1 A8])
        (reg:QI 98 [ _12 ])) "function.c":72 -1
     (nil))
(insn 66 65 67 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":70 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10 (FALLTHRU,DFS_BACK)
(code_label 67 66 68 11 7 (nil) [1 uses])
(note 68 67 70 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 70 68 71 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 j+0 S4 A32])
            (const_int 30 [0x1e]))) "function.c":70 -1
     (nil))
(jump_insn 71 70 72 11 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "function.c":70 -1
     (nil)
 -> 69)
;;  succ:       10
;;              12 (FALLTHRU)

;; basic block 12, loop depth 1, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 72 71 73 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 73 72 74 12 (set (reg:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])) "function.c":74 -1
     (nil))
(insn 74 73 75 12 (set (reg:DI 5 di)
        (reg:DI 113)) "function.c":74 -1
     (nil))
(call_insn 75 74 76 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getc") [flags 0x41]  <function_decl 0x7f7cd1324200 getc>) [0 getc S1 A8])
            (const_int 0 [0]))) "function.c":74 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 76 75 77 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":68 -1
     (nil))
;;  succ:       13 (FALLTHRU,DFS_BACK)

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              12 (FALLTHRU,DFS_BACK)
(code_label 77 76 78 13 6 (nil) [1 uses])
(note 78 77 80 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 80 78 81 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
            (const_int 20 [0x14]))) "function.c":68 -1
     (nil))
(jump_insn 81 80 82 13 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "function.c":68 -1
     (nil)
 -> 79)
;;  succ:       9
;;              14 (FALLTHRU)

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 82 81 83 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 14 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":76 -1
     (nil))
(insn 84 83 85 14 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg/f:DI 114)
                    (const_int 160 [0xa0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":76 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])
            (const_int 160 [0xa0]))
        (nil)))
(insn 85 84 86 14 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [10 *_13+0 S8 A64])) "function.c":76 -1
     (nil))
(insn 86 85 87 14 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg/f:DI 100 [ _14 ])
                    (const_int 30 [0x1e])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":76 -1
     (nil))
(insn 87 86 88 14 (set (mem:QI (reg/f:DI 101 [ _15 ]) [0 *_15+0 S1 A8])
        (const_int 77 [0x4d])) "function.c":76 -1
     (nil))
(insn 88 87 89 14 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [8 fp+0 S8 A64])) "function.c":77 -1
     (nil))
(insn 89 88 90 14 (set (reg:DI 5 di)
        (reg:DI 115)) "function.c":77 -1
     (nil))
(call_insn 90 89 91 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7f7cd131f400 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) "function.c":77 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 91 90 92 14 (set (reg/f:DI 102 [ _19 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [9 tab+0 S8 A64])) "function.c":78 -1
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              14 (FALLTHRU)
(code_label 92 91 93 15 3 (nil) [1 uses])
(note 93 92 94 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 98 15 (set (reg/f:DI 103 [ <retval> ])
        (reg/f:DI 102 [ _19 ])) -1
     (nil))
(insn 98 94 99 15 (set (reg/i:DI 0 ax)
        (reg/f:DI 103 [ <retval> ])) "function.c":79 -1
     (nil))
(insn 99 98 0 15 (use (reg/i:DI 0 ax)) "function.c":79 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function drukuj_plansze (drukuj_plansze, funcdef_no=7, decl_uid=6216, cgraph_uid=7, symbol_order=10)

drukuj_plansze (char * * tab)
{
  int j;
  int i;
  struct WINDOW * stdscr.0_1;
  long unsigned int _2;
  long unsigned int _3;
  char * * _4;
  char * _5;
  sizetype _6;
  char * _7;
  char _8;
  struct WINDOW * stdscr.1_9;
  struct WINDOW * stdscr.2_10;
  long unsigned int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  sizetype _15;
  char * _16;
  char _17;
  long unsigned int _18;
  long unsigned int _19;
  char * * _20;
  char * _21;
  sizetype _22;
  char * _23;
  char _24;
  long unsigned int _25;
  long unsigned int _26;
  char * * _27;
  char * _28;
  sizetype _29;
  char * _30;
  char _31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  char * _35;
  sizetype _36;
  char * _37;
  char _38;
  struct WINDOW * stdscr.3_39;
  long unsigned int _40;
  long unsigned int _41;
  char * * _42;
  char * _43;
  sizetype _44;
  char * _45;
  char _46;
  int _47;
  struct WINDOW * stdscr.4_48;
  long unsigned int _49;
  long unsigned int _50;
  char * * _51;
  char * _52;
  sizetype _53;
  char * _54;
  char _55;
  struct WINDOW * stdscr.5_56;
  long unsigned int _57;
  long unsigned int _58;
  char * * _59;
  char * _60;
  sizetype _61;
  char * _62;
  char _63;
  int _64;
  struct WINDOW * stdscr.6_65;
  long unsigned int _66;
  long unsigned int _67;
  char * * _68;
  char * _69;
  sizetype _70;
  char * _71;
  char _72;
  long unsigned int _73;
  long unsigned int _74;
  char * * _75;
  char * _76;
  sizetype _77;
  char * _78;
  char _79;
  int _80;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  start_color ();
  init_pair (1, 7, 7);
  init_pair (3, 0, 3);
  init_pair (11, 7, 2);
  i_91 = 0;
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 3, loop depth 1
;;    pred:       19
  j_92 = 0;
  goto <bb 17>; [INV]
;;    succ:       17

;;   basic block 4, loop depth 2
;;    pred:       17
  stdscr.0_1 = stdscr;
  wmove (stdscr.0_1, i_81, j_82);
  _2 = (long unsigned int) i_81;
  _3 = _2 * 8;
  _4 = tab_94(D) + _3;
  _5 = *_4;
  _6 = (sizetype) j_82;
  _7 = _5 + _6;
  _8 = *_7;
  if (_8 == 77)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 2
;;    pred:       4
  stdscr.1_9 = stdscr;
  wattr_on (stdscr.1_9, 256, 0B);
  printw (" ");
  stdscr.2_10 = stdscr;
  wattr_off (stdscr.2_10, 256, 0B);
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 6, loop depth 2
;;    pred:       4
  _11 = (long unsigned int) i_81;
  _12 = _11 * 8;
  _13 = tab_94(D) + _12;
  _14 = *_13;
  _15 = (sizetype) j_82;
  _16 = _14 + _15;
  _17 = *_16;
  if (_17 == 99)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       10
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _18 = (long unsigned int) i_81;
  _19 = _18 * 8;
  _20 = tab_94(D) + _19;
  _21 = *_20;
  _22 = (sizetype) j_82;
  _23 = _21 + _22;
  _24 = *_23;
  if (_24 == 116)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       10
;;                8

;;   basic block 8, loop depth 2
;;    pred:       7
  _25 = (long unsigned int) i_81;
  _26 = _25 * 8;
  _27 = tab_94(D) + _26;
  _28 = *_27;
  _29 = (sizetype) j_82;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 == 84)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       10
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _32 = (long unsigned int) i_81;
  _33 = _32 * 8;
  _34 = tab_94(D) + _33;
  _35 = *_34;
  _36 = (sizetype) j_82;
  _37 = _35 + _36;
  _38 = *_37;
  if (_38 == 68)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 2
;;    pred:       6
;;                7
;;                8
;;                9
  stdscr.3_39 = stdscr;
  wattr_on (stdscr.3_39, 768, 0B);
  _40 = (long unsigned int) i_81;
  _41 = _40 * 8;
  _42 = tab_94(D) + _41;
  _43 = *_42;
  _44 = (sizetype) j_82;
  _45 = _43 + _44;
  _46 = *_45;
  _47 = (int) _46;
  printw ("%c", _47);
  stdscr.4_48 = stdscr;
  wattr_off (stdscr.4_48, 768, 0B);
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 11, loop depth 2
;;    pred:       9
  _49 = (long unsigned int) i_81;
  _50 = _49 * 8;
  _51 = tab_94(D) + _50;
  _52 = *_51;
  _53 = (sizetype) j_82;
  _54 = _52 + _53;
  _55 = *_54;
  if (_55 == 65)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 2
;;    pred:       11
  stdscr.5_56 = stdscr;
  wattr_on (stdscr.5_56, 768, 0B);
  _57 = (long unsigned int) i_81;
  _58 = _57 * 8;
  _59 = tab_94(D) + _58;
  _60 = *_59;
  _61 = (sizetype) j_82;
  _62 = _60 + _61;
  _63 = *_62;
  _64 = (int) _63;
  printw ("%c", _64);
  stdscr.6_65 = stdscr;
  wattr_off (stdscr.6_65, 768, 0B);
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 13, loop depth 2
;;    pred:       11
  _66 = (long unsigned int) i_81;
  _67 = _66 * 8;
  _68 = tab_94(D) + _67;
  _69 = *_68;
  _70 = (sizetype) j_82;
  _71 = _69 + _70;
  _72 = *_71;
  if (_72 == 46)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  printw (".");
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 15, loop depth 2
;;    pred:       13
  _73 = (long unsigned int) i_81;
  _74 = _73 * 8;
  _75 = tab_94(D) + _74;
  _76 = *_75;
  _77 = (sizetype) j_82;
  _78 = _76 + _77;
  _79 = *_78;
  _80 = (int) _79;
  printw ("%c", _80);
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       5
;;                10
;;                12
;;                14
;;                15
  j_106 = j_82 + 1;
;;    succ:       17

;;   basic block 17, loop depth 2
;;    pred:       3
;;                16
  # j_82 = PHI <j_92(3), j_106(16)>
  if (j_82 <= 30)
    goto <bb 4>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       4
;;                18

;;   basic block 18, loop depth 1
;;    pred:       17
  i_107 = i_81 + 1;
;;    succ:       19

;;   basic block 19, loop depth 1
;;    pred:       2
;;                18
  # i_81 = PHI <i_91(2), i_107(18)>
  if (i_81 <= 20)
    goto <bb 3>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       3
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L21>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (stdscr.0_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (stdscr.1_9 - 9 )
Partition 10 (stdscr.2_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (stdscr.3_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (stdscr.4_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (stdscr.5_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (stdscr.6_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (i_81 - 81 )
Partition 82 (j_82 - 82 )
Partition 91 (i_91 - 91 )
Partition 92 (j_92 - 92 )
Partition 94 (tab_94(D) - 94 )
Partition 106 (j_106 - 106 )
Partition 107 (i_107 - 107 )


Coalescible Partition map 

Partition 0, base 0 (i_81 - 81 91 107 )
Partition 1, base 1 (j_82 - 82 92 106 )
Partition 4, base 2 (tab_94(D) - 94 )


Partition map 

Partition 0 (i_81 - 81 )
Partition 1 (j_82 - 82 )
Partition 2 (i_91 - 91 )
Partition 3 (j_92 - 92 )
Partition 4 (tab_94(D) - 94 )
Partition 5 (j_106 - 106 )
Partition 6 (i_107 - 107 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_82 <-> j_92
(2147483646, 0) j_82 <-> j_106
(2147483646, 0) i_81 <-> i_91
(2147483646, 0) i_81 <-> i_107

Partition map 

Partition 0 (i_81 - 81 )
Partition 1 (j_82 - 82 )
Partition 2 (i_91 - 91 )
Partition 3 (j_92 - 92 )
Partition 4 (tab_94(D) - 94 )
Partition 5 (j_106 - 106 )
Partition 6 (i_107 - 107 )

Coalesce list: (82)j_82 & (92)j_92 [map: 1, 3] : Success -> 1
Coalesce list: (82)j_82 & (106)j_106 [map: 1, 5] : Success -> 1
Coalesce list: (81)i_81 & (91)i_91 [map: 0, 2] : Success -> 0
Coalesce list: (81)i_81 & (107)i_107 [map: 0, 6] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (stdscr.0_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (stdscr.1_9 - 9 )
Partition 9 (stdscr.2_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (stdscr.3_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (stdscr.4_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (stdscr.5_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (stdscr.6_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (i_81 - 81 91 107 )
Partition 81 (j_82 - 82 92 106 )
Partition 82 (tab_94(D) - 94 )

drukuj_plansze (char * * tab)
{
  int j;
  int i;
  struct WINDOW * stdscr.0_1;
  long unsigned int _2;
  long unsigned int _3;
  char * * _4;
  char * _5;
  sizetype _6;
  char * _7;
  char _8;
  struct WINDOW * stdscr.1_9;
  struct WINDOW * stdscr.2_10;
  long unsigned int _11;
  long unsigned int _12;
  char * * _13;
  char * _14;
  sizetype _15;
  char * _16;
  char _17;
  long unsigned int _18;
  long unsigned int _19;
  char * * _20;
  char * _21;
  sizetype _22;
  char * _23;
  char _24;
  long unsigned int _25;
  long unsigned int _26;
  char * * _27;
  char * _28;
  sizetype _29;
  char * _30;
  char _31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  char * _35;
  sizetype _36;
  char * _37;
  char _38;
  struct WINDOW * stdscr.3_39;
  long unsigned int _40;
  long unsigned int _41;
  char * * _42;
  char * _43;
  sizetype _44;
  char * _45;
  char _46;
  int _47;
  struct WINDOW * stdscr.4_48;
  long unsigned int _49;
  long unsigned int _50;
  char * * _51;
  char * _52;
  sizetype _53;
  char * _54;
  char _55;
  struct WINDOW * stdscr.5_56;
  long unsigned int _57;
  long unsigned int _58;
  char * * _59;
  char * _60;
  sizetype _61;
  char * _62;
  char _63;
  int _64;
  struct WINDOW * stdscr.6_65;
  long unsigned int _66;
  long unsigned int _67;
  char * * _68;
  char * _69;
  sizetype _70;
  char * _71;
  char _72;
  long unsigned int _73;
  long unsigned int _74;
  char * * _75;
  char * _76;
  sizetype _77;
  char * _78;
  char _79;
  int _80;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  start_color ();
  init_pair (1, 7, 7);
  init_pair (3, 0, 3);
  init_pair (11, 7, 2);
  i_91 = 0;
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 3, loop depth 1
;;    pred:       19
  j_92 = 0;
  goto <bb 17>; [INV]
;;    succ:       17

;;   basic block 4, loop depth 2
;;    pred:       17
  stdscr.0_1 = stdscr;
  wmove (stdscr.0_1, i_81, j_82);
  _2 = (long unsigned int) i_81;
  _3 = _2 * 8;
  _4 = tab_94(D) + _3;
  _5 = *_4;
  _6 = (sizetype) j_82;
  _7 = _5 + _6;
  _8 = *_7;
  if (_8 == 77)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 2
;;    pred:       4
  stdscr.1_9 = stdscr;
  wattr_on (stdscr.1_9, 256, 0B);
  printw (" ");
  stdscr.2_10 = stdscr;
  wattr_off (stdscr.2_10, 256, 0B);
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 6, loop depth 2
;;    pred:       4
  _11 = (long unsigned int) i_81;
  _12 = _11 * 8;
  _13 = tab_94(D) + _12;
  _14 = *_13;
  _15 = (sizetype) j_82;
  _16 = _14 + _15;
  _17 = *_16;
  if (_17 == 99)
    goto <bb 10>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       10
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _18 = (long unsigned int) i_81;
  _19 = _18 * 8;
  _20 = tab_94(D) + _19;
  _21 = *_20;
  _22 = (sizetype) j_82;
  _23 = _21 + _22;
  _24 = *_23;
  if (_24 == 116)
    goto <bb 10>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       10
;;                8

;;   basic block 8, loop depth 2
;;    pred:       7
  _25 = (long unsigned int) i_81;
  _26 = _25 * 8;
  _27 = tab_94(D) + _26;
  _28 = *_27;
  _29 = (sizetype) j_82;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 == 84)
    goto <bb 10>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       10
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _32 = (long unsigned int) i_81;
  _33 = _32 * 8;
  _34 = tab_94(D) + _33;
  _35 = *_34;
  _36 = (sizetype) j_82;
  _37 = _35 + _36;
  _38 = *_37;
  if (_38 == 68)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 2
;;    pred:       6
;;                7
;;                8
;;                9
  stdscr.3_39 = stdscr;
  wattr_on (stdscr.3_39, 768, 0B);
  _40 = (long unsigned int) i_81;
  _41 = _40 * 8;
  _42 = tab_94(D) + _41;
  _43 = *_42;
  _44 = (sizetype) j_82;
  _45 = _43 + _44;
  _46 = *_45;
  _47 = (int) _46;
  printw ("%c", _47);
  stdscr.4_48 = stdscr;
  wattr_off (stdscr.4_48, 768, 0B);
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 11, loop depth 2
;;    pred:       9
  _49 = (long unsigned int) i_81;
  _50 = _49 * 8;
  _51 = tab_94(D) + _50;
  _52 = *_51;
  _53 = (sizetype) j_82;
  _54 = _52 + _53;
  _55 = *_54;
  if (_55 == 65)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 2
;;    pred:       11
  stdscr.5_56 = stdscr;
  wattr_on (stdscr.5_56, 768, 0B);
  _57 = (long unsigned int) i_81;
  _58 = _57 * 8;
  _59 = tab_94(D) + _58;
  _60 = *_59;
  _61 = (sizetype) j_82;
  _62 = _60 + _61;
  _63 = *_62;
  _64 = (int) _63;
  printw ("%c", _64);
  stdscr.6_65 = stdscr;
  wattr_off (stdscr.6_65, 768, 0B);
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 13, loop depth 2
;;    pred:       11
  _66 = (long unsigned int) i_81;
  _67 = _66 * 8;
  _68 = tab_94(D) + _67;
  _69 = *_68;
  _70 = (sizetype) j_82;
  _71 = _69 + _70;
  _72 = *_71;
  if (_72 == 46)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  printw (".");
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 15, loop depth 2
;;    pred:       13
  _73 = (long unsigned int) i_81;
  _74 = _73 * 8;
  _75 = tab_94(D) + _74;
  _76 = *_75;
  _77 = (sizetype) j_82;
  _78 = _76 + _77;
  _79 = *_78;
  _80 = (int) _79;
  printw ("%c", _80);
;;    succ:       16

;;   basic block 16, loop depth 2
;;    pred:       5
;;                10
;;                12
;;                14
;;                15
  j_106 = j_82 + 1;
;;    succ:       17

;;   basic block 17, loop depth 2
;;    pred:       3
;;                16
  # j_82 = PHI <j_92(3), j_106(16)>
  if (j_82 <= 30)
    goto <bb 4>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       4
;;                18

;;   basic block 18, loop depth 1
;;    pred:       17
  i_107 = i_81 + 1;
;;    succ:       19

;;   basic block 19, loop depth 1
;;    pred:       2
;;                18
  # i_81 = PHI <i_91(2), i_107(18)>
  if (i_81 <= 20)
    goto <bb 3>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       3
;;                20

;;   basic block 20, loop depth 0
;;    pred:       19
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L21>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; start_color ();

(call_insn 6 5 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f7cd10bd300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "function.c":83 -1
     (nil)
    (nil))

;; init_pair (1, 7, 7);

(insn 7 6 8 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":85 -1
     (nil))

(insn 8 7 9 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":85 -1
     (nil))

(insn 9 8 10 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":85 -1
     (nil))

(call_insn 10 9 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":85 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (3, 0, 3);

(insn 11 10 12 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":86 -1
     (nil))

(insn 12 11 13 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":86 -1
     (nil))

(insn 13 12 14 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":86 -1
     (nil))

(call_insn 14 13 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":86 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (11, 7, 2);

(insn 15 14 16 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "function.c":87 -1
     (nil))

(insn 16 15 17 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":87 -1
     (nil))

(insn 17 16 18 (set (reg:SI 5 di)
        (const_int 11 [0xb])) "function.c":87 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":87 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; i_91 = 0;

(insn 19 18 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":89 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_92 = 0;

(insn 23 22 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":91 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; stdscr.0_1 = stdscr;

(insn 27 26 0 (set (reg/f:DI 87 [ stdscr.0_1 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":93 -1
     (nil))

;; wmove (stdscr.0_1, i_81, j_82);

(insn 28 27 29 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":93 -1
     (nil))

(insn 29 28 30 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":93 -1
     (nil))

(insn 30 29 31 (set (reg:SI 1 dx)
        (reg:SI 167)) "function.c":93 -1
     (nil))

(insn 31 30 32 (set (reg:SI 4 si)
        (reg:SI 168)) "function.c":93 -1
     (nil))

(insn 32 31 33 (set (reg:DI 5 di)
        (reg/f:DI 87 [ stdscr.0_1 ])) "function.c":93 -1
     (nil))

(call_insn 33 32 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _2 = (long unsigned int) i_81;

(insn 34 33 35 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":94 -1
     (nil))

(insn 35 34 0 (set (reg:DI 88 [ _2 ])
        (sign_extend:DI (reg:SI 169))) "function.c":94 -1
     (nil))

;; _3 = _2 * 8;

(insn 36 35 0 (parallel [
            (set (reg:DI 89 [ _3 ])
                (ashift:DI (reg:DI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":94 -1
     (nil))

;; _4 = tab_94(D) + _3;

(insn 37 36 38 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":94 -1
     (nil))

(insn 38 37 0 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 89 [ _3 ])
                    (reg/f:DI 170)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":94 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 89 [ _3 ]))
        (nil)))

;; _5 = *_4;

(insn 39 38 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (reg/f:DI 90 [ _4 ]) [10 *_4+0 S8 A64])) "function.c":94 -1
     (nil))

;; _6 = (sizetype) j_82;

(insn 40 39 41 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":94 -1
     (nil))

(insn 41 40 0 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 171))) "function.c":94 -1
     (nil))

;; _7 = _5 + _6;

(insn 42 41 0 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 91 [ _5 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":94 -1
     (nil))

;; _8 = *_7;

(insn 43 42 0 (set (reg:QI 94 [ _8 ])
        (mem:QI (reg/f:DI 93 [ _7 ]) [0 *_7+0 S1 A8])) "function.c":94 -1
     (nil))

;; if (_8 == 77)

(insn 44 43 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 77 [0x4d]))) "function.c":94 -1
     (nil))

(jump_insn 45 44 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":94 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; stdscr.1_9 = stdscr;

(insn 47 46 0 (set (reg/f:DI 95 [ stdscr.1_9 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":96 -1
     (nil))

;; wattr_on (stdscr.1_9, 256, 0B);

(insn 48 47 49 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":96 -1
     (nil))

(insn 49 48 50 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":96 -1
     (nil))

(insn 50 49 51 (set (reg:DI 5 di)
        (reg/f:DI 95 [ stdscr.1_9 ])) "function.c":96 -1
     (nil))

(call_insn 51 50 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":96 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" ");

(insn 52 51 53 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":97 -1
     (nil))

(insn 53 52 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":97 -1
     (nil))

(call_insn 54 53 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":97 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.2_10 = stdscr;

(insn 55 54 0 (set (reg/f:DI 96 [ stdscr.2_10 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":98 -1
     (nil))

;; wattr_off (stdscr.2_10, 256, 0B);

(insn 56 55 57 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":98 -1
     (nil))

(insn 57 56 58 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":98 -1
     (nil))

(insn 58 57 59 (set (reg:DI 5 di)
        (reg/f:DI 96 [ stdscr.2_10 ])) "function.c":98 -1
     (nil))

(call_insn 59 58 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":98 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 6

;; 

(code_label 62 61 63 13 (nil) [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = (long unsigned int) i_81;

(insn 64 63 65 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 65 64 0 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 172))) "function.c":100 -1
     (nil))

;; _12 = _11 * 8;

(insn 66 65 0 (parallel [
            (set (reg:DI 98 [ _12 ])
                (ashift:DI (reg:DI 97 [ _11 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _13 = tab_94(D) + _12;

(insn 67 66 68 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))

(insn 68 67 0 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg/f:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 98 [ _12 ]))
        (nil)))

;; _14 = *_13;

(insn 69 68 0 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [10 *_13+0 S8 A64])) "function.c":100 -1
     (nil))

;; _15 = (sizetype) j_82;

(insn 70 69 71 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 71 70 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 174))) "function.c":100 -1
     (nil))

;; _16 = _14 + _15;

(insn 72 71 0 (parallel [
            (set (reg/f:DI 102 [ _16 ])
                (plus:DI (reg/f:DI 100 [ _14 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _17 = *_16;

(insn 73 72 0 (set (reg:QI 103 [ _17 ])
        (mem:QI (reg/f:DI 102 [ _16 ]) [0 *_16+0 S1 A8])) "function.c":100 -1
     (nil))

;; if (_17 == 99)

(insn 74 73 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ _17 ])
            (const_int 99 [0x63]))) "function.c":100 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":100 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _18 = (long unsigned int) i_81;

(insn 77 76 78 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 78 77 0 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 175))) "function.c":100 -1
     (nil))

;; _19 = _18 * 8;

(insn 79 78 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (ashift:DI (reg:DI 104 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _20 = tab_94(D) + _19;

(insn 80 79 81 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))

(insn 81 80 0 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 105 [ _19 ]))
        (nil)))

;; _21 = *_20;

(insn 82 81 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 106 [ _20 ]) [10 *_20+0 S8 A64])) "function.c":100 -1
     (nil))

;; _22 = (sizetype) j_82;

(insn 83 82 84 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 84 83 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 177))) "function.c":100 -1
     (nil))

;; _23 = _21 + _22;

(insn 85 84 0 (parallel [
            (set (reg/f:DI 109 [ _23 ])
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _24 = *_23;

(insn 86 85 0 (set (reg:QI 110 [ _24 ])
        (mem:QI (reg/f:DI 109 [ _23 ]) [0 *_23+0 S1 A8])) "function.c":100 -1
     (nil))

;; if (_24 == 116)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ _24 ])
            (const_int 116 [0x74]))) "function.c":100 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":100 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _25 = (long unsigned int) i_81;

(insn 90 89 91 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 91 90 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 178))) "function.c":100 -1
     (nil))

;; _26 = _25 * 8;

(insn 92 91 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _27 = tab_94(D) + _26;

(insn 93 92 94 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))

(insn 94 93 0 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (reg/f:DI 179)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 112 [ _26 ]))
        (nil)))

;; _28 = *_27;

(insn 95 94 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":100 -1
     (nil))

;; _29 = (sizetype) j_82;

(insn 96 95 97 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 97 96 0 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 180))) "function.c":100 -1
     (nil))

;; _30 = _28 + _29;

(insn 98 97 0 (parallel [
            (set (reg/f:DI 116 [ _30 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _31 = *_30;

(insn 99 98 0 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 116 [ _30 ]) [0 *_30+0 S1 A8])) "function.c":100 -1
     (nil))

;; if (_31 == 84)

(insn 100 99 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 84 [0x54]))) "function.c":100 -1
     (nil))

(jump_insn 101 100 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":100 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _32 = (long unsigned int) i_81;

(insn 103 102 104 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 104 103 0 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 181))) "function.c":100 -1
     (nil))

;; _33 = _32 * 8;

(insn 105 104 0 (parallel [
            (set (reg:DI 119 [ _33 ])
                (ashift:DI (reg:DI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _34 = tab_94(D) + _33;

(insn 106 105 107 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))

(insn 107 106 0 (parallel [
            (set (reg/f:DI 120 [ _34 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (reg/f:DI 182)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 119 [ _33 ]))
        (nil)))

;; _35 = *_34;

(insn 108 107 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 120 [ _34 ]) [10 *_34+0 S8 A64])) "function.c":100 -1
     (nil))

;; _36 = (sizetype) j_82;

(insn 109 108 110 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))

(insn 110 109 0 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 183))) "function.c":100 -1
     (nil))

;; _37 = _35 + _36;

(insn 111 110 0 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))

;; _38 = *_37;

(insn 112 111 0 (set (reg:QI 124 [ _38 ])
        (mem:QI (reg/f:DI 123 [ _37 ]) [0 *_37+0 S1 A8])) "function.c":100 -1
     (nil))

;; if (_38 == 68)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _38 ])
            (const_int 68 [0x44]))) "function.c":100 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":100 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 115 114 116 15 (nil) [0 uses])

(note 116 115 0 NOTE_INSN_BASIC_BLOCK)

;; stdscr.3_39 = stdscr;

(insn 117 116 0 (set (reg/f:DI 125 [ stdscr.3_39 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":102 -1
     (nil))

;; wattr_on (stdscr.3_39, 768, 0B);

(insn 118 117 119 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":102 -1
     (nil))

(insn 119 118 120 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":102 -1
     (nil))

(insn 120 119 121 (set (reg:DI 5 di)
        (reg/f:DI 125 [ stdscr.3_39 ])) "function.c":102 -1
     (nil))

(call_insn 121 120 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":102 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _40 = (long unsigned int) i_81;

(insn 122 121 123 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":103 -1
     (nil))

(insn 123 122 0 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 184))) "function.c":103 -1
     (nil))

;; _41 = _40 * 8;

(insn 124 123 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (ashift:DI (reg:DI 126 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":103 -1
     (nil))

;; _42 = tab_94(D) + _41;

(insn 125 124 126 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":103 -1
     (nil))

(insn 126 125 0 (parallel [
            (set (reg/f:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg/f:DI 185)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":103 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 127 [ _41 ]))
        (nil)))

;; _43 = *_42;

(insn 127 126 0 (set (reg/f:DI 129 [ _43 ])
        (mem/f:DI (reg/f:DI 128 [ _42 ]) [10 *_42+0 S8 A64])) "function.c":103 -1
     (nil))

;; _44 = (sizetype) j_82;

(insn 128 127 129 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":103 -1
     (nil))

(insn 129 128 0 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 186))) "function.c":103 -1
     (nil))

;; _45 = _43 + _44;

(insn 130 129 0 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 129 [ _43 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":103 -1
     (nil))

;; _46 = *_45;

(insn 131 130 0 (set (reg:QI 132 [ _46 ])
        (mem:QI (reg/f:DI 131 [ _45 ]) [0 *_45+0 S1 A8])) "function.c":103 -1
     (nil))

;; _47 = (int) _46;

(insn 132 131 0 (set (reg:SI 133 [ _47 ])
        (sign_extend:SI (reg:QI 132 [ _46 ]))) "function.c":103 -1
     (nil))

;; printw ("%c", _47);

(insn 133 132 134 (set (reg:SI 4 si)
        (reg:SI 133 [ _47 ])) "function.c":103 -1
     (nil))

(insn 134 133 135 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":103 -1
     (nil))

(insn 135 134 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":103 -1
     (nil))

(call_insn 136 135 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":103 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.4_48 = stdscr;

(insn 137 136 0 (set (reg/f:DI 134 [ stdscr.4_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":104 -1
     (nil))

;; wattr_off (stdscr.4_48, 768, 0B);

(insn 138 137 139 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":104 -1
     (nil))

(insn 139 138 140 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":104 -1
     (nil))

(insn 140 139 141 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.4_48 ])) "function.c":104 -1
     (nil))

(call_insn 141 140 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 11

;; 

(code_label 144 143 145 16 (nil) [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; _49 = (long unsigned int) i_81;

(insn 146 145 147 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":106 -1
     (nil))

(insn 147 146 0 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 187))) "function.c":106 -1
     (nil))

;; _50 = _49 * 8;

(insn 148 147 0 (parallel [
            (set (reg:DI 136 [ _50 ])
                (ashift:DI (reg:DI 135 [ _49 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":106 -1
     (nil))

;; _51 = tab_94(D) + _50;

(insn 149 148 150 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":106 -1
     (nil))

(insn 150 149 0 (parallel [
            (set (reg/f:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg/f:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":106 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 136 [ _50 ]))
        (nil)))

;; _52 = *_51;

(insn 151 150 0 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (reg/f:DI 137 [ _51 ]) [10 *_51+0 S8 A64])) "function.c":106 -1
     (nil))

;; _53 = (sizetype) j_82;

(insn 152 151 153 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":106 -1
     (nil))

(insn 153 152 0 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 189))) "function.c":106 -1
     (nil))

;; _54 = _52 + _53;

(insn 154 153 0 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg/f:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":106 -1
     (nil))

;; _55 = *_54;

(insn 155 154 0 (set (reg:QI 141 [ _55 ])
        (mem:QI (reg/f:DI 140 [ _54 ]) [0 *_54+0 S1 A8])) "function.c":106 -1
     (nil))

;; if (_55 == 65)

(insn 156 155 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 141 [ _55 ])
            (const_int 65 [0x41]))) "function.c":106 -1
     (nil))

(jump_insn 157 156 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":106 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; stdscr.5_56 = stdscr;

(insn 159 158 0 (set (reg/f:DI 142 [ stdscr.5_56 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":108 -1
     (nil))

;; wattr_on (stdscr.5_56, 768, 0B);

(insn 160 159 161 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":108 -1
     (nil))

(insn 161 160 162 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":108 -1
     (nil))

(insn 162 161 163 (set (reg:DI 5 di)
        (reg/f:DI 142 [ stdscr.5_56 ])) "function.c":108 -1
     (nil))

(call_insn 163 162 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _57 = (long unsigned int) i_81;

(insn 164 163 165 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":109 -1
     (nil))

(insn 165 164 0 (set (reg:DI 143 [ _57 ])
        (sign_extend:DI (reg:SI 190))) "function.c":109 -1
     (nil))

;; _58 = _57 * 8;

(insn 166 165 0 (parallel [
            (set (reg:DI 144 [ _58 ])
                (ashift:DI (reg:DI 143 [ _57 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":109 -1
     (nil))

;; _59 = tab_94(D) + _58;

(insn 167 166 168 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":109 -1
     (nil))

(insn 168 167 0 (parallel [
            (set (reg/f:DI 145 [ _59 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (reg/f:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":109 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 144 [ _58 ]))
        (nil)))

;; _60 = *_59;

(insn 169 168 0 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (reg/f:DI 145 [ _59 ]) [10 *_59+0 S8 A64])) "function.c":109 -1
     (nil))

;; _61 = (sizetype) j_82;

(insn 170 169 171 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":109 -1
     (nil))

(insn 171 170 0 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 192))) "function.c":109 -1
     (nil))

;; _62 = _60 + _61;

(insn 172 171 0 (parallel [
            (set (reg/f:DI 148 [ _62 ])
                (plus:DI (reg/f:DI 146 [ _60 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":109 -1
     (nil))

;; _63 = *_62;

(insn 173 172 0 (set (reg:QI 149 [ _63 ])
        (mem:QI (reg/f:DI 148 [ _62 ]) [0 *_62+0 S1 A8])) "function.c":109 -1
     (nil))

;; _64 = (int) _63;

(insn 174 173 0 (set (reg:SI 150 [ _64 ])
        (sign_extend:SI (reg:QI 149 [ _63 ]))) "function.c":109 -1
     (nil))

;; printw ("%c", _64);

(insn 175 174 176 (set (reg:SI 4 si)
        (reg:SI 150 [ _64 ])) "function.c":109 -1
     (nil))

(insn 176 175 177 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":109 -1
     (nil))

(insn 177 176 178 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":109 -1
     (nil))

(call_insn 178 177 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":109 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.6_65 = stdscr;

(insn 179 178 0 (set (reg/f:DI 151 [ stdscr.6_65 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":110 -1
     (nil))

;; wattr_off (stdscr.6_65, 768, 0B);

(insn 180 179 181 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":110 -1
     (nil))

(insn 181 180 182 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":110 -1
     (nil))

(insn 182 181 183 (set (reg:DI 5 di)
        (reg/f:DI 151 [ stdscr.6_65 ])) "function.c":110 -1
     (nil))

(call_insn 183 182 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":110 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 13

;; 

(code_label 186 185 187 17 (nil) [0 uses])

(note 187 186 0 NOTE_INSN_BASIC_BLOCK)

;; _66 = (long unsigned int) i_81;

(insn 188 187 189 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":112 -1
     (nil))

(insn 189 188 0 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 193))) "function.c":112 -1
     (nil))

;; _67 = _66 * 8;

(insn 190 189 0 (parallel [
            (set (reg:DI 153 [ _67 ])
                (ashift:DI (reg:DI 152 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":112 -1
     (nil))

;; _68 = tab_94(D) + _67;

(insn 191 190 192 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":112 -1
     (nil))

(insn 192 191 0 (parallel [
            (set (reg/f:DI 154 [ _68 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 153 [ _67 ]))
        (nil)))

;; _69 = *_68;

(insn 193 192 0 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (reg/f:DI 154 [ _68 ]) [10 *_68+0 S8 A64])) "function.c":112 -1
     (nil))

;; _70 = (sizetype) j_82;

(insn 194 193 195 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":112 -1
     (nil))

(insn 195 194 0 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 195))) "function.c":112 -1
     (nil))

;; _71 = _69 + _70;

(insn 196 195 0 (parallel [
            (set (reg/f:DI 157 [ _71 ])
                (plus:DI (reg/f:DI 155 [ _69 ])
                    (reg:DI 156 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":112 -1
     (nil))

;; _72 = *_71;

(insn 197 196 0 (set (reg:QI 158 [ _72 ])
        (mem:QI (reg/f:DI 157 [ _71 ]) [0 *_71+0 S1 A8])) "function.c":112 -1
     (nil))

;; if (_72 == 46)

(insn 198 197 199 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _72 ])
            (const_int 46 [0x2e]))) "function.c":112 -1
     (nil))

(jump_insn 199 198 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":112 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; printw (".");

(insn 201 200 202 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":114 -1
     (nil))

(insn 202 201 203 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":114 -1
     (nil))

(call_insn 203 202 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":114 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; Generating RTL for gimple basic block 15

;; 

(code_label 206 205 207 18 (nil) [0 uses])

(note 207 206 0 NOTE_INSN_BASIC_BLOCK)

;; _73 = (long unsigned int) i_81;

(insn 208 207 209 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":118 -1
     (nil))

(insn 209 208 0 (set (reg:DI 159 [ _73 ])
        (sign_extend:DI (reg:SI 196))) "function.c":118 -1
     (nil))

;; _74 = _73 * 8;

(insn 210 209 0 (parallel [
            (set (reg:DI 160 [ _74 ])
                (ashift:DI (reg:DI 159 [ _73 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":118 -1
     (nil))

;; _75 = tab_94(D) + _74;

(insn 211 210 212 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":118 -1
     (nil))

(insn 212 211 0 (parallel [
            (set (reg/f:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (reg/f:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":118 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 160 [ _74 ]))
        (nil)))

;; _76 = *_75;

(insn 213 212 0 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (reg/f:DI 161 [ _75 ]) [10 *_75+0 S8 A64])) "function.c":118 -1
     (nil))

;; _77 = (sizetype) j_82;

(insn 214 213 215 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":118 -1
     (nil))

(insn 215 214 0 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 198))) "function.c":118 -1
     (nil))

;; _78 = _76 + _77;

(insn 216 215 0 (parallel [
            (set (reg/f:DI 164 [ _78 ])
                (plus:DI (reg/f:DI 162 [ _76 ])
                    (reg:DI 163 [ _77 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":118 -1
     (nil))

;; _79 = *_78;

(insn 217 216 0 (set (reg:QI 165 [ _79 ])
        (mem:QI (reg/f:DI 164 [ _78 ]) [0 *_78+0 S1 A8])) "function.c":118 -1
     (nil))

;; _80 = (int) _79;

(insn 218 217 0 (set (reg:SI 166 [ _80 ])
        (sign_extend:SI (reg:QI 165 [ _79 ]))) "function.c":118 -1
     (nil))

;; printw ("%c", _80);

(insn 219 218 220 (set (reg:SI 4 si)
        (reg:SI 166 [ _80 ])) "function.c":118 -1
     (nil))

(insn 220 219 221 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":118 -1
     (nil))

(insn 221 220 222 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":118 -1
     (nil))

(call_insn 222 221 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":118 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 16

;; 

(code_label 223 222 224 14 (nil) [0 uses])

(note 224 223 0 NOTE_INSN_BASIC_BLOCK)

;; j_106 = j_82 + 1;

(insn 225 224 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":91 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 226 225 227 12 (nil) [0 uses])

(note 227 226 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_82 <= 30)

(insn 229 227 230 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 30 [0x1e]))) "function.c":91 -1
     (nil))

(jump_insn 230 229 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) "function.c":91 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; i_107 = i_81 + 1;

(insn 232 231 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":89 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; 

(code_label 233 232 234 11 (nil) [0 uses])

(note 234 233 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_81 <= 20)

(insn 236 234 237 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 20 [0x14]))) "function.c":89 -1
     (nil))

(jump_insn 237 236 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) "function.c":89 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; Generating RTL for gimple basic block 21

;; <L21>:

(code_label 239 238 240 21 (nil) [0 uses])

(note 240 239 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 20->21 to 23 failed.
Merging block 22 into block 21...
Merged blocks 21 and 22.
Merged 21 and 22 without moving.
Merging block 23 into block 21...
Merged blocks 21 and 23.
Merged 21 and 23 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
        (reg:DI 5 di [ tab ])) "function.c":82 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f7cd10bd300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "function.c":83 -1
     (nil)
    (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":85 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":85 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":85 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":85 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":86 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":86 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":86 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":86 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "function.c":87 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":87 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 5 di)
        (const_int 11 [0xb])) "function.c":87 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":87 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 19 18 20 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":89 -1
     (nil))
(jump_insn 20 19 21 2 (set (pc)
        (label_ref 233)) "function.c":89 -1
     (nil)
 -> 233)
;;  succ:       20

(barrier 21 20 235)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 235 21 22 4 20 (nil) [1 uses])
(note 22 235 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":91 -1
     (nil))
(jump_insn 24 23 25 4 (set (pc)
        (label_ref 226)) "function.c":91 -1
     (nil)
 -> 226)
;;  succ:       18

(barrier 25 24 228)
;; basic block 5, loop depth 2, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 228 25 26 5 19 (nil) [1 uses])
(note 26 228 27 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 5 (set (reg/f:DI 87 [ stdscr.0_1 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":93 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":93 -1
     (nil))
(insn 29 28 30 5 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":93 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 1 dx)
        (reg:SI 167)) "function.c":93 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 4 si)
        (reg:SI 168)) "function.c":93 -1
     (nil))
(insn 32 31 33 5 (set (reg:DI 5 di)
        (reg/f:DI 87 [ stdscr.0_1 ])) "function.c":93 -1
     (nil))
(call_insn 33 32 34 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":93 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 34 33 35 5 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":94 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 88 [ _2 ])
        (sign_extend:DI (reg:SI 169))) "function.c":94 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 89 [ _3 ])
                (ashift:DI (reg:DI 88 [ _2 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":94 -1
     (nil))
(insn 37 36 38 5 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":94 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 89 [ _3 ])
                    (reg/f:DI 170)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":94 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 89 [ _3 ]))
        (nil)))
(insn 39 38 40 5 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (reg/f:DI 90 [ _4 ]) [10 *_4+0 S8 A64])) "function.c":94 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 171)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":94 -1
     (nil))
(insn 41 40 42 5 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 171))) "function.c":94 -1
     (nil))
(insn 42 41 43 5 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 91 [ _5 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":94 -1
     (nil))
(insn 43 42 44 5 (set (reg:QI 94 [ _8 ])
        (mem:QI (reg/f:DI 93 [ _7 ]) [0 *_7+0 S1 A8])) "function.c":94 -1
     (nil))
(insn 44 43 45 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 77 [0x4d]))) "function.c":94 -1
     (nil))
(jump_insn 45 44 46 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "function.c":94 -1
     (nil)
 -> 62)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg/f:DI 95 [ stdscr.1_9 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":96 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":96 -1
     (nil))
(insn 49 48 50 6 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":96 -1
     (nil))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (reg/f:DI 95 [ stdscr.1_9 ])) "function.c":96 -1
     (nil))
(call_insn 51 50 52 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":96 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 52 51 53 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":97 -1
     (nil))
(insn 53 52 54 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":97 -1
     (nil))
(call_insn 54 53 55 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":97 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 55 54 56 6 (set (reg/f:DI 96 [ stdscr.2_10 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":98 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":98 -1
     (nil))
(insn 57 56 58 6 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":98 -1
     (nil))
(insn 58 57 59 6 (set (reg:DI 5 di)
        (reg/f:DI 96 [ stdscr.2_10 ])) "function.c":98 -1
     (nil))
(call_insn 59 58 60 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":98 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 60 59 61 6 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
;;  succ:       17

(barrier 61 60 62)
;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 62 61 63 7 13 (nil) [1 uses])
(note 63 62 64 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 7 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 65 64 66 7 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 172))) "function.c":100 -1
     (nil))
(insn 66 65 67 7 (parallel [
            (set (reg:DI 98 [ _12 ])
                (ashift:DI (reg:DI 97 [ _11 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 67 66 68 7 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 68 67 69 7 (parallel [
            (set (reg/f:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg/f:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 98 [ _12 ]))
        (nil)))
(insn 69 68 70 7 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 99 [ _13 ]) [10 *_13+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 70 69 71 7 (set (reg:SI 174)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 71 70 72 7 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 174))) "function.c":100 -1
     (nil))
(insn 72 71 73 7 (parallel [
            (set (reg/f:DI 102 [ _16 ])
                (plus:DI (reg/f:DI 100 [ _14 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 73 72 74 7 (set (reg:QI 103 [ _17 ])
        (mem:QI (reg/f:DI 102 [ _16 ]) [0 *_16+0 S1 A8])) "function.c":100 -1
     (nil))
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 103 [ _17 ])
            (const_int 99 [0x63]))) "function.c":100 -1
     (nil))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) "function.c":100 -1
     (nil)
 -> 115)
;;  succ:       11
;;              8 (FALLTHRU)

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 78 77 79 8 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 175))) "function.c":100 -1
     (nil))
(insn 79 78 80 8 (parallel [
            (set (reg:DI 105 [ _19 ])
                (ashift:DI (reg:DI 104 [ _18 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 80 79 81 8 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 81 80 82 8 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg/f:DI 176)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 105 [ _19 ]))
        (nil)))
(insn 82 81 83 8 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 106 [ _20 ]) [10 *_20+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 83 82 84 8 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 84 83 85 8 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 177))) "function.c":100 -1
     (nil))
(insn 85 84 86 8 (parallel [
            (set (reg/f:DI 109 [ _23 ])
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 86 85 87 8 (set (reg:QI 110 [ _24 ])
        (mem:QI (reg/f:DI 109 [ _23 ]) [0 *_23+0 S1 A8])) "function.c":100 -1
     (nil))
(insn 87 86 88 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 110 [ _24 ])
            (const_int 116 [0x74]))) "function.c":100 -1
     (nil))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) "function.c":100 -1
     (nil)
 -> 115)
;;  succ:       11
;;              9 (FALLTHRU)

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 9 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 91 90 92 9 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 178))) "function.c":100 -1
     (nil))
(insn 92 91 93 9 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 93 92 94 9 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 94 93 95 9 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (reg/f:DI 179)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 112 [ _26 ]))
        (nil)))
(insn 95 94 96 9 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 96 95 97 9 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 97 96 98 9 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 180))) "function.c":100 -1
     (nil))
(insn 98 97 99 9 (parallel [
            (set (reg/f:DI 116 [ _30 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 99 98 100 9 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 116 [ _30 ]) [0 *_30+0 S1 A8])) "function.c":100 -1
     (nil))
(insn 100 99 101 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 84 [0x54]))) "function.c":100 -1
     (nil))
(jump_insn 101 100 102 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) "function.c":100 -1
     (nil)
 -> 115)
;;  succ:       11
;;              10 (FALLTHRU)

;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 102 101 103 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 10 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 104 103 105 10 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 181))) "function.c":100 -1
     (nil))
(insn 105 104 106 10 (parallel [
            (set (reg:DI 119 [ _33 ])
                (ashift:DI (reg:DI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 106 105 107 10 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 107 106 108 10 (parallel [
            (set (reg/f:DI 120 [ _34 ])
                (plus:DI (reg:DI 119 [ _33 ])
                    (reg/f:DI 182)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 119 [ _33 ]))
        (nil)))
(insn 108 107 109 10 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 120 [ _34 ]) [10 *_34+0 S8 A64])) "function.c":100 -1
     (nil))
(insn 109 108 110 10 (set (reg:SI 183)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":100 -1
     (nil))
(insn 110 109 111 10 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 183))) "function.c":100 -1
     (nil))
(insn 111 110 112 10 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":100 -1
     (nil))
(insn 112 111 113 10 (set (reg:QI 124 [ _38 ])
        (mem:QI (reg/f:DI 123 [ _37 ]) [0 *_37+0 S1 A8])) "function.c":100 -1
     (nil))
(insn 113 112 114 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _38 ])
            (const_int 68 [0x44]))) "function.c":100 -1
     (nil))
(jump_insn 114 113 115 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 144)
            (pc))) "function.c":100 -1
     (nil)
 -> 144)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8
;;              9
;;              10 (FALLTHRU)
(code_label 115 114 116 11 15 (nil) [3 uses])
(note 116 115 117 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 11 (set (reg/f:DI 125 [ stdscr.3_39 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":102 -1
     (nil))
(insn 118 117 119 11 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":102 -1
     (nil))
(insn 119 118 120 11 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":102 -1
     (nil))
(insn 120 119 121 11 (set (reg:DI 5 di)
        (reg/f:DI 125 [ stdscr.3_39 ])) "function.c":102 -1
     (nil))
(call_insn 121 120 122 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":102 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 122 121 123 11 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":103 -1
     (nil))
(insn 123 122 124 11 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 184))) "function.c":103 -1
     (nil))
(insn 124 123 125 11 (parallel [
            (set (reg:DI 127 [ _41 ])
                (ashift:DI (reg:DI 126 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":103 -1
     (nil))
(insn 125 124 126 11 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":103 -1
     (nil))
(insn 126 125 127 11 (parallel [
            (set (reg/f:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (reg/f:DI 185)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":103 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 127 [ _41 ]))
        (nil)))
(insn 127 126 128 11 (set (reg/f:DI 129 [ _43 ])
        (mem/f:DI (reg/f:DI 128 [ _42 ]) [10 *_42+0 S8 A64])) "function.c":103 -1
     (nil))
(insn 128 127 129 11 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":103 -1
     (nil))
(insn 129 128 130 11 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 186))) "function.c":103 -1
     (nil))
(insn 130 129 131 11 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 129 [ _43 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":103 -1
     (nil))
(insn 131 130 132 11 (set (reg:QI 132 [ _46 ])
        (mem:QI (reg/f:DI 131 [ _45 ]) [0 *_45+0 S1 A8])) "function.c":103 -1
     (nil))
(insn 132 131 133 11 (set (reg:SI 133 [ _47 ])
        (sign_extend:SI (reg:QI 132 [ _46 ]))) "function.c":103 -1
     (nil))
(insn 133 132 134 11 (set (reg:SI 4 si)
        (reg:SI 133 [ _47 ])) "function.c":103 -1
     (nil))
(insn 134 133 135 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":103 -1
     (nil))
(insn 135 134 136 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":103 -1
     (nil))
(call_insn 136 135 137 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":103 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 137 136 138 11 (set (reg/f:DI 134 [ stdscr.4_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":104 -1
     (nil))
(insn 138 137 139 11 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":104 -1
     (nil))
(insn 139 138 140 11 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":104 -1
     (nil))
(insn 140 139 141 11 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.4_48 ])) "function.c":104 -1
     (nil))
(call_insn 141 140 142 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":104 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 142 141 143 11 (set (pc)
        (label_ref 223)) "function.c":104 -1
     (nil)
 -> 223)
;;  succ:       17

(barrier 143 142 144)
;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
(code_label 144 143 145 12 16 (nil) [1 uses])
(note 145 144 146 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 12 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":106 -1
     (nil))
(insn 147 146 148 12 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 187))) "function.c":106 -1
     (nil))
(insn 148 147 149 12 (parallel [
            (set (reg:DI 136 [ _50 ])
                (ashift:DI (reg:DI 135 [ _49 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":106 -1
     (nil))
(insn 149 148 150 12 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":106 -1
     (nil))
(insn 150 149 151 12 (parallel [
            (set (reg/f:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (reg/f:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":106 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 136 [ _50 ]))
        (nil)))
(insn 151 150 152 12 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (reg/f:DI 137 [ _51 ]) [10 *_51+0 S8 A64])) "function.c":106 -1
     (nil))
(insn 152 151 153 12 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":106 -1
     (nil))
(insn 153 152 154 12 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 189))) "function.c":106 -1
     (nil))
(insn 154 153 155 12 (parallel [
            (set (reg/f:DI 140 [ _54 ])
                (plus:DI (reg/f:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":106 -1
     (nil))
(insn 155 154 156 12 (set (reg:QI 141 [ _55 ])
        (mem:QI (reg/f:DI 140 [ _54 ]) [0 *_54+0 S1 A8])) "function.c":106 -1
     (nil))
(insn 156 155 157 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 141 [ _55 ])
            (const_int 65 [0x41]))) "function.c":106 -1
     (nil))
(jump_insn 157 156 158 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 186)
            (pc))) "function.c":106 -1
     (nil)
 -> 186)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 2, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 158 157 159 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 13 (set (reg/f:DI 142 [ stdscr.5_56 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":108 -1
     (nil))
(insn 160 159 161 13 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":108 -1
     (nil))
(insn 161 160 162 13 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":108 -1
     (nil))
(insn 162 161 163 13 (set (reg:DI 5 di)
        (reg/f:DI 142 [ stdscr.5_56 ])) "function.c":108 -1
     (nil))
(call_insn 163 162 164 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":108 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 164 163 165 13 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":109 -1
     (nil))
(insn 165 164 166 13 (set (reg:DI 143 [ _57 ])
        (sign_extend:DI (reg:SI 190))) "function.c":109 -1
     (nil))
(insn 166 165 167 13 (parallel [
            (set (reg:DI 144 [ _58 ])
                (ashift:DI (reg:DI 143 [ _57 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":109 -1
     (nil))
(insn 167 166 168 13 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":109 -1
     (nil))
(insn 168 167 169 13 (parallel [
            (set (reg/f:DI 145 [ _59 ])
                (plus:DI (reg:DI 144 [ _58 ])
                    (reg/f:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":109 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 144 [ _58 ]))
        (nil)))
(insn 169 168 170 13 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (reg/f:DI 145 [ _59 ]) [10 *_59+0 S8 A64])) "function.c":109 -1
     (nil))
(insn 170 169 171 13 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":109 -1
     (nil))
(insn 171 170 172 13 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 192))) "function.c":109 -1
     (nil))
(insn 172 171 173 13 (parallel [
            (set (reg/f:DI 148 [ _62 ])
                (plus:DI (reg/f:DI 146 [ _60 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":109 -1
     (nil))
(insn 173 172 174 13 (set (reg:QI 149 [ _63 ])
        (mem:QI (reg/f:DI 148 [ _62 ]) [0 *_62+0 S1 A8])) "function.c":109 -1
     (nil))
(insn 174 173 175 13 (set (reg:SI 150 [ _64 ])
        (sign_extend:SI (reg:QI 149 [ _63 ]))) "function.c":109 -1
     (nil))
(insn 175 174 176 13 (set (reg:SI 4 si)
        (reg:SI 150 [ _64 ])) "function.c":109 -1
     (nil))
(insn 176 175 177 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":109 -1
     (nil))
(insn 177 176 178 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":109 -1
     (nil))
(call_insn 178 177 179 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":109 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 179 178 180 13 (set (reg/f:DI 151 [ stdscr.6_65 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":110 -1
     (nil))
(insn 180 179 181 13 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":110 -1
     (nil))
(insn 181 180 182 13 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":110 -1
     (nil))
(insn 182 181 183 13 (set (reg:DI 5 di)
        (reg/f:DI 151 [ stdscr.6_65 ])) "function.c":110 -1
     (nil))
(call_insn 183 182 184 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":110 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 184 183 185 13 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
;;  succ:       17

(barrier 185 184 186)
;; basic block 14, loop depth 2, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 186 185 187 14 17 (nil) [1 uses])
(note 187 186 188 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 14 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":112 -1
     (nil))
(insn 189 188 190 14 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 193))) "function.c":112 -1
     (nil))
(insn 190 189 191 14 (parallel [
            (set (reg:DI 153 [ _67 ])
                (ashift:DI (reg:DI 152 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":112 -1
     (nil))
(insn 191 190 192 14 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":112 -1
     (nil))
(insn 192 191 193 14 (parallel [
            (set (reg/f:DI 154 [ _68 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (reg/f:DI 194)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":112 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 153 [ _67 ]))
        (nil)))
(insn 193 192 194 14 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (reg/f:DI 154 [ _68 ]) [10 *_68+0 S8 A64])) "function.c":112 -1
     (nil))
(insn 194 193 195 14 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":112 -1
     (nil))
(insn 195 194 196 14 (set (reg:DI 156 [ _70 ])
        (sign_extend:DI (reg:SI 195))) "function.c":112 -1
     (nil))
(insn 196 195 197 14 (parallel [
            (set (reg/f:DI 157 [ _71 ])
                (plus:DI (reg/f:DI 155 [ _69 ])
                    (reg:DI 156 [ _70 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":112 -1
     (nil))
(insn 197 196 198 14 (set (reg:QI 158 [ _72 ])
        (mem:QI (reg/f:DI 157 [ _71 ]) [0 *_71+0 S1 A8])) "function.c":112 -1
     (nil))
(insn 198 197 199 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 158 [ _72 ])
            (const_int 46 [0x2e]))) "function.c":112 -1
     (nil))
(jump_insn 199 198 200 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 206)
            (pc))) "function.c":112 -1
     (nil)
 -> 206)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 2, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 200 199 201 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":114 -1
     (nil))
(insn 202 201 203 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":114 -1
     (nil))
(call_insn 203 202 204 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":114 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 204 203 205 15 (set (pc)
        (label_ref 223)) -1
     (nil)
 -> 223)
;;  succ:       17

(barrier 205 204 206)
;; basic block 16, loop depth 2, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 206 205 207 16 18 (nil) [1 uses])
(note 207 206 208 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 209 16 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":118 -1
     (nil))
(insn 209 208 210 16 (set (reg:DI 159 [ _73 ])
        (sign_extend:DI (reg:SI 196))) "function.c":118 -1
     (nil))
(insn 210 209 211 16 (parallel [
            (set (reg:DI 160 [ _74 ])
                (ashift:DI (reg:DI 159 [ _73 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":118 -1
     (nil))
(insn 211 210 212 16 (set (reg/f:DI 197)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])) "function.c":118 -1
     (nil))
(insn 212 211 213 16 (parallel [
            (set (reg/f:DI 161 [ _75 ])
                (plus:DI (reg:DI 160 [ _74 ])
                    (reg/f:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":118 -1
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [9 tab+0 S8 A64])
            (reg:DI 160 [ _74 ]))
        (nil)))
(insn 213 212 214 16 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (reg/f:DI 161 [ _75 ]) [10 *_75+0 S8 A64])) "function.c":118 -1
     (nil))
(insn 214 213 215 16 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":118 -1
     (nil))
(insn 215 214 216 16 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 198))) "function.c":118 -1
     (nil))
(insn 216 215 217 16 (parallel [
            (set (reg/f:DI 164 [ _78 ])
                (plus:DI (reg/f:DI 162 [ _76 ])
                    (reg:DI 163 [ _77 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":118 -1
     (nil))
(insn 217 216 218 16 (set (reg:QI 165 [ _79 ])
        (mem:QI (reg/f:DI 164 [ _78 ]) [0 *_78+0 S1 A8])) "function.c":118 -1
     (nil))
(insn 218 217 219 16 (set (reg:SI 166 [ _80 ])
        (sign_extend:SI (reg:QI 165 [ _79 ]))) "function.c":118 -1
     (nil))
(insn 219 218 220 16 (set (reg:SI 4 si)
        (reg:SI 166 [ _80 ])) "function.c":118 -1
     (nil))
(insn 220 219 221 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":118 -1
     (nil))
(insn 221 220 222 16 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":118 -1
     (nil))
(call_insn 222 221 223 16 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":118 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 2, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              11
;;              13
;;              15
;;              16 (FALLTHRU)
(code_label 223 222 224 17 14 (nil) [4 uses])
(note 224 223 225 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 226 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":91 -1
     (nil))
;;  succ:       18 (FALLTHRU,DFS_BACK)

;; basic block 18, loop depth 2, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              17 (FALLTHRU,DFS_BACK)
(code_label 226 225 227 18 12 (nil) [1 uses])
(note 227 226 229 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 229 227 230 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 30 [0x1e]))) "function.c":91 -1
     (nil))
(jump_insn 230 229 231 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) "function.c":91 -1
     (nil)
 -> 228)
;;  succ:       5
;;              19 (FALLTHRU)

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 231 230 232 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 232 231 233 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":89 -1
     (nil))
;;  succ:       20 (FALLTHRU,DFS_BACK)

;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              19 (FALLTHRU,DFS_BACK)
(code_label 233 232 234 20 11 (nil) [1 uses])
(note 234 233 236 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 236 234 237 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 20 [0x14]))) "function.c":89 -1
     (nil))
(jump_insn 237 236 238 20 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 235)
            (pc))) "function.c":89 -1
     (nil)
 -> 235)
;;  succ:       4
;;              21 (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 238 237 243 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 243 238 0 21 (const_int 0 [0]) "function.c":122 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function druk_info_plansza_s (druk_info_plansza_s, funcdef_no=8, decl_uid=6218, cgraph_uid=8, symbol_order=11)

druk_info_plansza_s (struct serwer_info * serwer)
{
  struct WINDOW * stdscr.7_1;
  int _2;
  struct WINDOW * stdscr.8_3;
  int _4;
  int _5;
  struct WINDOW * stdscr.9_6;
  int _7;
  struct WINDOW * stdscr.10_8;
  struct WINDOW * stdscr.11_9;
  struct player_info * _10;
  int _11;
  struct player_info * _12;
  int _13;
  struct WINDOW * stdscr.12_14;
  struct player_info * _15;
  char[10] * _16;
  struct player_info * _17;
  char[10] * _18;
  struct WINDOW * stdscr.13_19;
  struct player_info * _20;
  int _21;
  struct player_info * _22;
  int _23;
  struct player_info * _24;
  int _25;
  struct player_info * _26;
  int _27;
  struct WINDOW * stdscr.14_28;
  struct player_info * _29;
  int _30;
  struct player_info * _31;
  int _32;
  struct WINDOW * stdscr.15_33;
  struct WINDOW * stdscr.16_34;
  struct player_info * _35;
  int _36;
  struct player_info * _37;
  int _38;
  struct WINDOW * stdscr.17_39;
  struct player_info * _40;
  int _41;
  struct player_info * _42;
  int _43;
  struct WINDOW * stdscr.18_44;
  struct WINDOW * stdscr.19_45;
  struct WINDOW * stdscr.20_46;
  struct WINDOW * stdscr.21_47;
  struct WINDOW * stdscr.22_48;
  struct WINDOW * stdscr.23_49;
  struct WINDOW * stdscr.24_50;
  struct WINDOW * stdscr.25_51;
  struct WINDOW * stdscr.26_52;
  struct WINDOW * stdscr.27_53;
  struct WINDOW * stdscr.28_54;
  struct WINDOW * stdscr.29_55;
  struct WINDOW * stdscr.30_56;
  struct WINDOW * stdscr.31_57;
  struct WINDOW * stdscr.32_58;
  struct WINDOW * stdscr.33_59;
  struct WINDOW * stdscr.34_60;
  struct WINDOW * stdscr.35_61;
  struct WINDOW * stdscr.36_62;
  struct WINDOW * stdscr.37_63;
  struct WINDOW * stdscr.38_64;
  struct WINDOW * stdscr.39_65;
  struct WINDOW * stdscr.40_66;
  struct WINDOW * stdscr.41_67;
  struct WINDOW * stdscr.42_68;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  start_color ();
  init_pair (3, 0, 3);
  init_pair (5, 7, 7);
  init_pair (6, 0, 5);
  init_pair (11, 7, 2);
  init_pair (12, 7, 1);
  stdscr.7_1 = stdscr;
  wmove (stdscr.7_1, 2, 35);
  _2 = getpid ();
  printw ("Server\'s PID: %d", _2);
  stdscr.8_3 = stdscr;
  wmove (stdscr.8_3, 3, 35);
  _4 = serwer_80(D)->y_camp;
  _5 = serwer_80(D)->x_camp;
  printw ("Campsite X/Y: %d/%d", _5, _4);
  stdscr.9_6 = stdscr;
  wmove (stdscr.9_6, 4, 35);
  _7 = serwer_80(D)->runda;
  printw ("Round number: %d", _7);
  stdscr.10_8 = stdscr;
  wmove (stdscr.10_8, 5, 35);
  printw ("Parameter:   Player1  Player2  Player3  Player4");
  stdscr.11_9 = stdscr;
  wmove (stdscr.11_9, 6, 35);
  _10 = serwer_80(D)->player2;
  _11 = _10->PID;
  _12 = serwer_80(D)->player1;
  _13 = _12->PID;
  printw ("PID         %d     %d", _13, _11);
  stdscr.12_14 = stdscr;
  wmove (stdscr.12_14, 7, 35);
  _15 = serwer_80(D)->player2;
  _16 = &_15->typ;
  _17 = serwer_80(D)->player1;
  _18 = &_17->typ;
  printw ("Type        %d      %d", _18, _16);
  stdscr.13_19 = stdscr;
  wmove (stdscr.13_19, 8, 35);
  _20 = serwer_80(D)->player2;
  _21 = _20->y_current;
  _22 = serwer_80(D)->player2;
  _23 = _22->x_current;
  _24 = serwer_80(D)->player1;
  _25 = _24->y_current;
  _26 = serwer_80(D)->player1;
  _27 = _26->x_current;
  printw ("Curr X/Y    %d/%d    %d/%d", _27, _25, _23, _21);
  stdscr.14_28 = stdscr;
  wmove (stdscr.14_28, 9, 35);
  _29 = serwer_80(D)->player1;
  _30 = _29->deaths;
  _31 = serwer_80(D)->player1;
  _32 = _31->deaths;
  printw ("Deaths      %d        %d", _32, _30);
  stdscr.15_33 = stdscr;
  wmove (stdscr.15_33, 11, 35);
  printw ("Coins");
  stdscr.16_34 = stdscr;
  wmove (stdscr.16_34, 12, 35);
  _35 = serwer_80(D)->player2;
  _36 = _35->coins_carried;
  _37 = serwer_80(D)->player1;
  _38 = _37->coins_carried;
  printw ("    carried %d       %d", _38, _36);
  stdscr.17_39 = stdscr;
  wmove (stdscr.17_39, 13, 35);
  _40 = serwer_80(D)->player2;
  _41 = _40->coins_brought;
  _42 = serwer_80(D)->player1;
  _43 = _42->coins_brought;
  printw ("    brought %d       %d", _43, _41);
  stdscr.18_44 = stdscr;
  wmove (stdscr.18_44, 14, 35);
  printw ("LEGEND: ");
  stdscr.19_45 = stdscr;
  wmove (stdscr.19_45, 15, 35);
  stdscr.20_46 = stdscr;
  wattr_on (stdscr.20_46, 1536, 0B);
  printw ("1234");
  stdscr.21_47 = stdscr;
  wattr_off (stdscr.21_47, 1536, 0B);
  printw (" - players");
  stdscr.22_48 = stdscr;
  wmove (stdscr.22_48, 16, 35);
  stdscr.23_49 = stdscr;
  wattr_on (stdscr.23_49, 1280, 0B);
  printw (" ");
  stdscr.24_50 = stdscr;
  wattr_off (stdscr.24_50, 1280, 0B);
  printw (" - wall");
  stdscr.25_51 = stdscr;
  wmove (stdscr.25_51, 17, 35);
  printw ("# - bushes (slow down)");
  stdscr.26_52 = stdscr;
  wmove (stdscr.26_52, 18, 35);
  stdscr.27_53 = stdscr;
  wattr_on (stdscr.27_53, 3072, 0B);
  printw ("* - enemy");
  stdscr.28_54 = stdscr;
  wattr_off (stdscr.28_54, 3072, 0B);
  stdscr.29_55 = stdscr;
  wmove (stdscr.29_55, 19, 35);
  stdscr.30_56 = stdscr;
  wattr_on (stdscr.30_56, 768, 0B);
  printw ("c");
  stdscr.31_57 = stdscr;
  wattr_off (stdscr.31_57, 768, 0B);
  printw (" - one coin");
  stdscr.32_58 = stdscr;
  wattr_on (stdscr.32_58, 768, 0B);
  printw ("D");
  stdscr.33_59 = stdscr;
  wattr_off (stdscr.33_59, 768, 0B);
  printw (" - dropped treasures");
  stdscr.34_60 = stdscr;
  wmove (stdscr.34_60, 20, 35);
  stdscr.35_61 = stdscr;
  wattr_on (stdscr.35_61, 768, 0B);
  printw ("C");
  stdscr.36_62 = stdscr;
  wattr_off (stdscr.36_62, 768, 0B);
  printw (" - treasure (10 coins)");
  stdscr.37_63 = stdscr;
  wmove (stdscr.37_63, 21, 35);
  stdscr.38_64 = stdscr;
  wattr_on (stdscr.38_64, 768, 0B);
  printw ("T");
  stdscr.39_65 = stdscr;
  wattr_off (stdscr.39_65, 768, 0B);
  printw (" - large treasure (50 coins)");
  stdscr.40_66 = stdscr;
  wmove (stdscr.40_66, 22, 35);
  stdscr.41_67 = stdscr;
  wattr_on (stdscr.41_67, 2816, 0B);
  printw ("A");
  stdscr.42_68 = stdscr;
  wattr_off (stdscr.42_68, 2816, 0B);
  printw (" - campsite");
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (stdscr.7_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (stdscr.8_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (stdscr.9_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (stdscr.10_8 - 8 )
Partition 9 (stdscr.11_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (stdscr.12_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (stdscr.13_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (stdscr.14_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (stdscr.15_33 - 33 )
Partition 34 (stdscr.16_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (stdscr.17_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (stdscr.18_44 - 44 )
Partition 45 (stdscr.19_45 - 45 )
Partition 46 (stdscr.20_46 - 46 )
Partition 47 (stdscr.21_47 - 47 )
Partition 48 (stdscr.22_48 - 48 )
Partition 49 (stdscr.23_49 - 49 )
Partition 50 (stdscr.24_50 - 50 )
Partition 51 (stdscr.25_51 - 51 )
Partition 52 (stdscr.26_52 - 52 )
Partition 53 (stdscr.27_53 - 53 )
Partition 54 (stdscr.28_54 - 54 )
Partition 55 (stdscr.29_55 - 55 )
Partition 56 (stdscr.30_56 - 56 )
Partition 57 (stdscr.31_57 - 57 )
Partition 58 (stdscr.32_58 - 58 )
Partition 59 (stdscr.33_59 - 59 )
Partition 60 (stdscr.34_60 - 60 )
Partition 61 (stdscr.35_61 - 61 )
Partition 62 (stdscr.36_62 - 62 )
Partition 63 (stdscr.37_63 - 63 )
Partition 64 (stdscr.38_64 - 64 )
Partition 65 (stdscr.39_65 - 65 )
Partition 66 (stdscr.40_66 - 66 )
Partition 67 (stdscr.41_67 - 67 )
Partition 68 (stdscr.42_68 - 68 )
Partition 80 (serwer_80(D) - 80 )


Coalescible Partition map 

Partition 0, base 0 (serwer_80(D) - 80 )


Partition map 

Partition 0 (serwer_80(D) - 80 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (serwer_80(D) - 80 )

After Coalescing:

Partition map 

Partition 0 (stdscr.7_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (stdscr.8_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (stdscr.9_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (stdscr.10_8 - 8 )
Partition 8 (stdscr.11_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (stdscr.12_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (stdscr.13_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (stdscr.14_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (stdscr.15_33 - 33 )
Partition 33 (stdscr.16_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (stdscr.17_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (stdscr.18_44 - 44 )
Partition 44 (stdscr.19_45 - 45 )
Partition 45 (stdscr.20_46 - 46 )
Partition 46 (stdscr.21_47 - 47 )
Partition 47 (stdscr.22_48 - 48 )
Partition 48 (stdscr.23_49 - 49 )
Partition 49 (stdscr.24_50 - 50 )
Partition 50 (stdscr.25_51 - 51 )
Partition 51 (stdscr.26_52 - 52 )
Partition 52 (stdscr.27_53 - 53 )
Partition 53 (stdscr.28_54 - 54 )
Partition 54 (stdscr.29_55 - 55 )
Partition 55 (stdscr.30_56 - 56 )
Partition 56 (stdscr.31_57 - 57 )
Partition 57 (stdscr.32_58 - 58 )
Partition 58 (stdscr.33_59 - 59 )
Partition 59 (stdscr.34_60 - 60 )
Partition 60 (stdscr.35_61 - 61 )
Partition 61 (stdscr.36_62 - 62 )
Partition 62 (stdscr.37_63 - 63 )
Partition 63 (stdscr.38_64 - 64 )
Partition 64 (stdscr.39_65 - 65 )
Partition 65 (stdscr.40_66 - 66 )
Partition 66 (stdscr.41_67 - 67 )
Partition 67 (stdscr.42_68 - 68 )
Partition 68 (serwer_80(D) - 80 )

druk_info_plansza_s (struct serwer_info * serwer)
{
  struct WINDOW * stdscr.7_1;
  int _2;
  struct WINDOW * stdscr.8_3;
  int _4;
  int _5;
  struct WINDOW * stdscr.9_6;
  int _7;
  struct WINDOW * stdscr.10_8;
  struct WINDOW * stdscr.11_9;
  struct player_info * _10;
  int _11;
  struct player_info * _12;
  int _13;
  struct WINDOW * stdscr.12_14;
  struct player_info * _15;
  char[10] * _16;
  struct player_info * _17;
  char[10] * _18;
  struct WINDOW * stdscr.13_19;
  struct player_info * _20;
  int _21;
  struct player_info * _22;
  int _23;
  struct player_info * _24;
  int _25;
  struct player_info * _26;
  int _27;
  struct WINDOW * stdscr.14_28;
  struct player_info * _29;
  int _30;
  struct player_info * _31;
  int _32;
  struct WINDOW * stdscr.15_33;
  struct WINDOW * stdscr.16_34;
  struct player_info * _35;
  int _36;
  struct player_info * _37;
  int _38;
  struct WINDOW * stdscr.17_39;
  struct player_info * _40;
  int _41;
  struct player_info * _42;
  int _43;
  struct WINDOW * stdscr.18_44;
  struct WINDOW * stdscr.19_45;
  struct WINDOW * stdscr.20_46;
  struct WINDOW * stdscr.21_47;
  struct WINDOW * stdscr.22_48;
  struct WINDOW * stdscr.23_49;
  struct WINDOW * stdscr.24_50;
  struct WINDOW * stdscr.25_51;
  struct WINDOW * stdscr.26_52;
  struct WINDOW * stdscr.27_53;
  struct WINDOW * stdscr.28_54;
  struct WINDOW * stdscr.29_55;
  struct WINDOW * stdscr.30_56;
  struct WINDOW * stdscr.31_57;
  struct WINDOW * stdscr.32_58;
  struct WINDOW * stdscr.33_59;
  struct WINDOW * stdscr.34_60;
  struct WINDOW * stdscr.35_61;
  struct WINDOW * stdscr.36_62;
  struct WINDOW * stdscr.37_63;
  struct WINDOW * stdscr.38_64;
  struct WINDOW * stdscr.39_65;
  struct WINDOW * stdscr.40_66;
  struct WINDOW * stdscr.41_67;
  struct WINDOW * stdscr.42_68;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  start_color ();
  init_pair (3, 0, 3);
  init_pair (5, 7, 7);
  init_pair (6, 0, 5);
  init_pair (11, 7, 2);
  init_pair (12, 7, 1);
  stdscr.7_1 = stdscr;
  wmove (stdscr.7_1, 2, 35);
  _2 = getpid ();
  printw ("Server\'s PID: %d", _2);
  stdscr.8_3 = stdscr;
  wmove (stdscr.8_3, 3, 35);
  _4 = serwer_80(D)->y_camp;
  _5 = serwer_80(D)->x_camp;
  printw ("Campsite X/Y: %d/%d", _5, _4);
  stdscr.9_6 = stdscr;
  wmove (stdscr.9_6, 4, 35);
  _7 = serwer_80(D)->runda;
  printw ("Round number: %d", _7);
  stdscr.10_8 = stdscr;
  wmove (stdscr.10_8, 5, 35);
  printw ("Parameter:   Player1  Player2  Player3  Player4");
  stdscr.11_9 = stdscr;
  wmove (stdscr.11_9, 6, 35);
  _10 = serwer_80(D)->player2;
  _11 = _10->PID;
  _12 = serwer_80(D)->player1;
  _13 = _12->PID;
  printw ("PID         %d     %d", _13, _11);
  stdscr.12_14 = stdscr;
  wmove (stdscr.12_14, 7, 35);
  _15 = serwer_80(D)->player2;
  _16 = &_15->typ;
  _17 = serwer_80(D)->player1;
  _18 = &_17->typ;
  printw ("Type        %d      %d", _18, _16);
  stdscr.13_19 = stdscr;
  wmove (stdscr.13_19, 8, 35);
  _20 = serwer_80(D)->player2;
  _21 = _20->y_current;
  _22 = serwer_80(D)->player2;
  _23 = _22->x_current;
  _24 = serwer_80(D)->player1;
  _25 = _24->y_current;
  _26 = serwer_80(D)->player1;
  _27 = _26->x_current;
  printw ("Curr X/Y    %d/%d    %d/%d", _27, _25, _23, _21);
  stdscr.14_28 = stdscr;
  wmove (stdscr.14_28, 9, 35);
  _29 = serwer_80(D)->player1;
  _30 = _29->deaths;
  _31 = serwer_80(D)->player1;
  _32 = _31->deaths;
  printw ("Deaths      %d        %d", _32, _30);
  stdscr.15_33 = stdscr;
  wmove (stdscr.15_33, 11, 35);
  printw ("Coins");
  stdscr.16_34 = stdscr;
  wmove (stdscr.16_34, 12, 35);
  _35 = serwer_80(D)->player2;
  _36 = _35->coins_carried;
  _37 = serwer_80(D)->player1;
  _38 = _37->coins_carried;
  printw ("    carried %d       %d", _38, _36);
  stdscr.17_39 = stdscr;
  wmove (stdscr.17_39, 13, 35);
  _40 = serwer_80(D)->player2;
  _41 = _40->coins_brought;
  _42 = serwer_80(D)->player1;
  _43 = _42->coins_brought;
  printw ("    brought %d       %d", _43, _41);
  stdscr.18_44 = stdscr;
  wmove (stdscr.18_44, 14, 35);
  printw ("LEGEND: ");
  stdscr.19_45 = stdscr;
  wmove (stdscr.19_45, 15, 35);
  stdscr.20_46 = stdscr;
  wattr_on (stdscr.20_46, 1536, 0B);
  printw ("1234");
  stdscr.21_47 = stdscr;
  wattr_off (stdscr.21_47, 1536, 0B);
  printw (" - players");
  stdscr.22_48 = stdscr;
  wmove (stdscr.22_48, 16, 35);
  stdscr.23_49 = stdscr;
  wattr_on (stdscr.23_49, 1280, 0B);
  printw (" ");
  stdscr.24_50 = stdscr;
  wattr_off (stdscr.24_50, 1280, 0B);
  printw (" - wall");
  stdscr.25_51 = stdscr;
  wmove (stdscr.25_51, 17, 35);
  printw ("# - bushes (slow down)");
  stdscr.26_52 = stdscr;
  wmove (stdscr.26_52, 18, 35);
  stdscr.27_53 = stdscr;
  wattr_on (stdscr.27_53, 3072, 0B);
  printw ("* - enemy");
  stdscr.28_54 = stdscr;
  wattr_off (stdscr.28_54, 3072, 0B);
  stdscr.29_55 = stdscr;
  wmove (stdscr.29_55, 19, 35);
  stdscr.30_56 = stdscr;
  wattr_on (stdscr.30_56, 768, 0B);
  printw ("c");
  stdscr.31_57 = stdscr;
  wattr_off (stdscr.31_57, 768, 0B);
  printw (" - one coin");
  stdscr.32_58 = stdscr;
  wattr_on (stdscr.32_58, 768, 0B);
  printw ("D");
  stdscr.33_59 = stdscr;
  wattr_off (stdscr.33_59, 768, 0B);
  printw (" - dropped treasures");
  stdscr.34_60 = stdscr;
  wmove (stdscr.34_60, 20, 35);
  stdscr.35_61 = stdscr;
  wattr_on (stdscr.35_61, 768, 0B);
  printw ("C");
  stdscr.36_62 = stdscr;
  wattr_off (stdscr.36_62, 768, 0B);
  printw (" - treasure (10 coins)");
  stdscr.37_63 = stdscr;
  wmove (stdscr.37_63, 21, 35);
  stdscr.38_64 = stdscr;
  wattr_on (stdscr.38_64, 768, 0B);
  printw ("T");
  stdscr.39_65 = stdscr;
  wattr_off (stdscr.39_65, 768, 0B);
  printw (" - large treasure (50 coins)");
  stdscr.40_66 = stdscr;
  wmove (stdscr.40_66, 22, 35);
  stdscr.41_67 = stdscr;
  wattr_on (stdscr.41_67, 2816, 0B);
  printw ("A");
  stdscr.42_68 = stdscr;
  wattr_off (stdscr.42_68, 2816, 0B);
  printw (" - campsite");
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; start_color ();

(call_insn 6 5 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f7cd10bd300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "function.c":127 -1
     (nil)
    (nil))

;; init_pair (3, 0, 3);

(insn 7 6 8 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":128 -1
     (nil))

(insn 8 7 9 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":128 -1
     (nil))

(insn 9 8 10 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":128 -1
     (nil))

(call_insn 10 9 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":128 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (5, 7, 7);

(insn 11 10 12 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":129 -1
     (nil))

(insn 12 11 13 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":129 -1
     (nil))

(insn 13 12 14 (set (reg:SI 5 di)
        (const_int 5 [0x5])) "function.c":129 -1
     (nil))

(call_insn 14 13 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":129 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (6, 0, 5);

(insn 15 14 16 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) "function.c":130 -1
     (nil))

(insn 16 15 17 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":130 -1
     (nil))

(insn 17 16 18 (set (reg:SI 5 di)
        (const_int 6 [0x6])) "function.c":130 -1
     (nil))

(call_insn 18 17 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":130 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (11, 7, 2);

(insn 19 18 20 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "function.c":131 -1
     (nil))

(insn 20 19 21 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":131 -1
     (nil))

(insn 21 20 22 (set (reg:SI 5 di)
        (const_int 11 [0xb])) "function.c":131 -1
     (nil))

(call_insn 22 21 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":131 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (12, 7, 1);

(insn 23 22 24 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "function.c":132 -1
     (nil))

(insn 24 23 25 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":132 -1
     (nil))

(insn 25 24 26 (set (reg:SI 5 di)
        (const_int 12 [0xc])) "function.c":132 -1
     (nil))

(call_insn 26 25 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":132 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.7_1 = stdscr;

(insn 27 26 0 (set (reg/f:DI 87 [ stdscr.7_1 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":134 -1
     (nil))

;; wmove (stdscr.7_1, 2, 35);

(insn 28 27 29 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":134 -1
     (nil))

(insn 29 28 30 (set (reg:SI 4 si)
        (const_int 2 [0x2])) "function.c":134 -1
     (nil))

(insn 30 29 31 (set (reg:DI 5 di)
        (reg/f:DI 87 [ stdscr.7_1 ])) "function.c":134 -1
     (nil))

(call_insn 31 30 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":134 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _2 = getpid ();

(call_insn 32 31 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":135 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 33 32 0 (set (reg:SI 88 [ _2 ])
        (reg:SI 0 ax)) "function.c":135 -1
     (nil))

;; printw ("Server\'s PID: %d", _2);

(insn 34 33 35 (set (reg:SI 4 si)
        (reg:SI 88 [ _2 ])) "function.c":135 -1
     (nil))

(insn 35 34 36 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7cd0ee26c0 *.LC5>)) "function.c":135 -1
     (nil))

(insn 36 35 37 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":135 -1
     (nil))

(call_insn 37 36 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":135 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.8_3 = stdscr;

(insn 38 37 0 (set (reg/f:DI 89 [ stdscr.8_3 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":137 -1
     (nil))

;; wmove (stdscr.8_3, 3, 35);

(insn 39 38 40 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":137 -1
     (nil))

(insn 40 39 41 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "function.c":137 -1
     (nil))

(insn 41 40 42 (set (reg:DI 5 di)
        (reg/f:DI 89 [ stdscr.8_3 ])) "function.c":137 -1
     (nil))

(call_insn 42 41 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":137 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _4 = serwer_80(D)->y_camp;

(insn 43 42 44 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":138 -1
     (nil))

(insn 44 43 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 155)
                (const_int 8 [0x8])) [3 serwer_80(D)->y_camp+0 S4 A64])) "function.c":138 -1
     (nil))

;; _5 = serwer_80(D)->x_camp;

(insn 45 44 46 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":138 -1
     (nil))

(insn 46 45 0 (set (reg:SI 91 [ _5 ])
        (mem:SI (plus:DI (reg/f:DI 156)
                (const_int 4 [0x4])) [3 serwer_80(D)->x_camp+0 S4 A32])) "function.c":138 -1
     (nil))

;; printw ("Campsite X/Y: %d/%d", _5, _4);

(insn 47 46 48 (set (reg:SI 1 dx)
        (reg:SI 90 [ _4 ])) "function.c":138 -1
     (nil))

(insn 48 47 49 (set (reg:SI 4 si)
        (reg:SI 91 [ _5 ])) "function.c":138 -1
     (nil))

(insn 49 48 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7cd0ee2750 *.LC6>)) "function.c":138 -1
     (nil))

(insn 50 49 51 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":138 -1
     (nil))

(call_insn 51 50 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":138 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; stdscr.9_6 = stdscr;

(insn 52 51 0 (set (reg/f:DI 92 [ stdscr.9_6 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":140 -1
     (nil))

;; wmove (stdscr.9_6, 4, 35);

(insn 53 52 54 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":140 -1
     (nil))

(insn 54 53 55 (set (reg:SI 4 si)
        (const_int 4 [0x4])) "function.c":140 -1
     (nil))

(insn 55 54 56 (set (reg:DI 5 di)
        (reg/f:DI 92 [ stdscr.9_6 ])) "function.c":140 -1
     (nil))

(call_insn 56 55 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _7 = serwer_80(D)->runda;

(insn 57 56 58 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":141 -1
     (nil))

(insn 58 57 0 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 157)
                (const_int 12 [0xc])) [3 serwer_80(D)->runda+0 S4 A32])) "function.c":141 -1
     (nil))

;; printw ("Round number: %d", _7);

(insn 59 58 60 (set (reg:SI 4 si)
        (reg:SI 93 [ _7 ])) "function.c":141 -1
     (nil))

(insn 60 59 61 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7cd0ee27e0 *.LC7>)) "function.c":141 -1
     (nil))

(insn 61 60 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":141 -1
     (nil))

(call_insn 62 61 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":141 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.10_8 = stdscr;

(insn 63 62 0 (set (reg/f:DI 94 [ stdscr.10_8 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":143 -1
     (nil))

;; wmove (stdscr.10_8, 5, 35);

(insn 64 63 65 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":143 -1
     (nil))

(insn 65 64 66 (set (reg:SI 4 si)
        (const_int 5 [0x5])) "function.c":143 -1
     (nil))

(insn 66 65 67 (set (reg:DI 5 di)
        (reg/f:DI 94 [ stdscr.10_8 ])) "function.c":143 -1
     (nil))

(call_insn 67 66 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":143 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("Parameter:   Player1  Player2  Player3  Player4");

(insn 68 67 69 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7cd0ee2870 *.LC8>)) "function.c":144 -1
     (nil))

(insn 69 68 70 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":144 -1
     (nil))

(call_insn 70 69 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":144 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.11_9 = stdscr;

(insn 71 70 0 (set (reg/f:DI 95 [ stdscr.11_9 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":146 -1
     (nil))

;; wmove (stdscr.11_9, 6, 35);

(insn 72 71 73 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":146 -1
     (nil))

(insn 73 72 74 (set (reg:SI 4 si)
        (const_int 6 [0x6])) "function.c":146 -1
     (nil))

(insn 74 73 75 (set (reg:DI 5 di)
        (reg/f:DI 95 [ stdscr.11_9 ])) "function.c":146 -1
     (nil))

(call_insn 75 74 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":146 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _10 = serwer_80(D)->player2;

(insn 76 75 77 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":147 -1
     (nil))

(insn 77 76 0 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":147 -1
     (nil))

;; _11 = _10->PID;

(insn 78 77 0 (set (reg:SI 97 [ _11 ])
        (mem:SI (reg/f:DI 96 [ _10 ]) [3 _10->PID+0 S4 A64])) "function.c":147 -1
     (nil))

;; _12 = serwer_80(D)->player1;

(insn 79 78 80 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":147 -1
     (nil))

(insn 80 79 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 159)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":147 -1
     (nil))

;; _13 = _12->PID;

(insn 81 80 0 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 98 [ _12 ]) [3 _12->PID+0 S4 A64])) "function.c":147 -1
     (nil))

;; printw ("PID         %d     %d", _13, _11);

(insn 82 81 83 (set (reg:SI 1 dx)
        (reg:SI 97 [ _11 ])) "function.c":147 -1
     (nil))

(insn 83 82 84 (set (reg:SI 4 si)
        (reg:SI 99 [ _13 ])) "function.c":147 -1
     (nil))

(insn 84 83 85 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f7cd0e9c870 *.LC9>)) "function.c":147 -1
     (nil))

(insn 85 84 86 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":147 -1
     (nil))

(call_insn 86 85 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":147 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; stdscr.12_14 = stdscr;

(insn 87 86 0 (set (reg/f:DI 100 [ stdscr.12_14 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":149 -1
     (nil))

;; wmove (stdscr.12_14, 7, 35);

(insn 88 87 89 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":149 -1
     (nil))

(insn 89 88 90 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":149 -1
     (nil))

(insn 90 89 91 (set (reg:DI 5 di)
        (reg/f:DI 100 [ stdscr.12_14 ])) "function.c":149 -1
     (nil))

(call_insn 91 90 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _15 = serwer_80(D)->player2;

(insn 92 91 93 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":150 -1
     (nil))

(insn 93 92 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":150 -1
     (nil))

;; _16 = &_15->typ;

(insn 94 93 0 (parallel [
            (set (reg/f:DI 102 [ _16 ])
                (plus:DI (reg/f:DI 101 [ _15 ])
                    (const_int 41 [0x29])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":150 -1
     (nil))

;; _17 = serwer_80(D)->player1;

(insn 95 94 96 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":150 -1
     (nil))

(insn 96 95 0 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":150 -1
     (nil))

;; _18 = &_17->typ;

(insn 97 96 0 (parallel [
            (set (reg/f:DI 104 [ _18 ])
                (plus:DI (reg/f:DI 103 [ _17 ])
                    (const_int 41 [0x29])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":150 -1
     (nil))

;; printw ("Type        %d      %d", _18, _16);

(insn 98 97 99 (set (reg:DI 1 dx)
        (reg/f:DI 102 [ _16 ])) "function.c":150 -1
     (nil))

(insn 99 98 100 (set (reg:DI 4 si)
        (reg/f:DI 104 [ _18 ])) "function.c":150 -1
     (nil))

(insn 100 99 101 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7cd0ee2900 *.LC10>)) "function.c":150 -1
     (nil))

(insn 101 100 102 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":150 -1
     (nil))

(call_insn 102 101 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":150 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))

;; stdscr.13_19 = stdscr;

(insn 103 102 0 (set (reg/f:DI 105 [ stdscr.13_19 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":152 -1
     (nil))

;; wmove (stdscr.13_19, 8, 35);

(insn 104 103 105 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":152 -1
     (nil))

(insn 105 104 106 (set (reg:SI 4 si)
        (const_int 8 [0x8])) "function.c":152 -1
     (nil))

(insn 106 105 107 (set (reg:DI 5 di)
        (reg/f:DI 105 [ stdscr.13_19 ])) "function.c":152 -1
     (nil))

(call_insn 107 106 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":152 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _20 = serwer_80(D)->player2;

(insn 108 107 109 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))

(insn 109 108 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":153 -1
     (nil))

;; _21 = _20->y_current;

(insn 110 109 0 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 16 [0x10])) [3 _20->y_current+0 S4 A64])) "function.c":153 -1
     (nil))

;; _22 = serwer_80(D)->player2;

(insn 111 110 112 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))

(insn 112 111 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":153 -1
     (nil))

;; _23 = _22->x_current;

(insn 113 112 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 12 [0xc])) [3 _22->x_current+0 S4 A32])) "function.c":153 -1
     (nil))

;; _24 = serwer_80(D)->player1;

(insn 114 113 115 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))

(insn 115 114 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":153 -1
     (nil))

;; _25 = _24->y_current;

(insn 116 115 0 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 16 [0x10])) [3 _24->y_current+0 S4 A64])) "function.c":153 -1
     (nil))

;; _26 = serwer_80(D)->player1;

(insn 117 116 118 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))

(insn 118 117 0 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":153 -1
     (nil))

;; _27 = _26->x_current;

(insn 119 118 0 (set (reg:SI 113 [ _27 ])
        (mem:SI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 12 [0xc])) [3 _26->x_current+0 S4 A32])) "function.c":153 -1
     (nil))

;; printw ("Curr X/Y    %d/%d    %d/%d", _27, _25, _23, _21);

(insn 120 119 121 (set (reg:SI 37 r8)
        (reg:SI 107 [ _21 ])) "function.c":153 -1
     (nil))

(insn 121 120 122 (set (reg:SI 2 cx)
        (reg:SI 109 [ _23 ])) "function.c":153 -1
     (nil))

(insn 122 121 123 (set (reg:SI 1 dx)
        (reg:SI 111 [ _25 ])) "function.c":153 -1
     (nil))

(insn 123 122 124 (set (reg:SI 4 si)
        (reg:SI 113 [ _27 ])) "function.c":153 -1
     (nil))

(insn 124 123 125 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f7cd0ee2990 *.LC11>)) "function.c":153 -1
     (nil))

(insn 125 124 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":153 -1
     (nil))

(call_insn 126 125 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":153 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))

;; stdscr.14_28 = stdscr;

(insn 127 126 0 (set (reg/f:DI 114 [ stdscr.14_28 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":155 -1
     (nil))

;; wmove (stdscr.14_28, 9, 35);

(insn 128 127 129 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":155 -1
     (nil))

(insn 129 128 130 (set (reg:SI 4 si)
        (const_int 9 [0x9])) "function.c":155 -1
     (nil))

(insn 130 129 131 (set (reg:DI 5 di)
        (reg/f:DI 114 [ stdscr.14_28 ])) "function.c":155 -1
     (nil))

(call_insn 131 130 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":155 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _29 = serwer_80(D)->player1;

(insn 132 131 133 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":156 -1
     (nil))

(insn 133 132 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 166)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":156 -1
     (nil))

;; _30 = _29->deaths;

(insn 134 133 0 (set (reg:SI 116 [ _30 ])
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 28 [0x1c])) [3 _29->deaths+0 S4 A32])) "function.c":156 -1
     (nil))

;; _31 = serwer_80(D)->player1;

(insn 135 134 136 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":156 -1
     (nil))

(insn 136 135 0 (set (reg/f:DI 117 [ _31 ])
        (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":156 -1
     (nil))

;; _32 = _31->deaths;

(insn 137 136 0 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (reg/f:DI 117 [ _31 ])
                (const_int 28 [0x1c])) [3 _31->deaths+0 S4 A32])) "function.c":156 -1
     (nil))

;; printw ("Deaths      %d        %d", _32, _30);

(insn 138 137 139 (set (reg:SI 1 dx)
        (reg:SI 116 [ _30 ])) "function.c":156 -1
     (nil))

(insn 139 138 140 (set (reg:SI 4 si)
        (reg:SI 118 [ _32 ])) "function.c":156 -1
     (nil))

(insn 140 139 141 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7cd0ee2a20 *.LC12>)) "function.c":156 -1
     (nil))

(insn 141 140 142 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":156 -1
     (nil))

(call_insn 142 141 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":156 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; stdscr.15_33 = stdscr;

(insn 143 142 0 (set (reg/f:DI 119 [ stdscr.15_33 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":158 -1
     (nil))

;; wmove (stdscr.15_33, 11, 35);

(insn 144 143 145 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":158 -1
     (nil))

(insn 145 144 146 (set (reg:SI 4 si)
        (const_int 11 [0xb])) "function.c":158 -1
     (nil))

(insn 146 145 147 (set (reg:DI 5 di)
        (reg/f:DI 119 [ stdscr.15_33 ])) "function.c":158 -1
     (nil))

(call_insn 147 146 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":158 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("Coins");

(insn 148 147 149 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f7cd0ee2ab0 *.LC13>)) "function.c":159 -1
     (nil))

(insn 149 148 150 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":159 -1
     (nil))

(call_insn 150 149 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":159 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.16_34 = stdscr;

(insn 151 150 0 (set (reg/f:DI 120 [ stdscr.16_34 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":161 -1
     (nil))

;; wmove (stdscr.16_34, 12, 35);

(insn 152 151 153 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":161 -1
     (nil))

(insn 153 152 154 (set (reg:SI 4 si)
        (const_int 12 [0xc])) "function.c":161 -1
     (nil))

(insn 154 153 155 (set (reg:DI 5 di)
        (reg/f:DI 120 [ stdscr.16_34 ])) "function.c":161 -1
     (nil))

(call_insn 155 154 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":161 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _35 = serwer_80(D)->player2;

(insn 156 155 157 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":162 -1
     (nil))

(insn 157 156 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":162 -1
     (nil))

;; _36 = _35->coins_carried;

(insn 158 157 0 (set (reg:SI 122 [ _36 ])
        (mem:SI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 32 [0x20])) [3 _35->coins_carried+0 S4 A64])) "function.c":162 -1
     (nil))

;; _37 = serwer_80(D)->player1;

(insn 159 158 160 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":162 -1
     (nil))

(insn 160 159 0 (set (reg/f:DI 123 [ _37 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":162 -1
     (nil))

;; _38 = _37->coins_carried;

(insn 161 160 0 (set (reg:SI 124 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 123 [ _37 ])
                (const_int 32 [0x20])) [3 _37->coins_carried+0 S4 A64])) "function.c":162 -1
     (nil))

;; printw ("    carried %d       %d", _38, _36);

(insn 162 161 163 (set (reg:SI 1 dx)
        (reg:SI 122 [ _36 ])) "function.c":162 -1
     (nil))

(insn 163 162 164 (set (reg:SI 4 si)
        (reg:SI 124 [ _38 ])) "function.c":162 -1
     (nil))

(insn 164 163 165 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f7cd0ee2b40 *.LC14>)) "function.c":162 -1
     (nil))

(insn 165 164 166 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":162 -1
     (nil))

(call_insn 166 165 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":162 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; stdscr.17_39 = stdscr;

(insn 167 166 0 (set (reg/f:DI 125 [ stdscr.17_39 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":164 -1
     (nil))

;; wmove (stdscr.17_39, 13, 35);

(insn 168 167 169 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":164 -1
     (nil))

(insn 169 168 170 (set (reg:SI 4 si)
        (const_int 13 [0xd])) "function.c":164 -1
     (nil))

(insn 170 169 171 (set (reg:DI 5 di)
        (reg/f:DI 125 [ stdscr.17_39 ])) "function.c":164 -1
     (nil))

(call_insn 171 170 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _40 = serwer_80(D)->player2;

(insn 172 171 173 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":165 -1
     (nil))

(insn 173 172 0 (set (reg/f:DI 126 [ _40 ])
        (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":165 -1
     (nil))

;; _41 = _40->coins_brought;

(insn 174 173 0 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (reg/f:DI 126 [ _40 ])
                (const_int 36 [0x24])) [3 _40->coins_brought+0 S4 A32])) "function.c":165 -1
     (nil))

;; _42 = serwer_80(D)->player1;

(insn 175 174 176 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":165 -1
     (nil))

(insn 176 175 0 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":165 -1
     (nil))

;; _43 = _42->coins_brought;

(insn 177 176 0 (set (reg:SI 129 [ _43 ])
        (mem:SI (plus:DI (reg/f:DI 128 [ _42 ])
                (const_int 36 [0x24])) [3 _42->coins_brought+0 S4 A32])) "function.c":165 -1
     (nil))

;; printw ("    brought %d       %d", _43, _41);

(insn 178 177 179 (set (reg:SI 1 dx)
        (reg:SI 127 [ _41 ])) "function.c":165 -1
     (nil))

(insn 179 178 180 (set (reg:SI 4 si)
        (reg:SI 129 [ _43 ])) "function.c":165 -1
     (nil))

(insn 180 179 181 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f7cd0ee2bd0 *.LC15>)) "function.c":165 -1
     (nil))

(insn 181 180 182 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":165 -1
     (nil))

(call_insn 182 181 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":165 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; stdscr.18_44 = stdscr;

(insn 183 182 0 (set (reg/f:DI 130 [ stdscr.18_44 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":167 -1
     (nil))

;; wmove (stdscr.18_44, 14, 35);

(insn 184 183 185 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":167 -1
     (nil))

(insn 185 184 186 (set (reg:SI 4 si)
        (const_int 14 [0xe])) "function.c":167 -1
     (nil))

(insn 186 185 187 (set (reg:DI 5 di)
        (reg/f:DI 130 [ stdscr.18_44 ])) "function.c":167 -1
     (nil))

(call_insn 187 186 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":167 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("LEGEND: ");

(insn 188 187 189 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7cd0ee2c60 *.LC16>)) "function.c":168 -1
     (nil))

(insn 189 188 190 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":168 -1
     (nil))

(call_insn 190 189 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":168 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.19_45 = stdscr;

(insn 191 190 0 (set (reg/f:DI 131 [ stdscr.19_45 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":170 -1
     (nil))

;; wmove (stdscr.19_45, 15, 35);

(insn 192 191 193 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":170 -1
     (nil))

(insn 193 192 194 (set (reg:SI 4 si)
        (const_int 15 [0xf])) "function.c":170 -1
     (nil))

(insn 194 193 195 (set (reg:DI 5 di)
        (reg/f:DI 131 [ stdscr.19_45 ])) "function.c":170 -1
     (nil))

(call_insn 195 194 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.20_46 = stdscr;

(insn 196 195 0 (set (reg/f:DI 132 [ stdscr.20_46 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":171 -1
     (nil))

;; wattr_on (stdscr.20_46, 1536, 0B);

(insn 197 196 198 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":171 -1
     (nil))

(insn 198 197 199 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":171 -1
     (nil))

(insn 199 198 200 (set (reg:DI 5 di)
        (reg/f:DI 132 [ stdscr.20_46 ])) "function.c":171 -1
     (nil))

(call_insn 200 199 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":171 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("1234");

(insn 201 200 202 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7cd0ee2cf0 *.LC17>)) "function.c":172 -1
     (nil))

(insn 202 201 203 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":172 -1
     (nil))

(call_insn 203 202 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":172 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.21_47 = stdscr;

(insn 204 203 0 (set (reg/f:DI 133 [ stdscr.21_47 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":173 -1
     (nil))

;; wattr_off (stdscr.21_47, 1536, 0B);

(insn 205 204 206 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":173 -1
     (nil))

(insn 206 205 207 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":173 -1
     (nil))

(insn 207 206 208 (set (reg:DI 5 di)
        (reg/f:DI 133 [ stdscr.21_47 ])) "function.c":173 -1
     (nil))

(call_insn 208 207 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":173 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - players");

(insn 209 208 210 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7cd0ee2d80 *.LC18>)) "function.c":174 -1
     (nil))

(insn 210 209 211 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":174 -1
     (nil))

(call_insn 211 210 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":174 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.22_48 = stdscr;

(insn 212 211 0 (set (reg/f:DI 134 [ stdscr.22_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":176 -1
     (nil))

;; wmove (stdscr.22_48, 16, 35);

(insn 213 212 214 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":176 -1
     (nil))

(insn 214 213 215 (set (reg:SI 4 si)
        (const_int 16 [0x10])) "function.c":176 -1
     (nil))

(insn 215 214 216 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.22_48 ])) "function.c":176 -1
     (nil))

(call_insn 216 215 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":176 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.23_49 = stdscr;

(insn 217 216 0 (set (reg/f:DI 135 [ stdscr.23_49 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":177 -1
     (nil))

;; wattr_on (stdscr.23_49, 1280, 0B);

(insn 218 217 219 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":177 -1
     (nil))

(insn 219 218 220 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":177 -1
     (nil))

(insn 220 219 221 (set (reg:DI 5 di)
        (reg/f:DI 135 [ stdscr.23_49 ])) "function.c":177 -1
     (nil))

(call_insn 221 220 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" ");

(insn 222 221 223 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":178 -1
     (nil))

(insn 223 222 224 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":178 -1
     (nil))

(call_insn 224 223 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":178 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.24_50 = stdscr;

(insn 225 224 0 (set (reg/f:DI 136 [ stdscr.24_50 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":179 -1
     (nil))

;; wattr_off (stdscr.24_50, 1280, 0B);

(insn 226 225 227 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":179 -1
     (nil))

(insn 227 226 228 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":179 -1
     (nil))

(insn 228 227 229 (set (reg:DI 5 di)
        (reg/f:DI 136 [ stdscr.24_50 ])) "function.c":179 -1
     (nil))

(call_insn 229 228 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - wall");

(insn 230 229 231 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7cd0ee2e10 *.LC19>)) "function.c":180 -1
     (nil))

(insn 231 230 232 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":180 -1
     (nil))

(call_insn 232 231 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":180 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.25_51 = stdscr;

(insn 233 232 0 (set (reg/f:DI 137 [ stdscr.25_51 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":182 -1
     (nil))

;; wmove (stdscr.25_51, 17, 35);

(insn 234 233 235 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":182 -1
     (nil))

(insn 235 234 236 (set (reg:SI 4 si)
        (const_int 17 [0x11])) "function.c":182 -1
     (nil))

(insn 236 235 237 (set (reg:DI 5 di)
        (reg/f:DI 137 [ stdscr.25_51 ])) "function.c":182 -1
     (nil))

(call_insn 237 236 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":182 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("# - bushes (slow down)");

(insn 238 237 239 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7cd0ee2ea0 *.LC20>)) "function.c":183 -1
     (nil))

(insn 239 238 240 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":183 -1
     (nil))

(call_insn 240 239 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":183 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.26_52 = stdscr;

(insn 241 240 0 (set (reg/f:DI 138 [ stdscr.26_52 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":185 -1
     (nil))

;; wmove (stdscr.26_52, 18, 35);

(insn 242 241 243 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":185 -1
     (nil))

(insn 243 242 244 (set (reg:SI 4 si)
        (const_int 18 [0x12])) "function.c":185 -1
     (nil))

(insn 244 243 245 (set (reg:DI 5 di)
        (reg/f:DI 138 [ stdscr.26_52 ])) "function.c":185 -1
     (nil))

(call_insn 245 244 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.27_53 = stdscr;

(insn 246 245 0 (set (reg/f:DI 139 [ stdscr.27_53 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":186 -1
     (nil))

;; wattr_on (stdscr.27_53, 3072, 0B);

(insn 247 246 248 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":186 -1
     (nil))

(insn 248 247 249 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":186 -1
     (nil))

(insn 249 248 250 (set (reg:DI 5 di)
        (reg/f:DI 139 [ stdscr.27_53 ])) "function.c":186 -1
     (nil))

(call_insn 250 249 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":186 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("* - enemy");

(insn 251 250 252 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7cd0ee2f30 *.LC21>)) "function.c":187 -1
     (nil))

(insn 252 251 253 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":187 -1
     (nil))

(call_insn 253 252 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":187 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.28_54 = stdscr;

(insn 254 253 0 (set (reg/f:DI 140 [ stdscr.28_54 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":188 -1
     (nil))

;; wattr_off (stdscr.28_54, 3072, 0B);

(insn 255 254 256 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":188 -1
     (nil))

(insn 256 255 257 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":188 -1
     (nil))

(insn 257 256 258 (set (reg:DI 5 di)
        (reg/f:DI 140 [ stdscr.28_54 ])) "function.c":188 -1
     (nil))

(call_insn 258 257 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":188 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; stdscr.29_55 = stdscr;

(insn 259 258 0 (set (reg/f:DI 141 [ stdscr.29_55 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":191 -1
     (nil))

;; wmove (stdscr.29_55, 19, 35);

(insn 260 259 261 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":191 -1
     (nil))

(insn 261 260 262 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":191 -1
     (nil))

(insn 262 261 263 (set (reg:DI 5 di)
        (reg/f:DI 141 [ stdscr.29_55 ])) "function.c":191 -1
     (nil))

(call_insn 263 262 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":191 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.30_56 = stdscr;

(insn 264 263 0 (set (reg/f:DI 142 [ stdscr.30_56 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":192 -1
     (nil))

;; wattr_on (stdscr.30_56, 768, 0B);

(insn 265 264 266 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":192 -1
     (nil))

(insn 266 265 267 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":192 -1
     (nil))

(insn 267 266 268 (set (reg:DI 5 di)
        (reg/f:DI 142 [ stdscr.30_56 ])) "function.c":192 -1
     (nil))

(call_insn 268 267 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("c");

(insn 269 268 270 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7cd0ef3000 *.LC22>)) "function.c":193 -1
     (nil))

(insn 270 269 271 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":193 -1
     (nil))

(call_insn 271 270 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":193 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.31_57 = stdscr;

(insn 272 271 0 (set (reg/f:DI 143 [ stdscr.31_57 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":194 -1
     (nil))

;; wattr_off (stdscr.31_57, 768, 0B);

(insn 273 272 274 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":194 -1
     (nil))

(insn 274 273 275 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":194 -1
     (nil))

(insn 275 274 276 (set (reg:DI 5 di)
        (reg/f:DI 143 [ stdscr.31_57 ])) "function.c":194 -1
     (nil))

(call_insn 276 275 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - one coin");

(insn 277 276 278 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f7cd0ef3090 *.LC23>)) "function.c":195 -1
     (nil))

(insn 278 277 279 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":195 -1
     (nil))

(call_insn 279 278 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":195 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.32_58 = stdscr;

(insn 280 279 0 (set (reg/f:DI 144 [ stdscr.32_58 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":196 -1
     (nil))

;; wattr_on (stdscr.32_58, 768, 0B);

(insn 281 280 282 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":196 -1
     (nil))

(insn 282 281 283 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":196 -1
     (nil))

(insn 283 282 284 (set (reg:DI 5 di)
        (reg/f:DI 144 [ stdscr.32_58 ])) "function.c":196 -1
     (nil))

(call_insn 284 283 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":196 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("D");

(insn 285 284 286 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7cd0ef3120 *.LC24>)) "function.c":197 -1
     (nil))

(insn 286 285 287 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":197 -1
     (nil))

(call_insn 287 286 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":197 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.33_59 = stdscr;

(insn 288 287 0 (set (reg/f:DI 145 [ stdscr.33_59 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":198 -1
     (nil))

;; wattr_off (stdscr.33_59, 768, 0B);

(insn 289 288 290 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":198 -1
     (nil))

(insn 290 289 291 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":198 -1
     (nil))

(insn 291 290 292 (set (reg:DI 5 di)
        (reg/f:DI 145 [ stdscr.33_59 ])) "function.c":198 -1
     (nil))

(call_insn 292 291 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - dropped treasures");

(insn 293 292 294 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f7cd0ef31b0 *.LC25>)) "function.c":199 -1
     (nil))

(insn 294 293 295 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":199 -1
     (nil))

(call_insn 295 294 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":199 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.34_60 = stdscr;

(insn 296 295 0 (set (reg/f:DI 146 [ stdscr.34_60 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":201 -1
     (nil))

;; wmove (stdscr.34_60, 20, 35);

(insn 297 296 298 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":201 -1
     (nil))

(insn 298 297 299 (set (reg:SI 4 si)
        (const_int 20 [0x14])) "function.c":201 -1
     (nil))

(insn 299 298 300 (set (reg:DI 5 di)
        (reg/f:DI 146 [ stdscr.34_60 ])) "function.c":201 -1
     (nil))

(call_insn 300 299 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":201 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.35_61 = stdscr;

(insn 301 300 0 (set (reg/f:DI 147 [ stdscr.35_61 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":202 -1
     (nil))

;; wattr_on (stdscr.35_61, 768, 0B);

(insn 302 301 303 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":202 -1
     (nil))

(insn 303 302 304 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":202 -1
     (nil))

(insn 304 303 305 (set (reg:DI 5 di)
        (reg/f:DI 147 [ stdscr.35_61 ])) "function.c":202 -1
     (nil))

(call_insn 305 304 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":202 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("C");

(insn 306 305 307 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f7cd0ef3240 *.LC26>)) "function.c":203 -1
     (nil))

(insn 307 306 308 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":203 -1
     (nil))

(call_insn 308 307 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":203 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.36_62 = stdscr;

(insn 309 308 0 (set (reg/f:DI 148 [ stdscr.36_62 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":204 -1
     (nil))

;; wattr_off (stdscr.36_62, 768, 0B);

(insn 310 309 311 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":204 -1
     (nil))

(insn 311 310 312 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":204 -1
     (nil))

(insn 312 311 313 (set (reg:DI 5 di)
        (reg/f:DI 148 [ stdscr.36_62 ])) "function.c":204 -1
     (nil))

(call_insn 313 312 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":204 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - treasure (10 coins)");

(insn 314 313 315 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f7cd0ef32d0 *.LC27>)) "function.c":205 -1
     (nil))

(insn 315 314 316 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":205 -1
     (nil))

(call_insn 316 315 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":205 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.37_63 = stdscr;

(insn 317 316 0 (set (reg/f:DI 149 [ stdscr.37_63 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":207 -1
     (nil))

;; wmove (stdscr.37_63, 21, 35);

(insn 318 317 319 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":207 -1
     (nil))

(insn 319 318 320 (set (reg:SI 4 si)
        (const_int 21 [0x15])) "function.c":207 -1
     (nil))

(insn 320 319 321 (set (reg:DI 5 di)
        (reg/f:DI 149 [ stdscr.37_63 ])) "function.c":207 -1
     (nil))

(call_insn 321 320 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":207 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.38_64 = stdscr;

(insn 322 321 0 (set (reg/f:DI 150 [ stdscr.38_64 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":208 -1
     (nil))

;; wattr_on (stdscr.38_64, 768, 0B);

(insn 323 322 324 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":208 -1
     (nil))

(insn 324 323 325 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":208 -1
     (nil))

(insn 325 324 326 (set (reg:DI 5 di)
        (reg/f:DI 150 [ stdscr.38_64 ])) "function.c":208 -1
     (nil))

(call_insn 326 325 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":208 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("T");

(insn 327 326 328 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7cd0ef3360 *.LC28>)) "function.c":209 -1
     (nil))

(insn 328 327 329 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":209 -1
     (nil))

(call_insn 329 328 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":209 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.39_65 = stdscr;

(insn 330 329 0 (set (reg/f:DI 151 [ stdscr.39_65 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":210 -1
     (nil))

;; wattr_off (stdscr.39_65, 768, 0B);

(insn 331 330 332 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":210 -1
     (nil))

(insn 332 331 333 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":210 -1
     (nil))

(insn 333 332 334 (set (reg:DI 5 di)
        (reg/f:DI 151 [ stdscr.39_65 ])) "function.c":210 -1
     (nil))

(call_insn 334 333 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":210 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - large treasure (50 coins)");

(insn 335 334 336 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f7cd0ef33f0 *.LC29>)) "function.c":211 -1
     (nil))

(insn 336 335 337 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":211 -1
     (nil))

(call_insn 337 336 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":211 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.40_66 = stdscr;

(insn 338 337 0 (set (reg/f:DI 152 [ stdscr.40_66 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":213 -1
     (nil))

;; wmove (stdscr.40_66, 22, 35);

(insn 339 338 340 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":213 -1
     (nil))

(insn 340 339 341 (set (reg:SI 4 si)
        (const_int 22 [0x16])) "function.c":213 -1
     (nil))

(insn 341 340 342 (set (reg:DI 5 di)
        (reg/f:DI 152 [ stdscr.40_66 ])) "function.c":213 -1
     (nil))

(call_insn 342 341 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":213 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.41_67 = stdscr;

(insn 343 342 0 (set (reg/f:DI 153 [ stdscr.41_67 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":214 -1
     (nil))

;; wattr_on (stdscr.41_67, 2816, 0B);

(insn 344 343 345 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":214 -1
     (nil))

(insn 345 344 346 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":214 -1
     (nil))

(insn 346 345 347 (set (reg:DI 5 di)
        (reg/f:DI 153 [ stdscr.41_67 ])) "function.c":214 -1
     (nil))

(call_insn 347 346 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":214 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("A");

(insn 348 347 349 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":215 -1
     (nil))

(insn 349 348 350 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":215 -1
     (nil))

(call_insn 350 349 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":215 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.42_68 = stdscr;

(insn 351 350 0 (set (reg/f:DI 154 [ stdscr.42_68 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":216 -1
     (nil))

;; wattr_off (stdscr.42_68, 2816, 0B);

(insn 352 351 353 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":216 -1
     (nil))

(insn 353 352 354 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":216 -1
     (nil))

(insn 354 353 355 (set (reg:DI 5 di)
        (reg/f:DI 154 [ stdscr.42_68 ])) "function.c":216 -1
     (nil))

(call_insn 355 354 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - campsite");

(insn 356 355 357 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f7cd0ef3510 *.LC31>)) "function.c":217 -1
     (nil))

(insn 357 356 358 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":217 -1
     (nil))

(call_insn 358 357 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":217 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 359 358 360 23 (nil) [0 uses])

(note 360 359 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 2->4 to 5 failed.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":126 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f7cd10bd300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "function.c":127 -1
     (nil)
    (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":128 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":128 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":128 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":128 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":129 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":129 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (const_int 5 [0x5])) "function.c":129 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":129 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) "function.c":130 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":130 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 5 di)
        (const_int 6 [0x6])) "function.c":130 -1
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":130 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "function.c":131 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":131 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 5 di)
        (const_int 11 [0xb])) "function.c":131 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":131 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 23 22 24 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "function.c":132 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":132 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 5 di)
        (const_int 12 [0xc])) "function.c":132 -1
     (nil))
(call_insn 26 25 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":132 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 27 26 28 2 (set (reg/f:DI 87 [ stdscr.7_1 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":134 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":134 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 4 si)
        (const_int 2 [0x2])) "function.c":134 -1
     (nil))
(insn 30 29 31 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ stdscr.7_1 ])) "function.c":134 -1
     (nil))
(call_insn 31 30 32 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":134 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(call_insn 32 31 33 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":135 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 33 32 34 2 (set (reg:SI 88 [ _2 ])
        (reg:SI 0 ax)) "function.c":135 -1
     (nil))
(insn 34 33 35 2 (set (reg:SI 4 si)
        (reg:SI 88 [ _2 ])) "function.c":135 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7cd0ee26c0 *.LC5>)) "function.c":135 -1
     (nil))
(insn 36 35 37 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":135 -1
     (nil))
(call_insn 37 36 38 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":135 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 38 37 39 2 (set (reg/f:DI 89 [ stdscr.8_3 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":137 -1
     (nil))
(insn 39 38 40 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":137 -1
     (nil))
(insn 40 39 41 2 (set (reg:SI 4 si)
        (const_int 3 [0x3])) "function.c":137 -1
     (nil))
(insn 41 40 42 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ stdscr.8_3 ])) "function.c":137 -1
     (nil))
(call_insn 42 41 43 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":137 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 43 42 44 2 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":138 -1
     (nil))
(insn 44 43 45 2 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 155)
                (const_int 8 [0x8])) [3 serwer_80(D)->y_camp+0 S4 A64])) "function.c":138 -1
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":138 -1
     (nil))
(insn 46 45 47 2 (set (reg:SI 91 [ _5 ])
        (mem:SI (plus:DI (reg/f:DI 156)
                (const_int 4 [0x4])) [3 serwer_80(D)->x_camp+0 S4 A32])) "function.c":138 -1
     (nil))
(insn 47 46 48 2 (set (reg:SI 1 dx)
        (reg:SI 90 [ _4 ])) "function.c":138 -1
     (nil))
(insn 48 47 49 2 (set (reg:SI 4 si)
        (reg:SI 91 [ _5 ])) "function.c":138 -1
     (nil))
(insn 49 48 50 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f7cd0ee2750 *.LC6>)) "function.c":138 -1
     (nil))
(insn 50 49 51 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":138 -1
     (nil))
(call_insn 51 50 52 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":138 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 52 51 53 2 (set (reg/f:DI 92 [ stdscr.9_6 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":140 -1
     (nil))
(insn 53 52 54 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":140 -1
     (nil))
(insn 54 53 55 2 (set (reg:SI 4 si)
        (const_int 4 [0x4])) "function.c":140 -1
     (nil))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (reg/f:DI 92 [ stdscr.9_6 ])) "function.c":140 -1
     (nil))
(call_insn 56 55 57 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":140 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 57 56 58 2 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":141 -1
     (nil))
(insn 58 57 59 2 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 157)
                (const_int 12 [0xc])) [3 serwer_80(D)->runda+0 S4 A32])) "function.c":141 -1
     (nil))
(insn 59 58 60 2 (set (reg:SI 4 si)
        (reg:SI 93 [ _7 ])) "function.c":141 -1
     (nil))
(insn 60 59 61 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7cd0ee27e0 *.LC7>)) "function.c":141 -1
     (nil))
(insn 61 60 62 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":141 -1
     (nil))
(call_insn 62 61 63 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":141 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 63 62 64 2 (set (reg/f:DI 94 [ stdscr.10_8 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":143 -1
     (nil))
(insn 64 63 65 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":143 -1
     (nil))
(insn 65 64 66 2 (set (reg:SI 4 si)
        (const_int 5 [0x5])) "function.c":143 -1
     (nil))
(insn 66 65 67 2 (set (reg:DI 5 di)
        (reg/f:DI 94 [ stdscr.10_8 ])) "function.c":143 -1
     (nil))
(call_insn 67 66 68 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":143 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 68 67 69 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f7cd0ee2870 *.LC8>)) "function.c":144 -1
     (nil))
(insn 69 68 70 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":144 -1
     (nil))
(call_insn 70 69 71 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":144 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 71 70 72 2 (set (reg/f:DI 95 [ stdscr.11_9 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":146 -1
     (nil))
(insn 72 71 73 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":146 -1
     (nil))
(insn 73 72 74 2 (set (reg:SI 4 si)
        (const_int 6 [0x6])) "function.c":146 -1
     (nil))
(insn 74 73 75 2 (set (reg:DI 5 di)
        (reg/f:DI 95 [ stdscr.11_9 ])) "function.c":146 -1
     (nil))
(call_insn 75 74 76 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":146 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 76 75 77 2 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":147 -1
     (nil))
(insn 77 76 78 2 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":147 -1
     (nil))
(insn 78 77 79 2 (set (reg:SI 97 [ _11 ])
        (mem:SI (reg/f:DI 96 [ _10 ]) [3 _10->PID+0 S4 A64])) "function.c":147 -1
     (nil))
(insn 79 78 80 2 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":147 -1
     (nil))
(insn 80 79 81 2 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 159)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":147 -1
     (nil))
(insn 81 80 82 2 (set (reg:SI 99 [ _13 ])
        (mem:SI (reg/f:DI 98 [ _12 ]) [3 _12->PID+0 S4 A64])) "function.c":147 -1
     (nil))
(insn 82 81 83 2 (set (reg:SI 1 dx)
        (reg:SI 97 [ _11 ])) "function.c":147 -1
     (nil))
(insn 83 82 84 2 (set (reg:SI 4 si)
        (reg:SI 99 [ _13 ])) "function.c":147 -1
     (nil))
(insn 84 83 85 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f7cd0e9c870 *.LC9>)) "function.c":147 -1
     (nil))
(insn 85 84 86 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":147 -1
     (nil))
(call_insn 86 85 87 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":147 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 87 86 88 2 (set (reg/f:DI 100 [ stdscr.12_14 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":149 -1
     (nil))
(insn 88 87 89 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":149 -1
     (nil))
(insn 89 88 90 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":149 -1
     (nil))
(insn 90 89 91 2 (set (reg:DI 5 di)
        (reg/f:DI 100 [ stdscr.12_14 ])) "function.c":149 -1
     (nil))
(call_insn 91 90 92 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":149 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 92 91 93 2 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":150 -1
     (nil))
(insn 93 92 94 2 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":150 -1
     (nil))
(insn 94 93 95 2 (parallel [
            (set (reg/f:DI 102 [ _16 ])
                (plus:DI (reg/f:DI 101 [ _15 ])
                    (const_int 41 [0x29])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":150 -1
     (nil))
(insn 95 94 96 2 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":150 -1
     (nil))
(insn 96 95 97 2 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":150 -1
     (nil))
(insn 97 96 98 2 (parallel [
            (set (reg/f:DI 104 [ _18 ])
                (plus:DI (reg/f:DI 103 [ _17 ])
                    (const_int 41 [0x29])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":150 -1
     (nil))
(insn 98 97 99 2 (set (reg:DI 1 dx)
        (reg/f:DI 102 [ _16 ])) "function.c":150 -1
     (nil))
(insn 99 98 100 2 (set (reg:DI 4 si)
        (reg/f:DI 104 [ _18 ])) "function.c":150 -1
     (nil))
(insn 100 99 101 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f7cd0ee2900 *.LC10>)) "function.c":150 -1
     (nil))
(insn 101 100 102 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":150 -1
     (nil))
(call_insn 102 101 103 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":150 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 103 102 104 2 (set (reg/f:DI 105 [ stdscr.13_19 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":152 -1
     (nil))
(insn 104 103 105 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":152 -1
     (nil))
(insn 105 104 106 2 (set (reg:SI 4 si)
        (const_int 8 [0x8])) "function.c":152 -1
     (nil))
(insn 106 105 107 2 (set (reg:DI 5 di)
        (reg/f:DI 105 [ stdscr.13_19 ])) "function.c":152 -1
     (nil))
(call_insn 107 106 108 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":152 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 108 107 109 2 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 109 108 110 2 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 110 109 111 2 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 16 [0x10])) [3 _20->y_current+0 S4 A64])) "function.c":153 -1
     (nil))
(insn 111 110 112 2 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 112 111 113 2 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 113 112 114 2 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 12 [0xc])) [3 _22->x_current+0 S4 A32])) "function.c":153 -1
     (nil))
(insn 114 113 115 2 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 115 114 116 2 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 116 115 117 2 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 16 [0x10])) [3 _24->y_current+0 S4 A64])) "function.c":153 -1
     (nil))
(insn 117 116 118 2 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 118 117 119 2 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":153 -1
     (nil))
(insn 119 118 120 2 (set (reg:SI 113 [ _27 ])
        (mem:SI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 12 [0xc])) [3 _26->x_current+0 S4 A32])) "function.c":153 -1
     (nil))
(insn 120 119 121 2 (set (reg:SI 37 r8)
        (reg:SI 107 [ _21 ])) "function.c":153 -1
     (nil))
(insn 121 120 122 2 (set (reg:SI 2 cx)
        (reg:SI 109 [ _23 ])) "function.c":153 -1
     (nil))
(insn 122 121 123 2 (set (reg:SI 1 dx)
        (reg:SI 111 [ _25 ])) "function.c":153 -1
     (nil))
(insn 123 122 124 2 (set (reg:SI 4 si)
        (reg:SI 113 [ _27 ])) "function.c":153 -1
     (nil))
(insn 124 123 125 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f7cd0ee2990 *.LC11>)) "function.c":153 -1
     (nil))
(insn 125 124 126 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":153 -1
     (nil))
(call_insn 126 125 127 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":153 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (expr_list:SI (use (reg:SI 37 r8))
                            (nil))))))))
(insn 127 126 128 2 (set (reg/f:DI 114 [ stdscr.14_28 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":155 -1
     (nil))
(insn 128 127 129 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":155 -1
     (nil))
(insn 129 128 130 2 (set (reg:SI 4 si)
        (const_int 9 [0x9])) "function.c":155 -1
     (nil))
(insn 130 129 131 2 (set (reg:DI 5 di)
        (reg/f:DI 114 [ stdscr.14_28 ])) "function.c":155 -1
     (nil))
(call_insn 131 130 132 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":155 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 132 131 133 2 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":156 -1
     (nil))
(insn 133 132 134 2 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 166)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":156 -1
     (nil))
(insn 134 133 135 2 (set (reg:SI 116 [ _30 ])
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 28 [0x1c])) [3 _29->deaths+0 S4 A32])) "function.c":156 -1
     (nil))
(insn 135 134 136 2 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":156 -1
     (nil))
(insn 136 135 137 2 (set (reg/f:DI 117 [ _31 ])
        (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":156 -1
     (nil))
(insn 137 136 138 2 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (reg/f:DI 117 [ _31 ])
                (const_int 28 [0x1c])) [3 _31->deaths+0 S4 A32])) "function.c":156 -1
     (nil))
(insn 138 137 139 2 (set (reg:SI 1 dx)
        (reg:SI 116 [ _30 ])) "function.c":156 -1
     (nil))
(insn 139 138 140 2 (set (reg:SI 4 si)
        (reg:SI 118 [ _32 ])) "function.c":156 -1
     (nil))
(insn 140 139 141 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f7cd0ee2a20 *.LC12>)) "function.c":156 -1
     (nil))
(insn 141 140 142 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":156 -1
     (nil))
(call_insn 142 141 143 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":156 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 143 142 144 2 (set (reg/f:DI 119 [ stdscr.15_33 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":158 -1
     (nil))
(insn 144 143 145 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":158 -1
     (nil))
(insn 145 144 146 2 (set (reg:SI 4 si)
        (const_int 11 [0xb])) "function.c":158 -1
     (nil))
(insn 146 145 147 2 (set (reg:DI 5 di)
        (reg/f:DI 119 [ stdscr.15_33 ])) "function.c":158 -1
     (nil))
(call_insn 147 146 148 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":158 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 148 147 149 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f7cd0ee2ab0 *.LC13>)) "function.c":159 -1
     (nil))
(insn 149 148 150 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":159 -1
     (nil))
(call_insn 150 149 151 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":159 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 151 150 152 2 (set (reg/f:DI 120 [ stdscr.16_34 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":161 -1
     (nil))
(insn 152 151 153 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":161 -1
     (nil))
(insn 153 152 154 2 (set (reg:SI 4 si)
        (const_int 12 [0xc])) "function.c":161 -1
     (nil))
(insn 154 153 155 2 (set (reg:DI 5 di)
        (reg/f:DI 120 [ stdscr.16_34 ])) "function.c":161 -1
     (nil))
(call_insn 155 154 156 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":161 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 156 155 157 2 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":162 -1
     (nil))
(insn 157 156 158 2 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":162 -1
     (nil))
(insn 158 157 159 2 (set (reg:SI 122 [ _36 ])
        (mem:SI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 32 [0x20])) [3 _35->coins_carried+0 S4 A64])) "function.c":162 -1
     (nil))
(insn 159 158 160 2 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":162 -1
     (nil))
(insn 160 159 161 2 (set (reg/f:DI 123 [ _37 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":162 -1
     (nil))
(insn 161 160 162 2 (set (reg:SI 124 [ _38 ])
        (mem:SI (plus:DI (reg/f:DI 123 [ _37 ])
                (const_int 32 [0x20])) [3 _37->coins_carried+0 S4 A64])) "function.c":162 -1
     (nil))
(insn 162 161 163 2 (set (reg:SI 1 dx)
        (reg:SI 122 [ _36 ])) "function.c":162 -1
     (nil))
(insn 163 162 164 2 (set (reg:SI 4 si)
        (reg:SI 124 [ _38 ])) "function.c":162 -1
     (nil))
(insn 164 163 165 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f7cd0ee2b40 *.LC14>)) "function.c":162 -1
     (nil))
(insn 165 164 166 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":162 -1
     (nil))
(call_insn 166 165 167 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":162 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 167 166 168 2 (set (reg/f:DI 125 [ stdscr.17_39 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":164 -1
     (nil))
(insn 168 167 169 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":164 -1
     (nil))
(insn 169 168 170 2 (set (reg:SI 4 si)
        (const_int 13 [0xd])) "function.c":164 -1
     (nil))
(insn 170 169 171 2 (set (reg:DI 5 di)
        (reg/f:DI 125 [ stdscr.17_39 ])) "function.c":164 -1
     (nil))
(call_insn 171 170 172 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":164 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 172 171 173 2 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":165 -1
     (nil))
(insn 173 172 174 2 (set (reg/f:DI 126 [ _40 ])
        (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 40 [0x28])) [14 serwer_80(D)->player2+0 S8 A64])) "function.c":165 -1
     (nil))
(insn 174 173 175 2 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (reg/f:DI 126 [ _40 ])
                (const_int 36 [0x24])) [3 _40->coins_brought+0 S4 A32])) "function.c":165 -1
     (nil))
(insn 175 174 176 2 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":165 -1
     (nil))
(insn 176 175 177 2 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 32 [0x20])) [14 serwer_80(D)->player1+0 S8 A64])) "function.c":165 -1
     (nil))
(insn 177 176 178 2 (set (reg:SI 129 [ _43 ])
        (mem:SI (plus:DI (reg/f:DI 128 [ _42 ])
                (const_int 36 [0x24])) [3 _42->coins_brought+0 S4 A32])) "function.c":165 -1
     (nil))
(insn 178 177 179 2 (set (reg:SI 1 dx)
        (reg:SI 127 [ _41 ])) "function.c":165 -1
     (nil))
(insn 179 178 180 2 (set (reg:SI 4 si)
        (reg:SI 129 [ _43 ])) "function.c":165 -1
     (nil))
(insn 180 179 181 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f7cd0ee2bd0 *.LC15>)) "function.c":165 -1
     (nil))
(insn 181 180 182 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":165 -1
     (nil))
(call_insn 182 181 183 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":165 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 183 182 184 2 (set (reg/f:DI 130 [ stdscr.18_44 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":167 -1
     (nil))
(insn 184 183 185 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":167 -1
     (nil))
(insn 185 184 186 2 (set (reg:SI 4 si)
        (const_int 14 [0xe])) "function.c":167 -1
     (nil))
(insn 186 185 187 2 (set (reg:DI 5 di)
        (reg/f:DI 130 [ stdscr.18_44 ])) "function.c":167 -1
     (nil))
(call_insn 187 186 188 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":167 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 188 187 189 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7cd0ee2c60 *.LC16>)) "function.c":168 -1
     (nil))
(insn 189 188 190 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":168 -1
     (nil))
(call_insn 190 189 191 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":168 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 191 190 192 2 (set (reg/f:DI 131 [ stdscr.19_45 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":170 -1
     (nil))
(insn 192 191 193 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":170 -1
     (nil))
(insn 193 192 194 2 (set (reg:SI 4 si)
        (const_int 15 [0xf])) "function.c":170 -1
     (nil))
(insn 194 193 195 2 (set (reg:DI 5 di)
        (reg/f:DI 131 [ stdscr.19_45 ])) "function.c":170 -1
     (nil))
(call_insn 195 194 196 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":170 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 196 195 197 2 (set (reg/f:DI 132 [ stdscr.20_46 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":171 -1
     (nil))
(insn 197 196 198 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":171 -1
     (nil))
(insn 198 197 199 2 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":171 -1
     (nil))
(insn 199 198 200 2 (set (reg:DI 5 di)
        (reg/f:DI 132 [ stdscr.20_46 ])) "function.c":171 -1
     (nil))
(call_insn 200 199 201 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":171 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 201 200 202 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7cd0ee2cf0 *.LC17>)) "function.c":172 -1
     (nil))
(insn 202 201 203 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":172 -1
     (nil))
(call_insn 203 202 204 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":172 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 204 203 205 2 (set (reg/f:DI 133 [ stdscr.21_47 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":173 -1
     (nil))
(insn 205 204 206 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":173 -1
     (nil))
(insn 206 205 207 2 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":173 -1
     (nil))
(insn 207 206 208 2 (set (reg:DI 5 di)
        (reg/f:DI 133 [ stdscr.21_47 ])) "function.c":173 -1
     (nil))
(call_insn 208 207 209 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":173 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 209 208 210 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7cd0ee2d80 *.LC18>)) "function.c":174 -1
     (nil))
(insn 210 209 211 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":174 -1
     (nil))
(call_insn 211 210 212 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":174 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 212 211 213 2 (set (reg/f:DI 134 [ stdscr.22_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":176 -1
     (nil))
(insn 213 212 214 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":176 -1
     (nil))
(insn 214 213 215 2 (set (reg:SI 4 si)
        (const_int 16 [0x10])) "function.c":176 -1
     (nil))
(insn 215 214 216 2 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.22_48 ])) "function.c":176 -1
     (nil))
(call_insn 216 215 217 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":176 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 217 216 218 2 (set (reg/f:DI 135 [ stdscr.23_49 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":177 -1
     (nil))
(insn 218 217 219 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":177 -1
     (nil))
(insn 219 218 220 2 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":177 -1
     (nil))
(insn 220 219 221 2 (set (reg:DI 5 di)
        (reg/f:DI 135 [ stdscr.23_49 ])) "function.c":177 -1
     (nil))
(call_insn 221 220 222 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":177 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 222 221 223 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":178 -1
     (nil))
(insn 223 222 224 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":178 -1
     (nil))
(call_insn 224 223 225 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":178 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 225 224 226 2 (set (reg/f:DI 136 [ stdscr.24_50 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":179 -1
     (nil))
(insn 226 225 227 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":179 -1
     (nil))
(insn 227 226 228 2 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":179 -1
     (nil))
(insn 228 227 229 2 (set (reg:DI 5 di)
        (reg/f:DI 136 [ stdscr.24_50 ])) "function.c":179 -1
     (nil))
(call_insn 229 228 230 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":179 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 230 229 231 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7cd0ee2e10 *.LC19>)) "function.c":180 -1
     (nil))
(insn 231 230 232 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":180 -1
     (nil))
(call_insn 232 231 233 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":180 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 233 232 234 2 (set (reg/f:DI 137 [ stdscr.25_51 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":182 -1
     (nil))
(insn 234 233 235 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":182 -1
     (nil))
(insn 235 234 236 2 (set (reg:SI 4 si)
        (const_int 17 [0x11])) "function.c":182 -1
     (nil))
(insn 236 235 237 2 (set (reg:DI 5 di)
        (reg/f:DI 137 [ stdscr.25_51 ])) "function.c":182 -1
     (nil))
(call_insn 237 236 238 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":182 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 238 237 239 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7cd0ee2ea0 *.LC20>)) "function.c":183 -1
     (nil))
(insn 239 238 240 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":183 -1
     (nil))
(call_insn 240 239 241 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":183 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 241 240 242 2 (set (reg/f:DI 138 [ stdscr.26_52 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":185 -1
     (nil))
(insn 242 241 243 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":185 -1
     (nil))
(insn 243 242 244 2 (set (reg:SI 4 si)
        (const_int 18 [0x12])) "function.c":185 -1
     (nil))
(insn 244 243 245 2 (set (reg:DI 5 di)
        (reg/f:DI 138 [ stdscr.26_52 ])) "function.c":185 -1
     (nil))
(call_insn 245 244 246 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":185 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 246 245 247 2 (set (reg/f:DI 139 [ stdscr.27_53 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":186 -1
     (nil))
(insn 247 246 248 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":186 -1
     (nil))
(insn 248 247 249 2 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":186 -1
     (nil))
(insn 249 248 250 2 (set (reg:DI 5 di)
        (reg/f:DI 139 [ stdscr.27_53 ])) "function.c":186 -1
     (nil))
(call_insn 250 249 251 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":186 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 251 250 252 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7cd0ee2f30 *.LC21>)) "function.c":187 -1
     (nil))
(insn 252 251 253 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":187 -1
     (nil))
(call_insn 253 252 254 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":187 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 254 253 255 2 (set (reg/f:DI 140 [ stdscr.28_54 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":188 -1
     (nil))
(insn 255 254 256 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":188 -1
     (nil))
(insn 256 255 257 2 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":188 -1
     (nil))
(insn 257 256 258 2 (set (reg:DI 5 di)
        (reg/f:DI 140 [ stdscr.28_54 ])) "function.c":188 -1
     (nil))
(call_insn 258 257 259 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":188 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 259 258 260 2 (set (reg/f:DI 141 [ stdscr.29_55 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":191 -1
     (nil))
(insn 260 259 261 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":191 -1
     (nil))
(insn 261 260 262 2 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":191 -1
     (nil))
(insn 262 261 263 2 (set (reg:DI 5 di)
        (reg/f:DI 141 [ stdscr.29_55 ])) "function.c":191 -1
     (nil))
(call_insn 263 262 264 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":191 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 264 263 265 2 (set (reg/f:DI 142 [ stdscr.30_56 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":192 -1
     (nil))
(insn 265 264 266 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":192 -1
     (nil))
(insn 266 265 267 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":192 -1
     (nil))
(insn 267 266 268 2 (set (reg:DI 5 di)
        (reg/f:DI 142 [ stdscr.30_56 ])) "function.c":192 -1
     (nil))
(call_insn 268 267 269 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":192 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 269 268 270 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7cd0ef3000 *.LC22>)) "function.c":193 -1
     (nil))
(insn 270 269 271 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":193 -1
     (nil))
(call_insn 271 270 272 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":193 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 272 271 273 2 (set (reg/f:DI 143 [ stdscr.31_57 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":194 -1
     (nil))
(insn 273 272 274 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":194 -1
     (nil))
(insn 274 273 275 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":194 -1
     (nil))
(insn 275 274 276 2 (set (reg:DI 5 di)
        (reg/f:DI 143 [ stdscr.31_57 ])) "function.c":194 -1
     (nil))
(call_insn 276 275 277 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":194 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 277 276 278 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f7cd0ef3090 *.LC23>)) "function.c":195 -1
     (nil))
(insn 278 277 279 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":195 -1
     (nil))
(call_insn 279 278 280 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":195 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 280 279 281 2 (set (reg/f:DI 144 [ stdscr.32_58 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":196 -1
     (nil))
(insn 281 280 282 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":196 -1
     (nil))
(insn 282 281 283 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":196 -1
     (nil))
(insn 283 282 284 2 (set (reg:DI 5 di)
        (reg/f:DI 144 [ stdscr.32_58 ])) "function.c":196 -1
     (nil))
(call_insn 284 283 285 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":196 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 285 284 286 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7cd0ef3120 *.LC24>)) "function.c":197 -1
     (nil))
(insn 286 285 287 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":197 -1
     (nil))
(call_insn 287 286 288 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":197 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 288 287 289 2 (set (reg/f:DI 145 [ stdscr.33_59 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":198 -1
     (nil))
(insn 289 288 290 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":198 -1
     (nil))
(insn 290 289 291 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":198 -1
     (nil))
(insn 291 290 292 2 (set (reg:DI 5 di)
        (reg/f:DI 145 [ stdscr.33_59 ])) "function.c":198 -1
     (nil))
(call_insn 292 291 293 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":198 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 293 292 294 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f7cd0ef31b0 *.LC25>)) "function.c":199 -1
     (nil))
(insn 294 293 295 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":199 -1
     (nil))
(call_insn 295 294 296 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":199 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 296 295 297 2 (set (reg/f:DI 146 [ stdscr.34_60 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":201 -1
     (nil))
(insn 297 296 298 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":201 -1
     (nil))
(insn 298 297 299 2 (set (reg:SI 4 si)
        (const_int 20 [0x14])) "function.c":201 -1
     (nil))
(insn 299 298 300 2 (set (reg:DI 5 di)
        (reg/f:DI 146 [ stdscr.34_60 ])) "function.c":201 -1
     (nil))
(call_insn 300 299 301 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":201 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 301 300 302 2 (set (reg/f:DI 147 [ stdscr.35_61 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":202 -1
     (nil))
(insn 302 301 303 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":202 -1
     (nil))
(insn 303 302 304 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":202 -1
     (nil))
(insn 304 303 305 2 (set (reg:DI 5 di)
        (reg/f:DI 147 [ stdscr.35_61 ])) "function.c":202 -1
     (nil))
(call_insn 305 304 306 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":202 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 306 305 307 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f7cd0ef3240 *.LC26>)) "function.c":203 -1
     (nil))
(insn 307 306 308 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":203 -1
     (nil))
(call_insn 308 307 309 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":203 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 309 308 310 2 (set (reg/f:DI 148 [ stdscr.36_62 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":204 -1
     (nil))
(insn 310 309 311 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":204 -1
     (nil))
(insn 311 310 312 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":204 -1
     (nil))
(insn 312 311 313 2 (set (reg:DI 5 di)
        (reg/f:DI 148 [ stdscr.36_62 ])) "function.c":204 -1
     (nil))
(call_insn 313 312 314 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":204 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 314 313 315 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f7cd0ef32d0 *.LC27>)) "function.c":205 -1
     (nil))
(insn 315 314 316 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":205 -1
     (nil))
(call_insn 316 315 317 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":205 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 317 316 318 2 (set (reg/f:DI 149 [ stdscr.37_63 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":207 -1
     (nil))
(insn 318 317 319 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":207 -1
     (nil))
(insn 319 318 320 2 (set (reg:SI 4 si)
        (const_int 21 [0x15])) "function.c":207 -1
     (nil))
(insn 320 319 321 2 (set (reg:DI 5 di)
        (reg/f:DI 149 [ stdscr.37_63 ])) "function.c":207 -1
     (nil))
(call_insn 321 320 322 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":207 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 322 321 323 2 (set (reg/f:DI 150 [ stdscr.38_64 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":208 -1
     (nil))
(insn 323 322 324 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":208 -1
     (nil))
(insn 324 323 325 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":208 -1
     (nil))
(insn 325 324 326 2 (set (reg:DI 5 di)
        (reg/f:DI 150 [ stdscr.38_64 ])) "function.c":208 -1
     (nil))
(call_insn 326 325 327 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":208 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 327 326 328 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7cd0ef3360 *.LC28>)) "function.c":209 -1
     (nil))
(insn 328 327 329 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":209 -1
     (nil))
(call_insn 329 328 330 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":209 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 330 329 331 2 (set (reg/f:DI 151 [ stdscr.39_65 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":210 -1
     (nil))
(insn 331 330 332 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":210 -1
     (nil))
(insn 332 331 333 2 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":210 -1
     (nil))
(insn 333 332 334 2 (set (reg:DI 5 di)
        (reg/f:DI 151 [ stdscr.39_65 ])) "function.c":210 -1
     (nil))
(call_insn 334 333 335 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":210 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 335 334 336 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f7cd0ef33f0 *.LC29>)) "function.c":211 -1
     (nil))
(insn 336 335 337 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":211 -1
     (nil))
(call_insn 337 336 338 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":211 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 338 337 339 2 (set (reg/f:DI 152 [ stdscr.40_66 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":213 -1
     (nil))
(insn 339 338 340 2 (set (reg:SI 1 dx)
        (const_int 35 [0x23])) "function.c":213 -1
     (nil))
(insn 340 339 341 2 (set (reg:SI 4 si)
        (const_int 22 [0x16])) "function.c":213 -1
     (nil))
(insn 341 340 342 2 (set (reg:DI 5 di)
        (reg/f:DI 152 [ stdscr.40_66 ])) "function.c":213 -1
     (nil))
(call_insn 342 341 343 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":213 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 343 342 344 2 (set (reg/f:DI 153 [ stdscr.41_67 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":214 -1
     (nil))
(insn 344 343 345 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":214 -1
     (nil))
(insn 345 344 346 2 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":214 -1
     (nil))
(insn 346 345 347 2 (set (reg:DI 5 di)
        (reg/f:DI 153 [ stdscr.41_67 ])) "function.c":214 -1
     (nil))
(call_insn 347 346 348 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":214 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 348 347 349 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":215 -1
     (nil))
(insn 349 348 350 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":215 -1
     (nil))
(call_insn 350 349 351 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":215 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 351 350 352 2 (set (reg/f:DI 154 [ stdscr.42_68 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":216 -1
     (nil))
(insn 352 351 353 2 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":216 -1
     (nil))
(insn 353 352 354 2 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":216 -1
     (nil))
(insn 354 353 355 2 (set (reg:DI 5 di)
        (reg/f:DI 154 [ stdscr.42_68 ])) "function.c":216 -1
     (nil))
(call_insn 355 354 356 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":216 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 356 355 357 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f7cd0ef3510 *.LC31>)) "function.c":217 -1
     (nil))
(insn 357 356 358 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":217 -1
     (nil))
(call_insn 358 357 363 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":217 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 363 358 0 2 (const_int 0 [0]) "function.c":222 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function bestia (bestia, funcdef_no=9, decl_uid=6221, cgraph_uid=9, symbol_order=12)

bestia (void * pom)
{
  union sem_t * sem_bestia2;
  union sem_t * sem_bestia1;
  struct serwer_info * serwer;
  int found;
  int krzak;
  int y_pom;
  int x_pom;
  void * D.6588;
  int _1;
  struct player_info * _2;
  int _3;
  int _4;
  struct player_info * _5;
  int _6;
  int _7;
  struct player_info * _8;
  int _9;
  int _10;
  struct player_info * _11;
  int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  x_pom_24 = 0;
  y_pom_25 = 0;
  krzak_26 = 0;
  found_27 = 0;
  serwer_29 = pom_28(D);
  bestia_move_random (serwer_29);
  sem_bestia1_33 = sem_open ("shm_bestia1", 64, 511, 0);
  sem_bestia2_35 = sem_open ("shm_bestia2", 64, 511, 0);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                23
  # krzak_13 = PHI <krzak_26(2), krzak_15(23)>
  # found_16 = PHI <found_27(2), found_20(23)>
  sem_wait (sem_bestia1_33);
  x_pom_37 = serwer_29->bestia.x;
  y_pom_38 = serwer_29->bestia.y;
  if (found_16 > 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 1
;;    pred:       3
  found_39 = found_16 + -1;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  # found_17 = PHI <found_16(3), found_39(4)>
  _1 = serwer_29->bestia.x;
  _2 = serwer_29->player1;
  _3 = _2->x_current;
  if (_1 == _3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 1
;;    pred:       5
  _4 = serwer_29->bestia.y;
  _5 = serwer_29->player1;
  _6 = _5->y_current;
  if (_4 == _6)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       9
;;                7

;;   basic block 7, loop depth 1
;;    pred:       5
;;                6
  _7 = serwer_29->bestia.x;
  _8 = serwer_29->player2;
  _9 = _8->x_current;
  if (_7 == _9)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       8
;;                10

;;   basic block 8, loop depth 1
;;    pred:       7
  _10 = serwer_29->bestia.y;
  _11 = serwer_29->player2;
  _12 = _11->y_current;
  if (_10 == _12)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       6
;;                8
  found_40 = 1;
  krzak_41 = 0;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       7
;;                8
;;                9
  # krzak_14 = PHI <krzak_13(7), krzak_13(8), krzak_41(9)>
  # found_18 = PHI <found_17(7), found_17(8), found_40(9)>
  if (found_18 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 23>; [INV]
;;    succ:       11
;;                23

;;   basic block 11, loop depth 1
;;    pred:       10
  if (krzak_14 == 2)
    goto <bb 17>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       12
;;                17

;;   basic block 12, loop depth 1
;;    pred:       11
  if (krzak_14 > 2)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  if (krzak_14 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       20
;;                16

;;   basic block 14, loop depth 1
;;    pred:       12
  if (krzak_14 == 3)
    goto <bb 18>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       15
;;                18

;;   basic block 15, loop depth 1
;;    pred:       14
  if (krzak_14 == 4)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       20
;;                19

;;   basic block 16, loop depth 1
;;    pred:       13
  bestia_move (serwer_29, 100);
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 17, loop depth 1
;;    pred:       11
  bestia_move (serwer_29, 97);
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 18, loop depth 1
;;    pred:       14
  bestia_move (serwer_29, 119);
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 19, loop depth 1
;;    pred:       15
  bestia_move (serwer_29, 115);
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       15
;;                16
;;                17
;;                18
;;                19
;;                13
  if (krzak_14 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 1
;;    pred:       20
  found_46 = 1;
;;    succ:       22

;;   basic block 22, loop depth 1
;;    pred:       20
;;                21
  # found_19 = PHI <found_18(20), found_46(21)>
  krzak_47 = 0;
;;    succ:       23

;;   basic block 23, loop depth 1
;;    pred:       10
;;                22
  # krzak_15 = PHI <krzak_14(10), krzak_47(22)>
  # found_20 = PHI <found_18(10), found_19(22)>
  goto <bb 3>; [INV]
;;    succ:       3

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (krzak_13 - 13 )
Partition 14 (krzak_14 - 14 )
Partition 15 (krzak_15 - 15 )
Partition 16 (found_16 - 16 )
Partition 17 (found_17 - 17 )
Partition 18 (found_18 - 18 )
Partition 19 (found_19 - 19 )
Partition 20 (found_20 - 20 )
Partition 24 (x_pom_24 - 24 )
Partition 25 (y_pom_25 - 25 )
Partition 26 (krzak_26 - 26 )
Partition 27 (found_27 - 27 )
Partition 28 (pom_28(D) - 28 )
Partition 29 (serwer_29 - 29 )
Partition 33 (sem_bestia1_33 - 33 )
Partition 35 (sem_bestia2_35 - 35 )
Partition 37 (x_pom_37 - 37 )
Partition 38 (y_pom_38 - 38 )
Partition 39 (found_39 - 39 )
Partition 40 (found_40 - 40 )
Partition 41 (krzak_41 - 41 )
Partition 46 (found_46 - 46 )
Partition 47 (krzak_47 - 47 )
Partition 48 (_48(D) - 48 )


Coalescible Partition map 

Partition 0, base 0 (krzak_13 - 13 14 15 26 41 47 )
Partition 3, base 1 (found_16 - 16 17 18 19 20 27 39 40 46 )
Partition 8, base 2 (x_pom_24 - 24 37 )
Partition 9, base 3 (y_pom_25 - 25 38 )
Partition 12, base 4 (pom_28(D) - 28 )
Partition 20, base 5 (_48(D) - 48 )


Partition map 

Partition 0 (krzak_13 - 13 )
Partition 1 (krzak_14 - 14 )
Partition 2 (krzak_15 - 15 )
Partition 3 (found_16 - 16 )
Partition 4 (found_17 - 17 )
Partition 5 (found_18 - 18 )
Partition 6 (found_19 - 19 )
Partition 7 (found_20 - 20 )
Partition 8 (x_pom_24 - 24 )
Partition 9 (y_pom_25 - 25 )
Partition 10 (krzak_26 - 26 )
Partition 11 (found_27 - 27 )
Partition 12 (pom_28(D) - 28 )
Partition 13 (x_pom_37 - 37 )
Partition 14 (y_pom_38 - 38 )
Partition 15 (found_39 - 39 )
Partition 16 (found_40 - 40 )
Partition 17 (krzak_41 - 41 )
Partition 18 (found_46 - 46 )
Partition 19 (krzak_47 - 47 )
Partition 20 (_48(D) - 48 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) krzak_13 <-> krzak_26
(2147483646, 0) krzak_13 <-> krzak_15
(2147483646, 0) found_16 <-> found_27
(2147483646, 0) found_16 <-> found_20
(2147483646, 0) found_16 <-> found_17
(2147483646, 0) krzak_13 <-> krzak_14
(2147483646, 0) found_16 <-> found_18
(2147483646, 0) found_16 <-> found_19
(2147483646, 0) x_pom_24 <-> x_pom_37
(2147483646, 0) y_pom_25 <-> y_pom_38
(2147483646, 0) found_16 <-> found_39
(2147483646, 0) found_16 <-> found_40
(2147483646, 0) krzak_13 <-> krzak_41
(2147483646, 0) found_16 <-> found_46
(2147483646, 0) krzak_13 <-> krzak_47
(40000, 0) found_17 <-> found_18
(20000, 0) found_18 <-> found_19
(20000, 0) krzak_14 <-> krzak_15
(20000, 0) found_18 <-> found_20
(10000, 0) found_17 <-> found_39
(10000, 0) krzak_14 <-> krzak_41
(10000, 0) found_18 <-> found_40
(10000, 0) found_19 <-> found_46
(10000, 0) krzak_15 <-> krzak_47
(10000, 0) found_19 <-> found_20

Partition map 

Partition 0 (krzak_13 - 13 )
Partition 1 (krzak_14 - 14 )
Partition 2 (krzak_15 - 15 )
Partition 3 (found_16 - 16 )
Partition 4 (found_17 - 17 )
Partition 5 (found_18 - 18 )
Partition 6 (found_19 - 19 )
Partition 7 (found_20 - 20 )
Partition 8 (x_pom_24 - 24 )
Partition 9 (y_pom_25 - 25 )
Partition 10 (krzak_26 - 26 )
Partition 11 (found_27 - 27 )
Partition 12 (pom_28(D) - 28 )
Partition 13 (x_pom_37 - 37 )
Partition 14 (y_pom_38 - 38 )
Partition 15 (found_39 - 39 )
Partition 16 (found_40 - 40 )
Partition 17 (krzak_41 - 41 )
Partition 18 (found_46 - 46 )
Partition 19 (krzak_47 - 47 )
Partition 20 (_48(D) - 48 )

Coalesce list: (13)krzak_13 & (26)krzak_26 [map: 0, 10] : Success -> 0
Coalesce list: (13)krzak_13 & (15)krzak_15 [map: 0, 2] : Success -> 0
Coalesce list: (16)found_16 & (27)found_27 [map: 3, 11] : Success -> 3
Coalesce list: (16)found_16 & (20)found_20 [map: 3, 7] : Success -> 3
Coalesce list: (16)found_16 & (17)found_17 [map: 3, 4] : Success -> 3
Coalesce list: (13)krzak_13 & (14)krzak_14 [map: 0, 1] : Success -> 0
Coalesce list: (16)found_16 & (18)found_18 [map: 3, 5] : Success -> 3
Coalesce list: (16)found_16 & (19)found_19 [map: 3, 6] : Success -> 3
Coalesce list: (24)x_pom_24 & (37)x_pom_37 [map: 8, 13] : Success -> 8
Coalesce list: (25)y_pom_25 & (38)y_pom_38 [map: 9, 14] : Success -> 9
Coalesce list: (16)found_16 & (39)found_39 [map: 3, 15] : Success -> 3
Coalesce list: (16)found_16 & (40)found_40 [map: 3, 16] : Success -> 3
Coalesce list: (13)krzak_13 & (41)krzak_41 [map: 0, 17] : Success -> 0
Coalesce list: (16)found_16 & (46)found_46 [map: 3, 18] : Success -> 3
Coalesce list: (13)krzak_13 & (47)krzak_47 [map: 0, 19] : Success -> 0
Coalesce list: (17)found_16 & (18)found_16: Already Coalesced.
Coalesce list: (18)found_16 & (19)found_16: Already Coalesced.
Coalesce list: (14)krzak_13 & (15)krzak_13: Already Coalesced.
Coalesce list: (18)found_16 & (20)found_16: Already Coalesced.
Coalesce list: (17)found_16 & (39)found_16: Already Coalesced.
Coalesce list: (14)krzak_13 & (41)krzak_13: Already Coalesced.
Coalesce list: (18)found_16 & (40)found_16: Already Coalesced.
Coalesce list: (19)found_16 & (46)found_16: Already Coalesced.
Coalesce list: (15)krzak_13 & (47)krzak_13: Already Coalesced.
Coalesce list: (19)found_16 & (20)found_16: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (krzak_13 - 13 14 15 26 41 47 )
Partition 13 (found_16 - 16 17 18 19 20 27 39 40 46 )
Partition 14 (x_pom_24 - 24 37 )
Partition 15 (y_pom_25 - 25 38 )
Partition 16 (pom_28(D) - 28 )
Partition 17 (serwer_29 - 29 )
Partition 18 (sem_bestia1_33 - 33 )
Partition 19 (sem_bestia2_35 - 35 )
Partition 20 (_48(D) - 48 )

bestia (void * pom)
{
  union sem_t * sem_bestia2;
  union sem_t * sem_bestia1;
  struct serwer_info * serwer;
  int found;
  int krzak;
  int y_pom;
  int x_pom;
  void * D.6588;
  int _1;
  struct player_info * _2;
  int _3;
  int _4;
  struct player_info * _5;
  int _6;
  int _7;
  struct player_info * _8;
  int _9;
  int _10;
  struct player_info * _11;
  int _12;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  x_pom_24 = 0;
  y_pom_25 = 0;
  krzak_26 = 0;
  found_27 = 0;
  serwer_29 = pom_28(D);
  bestia_move_random (serwer_29);
  sem_bestia1_33 = sem_open ("shm_bestia1", 64, 511, 0);
  sem_bestia2_35 = sem_open ("shm_bestia2", 64, 511, 0);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                23
  # krzak_13 = PHI <krzak_26(2), krzak_15(23)>
  # found_16 = PHI <found_27(2), found_20(23)>
  sem_wait (sem_bestia1_33);
  x_pom_37 = serwer_29->bestia.x;
  y_pom_38 = serwer_29->bestia.y;
  if (found_16 > 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 1
;;    pred:       3
  found_39 = found_16 + -1;
;;    succ:       5

;;   basic block 5, loop depth 1
;;    pred:       3
;;                4
  # found_17 = PHI <found_16(3), found_39(4)>
  _1 = serwer_29->bestia.x;
  _2 = serwer_29->player1;
  _3 = _2->x_current;
  if (_1 == _3)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 1
;;    pred:       5
  _4 = serwer_29->bestia.y;
  _5 = serwer_29->player1;
  _6 = _5->y_current;
  if (_4 == _6)
    goto <bb 9>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       9
;;                7

;;   basic block 7, loop depth 1
;;    pred:       5
;;                6
  _7 = serwer_29->bestia.x;
  _8 = serwer_29->player2;
  _9 = _8->x_current;
  if (_7 == _9)
    goto <bb 8>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       8
;;                10

;;   basic block 8, loop depth 1
;;    pred:       7
  _10 = serwer_29->bestia.y;
  _11 = serwer_29->player2;
  _12 = _11->y_current;
  if (_10 == _12)
    goto <bb 9>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       9
;;                10

;;   basic block 9, loop depth 1
;;    pred:       6
;;                8
  found_40 = 1;
  krzak_41 = 0;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       7
;;                8
;;                9
  # krzak_14 = PHI <krzak_13(7), krzak_13(8), krzak_41(9)>
  # found_18 = PHI <found_17(7), found_17(8), found_40(9)>
  if (found_18 == 0)
    goto <bb 11>; [INV]
  else
    goto <bb 23>; [INV]
;;    succ:       11
;;                23

;;   basic block 11, loop depth 1
;;    pred:       10
  if (krzak_14 == 2)
    goto <bb 17>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       12
;;                17

;;   basic block 12, loop depth 1
;;    pred:       11
  if (krzak_14 > 2)
    goto <bb 14>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 1
;;    pred:       12
  if (krzak_14 == 1)
    goto <bb 16>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       20
;;                16

;;   basic block 14, loop depth 1
;;    pred:       12
  if (krzak_14 == 3)
    goto <bb 18>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       15
;;                18

;;   basic block 15, loop depth 1
;;    pred:       14
  if (krzak_14 == 4)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       20
;;                19

;;   basic block 16, loop depth 1
;;    pred:       13
  bestia_move (serwer_29, 100);
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 17, loop depth 1
;;    pred:       11
  bestia_move (serwer_29, 97);
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 18, loop depth 1
;;    pred:       14
  bestia_move (serwer_29, 119);
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 19, loop depth 1
;;    pred:       15
  bestia_move (serwer_29, 115);
;;    succ:       20

;;   basic block 20, loop depth 1
;;    pred:       15
;;                16
;;                17
;;                18
;;                19
;;                13
  if (krzak_14 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 22>; [INV]
;;    succ:       21
;;                22

;;   basic block 21, loop depth 1
;;    pred:       20
  found_46 = 1;
;;    succ:       22

;;   basic block 22, loop depth 1
;;    pred:       20
;;                21
  # found_19 = PHI <found_18(20), found_46(21)>
  krzak_47 = 0;
;;    succ:       23

;;   basic block 23, loop depth 1
;;    pred:       10
;;                22
  # krzak_15 = PHI <krzak_14(10), krzak_47(22)>
  # found_20 = PHI <found_18(10), found_19(22)>
  goto <bb 3>; [INV]
;;    succ:       3

}



;; Generating RTL for gimple basic block 2

;; x_pom_24 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":229 -1
     (nil))

;; y_pom_25 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":230 -1
     (nil))

;; krzak_26 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
        (const_int 0 [0])) "function.c":231 -1
     (nil))

;; found_27 = 0;

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
        (const_int 0 [0])) "function.c":232 -1
     (nil))

;; serwer_29 = pom_28(D);

(insn 10 9 11 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [19 pom+0 S8 A64])) "function.c":234 -1
     (nil))

(insn 11 10 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg/f:DI 100)) "function.c":234 -1
     (nil))

;; bestia_move_random (serwer_29);

(insn 12 11 13 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":235 -1
     (nil))

(insn 13 12 14 (set (reg:DI 5 di)
        (reg:DI 101)) "function.c":235 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("bestia_move_random") [flags 0x3]  <function_decl 0x7f7cd1178400 bestia_move_random>) [0 bestia_move_random S1 A8])
        (const_int 0 [0])) "function.c":235 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; sem_bestia1_33 = sem_open ("shm_bestia1", 64, 511, 0);

(insn 15 14 16 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":236 -1
     (nil))

(insn 16 15 17 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":236 -1
     (nil))

(insn 17 16 18 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":236 -1
     (nil))

(insn 18 17 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7cd0ef3870 *.LC32>)) "function.c":236 -1
     (nil))

(insn 19 18 20 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":236 -1
     (nil))

(call_insn 20 19 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 21 20 22 (set (reg:DI 102)
        (reg:DI 0 ax)) "function.c":236 -1
     (nil))

(insn 22 21 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [18 sem_bestia1+0 S8 A64])
        (reg:DI 102)) "function.c":236 -1
     (nil))

;; sem_bestia2_35 = sem_open ("shm_bestia2", 64, 511, 0);

(insn 23 22 24 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":237 -1
     (nil))

(insn 24 23 25 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":237 -1
     (nil))

(insn 25 24 26 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":237 -1
     (nil))

(insn 26 25 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7cd0ef3900 *.LC33>)) "function.c":237 -1
     (nil))

(insn 27 26 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":237 -1
     (nil))

(call_insn 28 27 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 29 28 30 (set (reg:DI 103)
        (reg:DI 0 ax)) "function.c":237 -1
     (nil))

(insn 30 29 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_bestia2+0 S8 A64])
        (reg:DI 103)) "function.c":237 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; sem_wait (sem_bestia1_33);

(insn 32 31 33 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [18 sem_bestia1+0 S8 A64])) "function.c":241 -1
     (nil))

(insn 33 32 34 (set (reg:DI 5 di)
        (reg:DI 104)) "function.c":241 -1
     (nil))

(call_insn 34 33 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":241 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; x_pom_37 = serwer_29->bestia.x;

(insn 35 34 36 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":242 -1
     (nil))

(insn 36 35 37 (set (reg:SI 106)
        (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 36064 [0x8ce0])) [3 serwer_29->bestia.x+0 S4 A64])) "function.c":242 -1
     (nil))

(insn 37 36 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_pom+0 S4 A32])
        (reg:SI 106)) "function.c":242 -1
     (nil))

;; y_pom_38 = serwer_29->bestia.y;

(insn 38 37 39 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":243 -1
     (nil))

(insn 39 38 40 (set (reg:SI 108)
        (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 36068 [0x8ce4])) [3 serwer_29->bestia.y+0 S4 A32])) "function.c":243 -1
     (nil))

(insn 40 39 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y_pom+0 S4 A32])
        (reg:SI 108)) "function.c":243 -1
     (nil))

;; if (found_16 > 0)

(insn 41 40 42 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
            (const_int 0 [0]))) "function.c":245 -1
     (nil))

(jump_insn 42 41 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":245 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; found_39 = found_16 + -1;

(insn 44 43 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":247 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 45 44 46 25 (nil) [0 uses])

(note 46 45 0 NOTE_INSN_BASIC_BLOCK)

;; _1 = serwer_29->bestia.x;

(insn 47 46 48 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 48 47 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 36064 [0x8ce0])) [3 serwer_29->bestia.x+0 S4 A64])) "function.c":250 -1
     (nil))

;; _2 = serwer_29->player1;

(insn 49 48 50 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 50 49 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 110)
                (const_int 32 [0x20])) [14 serwer_29->player1+0 S8 A64])) "function.c":250 -1
     (nil))

;; _3 = _2->x_current;

(insn 51 50 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":250 -1
     (nil))

;; if (_1 == _3)

(insn 52 51 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (reg:SI 89 [ _3 ]))) "function.c":250 -1
     (nil))

(jump_insn 53 52 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":250 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _4 = serwer_29->bestia.y;

(insn 55 54 56 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 56 55 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 111)
                (const_int 36068 [0x8ce4])) [3 serwer_29->bestia.y+0 S4 A32])) "function.c":250 -1
     (nil))

;; _5 = serwer_29->player1;

(insn 57 56 58 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 58 57 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 112)
                (const_int 32 [0x20])) [14 serwer_29->player1+0 S8 A64])) "function.c":250 -1
     (nil))

;; _6 = _5->y_current;

(insn 59 58 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":250 -1
     (nil))

;; if (_4 == _6)

(insn 60 59 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (reg:SI 92 [ _6 ]))) "function.c":250 -1
     (nil))

(jump_insn 61 60 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":250 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 62 61 63 26 (nil) [0 uses])

(note 63 62 0 NOTE_INSN_BASIC_BLOCK)

;; _7 = serwer_29->bestia.x;

(insn 64 63 65 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 65 64 0 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 113)
                (const_int 36064 [0x8ce0])) [3 serwer_29->bestia.x+0 S4 A64])) "function.c":250 -1
     (nil))

;; _8 = serwer_29->player2;

(insn 66 65 67 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 67 66 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 114)
                (const_int 40 [0x28])) [14 serwer_29->player2+0 S8 A64])) "function.c":250 -1
     (nil))

;; _9 = _8->x_current;

(insn 68 67 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 12 [0xc])) [3 _8->x_current+0 S4 A32])) "function.c":250 -1
     (nil))

;; if (_7 == _9)

(insn 69 68 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (reg:SI 95 [ _9 ]))) "function.c":250 -1
     (nil))

(jump_insn 70 69 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":250 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _10 = serwer_29->bestia.y;

(insn 72 71 73 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 73 72 0 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg/f:DI 115)
                (const_int 36068 [0x8ce4])) [3 serwer_29->bestia.y+0 S4 A32])) "function.c":250 -1
     (nil))

;; _11 = serwer_29->player2;

(insn 74 73 75 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))

(insn 75 74 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 116)
                (const_int 40 [0x28])) [14 serwer_29->player2+0 S8 A64])) "function.c":250 -1
     (nil))

;; _12 = _11->y_current;

(insn 76 75 0 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 16 [0x10])) [3 _11->y_current+0 S4 A64])) "function.c":250 -1
     (nil))

;; if (_10 == _12)

(insn 77 76 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (reg:SI 98 [ _12 ]))) "function.c":250 -1
     (nil))

(jump_insn 78 77 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":250 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 79 78 80 27 (nil) [0 uses])

(note 80 79 0 NOTE_INSN_BASIC_BLOCK)

;; found_40 = 1;

(insn 81 80 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
        (const_int 1 [0x1])) "function.c":252 -1
     (nil))

;; krzak_41 = 0;

(insn 82 81 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
        (const_int 0 [0])) "function.c":253 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 83 82 84 28 (nil) [0 uses])

(note 84 83 0 NOTE_INSN_BASIC_BLOCK)

;; if (found_18 == 0)

(insn 85 84 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
            (const_int 0 [0]))) "function.c":261 -1
     (nil))

(jump_insn 86 85 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":261 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; if (krzak_14 == 2)

(insn 88 87 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 2 [0x2]))) "function.c":263 -1
     (nil))

(jump_insn 89 88 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":263 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; if (krzak_14 > 2)

(insn 91 90 92 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 2 [0x2]))) "function.c":263 -1
     (nil))

(jump_insn 92 91 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":263 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; if (krzak_14 == 1)

(insn 94 93 95 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 1 [0x1]))) "function.c":263 -1
     (nil))

(jump_insn 95 94 98 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":263 -1
     (nil))

(note 98 95 96 25 [bb 25] NOTE_INSN_BASIC_BLOCK)

(jump_insn 96 98 97 25 (set (pc)
        (label_ref 0)) "function.c":263 -1
     (nil))

(barrier 97 96 0)

;; Generating RTL for gimple basic block 14

;; 

(code_label 99 97 100 31 (nil) [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; if (krzak_14 == 3)

(insn 101 100 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 3 [0x3]))) "function.c":263 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":263 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; if (krzak_14 == 4)

(insn 104 103 105 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":263 -1
     (nil))

(jump_insn 105 104 108 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":263 -1
     (nil))

(note 108 105 106 26 [bb 26] NOTE_INSN_BASIC_BLOCK)

(jump_insn 106 108 107 26 (set (pc)
        (label_ref 0)) "function.c":263 -1
     (nil))

(barrier 107 106 0)

;; Generating RTL for gimple basic block 16

;; 

(code_label 109 107 110 32 (nil) [0 uses])

(note 110 109 0 NOTE_INSN_BASIC_BLOCK)

;; bestia_move (serwer_29, 100);

(insn 111 110 112 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":266 -1
     (nil))

(insn 112 111 113 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "function.c":266 -1
     (nil))

(insn 113 112 114 (set (reg:DI 5 di)
        (reg:DI 117)) "function.c":266 -1
     (nil))

(call_insn 114 113 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":266 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 17

;; 

(code_label 117 116 118 30 (nil) [0 uses])

(note 118 117 0 NOTE_INSN_BASIC_BLOCK)

;; bestia_move (serwer_29, 97);

(insn 119 118 120 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":269 -1
     (nil))

(insn 120 119 121 (set (reg:SI 4 si)
        (const_int 97 [0x61])) "function.c":269 -1
     (nil))

(insn 121 120 122 (set (reg:DI 5 di)
        (reg:DI 118)) "function.c":269 -1
     (nil))

(call_insn 122 121 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":269 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 18

;; 

(code_label 125 124 126 34 (nil) [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; bestia_move (serwer_29, 119);

(insn 127 126 128 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":272 -1
     (nil))

(insn 128 127 129 (set (reg:SI 4 si)
        (const_int 119 [0x77])) "function.c":272 -1
     (nil))

(insn 129 128 130 (set (reg:DI 5 di)
        (reg:DI 119)) "function.c":272 -1
     (nil))

(call_insn 130 129 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":272 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 19

;; 

(code_label 133 132 134 35 (nil) [0 uses])

(note 134 133 0 NOTE_INSN_BASIC_BLOCK)

;; bestia_move (serwer_29, 115);

(insn 135 134 136 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":275 -1
     (nil))

(insn 136 135 137 (set (reg:SI 4 si)
        (const_int 115 [0x73])) "function.c":275 -1
     (nil))

(insn 137 136 138 (set (reg:DI 5 di)
        (reg:DI 120)) "function.c":275 -1
     (nil))

(call_insn 138 137 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":275 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 20

;; 

(code_label 139 138 140 33 (nil) [0 uses])

(note 140 139 0 NOTE_INSN_BASIC_BLOCK)

;; if (krzak_14 != 0)

(insn 141 140 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 0 [0]))) "function.c":278 -1
     (nil))

(jump_insn 142 141 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":278 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; found_46 = 1;

(insn 144 143 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
        (const_int 1 [0x1])) "function.c":280 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 145 144 146 36 (nil) [0 uses])

(note 146 145 0 NOTE_INSN_BASIC_BLOCK)

;; krzak_47 = 0;

(insn 147 146 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
        (const_int 0 [0])) "function.c":282 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 148 147 149 29 (nil) [0 uses])

(note 149 148 0 NOTE_INSN_BASIC_BLOCK)
deleting block 27


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 14->15 to 23 failed.
Forwarding edge 17->18 to 23 failed.


try_optimize_cfg iteration 2

Forwarding edge 14->15 to 23 failed.
Forwarding edge 17->18 to 23 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [19 pom+0 S8 A64])
        (reg:DI 5 di [ pom ])) "function.c":228 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":229 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":230 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
        (const_int 0 [0])) "function.c":231 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
        (const_int 0 [0])) "function.c":232 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 100)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [19 pom+0 S8 A64])) "function.c":234 -1
     (nil))
(insn 11 10 12 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg/f:DI 100)) "function.c":234 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":235 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg:DI 101)) "function.c":235 -1
     (nil))
(call_insn 14 13 15 2 (call (mem:QI (symbol_ref:DI ("bestia_move_random") [flags 0x3]  <function_decl 0x7f7cd1178400 bestia_move_random>) [0 bestia_move_random S1 A8])
        (const_int 0 [0])) "function.c":235 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":236 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":236 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":236 -1
     (nil))
(insn 18 17 19 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7cd0ef3870 *.LC32>)) "function.c":236 -1
     (nil))
(insn 19 18 20 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":236 -1
     (nil))
(call_insn 20 19 21 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":236 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 21 20 22 2 (set (reg:DI 102)
        (reg:DI 0 ax)) "function.c":236 -1
     (nil))
(insn 22 21 23 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [18 sem_bestia1+0 S8 A64])
        (reg:DI 102)) "function.c":236 -1
     (nil))
(insn 23 22 24 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":237 -1
     (nil))
(insn 24 23 25 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":237 -1
     (nil))
(insn 25 24 26 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":237 -1
     (nil))
(insn 26 25 27 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7cd0ef3900 *.LC33>)) "function.c":237 -1
     (nil))
(insn 27 26 28 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":237 -1
     (nil))
(call_insn 28 27 29 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":237 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 29 28 30 2 (set (reg:DI 103)
        (reg:DI 0 ax)) "function.c":237 -1
     (nil))
(insn 30 29 150 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_bestia2+0 S8 A64])
        (reg:DI 103)) "function.c":237 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              26 (DFS_BACK)
(code_label 150 30 31 4 37 (nil) [1 uses])
(note 31 150 32 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 4 (set (reg:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [18 sem_bestia1+0 S8 A64])) "function.c":241 -1
     (nil))
(insn 33 32 34 4 (set (reg:DI 5 di)
        (reg:DI 104)) "function.c":241 -1
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":241 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 35 34 36 4 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":242 -1
     (nil))
(insn 36 35 37 4 (set (reg:SI 106)
        (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 36064 [0x8ce0])) [3 serwer_29->bestia.x+0 S4 A64])) "function.c":242 -1
     (nil))
(insn 37 36 38 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_pom+0 S4 A32])
        (reg:SI 106)) "function.c":242 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":243 -1
     (nil))
(insn 39 38 40 4 (set (reg:SI 108)
        (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 36068 [0x8ce4])) [3 serwer_29->bestia.y+0 S4 A32])) "function.c":243 -1
     (nil))
(insn 40 39 41 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y_pom+0 S4 A32])
        (reg:SI 108)) "function.c":243 -1
     (nil))
(insn 41 40 42 4 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
            (const_int 0 [0]))) "function.c":245 -1
     (nil))
(jump_insn 42 41 43 4 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 45)
            (pc))) "function.c":245 -1
     (nil)
 -> 45)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 43 42 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":247 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 45 44 46 6 25 (nil) [1 uses])
(note 46 45 47 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 6 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 48 47 49 6 (set (reg:SI 87 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 36064 [0x8ce0])) [3 serwer_29->bestia.x+0 S4 A64])) "function.c":250 -1
     (nil))
(insn 49 48 50 6 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 110)
                (const_int 32 [0x20])) [14 serwer_29->player1+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 51 50 52 6 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":250 -1
     (nil))
(insn 52 51 53 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (reg:SI 89 [ _3 ]))) "function.c":250 -1
     (nil))
(jump_insn 53 52 54 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 62)
            (pc))) "function.c":250 -1
     (nil)
 -> 62)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 54 53 55 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 7 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 56 55 57 7 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 111)
                (const_int 36068 [0x8ce4])) [3 serwer_29->bestia.y+0 S4 A32])) "function.c":250 -1
     (nil))
(insn 57 56 58 7 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 58 57 59 7 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 112)
                (const_int 32 [0x20])) [14 serwer_29->player1+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 59 58 60 7 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":250 -1
     (nil))
(insn 60 59 61 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (reg:SI 92 [ _6 ]))) "function.c":250 -1
     (nil))
(jump_insn 61 60 62 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 79)
            (pc))) "function.c":250 -1
     (nil)
 -> 79)
;;  succ:       10
;;              8 (FALLTHRU)

;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 62 61 63 8 26 (nil) [1 uses])
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 65 8 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 65 64 66 8 (set (reg:SI 93 [ _7 ])
        (mem:SI (plus:DI (reg/f:DI 113)
                (const_int 36064 [0x8ce0])) [3 serwer_29->bestia.x+0 S4 A64])) "function.c":250 -1
     (nil))
(insn 66 65 67 8 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 67 66 68 8 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 114)
                (const_int 40 [0x28])) [14 serwer_29->player2+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 68 67 69 8 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 12 [0xc])) [3 _8->x_current+0 S4 A32])) "function.c":250 -1
     (nil))
(insn 69 68 70 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 93 [ _7 ])
            (reg:SI 95 [ _9 ]))) "function.c":250 -1
     (nil))
(jump_insn 70 69 71 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "function.c":250 -1
     (nil)
 -> 83)
;;  succ:       9 (FALLTHRU)
;;              11

;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 73 72 74 9 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg/f:DI 115)
                (const_int 36068 [0x8ce4])) [3 serwer_29->bestia.y+0 S4 A32])) "function.c":250 -1
     (nil))
(insn 74 73 75 9 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 75 74 76 9 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 116)
                (const_int 40 [0x28])) [14 serwer_29->player2+0 S8 A64])) "function.c":250 -1
     (nil))
(insn 76 75 77 9 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 16 [0x10])) [3 _11->y_current+0 S4 A64])) "function.c":250 -1
     (nil))
(insn 77 76 78 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (reg:SI 98 [ _12 ]))) "function.c":250 -1
     (nil))
(jump_insn 78 77 79 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 83)
            (pc))) "function.c":250 -1
     (nil)
 -> 83)
;;  succ:       10 (FALLTHRU)
;;              11

;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              9 (FALLTHRU)
(code_label 79 78 80 10 27 (nil) [1 uses])
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
        (const_int 1 [0x1])) "function.c":252 -1
     (nil))
(insn 82 81 83 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
        (const_int 0 [0])) "function.c":253 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9
;;              10 (FALLTHRU)
(code_label 83 82 84 11 28 (nil) [2 uses])
(note 84 83 85 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
            (const_int 0 [0]))) "function.c":261 -1
     (nil))
(jump_insn 86 85 87 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 148)
            (pc))) "function.c":261 -1
     (nil)
 -> 148)
;;  succ:       12 (FALLTHRU)
;;              26

;; basic block 12, loop depth 1, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 87 86 88 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 2 [0x2]))) "function.c":263 -1
     (nil))
(jump_insn 89 88 90 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 117)
            (pc))) "function.c":263 -1
     (nil)
 -> 117)
;;  succ:       13 (FALLTHRU)
;;              20

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 90 89 91 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 2 [0x2]))) "function.c":263 -1
     (nil))
(jump_insn 92 91 93 13 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 99)
            (pc))) "function.c":263 -1
     (nil)
 -> 99)
;;  succ:       14 (FALLTHRU)
;;              16

;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 93 92 94 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 94 93 95 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 1 [0x1]))) "function.c":263 -1
     (nil))
(jump_insn 95 94 98 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 109)
            (pc))) "function.c":263 -1
     (nil)
 -> 109)
;;  succ:       15 (FALLTHRU)
;;              19

;; basic block 15, loop depth 1, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 98 95 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 96 98 97 15 (set (pc)
        (label_ref 139)) "function.c":263 -1
     (nil)
 -> 139)
;;  succ:       23 [always] 

(barrier 97 96 99)
;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 99 97 100 16 31 (nil) [1 uses])
(note 100 99 101 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 101 100 102 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 3 [0x3]))) "function.c":263 -1
     (nil))
(jump_insn 102 101 103 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 125)
            (pc))) "function.c":263 -1
     (nil)
 -> 125)
;;  succ:       17 (FALLTHRU)
;;              21

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 103 102 104 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":263 -1
     (nil))
(jump_insn 105 104 108 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 133)
            (pc))) "function.c":263 -1
     (nil)
 -> 133)
;;  succ:       18 (FALLTHRU)
;;              22

;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 108 105 106 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(jump_insn 106 108 107 18 (set (pc)
        (label_ref 139)) "function.c":263 -1
     (nil)
 -> 139)
;;  succ:       23 [always] 

(barrier 107 106 109)
;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 109 107 110 19 32 (nil) [1 uses])
(note 110 109 111 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 19 (set (reg:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":266 -1
     (nil))
(insn 112 111 113 19 (set (reg:SI 4 si)
        (const_int 100 [0x64])) "function.c":266 -1
     (nil))
(insn 113 112 114 19 (set (reg:DI 5 di)
        (reg:DI 117)) "function.c":266 -1
     (nil))
(call_insn 114 113 115 19 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":266 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 115 114 116 19 (set (pc)
        (label_ref 139)) "function.c":267 -1
     (nil)
 -> 139)
;;  succ:       23

(barrier 116 115 117)
;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 117 116 118 20 30 (nil) [1 uses])
(note 118 117 119 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 20 (set (reg:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":269 -1
     (nil))
(insn 120 119 121 20 (set (reg:SI 4 si)
        (const_int 97 [0x61])) "function.c":269 -1
     (nil))
(insn 121 120 122 20 (set (reg:DI 5 di)
        (reg:DI 118)) "function.c":269 -1
     (nil))
(call_insn 122 121 123 20 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":269 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 123 122 124 20 (set (pc)
        (label_ref 139)) "function.c":270 -1
     (nil)
 -> 139)
;;  succ:       23

(barrier 124 123 125)
;; basic block 21, loop depth 1, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 125 124 126 21 34 (nil) [1 uses])
(note 126 125 127 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 21 (set (reg:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":272 -1
     (nil))
(insn 128 127 129 21 (set (reg:SI 4 si)
        (const_int 119 [0x77])) "function.c":272 -1
     (nil))
(insn 129 128 130 21 (set (reg:DI 5 di)
        (reg:DI 119)) "function.c":272 -1
     (nil))
(call_insn 130 129 131 21 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":272 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 131 130 132 21 (set (pc)
        (label_ref 139)) "function.c":273 -1
     (nil)
 -> 139)
;;  succ:       23

(barrier 132 131 133)
;; basic block 22, loop depth 1, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 133 132 134 22 35 (nil) [1 uses])
(note 134 133 135 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 22 (set (reg:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":275 -1
     (nil))
(insn 136 135 137 22 (set (reg:SI 4 si)
        (const_int 115 [0x73])) "function.c":275 -1
     (nil))
(insn 137 136 138 22 (set (reg:DI 5 di)
        (reg:DI 120)) "function.c":275 -1
     (nil))
(call_insn 138 137 139 22 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("bestia_move") [flags 0x3]  <function_decl 0x7f7cd1178900 bestia_move>) [0 bestia_move S1 A8])
            (const_int 0 [0]))) "function.c":275 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 1, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 [always] 
;;              19
;;              20
;;              21
;;              22 (FALLTHRU)
;;              18 [always] 
(code_label 139 138 140 23 33 (nil) [5 uses])
(note 140 139 141 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
            (const_int 0 [0]))) "function.c":278 -1
     (nil))
(jump_insn 142 141 143 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 145)
            (pc))) "function.c":278 -1
     (nil)
 -> 145)
;;  succ:       24 (FALLTHRU)
;;              25

;; basic block 24, loop depth 1, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 143 142 144 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 found+0 S4 A32])
        (const_int 1 [0x1])) "function.c":280 -1
     (nil))
;;  succ:       25 (FALLTHRU)

;; basic block 25, loop depth 1, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
;;              24 (FALLTHRU)
(code_label 145 144 146 25 36 (nil) [1 uses])
(note 146 145 147 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 25 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzak+0 S4 A32])
        (const_int 0 [0])) "function.c":282 -1
     (nil))
;;  succ:       26 (FALLTHRU)

;; basic block 26, loop depth 1, maybe hot
;;  prev block 25, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              25 (FALLTHRU)
(code_label 148 147 149 26 29 (nil) [1 uses])
(note 149 148 151 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(jump_insn 151 149 152 26 (set (pc)
        (label_ref 150)) "function.c":241 -1
     (nil)
 -> 150)
;;  succ:       4 (DFS_BACK)

(barrier 152 151 0)

;; Function quit_quit (quit_quit, funcdef_no=10, decl_uid=6223, cgraph_uid=10, symbol_order=13)

quit_quit (void * pom)
{
  struct player_info * playerinfo;
  int fd;
  char * q;
  void * D.6592;
  struct WINDOW * stdscr.43_1;
  int _2;
  char _3;
  char END.44_4;
  char END.45_5;
  char END.46_6;
  char END.47_7;
  void * _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_11 = pom_10(D);
  fd_14 = shm_open (q_11, 66, 511);
  playerinfo_16 = mmap (0B, 22576, 3, 1, fd_14, 0);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  stdscr.43_1 = stdscr;
  _2 = wgetch (stdscr.43_1);
  _3 = (char) _2;
  END = _3;
  END.44_4 = END;
  playerinfo_16->request = END.44_4;
  END.45_5 = END;
  if (END.45_5 == 113)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _20 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 5, loop depth 1
;;    pred:       3
  END.46_6 = END;
  if (END.46_6 == 98)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  END.47_7 = END;
  if (END.47_7 == 66)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       5
;;                6
  BESTIA_ON = 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       6
;;                7
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       4
<L6>:
  return _20;
;;    succ:       EXIT

}



Partition map 

Partition 1 (stdscr.43_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (END.44_4 - 4 )
Partition 5 (END.45_5 - 5 )
Partition 6 (END.46_6 - 6 )
Partition 7 (END.47_7 - 7 )
Partition 10 (pom_10(D) - 10 )
Partition 11 (q_11 - 11 )
Partition 14 (fd_14 - 14 )
Partition 16 (playerinfo_16 - 16 )
Partition 20 (_20 - 20 )
Partition 22 (_22(D) - 22 )


Coalescible Partition map 

Partition 0, base 0 (pom_10(D) - 10 )
Partition 1, base 1 (_22(D) - 22 )


Partition map 

Partition 0 (pom_10(D) - 10 )
Partition 1 (_22(D) - 22 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (pom_10(D) - 10 )
Partition 1 (_22(D) - 22 )

After Coalescing:

Partition map 

Partition 0 (stdscr.43_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (END.44_4 - 4 )
Partition 4 (END.45_5 - 5 )
Partition 5 (END.46_6 - 6 )
Partition 6 (END.47_7 - 7 )
Partition 7 (pom_10(D) - 10 )
Partition 8 (q_11 - 11 )
Partition 9 (fd_14 - 14 )
Partition 10 (playerinfo_16 - 16 )
Partition 11 (_20 - 20 )
Partition 12 (_22(D) - 22 )

quit_quit (void * pom)
{
  struct player_info * playerinfo;
  int fd;
  char * q;
  void * D.6592;
  struct WINDOW * stdscr.43_1;
  int _2;
  char _3;
  char END.44_4;
  char END.45_5;
  char END.46_6;
  char END.47_7;
  void * _20;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_11 = pom_10(D);
  fd_14 = shm_open (q_11, 66, 511);
  playerinfo_16 = mmap (0B, 22576, 3, 1, fd_14, 0);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                8
  stdscr.43_1 = stdscr;
  _2 = wgetch (stdscr.43_1);
  _3 = (char) _2;
  END = _3;
  END.44_4 = END;
  playerinfo_16->request = END.44_4;
  END.45_5 = END;
  if (END.45_5 == 113)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _20 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 5, loop depth 1
;;    pred:       3
  END.46_6 = END;
  if (END.46_6 == 98)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 1
;;    pred:       5
  END.47_7 = END;
  if (END.47_7 == 66)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 1
;;    pred:       5
;;                6
  BESTIA_ON = 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       6
;;                7
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 9, loop depth 0
;;    pred:       4
<L6>:
  return _20;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; q_11 = pom_10(D);

(insn 6 5 7 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [19 pom+0 S8 A64])) "function.c":292 -1
     (nil))

(insn 7 6 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 q+0 S8 A64])
        (reg/f:DI 96)) "function.c":292 -1
     (nil))

;; fd_14 = shm_open (q_11, 66, 511);

(insn 8 7 9 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 q+0 S8 A64])) "function.c":293 -1
     (nil))

(insn 9 8 10 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":293 -1
     (nil))

(insn 10 9 11 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "function.c":293 -1
     (nil))

(insn 11 10 12 (set (reg:DI 5 di)
        (reg:DI 97)) "function.c":293 -1
     (nil))

(call_insn 12 11 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f7cd133cb00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "function.c":293 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 13 12 14 (set (reg:SI 98)
        (reg:SI 0 ax)) "function.c":293 -1
     (nil))

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 fd+0 S4 A32])
        (reg:SI 98)) "function.c":293 -1
     (nil))

;; playerinfo_16 = mmap (0B, 22576, 3, 1, fd_14, 0);

(insn 15 14 16 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 fd+0 S4 A32])) "function.c":294 -1
     (nil))

(insn 16 15 17 (set (reg:DI 38 r9)
        (const_int 0 [0])) "function.c":294 -1
     (nil))

(insn 17 16 18 (set (reg:SI 37 r8)
        (reg:SI 99)) "function.c":294 -1
     (nil))

(insn 18 17 19 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "function.c":294 -1
     (nil))

(insn 19 18 20 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":294 -1
     (nil))

(insn 20 19 21 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":294 -1
     (nil))

(insn 21 20 22 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":294 -1
     (nil))

(call_insn 22 21 23 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f7cd133c000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "function.c":294 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

(insn 23 22 24 (set (reg:DI 100)
        (reg:DI 0 ax)) "function.c":294 -1
     (nil))

(insn 24 23 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [14 playerinfo+0 S8 A64])
        (reg:DI 100)) "function.c":294 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; stdscr.43_1 = stdscr;

(insn 26 25 0 (set (reg/f:DI 87 [ stdscr.43_1 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":298 -1
     (nil))

;; _2 = wgetch (stdscr.43_1);

(insn 27 26 28 (set (reg:DI 5 di)
        (reg/f:DI 87 [ stdscr.43_1 ])) "function.c":298 -1
     (nil))

(call_insn 28 27 29 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wgetch") [flags 0x41]  <function_decl 0x7f7cd10c9100 wgetch>) [0 wgetch S1 A8])
            (const_int 0 [0]))) "function.c":298 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 29 28 0 (set (reg:SI 88 [ _2 ])
        (reg:SI 0 ax)) "function.c":298 -1
     (nil))

;; _3 = (char) _2;

(insn 30 29 0 (set (reg:QI 89 [ _3 ])
        (subreg:QI (reg:SI 88 [ _2 ]) 0)) "function.c":298 -1
     (nil))

;; END = _3;

(insn 31 30 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (reg:QI 89 [ _3 ])) "function.c":298 -1
     (nil))

;; END.44_4 = END;

(insn 32 31 0 (set (reg:QI 90 [ END.44_4 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":299 -1
     (nil))

;; playerinfo_16->request = END.44_4;

(insn 33 32 34 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [14 playerinfo+0 S8 A64])) "function.c":299 -1
     (nil))

(insn 34 33 0 (set (mem:QI (plus:DI (reg/f:DI 101)
                (const_int 40 [0x28])) [0 playerinfo_16->request+0 S1 A64])
        (reg:QI 90 [ END.44_4 ])) "function.c":299 -1
     (nil))

;; END.45_5 = END;

(insn 35 34 0 (set (reg:QI 91 [ END.45_5 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":301 -1
     (nil))

;; if (END.45_5 == 113)

(insn 36 35 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ END.45_5 ])
            (const_int 113 [0x71]))) "function.c":301 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":301 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _20 = 0B;

(insn 39 38 0 (set (reg/f:DI 94 [ _20 ])
        (const_int 0 [0])) "function.c":303 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 5

;; 

(code_label 42 41 43 39 (nil) [0 uses])

(note 43 42 0 NOTE_INSN_BASIC_BLOCK)

;; END.46_6 = END;

(insn 44 43 0 (set (reg:QI 92 [ END.46_6 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":305 -1
     (nil))

;; if (END.46_6 == 98)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ END.46_6 ])
            (const_int 98 [0x62]))) "function.c":305 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":305 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; END.47_7 = END;

(insn 48 47 0 (set (reg:QI 93 [ END.47_7 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":305 -1
     (nil))

;; if (END.47_7 == 66)

(insn 49 48 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ END.47_7 ])
            (const_int 66 [0x42]))) "function.c":305 -1
     (nil))

(jump_insn 50 49 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":305 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 51 50 52 41 (nil) [0 uses])

(note 52 51 0 NOTE_INSN_BASIC_BLOCK)

;; BESTIA_ON = 1;

(insn 53 52 0 (set (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])
        (const_int 1 [0x1])) "function.c":307 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 54 53 55 42 (nil) [0 uses])

(note 55 54 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; <L6>:

(code_label 59 58 60 40 (nil) [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; return _20;

(insn 61 60 62 (set (reg/f:DI 95 [ <retval> ])
        (reg/f:DI 94 [ _20 ])) "function.c":303 -1
     (nil))

(jump_insn 62 61 63 (set (pc)
        (label_ref 0)) "function.c":303 -1
     (nil))

(barrier 63 62 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 62.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [19 pom+0 S8 A64])
        (reg:DI 5 di [ pom ])) "function.c":291 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [19 pom+0 S8 A64])) "function.c":292 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 q+0 S8 A64])
        (reg/f:DI 96)) "function.c":292 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [10 q+0 S8 A64])) "function.c":293 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":293 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "function.c":293 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 97)) "function.c":293 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f7cd133cb00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "function.c":293 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg:SI 98)
        (reg:SI 0 ax)) "function.c":293 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 fd+0 S4 A32])
        (reg:SI 98)) "function.c":293 -1
     (nil))
(insn 15 14 16 2 (set (reg:SI 99)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 fd+0 S4 A32])) "function.c":294 -1
     (nil))
(insn 16 15 17 2 (set (reg:DI 38 r9)
        (const_int 0 [0])) "function.c":294 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 37 r8)
        (reg:SI 99)) "function.c":294 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "function.c":294 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":294 -1
     (nil))
(insn 20 19 21 2 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":294 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":294 -1
     (nil))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f7cd133c000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "function.c":294 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 23 22 24 2 (set (reg:DI 100)
        (reg:DI 0 ax)) "function.c":294 -1
     (nil))
(insn 24 23 56 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [14 playerinfo+0 S8 A64])
        (reg:DI 100)) "function.c":294 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              9 (DFS_BACK)
(code_label 56 24 25 4 43 (nil) [1 uses])
(note 25 56 26 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 4 (set (reg/f:DI 87 [ stdscr.43_1 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":298 -1
     (nil))
(insn 27 26 28 4 (set (reg:DI 5 di)
        (reg/f:DI 87 [ stdscr.43_1 ])) "function.c":298 -1
     (nil))
(call_insn 28 27 29 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wgetch") [flags 0x41]  <function_decl 0x7f7cd10c9100 wgetch>) [0 wgetch S1 A8])
            (const_int 0 [0]))) "function.c":298 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 29 28 30 4 (set (reg:SI 88 [ _2 ])
        (reg:SI 0 ax)) "function.c":298 -1
     (nil))
(insn 30 29 31 4 (set (reg:QI 89 [ _3 ])
        (subreg:QI (reg:SI 88 [ _2 ]) 0)) "function.c":298 -1
     (nil))
(insn 31 30 32 4 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (reg:QI 89 [ _3 ])) "function.c":298 -1
     (nil))
(insn 32 31 33 4 (set (reg:QI 90 [ END.44_4 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":299 -1
     (nil))
(insn 33 32 34 4 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [14 playerinfo+0 S8 A64])) "function.c":299 -1
     (nil))
(insn 34 33 35 4 (set (mem:QI (plus:DI (reg/f:DI 101)
                (const_int 40 [0x28])) [0 playerinfo_16->request+0 S1 A64])
        (reg:QI 90 [ END.44_4 ])) "function.c":299 -1
     (nil))
(insn 35 34 36 4 (set (reg:QI 91 [ END.45_5 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":301 -1
     (nil))
(insn 36 35 37 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ END.45_5 ])
            (const_int 113 [0x71]))) "function.c":301 -1
     (nil))
(jump_insn 37 36 38 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "function.c":301 -1
     (nil)
 -> 42)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 38 37 39 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 5 (set (reg/f:DI 94 [ _20 ])
        (const_int 0 [0])) "function.c":303 -1
     (nil))
(jump_insn 40 39 41 5 (set (pc)
        (label_ref 59)) "function.c":303 -1
     (nil)
 -> 59)
;;  succ:       10

(barrier 41 40 42)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 42 41 43 6 39 (nil) [1 uses])
(note 43 42 44 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 6 (set (reg:QI 92 [ END.46_6 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":305 -1
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 92 [ END.46_6 ])
            (const_int 98 [0x62]))) "function.c":305 -1
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "function.c":305 -1
     (nil)
 -> 51)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (reg:QI 93 [ END.47_7 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":305 -1
     (nil))
(insn 49 48 50 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 93 [ END.47_7 ])
            (const_int 66 [0x42]))) "function.c":305 -1
     (nil))
(jump_insn 50 49 51 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 54)
            (pc))) "function.c":305 -1
     (nil)
 -> 54)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 51 50 52 8 41 (nil) [1 uses])
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])
        (const_int 1 [0x1])) "function.c":307 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              8 (FALLTHRU)
(code_label 54 53 55 9 42 (nil) [1 uses])
(note 55 54 57 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 57 55 58 9 (set (pc)
        (label_ref 56)) "function.c":298 -1
     (nil)
 -> 56)
;;  succ:       4 (DFS_BACK)

(barrier 58 57 59)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 59 58 60 10 40 (nil) [1 uses])
(note 60 59 61 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 65 10 (set (reg/f:DI 95 [ <retval> ])
        (reg/f:DI 94 [ _20 ])) "function.c":303 -1
     (nil))
(insn 65 61 66 10 (set (reg/i:DI 0 ax)
        (reg/f:DI 95 [ <retval> ])) "function.c":310 -1
     (nil))
(insn 66 65 0 10 (use (reg/i:DI 0 ax)) "function.c":310 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function serwer_serwer (serwer_serwer, funcdef_no=11, decl_uid=6225, cgraph_uid=11, symbol_order=14)

serwer_serwer (void * pom)
{
  int i;
  struct user_info userinfo;
  char * q;
  struct serwer_info serwerinfo;
  union sem_t * sem_bestia2;
  union sem_t * sem_bestia1;
  union sem_t * sem_p2_pom;
  union sem_t * sem_p2;
  union sem_t * sem_p1_pom;
  union sem_t * sem_p1;
  pthread_t gracz2;
  pthread_t gracz1;
  pthread_t bestia1;
  int licznik;
  int y_pom;
  int x_pom;
  int b2;
  int b1;
  int bestia_licznik;
  void * D.6645;
  int _1;
  int _2;
  char * * _3;
  char * * _4;
  struct player_info * _5;
  struct player_info * _6;
  struct player_info * _7;
  int _8;
  struct player_info * _9;
  int _10;
  struct player_info * _11;
  int _12;
  struct player_info * _13;
  int _14;
  char * * _15;
  int _16;
  int _17;
  int _18;
  struct WINDOW * stdscr.48_19;
  int _20;
  struct player_info * _21;
  int _22;
  struct player_info * _23;
  int _24;
  struct WINDOW * stdscr.49_25;
  struct WINDOW * stdscr.50_26;
  struct WINDOW * stdscr.51_27;
  struct player_info * _28;
  struct player_info * _29;
  struct WINDOW * stdscr.52_30;
  char * * _31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  char * _35;
  sizetype _36;
  char * _37;
  char _38;
  char * * _39;
  long unsigned int _40;
  long unsigned int _41;
  char * * _42;
  char * _43;
  sizetype _44;
  char * _45;
  char _46;
  struct WINDOW * stdscr.53_47;
  struct WINDOW * stdscr.54_48;
  char * * _49;
  long unsigned int _50;
  long unsigned int _51;
  char * * _52;
  char * _53;
  sizetype _54;
  char * _55;
  char _56;
  int _57;
  struct player_info * _58;
  int _59;
  struct player_info * _60;
  int _61;
  struct WINDOW * stdscr.55_62;
  struct WINDOW * stdscr.56_63;
  struct WINDOW * stdscr.57_64;
  struct player_info * _65;
  int _66;
  int _67;
  struct player_info * _68;
  int _69;
  struct player_info * _70;
  int _71;
  struct WINDOW * stdscr.58_72;
  struct WINDOW * stdscr.59_73;
  struct WINDOW * stdscr.60_74;
  struct player_info * _75;
  int _76;
  struct player_info * _77;
  int _78;
  struct WINDOW * stdscr.61_79;
  struct player_info * _80;
  int _81;
  struct player_info * _82;
  struct player_info * _83;
  struct WINDOW * stdscr.62_84;
  char * * _85;
  long unsigned int _86;
  long unsigned int _87;
  char * * _88;
  char * _89;
  sizetype _90;
  char * _91;
  char _92;
  char * * _93;
  long unsigned int _94;
  long unsigned int _95;
  char * * _96;
  char * _97;
  sizetype _98;
  char * _99;
  char _100;
  struct WINDOW * stdscr.63_101;
  struct WINDOW * stdscr.64_102;
  char * * _103;
  long unsigned int _104;
  long unsigned int _105;
  char * * _106;
  char * _107;
  sizetype _108;
  char * _109;
  char _110;
  int _111;
  struct player_info * _112;
  int _113;
  struct player_info * _114;
  int _115;
  struct WINDOW * stdscr.65_116;
  struct WINDOW * stdscr.66_117;
  struct WINDOW * stdscr.67_118;
  char BESTIA_ON.68_119;
  char BESTIA_ON.69_120;
  int _121;
  int _122;
  struct WINDOW * stdscr.70_123;
  struct WINDOW * stdscr.71_124;
  struct WINDOW * stdscr.72_125;
  struct player_info * _126;
  int _127;
  int _128;
  struct player_info * _129;
  int _130;
  int _131;
  struct player_info * _132;
  struct player_info * _133;
  struct WINDOW * stdscr.73_134;
  char END.74_135;
  char BESTIA_ON.75_136;
  long unsigned int bestia1.76_137;
  struct player_info * _138;
  struct player_info * _139;
  struct WINDOW * stdscr.77_140;
  int _141;
  int _142;
  void * _306;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  bestia_licznik_166 = 0;
  b1_167 = 0;
  b2_168 = 0;
  x_pom_169 = 0;
  y_pom_170 = 0;
  licznik_171 = 0;
  sem_p1_174 = sem_open ("shm_p1", 64, 511, 0);
  sem_p1_pom_176 = sem_open ("shm_p1_pom", 64, 511, 0);
  sem_p2_178 = sem_open ("shm_p2", 64, 511, 0);
  sem_p2_pom_180 = sem_open ("shm_p2_pom", 64, 511, 0);
  sem_bestia1_182 = sem_open ("shm_bestia1", 64, 511, 0);
  sem_bestia2_184 = sem_open ("shm_bestia2", 64, 511, 0);
  init_pair (2, 7, 5);
  q_187 = pom_186(D);
  _1 = memcmp (q_187, "shm_p2", 6);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  serwerinfo.pom = 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  serwerinfo.pom = 2;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  _2 = getpid ();
  serwerinfo.PID = _2;
  serwerinfo.runda = 0;
  serwerinfo.skarb.count_one_coin = 0;
  serwerinfo.skarb.count_treasure_coin = 0;
  serwerinfo.skarb.count_large_treasure_coin = 0;
  _3 = pobierz_plansze ();
  serwerinfo.mapa = _3;
  oboz_random (&serwerinfo);
  _4 = serwerinfo.mapa;
  drukuj_plansze (_4);
  _5 = player_set ("shm_p1");
  serwerinfo.player1 = _5;
  _6 = player_set ("shm_p2");
  serwerinfo.player2 = _6;
  _7 = serwerinfo.player1;
  _8 = getpid ();
  _7->PID_serwer = _8;
  _9 = serwerinfo.player2;
  _10 = getpid ();
  _9->PID_serwer = _10;
  player_position_random (&serwerinfo);
  userinfo.serwer = &serwerinfo;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                48
  # bestia_licznik_143 = PHI <bestia_licznik_166(5), bestia_licznik_144(48)>
  # b1_145 = PHI <b1_167(5), b1_147(48)>
  # b2_148 = PHI <b2_168(5), b2_150(48)>
  _11 = serwerinfo.player1;
  _12 = serwerinfo.runda;
  _11->runda = _12;
  _13 = serwerinfo.player2;
  _14 = serwerinfo.runda;
  _13->runda = _14;
  userinfo.user = 1;
  _15 = serwerinfo.mapa;
  drukuj_plansze (_15);
  i_214 = 0;
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 7, loop depth 2
;;    pred:       10
  _16 = serwerinfo.skarb.value_all_dropped_coin[i_151];
  if (_16 != -1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 2
;;    pred:       7
  _17 = serwerinfo.skarb.dropped_coin[i_151][1];
  _18 = serwerinfo.skarb.dropped_coin[i_151][0];
  stdscr.48_19 = stdscr;
  wmove (stdscr.48_19, _18, _17);
  printw ("D");
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       7
;;                8
  i_217 = i_151 + 1;
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       6
;;                9
  # i_151 = PHI <i_214(6), i_217(9)>
  _20 = serwerinfo.skarb.count_drop_coin;
  if (i_151 < _20)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       7
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  skarbunio (&serwerinfo);
  _21 = serwerinfo.player1;
  _22 = _21->x_current;
  _23 = serwerinfo.player1;
  _24 = _23->y_current;
  stdscr.49_25 = stdscr;
  wmove (stdscr.49_25, _24, _22);
  stdscr.50_26 = stdscr;
  wattr_on (stdscr.50_26, 512, 0B);
  printw ("1");
  stdscr.51_27 = stdscr;
  wattr_off (stdscr.51_27, 512, 0B);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  if (b1_145 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       12
;;                19

;;   basic block 12, loop depth 1
;;    pred:       11
  _28 = serwerinfo.player1;
  x_pom_225 = _28->x_current;
  _29 = serwerinfo.player1;
  y_pom_226 = _29->y_current;
  if (b1_145 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       13
;;                19

;;   basic block 13, loop depth 1
;;    pred:       12
  step1_krzak (&serwerinfo);
  b1_229 = step1 (&serwerinfo);
  stdscr.52_30 = stdscr;
  wmove (stdscr.52_30, y_pom_226, x_pom_225);
  _31 = serwerinfo.mapa;
  _32 = (long unsigned int) y_pom_226;
  _33 = _32 * 8;
  _34 = _31 + _33;
  _35 = *_34;
  _36 = (sizetype) x_pom_225;
  _37 = _35 + _36;
  _38 = *_37;
  if (_38 == 77)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 1
;;    pred:       13
  printw (".");
  goto <bb 18>; [INV]
;;    succ:       18

;;   basic block 15, loop depth 1
;;    pred:       13
  _39 = serwerinfo.mapa;
  _40 = (long unsigned int) y_pom_226;
  _41 = _40 * 8;
  _42 = _39 + _41;
  _43 = *_42;
  _44 = (sizetype) x_pom_225;
  _45 = _43 + _44;
  _46 = *_45;
  if (_46 == 65)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       16
;;                17

;;   basic block 16, loop depth 1
;;    pred:       15
  stdscr.53_47 = stdscr;
  wattr_on (stdscr.53_47, 2816, 0B);
  printw ("A");
  stdscr.54_48 = stdscr;
  wattr_off (stdscr.54_48, 2816, 0B);
  goto <bb 18>; [INV]
;;    succ:       18

;;   basic block 17, loop depth 1
;;    pred:       15
  _49 = serwerinfo.mapa;
  _50 = (long unsigned int) y_pom_226;
  _51 = _50 * 8;
  _52 = _49 + _51;
  _53 = *_52;
  _54 = (sizetype) x_pom_225;
  _55 = _53 + _54;
  _56 = *_55;
  _57 = (int) _56;
  printw ("%c", _57);
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       14
;;                16
;;                17
  _58 = serwerinfo.player1;
  _59 = _58->x_current;
  _60 = serwerinfo.player1;
  _61 = _60->y_current;
  stdscr.55_62 = stdscr;
  wmove (stdscr.55_62, _61, _59);
  stdscr.56_63 = stdscr;
  wattr_on (stdscr.56_63, 512, 0B);
  printw ("1");
  stdscr.57_64 = stdscr;
  wattr_off (stdscr.57_64, 512, 0B);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
;;    succ:       19

;;   basic block 19, loop depth 1
;;    pred:       11
;;                12
;;                18
  # b1_146 = PHI <b1_145(11), b1_145(12), b1_229(18)>
  if (b1_146 > 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 1
;;    pred:       19
  b1_242 = b1_146 + -1;
;;    succ:       21

;;   basic block 21, loop depth 1
;;    pred:       19
;;                20
  # b1_147 = PHI <b1_146(19), b1_242(20)>
  _65 = serwerinfo.player2;
  _66 = _65->PID;
  _67 = kill (_66, 0);
  if (_67 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]
;;    succ:       22
;;                23

;;   basic block 22, loop depth 1
;;    pred:       21
  _68 = serwerinfo.player2;
  _69 = _68->x_current;
  _70 = serwerinfo.player2;
  _71 = _70->y_current;
  stdscr.58_72 = stdscr;
  wmove (stdscr.58_72, _71, _69);
  stdscr.59_73 = stdscr;
  wattr_on (stdscr.59_73, 512, 0B);
  printw ("2");
  stdscr.60_74 = stdscr;
  wattr_off (stdscr.60_74, 512, 0B);
;;    succ:       23

;;   basic block 23, loop depth 1
;;    pred:       21
;;                22
  _75 = serwerinfo.player2;
  _76 = _75->x_current;
  _77 = serwerinfo.player2;
  _78 = _77->y_current;
  stdscr.61_79 = stdscr;
  wmove (stdscr.61_79, _78, _76);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  if (b2_148 == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       24
;;                32

;;   basic block 24, loop depth 1
;;    pred:       23
  _80 = serwerinfo.player2;
  _81 = _80->y_current;
  if (_81 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       25
;;                32

;;   basic block 25, loop depth 1
;;    pred:       24
  _82 = serwerinfo.player2;
  x_pom_251 = _82->x_current;
  _83 = serwerinfo.player2;
  y_pom_252 = _83->y_current;
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  if (b2_148 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       26
;;                32

;;   basic block 26, loop depth 1
;;    pred:       25
  step2_krzak (&serwerinfo);
  b2_257 = step2 (&serwerinfo);
  stdscr.62_84 = stdscr;
  wmove (stdscr.62_84, y_pom_252, x_pom_251);
  _85 = serwerinfo.mapa;
  _86 = (long unsigned int) y_pom_252;
  _87 = _86 * 8;
  _88 = _85 + _87;
  _89 = *_88;
  _90 = (sizetype) x_pom_251;
  _91 = _89 + _90;
  _92 = *_91;
  if (_92 == 77)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 1
;;    pred:       26
  printw (".");
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 28, loop depth 1
;;    pred:       26
  _93 = serwerinfo.mapa;
  _94 = (long unsigned int) y_pom_252;
  _95 = _94 * 8;
  _96 = _93 + _95;
  _97 = *_96;
  _98 = (sizetype) x_pom_251;
  _99 = _97 + _98;
  _100 = *_99;
  if (_100 == 65)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 1
;;    pred:       28
  stdscr.63_101 = stdscr;
  wattr_on (stdscr.63_101, 2816, 0B);
  printw ("A");
  stdscr.64_102 = stdscr;
  wattr_off (stdscr.64_102, 2816, 0B);
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 30, loop depth 1
;;    pred:       28
  _103 = serwerinfo.mapa;
  _104 = (long unsigned int) y_pom_252;
  _105 = _104 * 8;
  _106 = _103 + _105;
  _107 = *_106;
  _108 = (sizetype) x_pom_251;
  _109 = _107 + _108;
  _110 = *_109;
  _111 = (int) _110;
  printw ("%c", _111);
;;    succ:       31

;;   basic block 31, loop depth 1
;;    pred:       27
;;                29
;;                30
  _112 = serwerinfo.player2;
  _113 = _112->x_current;
  _114 = serwerinfo.player2;
  _115 = _114->y_current;
  stdscr.65_116 = stdscr;
  wmove (stdscr.65_116, _115, _113);
  stdscr.66_117 = stdscr;
  wattr_on (stdscr.66_117, 512, 0B);
  printw ("2");
  stdscr.67_118 = stdscr;
  wattr_off (stdscr.67_118, 512, 0B);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
;;    succ:       32

;;   basic block 32, loop depth 1
;;    pred:       23
;;                24
;;                25
;;                31
  # b2_149 = PHI <b2_148(23), b2_148(24), b2_148(25), b2_257(31)>
  if (b2_149 > 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]
;;    succ:       33
;;                34

;;   basic block 33, loop depth 1
;;    pred:       32
  b2_270 = b2_149 + -1;
;;    succ:       34

;;   basic block 34, loop depth 1
;;    pred:       32
;;                33
  # b2_150 = PHI <b2_149(32), b2_270(33)>
  if (bestia_licznik_143 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       35
;;                37

;;   basic block 35, loop depth 1
;;    pred:       34
  BESTIA_ON.68_119 = BESTIA_ON;
  if (BESTIA_ON.68_119 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       36
;;                37

;;   basic block 36, loop depth 1
;;    pred:       35
  serwerinfo.bestia.alive = 1;
  pthread_create (&bestia1, 0B, bestia, &serwerinfo);
  bestia_licznik_273 = 1;
;;    succ:       37

;;   basic block 37, loop depth 1
;;    pred:       34
;;                35
;;                36
  # bestia_licznik_144 = PHI <bestia_licznik_143(34), bestia_licznik_143(35), bestia_licznik_273(36)>
  BESTIA_ON.69_120 = BESTIA_ON;
  if (BESTIA_ON.69_120 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]
;;    succ:       38
;;                39

;;   basic block 38, loop depth 1
;;    pred:       37
  sem_post (sem_bestia1_182);
  sem_wait (sem_bestia2_184);
  _121 = serwerinfo.bestia.x;
  _122 = serwerinfo.bestia.y;
  stdscr.70_123 = stdscr;
  wmove (stdscr.70_123, _122, _121);
  stdscr.71_124 = stdscr;
  wattr_on (stdscr.71_124, 3072, 0B);
  printw ("*");
  stdscr.72_125 = stdscr;
  wattr_off (stdscr.72_125, 3072, 0B);
  bestia_kolizja (&serwerinfo);
;;    succ:       39

;;   basic block 39, loop depth 1
;;    pred:       37
;;                38
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  player_kolizja (&serwerinfo);
  collect_skarb (&serwerinfo);
  _126 = serwerinfo.player1;
  _127 = _126->PID;
  _128 = kill (_127, 0);
  if (_128 == 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]
;;    succ:       40
;;                41

;;   basic block 40, loop depth 1
;;    pred:       39
  sem_post (sem_p1_174);
  sem_wait (sem_p1_pom_176);
;;    succ:       41

;;   basic block 41, loop depth 1
;;    pred:       39
;;                40
  _129 = serwerinfo.player2;
  _130 = _129->PID;
  _131 = kill (_130, 0);
  if (_131 == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]
;;    succ:       42
;;                43

;;   basic block 42, loop depth 1
;;    pred:       41
  sem_post (sem_p2_178);
  sem_wait (sem_p2_pom_180);
  goto <bb 44>; [INV]
;;    succ:       44

;;   basic block 43, loop depth 1
;;    pred:       41
  _132 = serwerinfo.player2;
  _132->y_current = 0;
  _133 = serwerinfo.player2;
  _133->x_current = 0;
;;    succ:       44

;;   basic block 44, loop depth 1
;;    pred:       42
;;                43
  oboz_coins (&serwerinfo);
  druk_info_plansza_s (&serwerinfo);
  stdscr.73_134 = stdscr;
  wrefresh (stdscr.73_134);
  END.74_135 = END;
  if (END.74_135 == 113)
    goto <bb 45>; [INV]
  else
    goto <bb 48>; [INV]
;;    succ:       45
;;                48

;;   basic block 45, loop depth 0
;;    pred:       44
  sem_post (sem_bestia1_182);
  BESTIA_ON.75_136 = BESTIA_ON;
  if (BESTIA_ON.75_136 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]
;;    succ:       46
;;                47

;;   basic block 46, loop depth 0
;;    pred:       45
  bestia1.76_137 = bestia1;
  pthread_join (bestia1.76_137, 0B);
;;    succ:       47

;;   basic block 47, loop depth 0
;;    pred:       45
;;                46
  _138 = serwerinfo.player1;
  munmap (_138, 22576);
  _139 = serwerinfo.player2;
  munmap (_139, 22576);
  shm_unlink ("shm_p1");
  shm_unlink ("shm_p1_pom");
  shm_unlink ("shm_p2");
  shm_unlink ("shm_p2_pom");
  shm_unlink ("shm_bestia1");
  shm_unlink ("shm_bestia2");
  _306 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  bestia1 ={v} {CLOBBER};
  serwerinfo ={v} {CLOBBER};
  userinfo ={v} {CLOBBER};
  goto <bb 49>; [INV]
;;    succ:       49

;;   basic block 48, loop depth 1
;;    pred:       44
  stdscr.77_140 = stdscr;
  wclear (stdscr.77_140);
  usleep (1000000);
  _141 = serwerinfo.runda;
  _142 = _141 + 1;
  serwerinfo.runda = _142;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 49, loop depth 0
;;    pred:       47
<L53>:
  return _306;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (stdscr.48_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (stdscr.49_25 - 25 )
Partition 26 (stdscr.50_26 - 26 )
Partition 27 (stdscr.51_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (stdscr.52_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (stdscr.53_47 - 47 )
Partition 48 (stdscr.54_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (stdscr.55_62 - 62 )
Partition 63 (stdscr.56_63 - 63 )
Partition 64 (stdscr.57_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (stdscr.58_72 - 72 )
Partition 73 (stdscr.59_73 - 73 )
Partition 74 (stdscr.60_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (stdscr.61_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (stdscr.62_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (stdscr.63_101 - 101 )
Partition 102 (stdscr.64_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (stdscr.65_116 - 116 )
Partition 117 (stdscr.66_117 - 117 )
Partition 118 (stdscr.67_118 - 118 )
Partition 119 (BESTIA_ON.68_119 - 119 )
Partition 120 (BESTIA_ON.69_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (stdscr.70_123 - 123 )
Partition 124 (stdscr.71_124 - 124 )
Partition 125 (stdscr.72_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (stdscr.73_134 - 134 )
Partition 135 (END.74_135 - 135 )
Partition 136 (BESTIA_ON.75_136 - 136 )
Partition 137 (bestia1.76_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (stdscr.77_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (bestia_licznik_143 - 143 )
Partition 144 (bestia_licznik_144 - 144 )
Partition 145 (b1_145 - 145 )
Partition 146 (b1_146 - 146 )
Partition 147 (b1_147 - 147 )
Partition 148 (b2_148 - 148 )
Partition 149 (b2_149 - 149 )
Partition 150 (b2_150 - 150 )
Partition 151 (i_151 - 151 )
Partition 166 (bestia_licznik_166 - 166 )
Partition 167 (b1_167 - 167 )
Partition 168 (b2_168 - 168 )
Partition 169 (x_pom_169 - 169 )
Partition 170 (y_pom_170 - 170 )
Partition 171 (licznik_171 - 171 )
Partition 174 (sem_p1_174 - 174 )
Partition 176 (sem_p1_pom_176 - 176 )
Partition 178 (sem_p2_178 - 178 )
Partition 180 (sem_p2_pom_180 - 180 )
Partition 182 (sem_bestia1_182 - 182 )
Partition 184 (sem_bestia2_184 - 184 )
Partition 186 (pom_186(D) - 186 )
Partition 187 (q_187 - 187 )
Partition 214 (i_214 - 214 )
Partition 217 (i_217 - 217 )
Partition 225 (x_pom_225 - 225 )
Partition 226 (y_pom_226 - 226 )
Partition 229 (b1_229 - 229 )
Partition 242 (b1_242 - 242 )
Partition 251 (x_pom_251 - 251 )
Partition 252 (y_pom_252 - 252 )
Partition 257 (b2_257 - 257 )
Partition 270 (b2_270 - 270 )
Partition 273 (bestia_licznik_273 - 273 )
Partition 306 (_306 - 306 )
Partition 313 (_313(D) - 313 )


Coalescible Partition map 

Partition 0, base 0 (bestia_licznik_143 - 143 144 166 273 )
Partition 2, base 1 (b1_145 - 145 146 147 167 229 242 )
Partition 5, base 2 (b2_148 - 148 149 150 168 257 270 )
Partition 8, base 3 (i_151 - 151 214 217 )
Partition 12, base 4 (x_pom_169 - 169 225 251 )
Partition 13, base 5 (y_pom_170 - 170 226 252 )
Partition 14, base 6 (pom_186(D) - 186 )
Partition 26, base 7 (_313(D) - 313 )


Partition map 

Partition 0 (bestia_licznik_143 - 143 )
Partition 1 (bestia_licznik_144 - 144 )
Partition 2 (b1_145 - 145 )
Partition 3 (b1_146 - 146 )
Partition 4 (b1_147 - 147 )
Partition 5 (b2_148 - 148 )
Partition 6 (b2_149 - 149 )
Partition 7 (b2_150 - 150 )
Partition 8 (i_151 - 151 )
Partition 9 (bestia_licznik_166 - 166 )
Partition 10 (b1_167 - 167 )
Partition 11 (b2_168 - 168 )
Partition 12 (x_pom_169 - 169 )
Partition 13 (y_pom_170 - 170 )
Partition 14 (pom_186(D) - 186 )
Partition 15 (i_214 - 214 )
Partition 16 (i_217 - 217 )
Partition 17 (x_pom_225 - 225 )
Partition 18 (y_pom_226 - 226 )
Partition 19 (b1_229 - 229 )
Partition 20 (b1_242 - 242 )
Partition 21 (x_pom_251 - 251 )
Partition 22 (y_pom_252 - 252 )
Partition 23 (b2_257 - 257 )
Partition 24 (b2_270 - 270 )
Partition 25 (bestia_licznik_273 - 273 )
Partition 26 (_313(D) - 313 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) bestia_licznik_143 <-> bestia_licznik_166
(2147483646, 0) bestia_licznik_143 <-> bestia_licznik_144
(2147483646, 0) b1_145 <-> b1_167
(2147483646, 0) b1_145 <-> b1_147
(2147483646, 0) b2_148 <-> b2_168
(2147483646, 0) b2_148 <-> b2_150
(2147483646, 0) i_151 <-> i_214
(2147483646, 0) i_151 <-> i_217
(2147483646, 0) b1_145 <-> b1_146
(2147483646, 0) b2_148 <-> b2_149
(2147483646, 0) x_pom_169 <-> x_pom_225
(2147483646, 0) y_pom_170 <-> y_pom_226
(2147483646, 0) b1_145 <-> b1_229
(2147483646, 0) b1_145 <-> b1_242
(2147483646, 0) x_pom_169 <-> x_pom_251
(2147483646, 0) y_pom_170 <-> y_pom_252
(2147483646, 0) b2_148 <-> b2_257
(2147483646, 0) b2_148 <-> b2_270
(2147483646, 0) bestia_licznik_143 <-> bestia_licznik_273
(20000, 0) b1_146 <-> b1_147
(20000, 0) b2_149 <-> b2_150
(10000, 0) b1_146 <-> b1_229
(10000, 0) b1_147 <-> b1_242
(10000, 0) b2_149 <-> b2_257
(10000, 0) b2_150 <-> b2_270
(10000, 0) bestia_licznik_144 <-> bestia_licznik_273

Partition map 

Partition 0 (bestia_licznik_143 - 143 )
Partition 1 (bestia_licznik_144 - 144 )
Partition 2 (b1_145 - 145 )
Partition 3 (b1_146 - 146 )
Partition 4 (b1_147 - 147 )
Partition 5 (b2_148 - 148 )
Partition 6 (b2_149 - 149 )
Partition 7 (b2_150 - 150 )
Partition 8 (i_151 - 151 )
Partition 9 (bestia_licznik_166 - 166 )
Partition 10 (b1_167 - 167 )
Partition 11 (b2_168 - 168 )
Partition 12 (x_pom_169 - 169 )
Partition 13 (y_pom_170 - 170 )
Partition 14 (pom_186(D) - 186 )
Partition 15 (i_214 - 214 )
Partition 16 (i_217 - 217 )
Partition 17 (x_pom_225 - 225 )
Partition 18 (y_pom_226 - 226 )
Partition 19 (b1_229 - 229 )
Partition 20 (b1_242 - 242 )
Partition 21 (x_pom_251 - 251 )
Partition 22 (y_pom_252 - 252 )
Partition 23 (b2_257 - 257 )
Partition 24 (b2_270 - 270 )
Partition 25 (bestia_licznik_273 - 273 )
Partition 26 (_313(D) - 313 )

Coalesce list: (143)bestia_licznik_143 & (166)bestia_licznik_166 [map: 0, 9] : Success -> 0
Coalesce list: (143)bestia_licznik_143 & (144)bestia_licznik_144 [map: 0, 1] : Success -> 0
Coalesce list: (145)b1_145 & (167)b1_167 [map: 2, 10] : Success -> 2
Coalesce list: (145)b1_145 & (147)b1_147 [map: 2, 4] : Success -> 2
Coalesce list: (148)b2_148 & (168)b2_168 [map: 5, 11] : Success -> 5
Coalesce list: (148)b2_148 & (150)b2_150 [map: 5, 7] : Success -> 5
Coalesce list: (151)i_151 & (214)i_214 [map: 8, 15] : Success -> 8
Coalesce list: (151)i_151 & (217)i_217 [map: 8, 16] : Success -> 8
Coalesce list: (145)b1_145 & (146)b1_146 [map: 2, 3] : Success -> 2
Coalesce list: (148)b2_148 & (149)b2_149 [map: 5, 6] : Success -> 5
Coalesce list: (169)x_pom_169 & (225)x_pom_225 [map: 12, 17] : Success -> 12
Coalesce list: (170)y_pom_170 & (226)y_pom_226 [map: 13, 18] : Success -> 13
Coalesce list: (145)b1_145 & (229)b1_229 [map: 2, 19] : Success -> 2
Coalesce list: (145)b1_145 & (242)b1_242 [map: 2, 20] : Success -> 2
Coalesce list: (169)x_pom_169 & (251)x_pom_251 [map: 12, 21] : Success -> 12
Coalesce list: (170)y_pom_170 & (252)y_pom_252 [map: 13, 22] : Success -> 13
Coalesce list: (148)b2_148 & (257)b2_257 [map: 5, 23] : Success -> 5
Coalesce list: (148)b2_148 & (270)b2_270 [map: 5, 24] : Success -> 5
Coalesce list: (143)bestia_licznik_143 & (273)bestia_licznik_273 [map: 0, 25] : Success -> 0
Coalesce list: (146)b1_145 & (147)b1_145: Already Coalesced.
Coalesce list: (149)b2_148 & (150)b2_148: Already Coalesced.
Coalesce list: (146)b1_145 & (229)b1_145: Already Coalesced.
Coalesce list: (147)b1_145 & (242)b1_145: Already Coalesced.
Coalesce list: (149)b2_148 & (257)b2_148: Already Coalesced.
Coalesce list: (150)b2_148 & (270)b2_148: Already Coalesced.
Coalesce list: (144)bestia_licznik_143 & (273)bestia_licznik_143: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (stdscr.48_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (stdscr.49_25 - 25 )
Partition 25 (stdscr.50_26 - 26 )
Partition 26 (stdscr.51_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (stdscr.52_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (stdscr.53_47 - 47 )
Partition 47 (stdscr.54_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (stdscr.55_62 - 62 )
Partition 62 (stdscr.56_63 - 63 )
Partition 63 (stdscr.57_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (stdscr.58_72 - 72 )
Partition 72 (stdscr.59_73 - 73 )
Partition 73 (stdscr.60_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (stdscr.61_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (stdscr.62_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (stdscr.63_101 - 101 )
Partition 101 (stdscr.64_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (_108 - 108 )
Partition 108 (_109 - 109 )
Partition 109 (_110 - 110 )
Partition 110 (_111 - 111 )
Partition 111 (_112 - 112 )
Partition 112 (_113 - 113 )
Partition 113 (_114 - 114 )
Partition 114 (_115 - 115 )
Partition 115 (stdscr.65_116 - 116 )
Partition 116 (stdscr.66_117 - 117 )
Partition 117 (stdscr.67_118 - 118 )
Partition 118 (BESTIA_ON.68_119 - 119 )
Partition 119 (BESTIA_ON.69_120 - 120 )
Partition 120 (_121 - 121 )
Partition 121 (_122 - 122 )
Partition 122 (stdscr.70_123 - 123 )
Partition 123 (stdscr.71_124 - 124 )
Partition 124 (stdscr.72_125 - 125 )
Partition 125 (_126 - 126 )
Partition 126 (_127 - 127 )
Partition 127 (_128 - 128 )
Partition 128 (_129 - 129 )
Partition 129 (_130 - 130 )
Partition 130 (_131 - 131 )
Partition 131 (_132 - 132 )
Partition 132 (_133 - 133 )
Partition 133 (stdscr.73_134 - 134 )
Partition 134 (END.74_135 - 135 )
Partition 135 (BESTIA_ON.75_136 - 136 )
Partition 136 (bestia1.76_137 - 137 )
Partition 137 (_138 - 138 )
Partition 138 (_139 - 139 )
Partition 139 (stdscr.77_140 - 140 )
Partition 140 (_141 - 141 )
Partition 141 (_142 - 142 )
Partition 142 (bestia_licznik_143 - 143 144 166 273 )
Partition 143 (b1_145 - 145 146 147 167 229 242 )
Partition 144 (b2_148 - 148 149 150 168 257 270 )
Partition 145 (i_151 - 151 214 217 )
Partition 146 (x_pom_169 - 169 225 251 )
Partition 147 (y_pom_170 - 170 226 252 )
Partition 148 (licznik_171 - 171 )
Partition 149 (sem_p1_174 - 174 )
Partition 150 (sem_p1_pom_176 - 176 )
Partition 151 (sem_p2_178 - 178 )
Partition 152 (sem_p2_pom_180 - 180 )
Partition 153 (sem_bestia1_182 - 182 )
Partition 154 (sem_bestia2_184 - 184 )
Partition 155 (pom_186(D) - 186 )
Partition 156 (q_187 - 187 )
Partition 157 (_306 - 306 )
Partition 158 (_313(D) - 313 )

serwer_serwer (void * pom)
{
  int i;
  struct user_info userinfo;
  char * q;
  struct serwer_info serwerinfo;
  union sem_t * sem_bestia2;
  union sem_t * sem_bestia1;
  union sem_t * sem_p2_pom;
  union sem_t * sem_p2;
  union sem_t * sem_p1_pom;
  union sem_t * sem_p1;
  pthread_t gracz2;
  pthread_t gracz1;
  pthread_t bestia1;
  int licznik;
  int y_pom;
  int x_pom;
  int b2;
  int b1;
  int bestia_licznik;
  void * D.6645;
  int _1;
  int _2;
  char * * _3;
  char * * _4;
  struct player_info * _5;
  struct player_info * _6;
  struct player_info * _7;
  int _8;
  struct player_info * _9;
  int _10;
  struct player_info * _11;
  int _12;
  struct player_info * _13;
  int _14;
  char * * _15;
  int _16;
  int _17;
  int _18;
  struct WINDOW * stdscr.48_19;
  int _20;
  struct player_info * _21;
  int _22;
  struct player_info * _23;
  int _24;
  struct WINDOW * stdscr.49_25;
  struct WINDOW * stdscr.50_26;
  struct WINDOW * stdscr.51_27;
  struct player_info * _28;
  struct player_info * _29;
  struct WINDOW * stdscr.52_30;
  char * * _31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  char * _35;
  sizetype _36;
  char * _37;
  char _38;
  char * * _39;
  long unsigned int _40;
  long unsigned int _41;
  char * * _42;
  char * _43;
  sizetype _44;
  char * _45;
  char _46;
  struct WINDOW * stdscr.53_47;
  struct WINDOW * stdscr.54_48;
  char * * _49;
  long unsigned int _50;
  long unsigned int _51;
  char * * _52;
  char * _53;
  sizetype _54;
  char * _55;
  char _56;
  int _57;
  struct player_info * _58;
  int _59;
  struct player_info * _60;
  int _61;
  struct WINDOW * stdscr.55_62;
  struct WINDOW * stdscr.56_63;
  struct WINDOW * stdscr.57_64;
  struct player_info * _65;
  int _66;
  int _67;
  struct player_info * _68;
  int _69;
  struct player_info * _70;
  int _71;
  struct WINDOW * stdscr.58_72;
  struct WINDOW * stdscr.59_73;
  struct WINDOW * stdscr.60_74;
  struct player_info * _75;
  int _76;
  struct player_info * _77;
  int _78;
  struct WINDOW * stdscr.61_79;
  struct player_info * _80;
  int _81;
  struct player_info * _82;
  struct player_info * _83;
  struct WINDOW * stdscr.62_84;
  char * * _85;
  long unsigned int _86;
  long unsigned int _87;
  char * * _88;
  char * _89;
  sizetype _90;
  char * _91;
  char _92;
  char * * _93;
  long unsigned int _94;
  long unsigned int _95;
  char * * _96;
  char * _97;
  sizetype _98;
  char * _99;
  char _100;
  struct WINDOW * stdscr.63_101;
  struct WINDOW * stdscr.64_102;
  char * * _103;
  long unsigned int _104;
  long unsigned int _105;
  char * * _106;
  char * _107;
  sizetype _108;
  char * _109;
  char _110;
  int _111;
  struct player_info * _112;
  int _113;
  struct player_info * _114;
  int _115;
  struct WINDOW * stdscr.65_116;
  struct WINDOW * stdscr.66_117;
  struct WINDOW * stdscr.67_118;
  char BESTIA_ON.68_119;
  char BESTIA_ON.69_120;
  int _121;
  int _122;
  struct WINDOW * stdscr.70_123;
  struct WINDOW * stdscr.71_124;
  struct WINDOW * stdscr.72_125;
  struct player_info * _126;
  int _127;
  int _128;
  struct player_info * _129;
  int _130;
  int _131;
  struct player_info * _132;
  struct player_info * _133;
  struct WINDOW * stdscr.73_134;
  char END.74_135;
  char BESTIA_ON.75_136;
  long unsigned int bestia1.76_137;
  struct player_info * _138;
  struct player_info * _139;
  struct WINDOW * stdscr.77_140;
  int _141;
  int _142;
  void * _306;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  bestia_licznik_166 = 0;
  b1_167 = 0;
  b2_168 = 0;
  x_pom_169 = 0;
  y_pom_170 = 0;
  licznik_171 = 0;
  sem_p1_174 = sem_open ("shm_p1", 64, 511, 0);
  sem_p1_pom_176 = sem_open ("shm_p1_pom", 64, 511, 0);
  sem_p2_178 = sem_open ("shm_p2", 64, 511, 0);
  sem_p2_pom_180 = sem_open ("shm_p2_pom", 64, 511, 0);
  sem_bestia1_182 = sem_open ("shm_bestia1", 64, 511, 0);
  sem_bestia2_184 = sem_open ("shm_bestia2", 64, 511, 0);
  init_pair (2, 7, 5);
  q_187 = pom_186(D);
  _1 = memcmp (q_187, "shm_p2", 6);
  if (_1 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  serwerinfo.pom = 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 4, loop depth 0
;;    pred:       2
  serwerinfo.pom = 2;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       3
;;                4
  _2 = getpid ();
  serwerinfo.PID = _2;
  serwerinfo.runda = 0;
  serwerinfo.skarb.count_one_coin = 0;
  serwerinfo.skarb.count_treasure_coin = 0;
  serwerinfo.skarb.count_large_treasure_coin = 0;
  _3 = pobierz_plansze ();
  serwerinfo.mapa = _3;
  oboz_random (&serwerinfo);
  _4 = serwerinfo.mapa;
  drukuj_plansze (_4);
  _5 = player_set ("shm_p1");
  serwerinfo.player1 = _5;
  _6 = player_set ("shm_p2");
  serwerinfo.player2 = _6;
  _7 = serwerinfo.player1;
  _8 = getpid ();
  _7->PID_serwer = _8;
  _9 = serwerinfo.player2;
  _10 = getpid ();
  _9->PID_serwer = _10;
  player_position_random (&serwerinfo);
  userinfo.serwer = &serwerinfo;
;;    succ:       6

;;   basic block 6, loop depth 1
;;    pred:       5
;;                48
  # bestia_licznik_143 = PHI <bestia_licznik_166(5), bestia_licznik_144(48)>
  # b1_145 = PHI <b1_167(5), b1_147(48)>
  # b2_148 = PHI <b2_168(5), b2_150(48)>
  _11 = serwerinfo.player1;
  _12 = serwerinfo.runda;
  _11->runda = _12;
  _13 = serwerinfo.player2;
  _14 = serwerinfo.runda;
  _13->runda = _14;
  userinfo.user = 1;
  _15 = serwerinfo.mapa;
  drukuj_plansze (_15);
  i_214 = 0;
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 7, loop depth 2
;;    pred:       10
  _16 = serwerinfo.skarb.value_all_dropped_coin[i_151];
  if (_16 != -1)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 2
;;    pred:       7
  _17 = serwerinfo.skarb.dropped_coin[i_151][1];
  _18 = serwerinfo.skarb.dropped_coin[i_151][0];
  stdscr.48_19 = stdscr;
  wmove (stdscr.48_19, _18, _17);
  printw ("D");
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       7
;;                8
  i_217 = i_151 + 1;
;;    succ:       10

;;   basic block 10, loop depth 2
;;    pred:       6
;;                9
  # i_151 = PHI <i_214(6), i_217(9)>
  _20 = serwerinfo.skarb.count_drop_coin;
  if (i_151 < _20)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       7
;;                11

;;   basic block 11, loop depth 1
;;    pred:       10
  skarbunio (&serwerinfo);
  _21 = serwerinfo.player1;
  _22 = _21->x_current;
  _23 = serwerinfo.player1;
  _24 = _23->y_current;
  stdscr.49_25 = stdscr;
  wmove (stdscr.49_25, _24, _22);
  stdscr.50_26 = stdscr;
  wattr_on (stdscr.50_26, 512, 0B);
  printw ("1");
  stdscr.51_27 = stdscr;
  wattr_off (stdscr.51_27, 512, 0B);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  if (b1_145 == 0)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       12
;;                19

;;   basic block 12, loop depth 1
;;    pred:       11
  _28 = serwerinfo.player1;
  x_pom_225 = _28->x_current;
  _29 = serwerinfo.player1;
  y_pom_226 = _29->y_current;
  if (b1_145 == 0)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       13
;;                19

;;   basic block 13, loop depth 1
;;    pred:       12
  step1_krzak (&serwerinfo);
  b1_229 = step1 (&serwerinfo);
  stdscr.52_30 = stdscr;
  wmove (stdscr.52_30, y_pom_226, x_pom_225);
  _31 = serwerinfo.mapa;
  _32 = (long unsigned int) y_pom_226;
  _33 = _32 * 8;
  _34 = _31 + _33;
  _35 = *_34;
  _36 = (sizetype) x_pom_225;
  _37 = _35 + _36;
  _38 = *_37;
  if (_38 == 77)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 1
;;    pred:       13
  printw (".");
  goto <bb 18>; [INV]
;;    succ:       18

;;   basic block 15, loop depth 1
;;    pred:       13
  _39 = serwerinfo.mapa;
  _40 = (long unsigned int) y_pom_226;
  _41 = _40 * 8;
  _42 = _39 + _41;
  _43 = *_42;
  _44 = (sizetype) x_pom_225;
  _45 = _43 + _44;
  _46 = *_45;
  if (_46 == 65)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       16
;;                17

;;   basic block 16, loop depth 1
;;    pred:       15
  stdscr.53_47 = stdscr;
  wattr_on (stdscr.53_47, 2816, 0B);
  printw ("A");
  stdscr.54_48 = stdscr;
  wattr_off (stdscr.54_48, 2816, 0B);
  goto <bb 18>; [INV]
;;    succ:       18

;;   basic block 17, loop depth 1
;;    pred:       15
  _49 = serwerinfo.mapa;
  _50 = (long unsigned int) y_pom_226;
  _51 = _50 * 8;
  _52 = _49 + _51;
  _53 = *_52;
  _54 = (sizetype) x_pom_225;
  _55 = _53 + _54;
  _56 = *_55;
  _57 = (int) _56;
  printw ("%c", _57);
;;    succ:       18

;;   basic block 18, loop depth 1
;;    pred:       14
;;                16
;;                17
  _58 = serwerinfo.player1;
  _59 = _58->x_current;
  _60 = serwerinfo.player1;
  _61 = _60->y_current;
  stdscr.55_62 = stdscr;
  wmove (stdscr.55_62, _61, _59);
  stdscr.56_63 = stdscr;
  wattr_on (stdscr.56_63, 512, 0B);
  printw ("1");
  stdscr.57_64 = stdscr;
  wattr_off (stdscr.57_64, 512, 0B);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
;;    succ:       19

;;   basic block 19, loop depth 1
;;    pred:       11
;;                12
;;                18
  # b1_146 = PHI <b1_145(11), b1_145(12), b1_229(18)>
  if (b1_146 > 0)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 1
;;    pred:       19
  b1_242 = b1_146 + -1;
;;    succ:       21

;;   basic block 21, loop depth 1
;;    pred:       19
;;                20
  # b1_147 = PHI <b1_146(19), b1_242(20)>
  _65 = serwerinfo.player2;
  _66 = _65->PID;
  _67 = kill (_66, 0);
  if (_67 == 0)
    goto <bb 22>; [INV]
  else
    goto <bb 23>; [INV]
;;    succ:       22
;;                23

;;   basic block 22, loop depth 1
;;    pred:       21
  _68 = serwerinfo.player2;
  _69 = _68->x_current;
  _70 = serwerinfo.player2;
  _71 = _70->y_current;
  stdscr.58_72 = stdscr;
  wmove (stdscr.58_72, _71, _69);
  stdscr.59_73 = stdscr;
  wattr_on (stdscr.59_73, 512, 0B);
  printw ("2");
  stdscr.60_74 = stdscr;
  wattr_off (stdscr.60_74, 512, 0B);
;;    succ:       23

;;   basic block 23, loop depth 1
;;    pred:       21
;;                22
  _75 = serwerinfo.player2;
  _76 = _75->x_current;
  _77 = serwerinfo.player2;
  _78 = _77->y_current;
  stdscr.61_79 = stdscr;
  wmove (stdscr.61_79, _78, _76);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  if (b2_148 == 0)
    goto <bb 24>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       24
;;                32

;;   basic block 24, loop depth 1
;;    pred:       23
  _80 = serwerinfo.player2;
  _81 = _80->y_current;
  if (_81 != 0)
    goto <bb 25>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       25
;;                32

;;   basic block 25, loop depth 1
;;    pred:       24
  _82 = serwerinfo.player2;
  x_pom_251 = _82->x_current;
  _83 = serwerinfo.player2;
  y_pom_252 = _83->y_current;
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  if (b2_148 == 0)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       26
;;                32

;;   basic block 26, loop depth 1
;;    pred:       25
  step2_krzak (&serwerinfo);
  b2_257 = step2 (&serwerinfo);
  stdscr.62_84 = stdscr;
  wmove (stdscr.62_84, y_pom_252, x_pom_251);
  _85 = serwerinfo.mapa;
  _86 = (long unsigned int) y_pom_252;
  _87 = _86 * 8;
  _88 = _85 + _87;
  _89 = *_88;
  _90 = (sizetype) x_pom_251;
  _91 = _89 + _90;
  _92 = *_91;
  if (_92 == 77)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 1
;;    pred:       26
  printw (".");
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 28, loop depth 1
;;    pred:       26
  _93 = serwerinfo.mapa;
  _94 = (long unsigned int) y_pom_252;
  _95 = _94 * 8;
  _96 = _93 + _95;
  _97 = *_96;
  _98 = (sizetype) x_pom_251;
  _99 = _97 + _98;
  _100 = *_99;
  if (_100 == 65)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 1
;;    pred:       28
  stdscr.63_101 = stdscr;
  wattr_on (stdscr.63_101, 2816, 0B);
  printw ("A");
  stdscr.64_102 = stdscr;
  wattr_off (stdscr.64_102, 2816, 0B);
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 30, loop depth 1
;;    pred:       28
  _103 = serwerinfo.mapa;
  _104 = (long unsigned int) y_pom_252;
  _105 = _104 * 8;
  _106 = _103 + _105;
  _107 = *_106;
  _108 = (sizetype) x_pom_251;
  _109 = _107 + _108;
  _110 = *_109;
  _111 = (int) _110;
  printw ("%c", _111);
;;    succ:       31

;;   basic block 31, loop depth 1
;;    pred:       27
;;                29
;;                30
  _112 = serwerinfo.player2;
  _113 = _112->x_current;
  _114 = serwerinfo.player2;
  _115 = _114->y_current;
  stdscr.65_116 = stdscr;
  wmove (stdscr.65_116, _115, _113);
  stdscr.66_117 = stdscr;
  wattr_on (stdscr.66_117, 512, 0B);
  printw ("2");
  stdscr.67_118 = stdscr;
  wattr_off (stdscr.67_118, 512, 0B);
  wizja1 (&userinfo);
  wizja2 (&userinfo);
;;    succ:       32

;;   basic block 32, loop depth 1
;;    pred:       23
;;                24
;;                25
;;                31
  # b2_149 = PHI <b2_148(23), b2_148(24), b2_148(25), b2_257(31)>
  if (b2_149 > 0)
    goto <bb 33>; [INV]
  else
    goto <bb 34>; [INV]
;;    succ:       33
;;                34

;;   basic block 33, loop depth 1
;;    pred:       32
  b2_270 = b2_149 + -1;
;;    succ:       34

;;   basic block 34, loop depth 1
;;    pred:       32
;;                33
  # b2_150 = PHI <b2_149(32), b2_270(33)>
  if (bestia_licznik_143 == 0)
    goto <bb 35>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       35
;;                37

;;   basic block 35, loop depth 1
;;    pred:       34
  BESTIA_ON.68_119 = BESTIA_ON;
  if (BESTIA_ON.68_119 != 0)
    goto <bb 36>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       36
;;                37

;;   basic block 36, loop depth 1
;;    pred:       35
  serwerinfo.bestia.alive = 1;
  pthread_create (&bestia1, 0B, bestia, &serwerinfo);
  bestia_licznik_273 = 1;
;;    succ:       37

;;   basic block 37, loop depth 1
;;    pred:       34
;;                35
;;                36
  # bestia_licznik_144 = PHI <bestia_licznik_143(34), bestia_licznik_143(35), bestia_licznik_273(36)>
  BESTIA_ON.69_120 = BESTIA_ON;
  if (BESTIA_ON.69_120 != 0)
    goto <bb 38>; [INV]
  else
    goto <bb 39>; [INV]
;;    succ:       38
;;                39

;;   basic block 38, loop depth 1
;;    pred:       37
  sem_post (sem_bestia1_182);
  sem_wait (sem_bestia2_184);
  _121 = serwerinfo.bestia.x;
  _122 = serwerinfo.bestia.y;
  stdscr.70_123 = stdscr;
  wmove (stdscr.70_123, _122, _121);
  stdscr.71_124 = stdscr;
  wattr_on (stdscr.71_124, 3072, 0B);
  printw ("*");
  stdscr.72_125 = stdscr;
  wattr_off (stdscr.72_125, 3072, 0B);
  bestia_kolizja (&serwerinfo);
;;    succ:       39

;;   basic block 39, loop depth 1
;;    pred:       37
;;                38
  wizja1 (&userinfo);
  wizja2 (&userinfo);
  player_kolizja (&serwerinfo);
  collect_skarb (&serwerinfo);
  _126 = serwerinfo.player1;
  _127 = _126->PID;
  _128 = kill (_127, 0);
  if (_128 == 0)
    goto <bb 40>; [INV]
  else
    goto <bb 41>; [INV]
;;    succ:       40
;;                41

;;   basic block 40, loop depth 1
;;    pred:       39
  sem_post (sem_p1_174);
  sem_wait (sem_p1_pom_176);
;;    succ:       41

;;   basic block 41, loop depth 1
;;    pred:       39
;;                40
  _129 = serwerinfo.player2;
  _130 = _129->PID;
  _131 = kill (_130, 0);
  if (_131 == 0)
    goto <bb 42>; [INV]
  else
    goto <bb 43>; [INV]
;;    succ:       42
;;                43

;;   basic block 42, loop depth 1
;;    pred:       41
  sem_post (sem_p2_178);
  sem_wait (sem_p2_pom_180);
  goto <bb 44>; [INV]
;;    succ:       44

;;   basic block 43, loop depth 1
;;    pred:       41
  _132 = serwerinfo.player2;
  _132->y_current = 0;
  _133 = serwerinfo.player2;
  _133->x_current = 0;
;;    succ:       44

;;   basic block 44, loop depth 1
;;    pred:       42
;;                43
  oboz_coins (&serwerinfo);
  druk_info_plansza_s (&serwerinfo);
  stdscr.73_134 = stdscr;
  wrefresh (stdscr.73_134);
  END.74_135 = END;
  if (END.74_135 == 113)
    goto <bb 45>; [INV]
  else
    goto <bb 48>; [INV]
;;    succ:       45
;;                48

;;   basic block 45, loop depth 0
;;    pred:       44
  sem_post (sem_bestia1_182);
  BESTIA_ON.75_136 = BESTIA_ON;
  if (BESTIA_ON.75_136 != 0)
    goto <bb 46>; [INV]
  else
    goto <bb 47>; [INV]
;;    succ:       46
;;                47

;;   basic block 46, loop depth 0
;;    pred:       45
  bestia1.76_137 = bestia1;
  pthread_join (bestia1.76_137, 0B);
;;    succ:       47

;;   basic block 47, loop depth 0
;;    pred:       45
;;                46
  _138 = serwerinfo.player1;
  munmap (_138, 22576);
  _139 = serwerinfo.player2;
  munmap (_139, 22576);
  shm_unlink ("shm_p1");
  shm_unlink ("shm_p1_pom");
  shm_unlink ("shm_p2");
  shm_unlink ("shm_p2_pom");
  shm_unlink ("shm_bestia1");
  shm_unlink ("shm_bestia2");
  _306 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  bestia1 ={v} {CLOBBER};
  serwerinfo ={v} {CLOBBER};
  userinfo ={v} {CLOBBER};
  goto <bb 49>; [INV]
;;    succ:       49

;;   basic block 48, loop depth 1
;;    pred:       44
  stdscr.77_140 = stdscr;
  wclear (stdscr.77_140);
  usleep (1000000);
  _141 = serwerinfo.runda;
  _142 = _141 + 1;
  serwerinfo.runda = _142;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 49, loop depth 0
;;    pred:       47
<L53>:
  return _306;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; bestia_licznik_166 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 bestia_licznik+0 S4 A32])
        (const_int 0 [0])) "function.c":314 -1
     (nil))

;; b1_167 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
        (const_int 0 [0])) "function.c":315 -1
     (nil))

;; b2_168 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
        (const_int 0 [0])) "function.c":316 -1
     (nil))

;; x_pom_169 = 0;

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":317 -1
     (nil))

;; y_pom_170 = 0;

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":318 -1
     (nil))

;; licznik_171 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 licznik+0 S4 A32])
        (const_int 0 [0])) "function.c":319 -1
     (nil))

;; sem_p1_174 = sem_open ("shm_p1", 64, 511, 0);

(insn 12 11 13 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":324 -1
     (nil))

(insn 13 12 14 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":324 -1
     (nil))

(insn 14 13 15 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":324 -1
     (nil))

(insn 15 14 16 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7cd0f0d1b0 *.LC34>)) "function.c":324 -1
     (nil))

(insn 16 15 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":324 -1
     (nil))

(call_insn 17 16 18 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":324 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 18 17 19 (set (reg:DI 231)
        (reg:DI 0 ax)) "function.c":324 -1
     (nil))

(insn 19 18 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])
        (reg:DI 231)) "function.c":324 -1
     (nil))

;; sem_p1_pom_176 = sem_open ("shm_p1_pom", 64, 511, 0);

(insn 20 19 21 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":325 -1
     (nil))

(insn 21 20 22 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":325 -1
     (nil))

(insn 22 21 23 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":325 -1
     (nil))

(insn 23 22 24 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f7cd0f0d240 *.LC35>)) "function.c":325 -1
     (nil))

(insn 24 23 25 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":325 -1
     (nil))

(call_insn 25 24 26 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":325 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 26 25 27 (set (reg:DI 232)
        (reg:DI 0 ax)) "function.c":325 -1
     (nil))

(insn 27 26 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])
        (reg:DI 232)) "function.c":325 -1
     (nil))

;; sem_p2_178 = sem_open ("shm_p2", 64, 511, 0);

(insn 28 27 29 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":327 -1
     (nil))

(insn 29 28 30 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":327 -1
     (nil))

(insn 30 29 31 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":327 -1
     (nil))

(insn 31 30 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":327 -1
     (nil))

(insn 32 31 33 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":327 -1
     (nil))

(call_insn 33 32 34 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 34 33 35 (set (reg:DI 233)
        (reg:DI 0 ax)) "function.c":327 -1
     (nil))

(insn 35 34 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [18 sem_p2+0 S8 A64])
        (reg:DI 233)) "function.c":327 -1
     (nil))

;; sem_p2_pom_180 = sem_open ("shm_p2_pom", 64, 511, 0);

(insn 36 35 37 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":328 -1
     (nil))

(insn 37 36 38 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":328 -1
     (nil))

(insn 38 37 39 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":328 -1
     (nil))

(insn 39 38 40 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f7cd0f0d360 *.LC37>)) "function.c":328 -1
     (nil))

(insn 40 39 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":328 -1
     (nil))

(call_insn 41 40 42 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":328 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 42 41 43 (set (reg:DI 234)
        (reg:DI 0 ax)) "function.c":328 -1
     (nil))

(insn 43 42 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [18 sem_p2_pom+0 S8 A64])
        (reg:DI 234)) "function.c":328 -1
     (nil))

;; sem_bestia1_182 = sem_open ("shm_bestia1", 64, 511, 0);

(insn 44 43 45 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":330 -1
     (nil))

(insn 45 44 46 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":330 -1
     (nil))

(insn 46 45 47 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":330 -1
     (nil))

(insn 47 46 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7cd0ef3870 *.LC32>)) "function.c":330 -1
     (nil))

(insn 48 47 49 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":330 -1
     (nil))

(call_insn 49 48 50 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":330 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 50 49 51 (set (reg:DI 235)
        (reg:DI 0 ax)) "function.c":330 -1
     (nil))

(insn 51 50 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [18 sem_bestia1+0 S8 A64])
        (reg:DI 235)) "function.c":330 -1
     (nil))

;; sem_bestia2_184 = sem_open ("shm_bestia2", 64, 511, 0);

(insn 52 51 53 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":331 -1
     (nil))

(insn 53 52 54 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":331 -1
     (nil))

(insn 54 53 55 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":331 -1
     (nil))

(insn 55 54 56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7cd0ef3900 *.LC33>)) "function.c":331 -1
     (nil))

(insn 56 55 57 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":331 -1
     (nil))

(call_insn 57 56 58 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":331 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 58 57 59 (set (reg:DI 236)
        (reg:DI 0 ax)) "function.c":331 -1
     (nil))

(insn 59 58 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [18 sem_bestia2+0 S8 A64])
        (reg:DI 236)) "function.c":331 -1
     (nil))

;; init_pair (2, 7, 5);

(insn 60 59 61 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) "function.c":334 -1
     (nil))

(insn 61 60 62 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":334 -1
     (nil))

(insn 62 61 63 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "function.c":334 -1
     (nil))

(call_insn 63 62 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":334 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; q_187 = pom_186(D);

(insn 64 63 65 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36216 [0xffffffffffff7288])) [19 pom+0 S8 A64])) "function.c":338 -1
     (nil))

(insn 65 64 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [10 q+0 S8 A64])
        (reg/f:DI 237)) "function.c":338 -1
     (nil))

;; _1 = memcmp (q_187, "shm_p2", 6);

(insn 66 65 67 (set (reg:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [10 q+0 S8 A64])) "function.c":340 -1
     (nil))

(insn 67 66 68 (set (reg:DI 1 dx)
        (const_int 6 [0x6])) "function.c":340 -1
     (nil))

(insn 68 67 69 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":340 -1
     (nil))

(insn 69 68 70 (set (reg:DI 5 di)
        (reg:DI 238)) "function.c":340 -1
     (nil))

(call_insn/i 70 69 71 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f7cd1238000 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) "function.c":340 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

(insn 71 70 0 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "function.c":340 -1
     (nil))

;; if (_1 == 0)

(insn 72 71 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 0 [0]))) "function.c":340 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":340 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; serwerinfo.pom = 1;

(insn 75 74 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36168 [0xffffffffffff72b8])) [3 serwerinfo.pom+0 S4 A64])
        (const_int 1 [0x1])) "function.c":342 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 78 77 79 46 (nil) [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; serwerinfo.pom = 2;

(insn 80 79 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36168 [0xffffffffffff72b8])) [3 serwerinfo.pom+0 S4 A64])
        (const_int 2 [0x2])) "function.c":346 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 81 80 82 47 (nil) [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; _2 = getpid ();

(call_insn 83 82 84 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":349 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 84 83 0 (set (reg:SI 88 [ _2 ])
        (reg:SI 0 ax)) "function.c":349 -1
     (nil))

;; serwerinfo.PID = _2;

(insn 85 84 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36192 [0xffffffffffff72a0])) [3 serwerinfo.PID+0 S4 A64])
        (reg:SI 88 [ _2 ])) "function.c":349 -1
     (nil))

;; serwerinfo.runda = 0;

(insn 86 85 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])
        (const_int 0 [0])) "function.c":350 -1
     (nil))

;; serwerinfo.skarb.count_one_coin = 0;

(insn 87 86 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28144 [0xffffffffffff9210])) [3 serwerinfo.skarb.count_one_coin+0 S4 A64])
        (const_int 0 [0])) "function.c":352 -1
     (nil))

;; serwerinfo.skarb.count_treasure_coin = 0;

(insn 88 87 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20140 [0xffffffffffffb154])) [3 serwerinfo.skarb.count_treasure_coin+0 S4 A32])
        (const_int 0 [0])) "function.c":353 -1
     (nil))

;; serwerinfo.skarb.count_large_treasure_coin = 0;

(insn 89 88 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12136 [0xffffffffffffd098])) [3 serwerinfo.skarb.count_large_treasure_coin+0 S4 A64])
        (const_int 0 [0])) "function.c":354 -1
     (nil))

;; _3 = pobierz_plansze ();

(insn 90 89 91 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":356 -1
     (nil))

(call_insn 91 90 92 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pobierz_plansze") [flags 0x3]  <function_decl 0x7f7cd1169600 pobierz_plansze>) [0 pobierz_plansze S1 A8])
            (const_int 0 [0]))) "function.c":356 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))

(insn 92 91 0 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "function.c":356 -1
     (nil))

;; serwerinfo.mapa = _3;

(insn 93 92 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])
        (reg/f:DI 89 [ _3 ])) "function.c":356 -1
     (nil))

;; oboz_random (&serwerinfo);

(insn 94 93 95 (parallel [
            (set (reg:DI 239)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":358 -1
     (nil))

(insn 95 94 96 (set (reg:DI 5 di)
        (reg:DI 239)) "function.c":358 -1
     (nil))

(call_insn 96 95 0 (call (mem:QI (symbol_ref:DI ("oboz_random") [flags 0x3]  <function_decl 0x7f7cd1178b00 oboz_random>) [0 oboz_random S1 A8])
        (const_int 0 [0])) "function.c":358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _4 = serwerinfo.mapa;

(insn 97 96 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":360 -1
     (nil))

;; drukuj_plansze (_4);

(insn 98 97 99 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "function.c":360 -1
     (nil))

(call_insn 99 98 0 (call (mem:QI (symbol_ref:DI ("drukuj_plansze") [flags 0x3]  <function_decl 0x7f7cd1169700 drukuj_plansze>) [0 drukuj_plansze S1 A8])
        (const_int 0 [0])) "function.c":360 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _5 = player_set ("shm_p1");

(insn 100 99 101 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7cd0f0d1b0 *.LC34>)) "function.c":362 -1
     (nil))

(call_insn 101 100 102 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("player_set") [flags 0x3]  <function_decl 0x7f7cd1169f00 player_set>) [0 player_set S1 A8])
            (const_int 0 [0]))) "function.c":362 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 102 101 0 (set (reg/f:DI 91 [ _5 ])
        (reg:DI 0 ax)) "function.c":362 -1
     (nil))

;; serwerinfo.player1 = _5;

(insn 103 102 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])
        (reg/f:DI 91 [ _5 ])) "function.c":362 -1
     (nil))

;; _6 = player_set ("shm_p2");

(insn 104 103 105 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":363 -1
     (nil))

(call_insn 105 104 106 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("player_set") [flags 0x3]  <function_decl 0x7f7cd1169f00 player_set>) [0 player_set S1 A8])
            (const_int 0 [0]))) "function.c":363 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 106 105 0 (set (reg/f:DI 92 [ _6 ])
        (reg:DI 0 ax)) "function.c":363 -1
     (nil))

;; serwerinfo.player2 = _6;

(insn 107 106 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])
        (reg/f:DI 92 [ _6 ])) "function.c":363 -1
     (nil))

;; _7 = serwerinfo.player1;

(insn 108 107 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":365 -1
     (nil))

;; _8 = getpid ();

(call_insn 109 108 110 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":365 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 110 109 0 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "function.c":365 -1
     (nil))

;; _7->PID_serwer = _8;

(insn 111 110 0 (set (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 4 [0x4])) [3 _7->PID_serwer+0 S4 A32])
        (reg:SI 94 [ _8 ])) "function.c":365 -1
     (nil))

;; _9 = serwerinfo.player2;

(insn 112 111 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":366 -1
     (nil))

;; _10 = getpid ();

(call_insn 113 112 114 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":366 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 114 113 0 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "function.c":366 -1
     (nil))

;; _9->PID_serwer = _10;

(insn 115 114 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 4 [0x4])) [3 _9->PID_serwer+0 S4 A32])
        (reg:SI 96 [ _10 ])) "function.c":366 -1
     (nil))

;; player_position_random (&serwerinfo);

(insn 116 115 117 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":368 -1
     (nil))

(insn 117 116 118 (set (reg:DI 5 di)
        (reg:DI 240)) "function.c":368 -1
     (nil))

(call_insn 118 117 0 (call (mem:QI (symbol_ref:DI ("player_position_random") [flags 0x3]  <function_decl 0x7f7cd1178d00 player_position_random>) [0 player_position_random S1 A8])
        (const_int 0 [0])) "function.c":368 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; userinfo.serwer = &serwerinfo;

(insn 119 118 120 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":373 -1
     (nil))

(insn 120 119 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36208 [0xffffffffffff7290])) [12 userinfo.serwer+0 S8 A64])
        (reg:DI 241)) "function.c":373 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _11 = serwerinfo.player1;

(insn 122 121 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":377 -1
     (nil))

;; _12 = serwerinfo.runda;

(insn 123 122 0 (set (reg:SI 98 [ _12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])) "function.c":377 -1
     (nil))

;; _11->runda = _12;

(insn 124 123 0 (set (mem:SI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 22552 [0x5818])) [3 _11->runda+0 S4 A64])
        (reg:SI 98 [ _12 ])) "function.c":377 -1
     (nil))

;; _13 = serwerinfo.player2;

(insn 125 124 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":378 -1
     (nil))

;; _14 = serwerinfo.runda;

(insn 126 125 0 (set (reg:SI 100 [ _14 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])) "function.c":378 -1
     (nil))

;; _13->runda = _14;

(insn 127 126 0 (set (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 22552 [0x5818])) [3 _13->runda+0 S4 A64])
        (reg:SI 100 [ _14 ])) "function.c":378 -1
     (nil))

;; userinfo.user = 1;

(insn 128 127 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36200 [0xffffffffffff7298])) [3 userinfo.user+0 S4 A64])
        (const_int 1 [0x1])) "function.c":387 -1
     (nil))

;; _15 = serwerinfo.mapa;

(insn 129 128 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":389 -1
     (nil))

;; drukuj_plansze (_15);

(insn 130 129 131 (set (reg:DI 5 di)
        (reg/f:DI 101 [ _15 ])) "function.c":389 -1
     (nil))

(call_insn 131 130 0 (call (mem:QI (symbol_ref:DI ("drukuj_plansze") [flags 0x3]  <function_decl 0x7f7cd1169700 drukuj_plansze>) [0 drukuj_plansze S1 A8])
        (const_int 0 [0])) "function.c":389 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; i_214 = 0;

(insn 132 131 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":393 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _16 = serwerinfo.skarb.value_all_dropped_coin[i_151];

(insn 136 135 137 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":395 -1
     (nil))

(insn 137 136 138 (set (reg:DI 242)
        (sign_extend:DI (reg:SI 243))) "function.c":395 -1
     (nil))

(insn 138 137 139 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 242)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":395 -1
     (nil))

(insn 139 138 0 (set (reg:SI 102 [ _16 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 244)
                        (const_int 4 [0x4]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -36192 [0xffffffffffff72a0])) [3 serwerinfo.skarb.value_all_dropped_coin S4 A32])) "function.c":395 -1
     (nil))

;; if (_16 != -1)

(insn 140 139 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ _16 ])
            (const_int -1 [0xffffffffffffffff]))) "function.c":395 -1
     (nil))

(jump_insn 141 140 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":395 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _17 = serwerinfo.skarb.dropped_coin[i_151][1];

(insn 143 142 144 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":397 -1
     (nil))

(insn 144 143 145 (set (reg:DI 245)
        (sign_extend:DI (reg:SI 246))) "function.c":397 -1
     (nil))

(insn 145 144 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 245)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -12124 [0xffffffffffffd0a4])) [3 serwerinfo.skarb.dropped_coin S4 A32])) "function.c":397 -1
     (nil))

;; _18 = serwerinfo.skarb.dropped_coin[i_151][0];

(insn 146 145 147 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":397 -1
     (nil))

(insn 147 146 148 (set (reg:DI 247)
        (sign_extend:DI (reg:SI 248))) "function.c":397 -1
     (nil))

(insn 148 147 149 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg:DI 247)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":397 -1
     (nil))

(insn 149 148 0 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 249)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -36192 [0xffffffffffff72a0])) [3 serwerinfo.skarb.dropped_coin S4 A64])) "function.c":397 -1
     (nil))

;; stdscr.48_19 = stdscr;

(insn 150 149 0 (set (reg/f:DI 105 [ stdscr.48_19 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":397 -1
     (nil))

;; wmove (stdscr.48_19, _18, _17);

(insn 151 150 152 (set (reg:SI 1 dx)
        (reg:SI 103 [ _17 ])) "function.c":397 -1
     (nil))

(insn 152 151 153 (set (reg:SI 4 si)
        (reg:SI 104 [ _18 ])) "function.c":397 -1
     (nil))

(insn 153 152 154 (set (reg:DI 5 di)
        (reg/f:DI 105 [ stdscr.48_19 ])) "function.c":397 -1
     (nil))

(call_insn 154 153 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":397 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("D");

(insn 155 154 156 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7cd0ef3120 *.LC24>)) "function.c":398 -1
     (nil))

(insn 156 155 157 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":398 -1
     (nil))

(call_insn 157 156 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":398 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; Generating RTL for gimple basic block 9

;; 

(code_label 158 157 159 49 (nil) [0 uses])

(note 159 158 0 NOTE_INSN_BASIC_BLOCK)

;; i_217 = i_151 + 1;

(insn 160 159 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":393 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 161 160 162 48 (nil) [0 uses])

(note 162 161 0 NOTE_INSN_BASIC_BLOCK)

;; _20 = serwerinfo.skarb.count_drop_coin;

(insn 163 162 0 (set (reg:SI 106 [ _20 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12132 [0xffffffffffffd09c])) [3 serwerinfo.skarb.count_drop_coin+0 S4 A32])) "function.c":393 -1
     (nil))

;; if (i_151 < _20)

(insn 165 163 166 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
            (reg:SI 106 [ _20 ]))) "function.c":393 -1
     (nil))

(jump_insn 166 165 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) "function.c":393 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; skarbunio (&serwerinfo);

(insn 168 167 169 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":409 -1
     (nil))

(insn 169 168 170 (set (reg:DI 5 di)
        (reg:DI 250)) "function.c":409 -1
     (nil))

(call_insn 170 169 0 (call (mem:QI (symbol_ref:DI ("skarbunio") [flags 0x3]  <function_decl 0x7f7cd0d1b000 skarbunio>) [0 skarbunio S1 A8])
        (const_int 0 [0])) "function.c":409 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _21 = serwerinfo.player1;

(insn 171 170 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":411 -1
     (nil))

;; _22 = _21->x_current;

(insn 172 171 0 (set (reg:SI 108 [ _22 ])
        (mem:SI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 12 [0xc])) [3 _21->x_current+0 S4 A32])) "function.c":411 -1
     (nil))

;; _23 = serwerinfo.player1;

(insn 173 172 0 (set (reg/f:DI 109 [ _23 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":411 -1
     (nil))

;; _24 = _23->y_current;

(insn 174 173 0 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 16 [0x10])) [3 _23->y_current+0 S4 A64])) "function.c":411 -1
     (nil))

;; stdscr.49_25 = stdscr;

(insn 175 174 0 (set (reg/f:DI 111 [ stdscr.49_25 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":411 -1
     (nil))

;; wmove (stdscr.49_25, _24, _22);

(insn 176 175 177 (set (reg:SI 1 dx)
        (reg:SI 108 [ _22 ])) "function.c":411 -1
     (nil))

(insn 177 176 178 (set (reg:SI 4 si)
        (reg:SI 110 [ _24 ])) "function.c":411 -1
     (nil))

(insn 178 177 179 (set (reg:DI 5 di)
        (reg/f:DI 111 [ stdscr.49_25 ])) "function.c":411 -1
     (nil))

(call_insn 179 178 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":411 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.50_26 = stdscr;

(insn 180 179 0 (set (reg/f:DI 112 [ stdscr.50_26 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":413 -1
     (nil))

;; wattr_on (stdscr.50_26, 512, 0B);

(insn 181 180 182 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":413 -1
     (nil))

(insn 182 181 183 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":413 -1
     (nil))

(insn 183 182 184 (set (reg:DI 5 di)
        (reg/f:DI 112 [ stdscr.50_26 ])) "function.c":413 -1
     (nil))

(call_insn 184 183 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":413 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("1");

(insn 185 184 186 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f7cd0f0d3f0 *.LC38>)) "function.c":414 -1
     (nil))

(insn 186 185 187 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":414 -1
     (nil))

(call_insn 187 186 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":414 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.51_27 = stdscr;

(insn 188 187 0 (set (reg/f:DI 113 [ stdscr.51_27 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":415 -1
     (nil))

;; wattr_off (stdscr.51_27, 512, 0B);

(insn 189 188 190 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":415 -1
     (nil))

(insn 190 189 191 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":415 -1
     (nil))

(insn 191 190 192 (set (reg:DI 5 di)
        (reg/f:DI 113 [ stdscr.51_27 ])) "function.c":415 -1
     (nil))

(call_insn 192 191 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":415 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; wizja1 (&userinfo);

(insn 193 192 194 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":417 -1
     (nil))

(insn 194 193 195 (set (reg:DI 5 di)
        (reg:DI 251)) "function.c":417 -1
     (nil))

(call_insn 195 194 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":417 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; wizja2 (&userinfo);

(insn 196 195 197 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":418 -1
     (nil))

(insn 197 196 198 (set (reg:DI 5 di)
        (reg:DI 252)) "function.c":418 -1
     (nil))

(call_insn 198 197 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":418 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; if (b1_145 == 0)

(insn 199 198 200 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
            (const_int 0 [0]))) "function.c":419 -1
     (nil))

(jump_insn 200 199 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":419 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _28 = serwerinfo.player1;

(insn 202 201 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":426 -1
     (nil))

;; x_pom_225 = _28->x_current;

(insn 203 202 204 (set (reg:SI 253)
        (mem:SI (plus:DI (reg/f:DI 114 [ _28 ])
                (const_int 12 [0xc])) [3 _28->x_current+0 S4 A32])) "function.c":426 -1
     (nil))

(insn 204 203 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])
        (reg:SI 253)) "function.c":426 -1
     (nil))

;; _29 = serwerinfo.player1;

(insn 205 204 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":427 -1
     (nil))

;; y_pom_226 = _29->y_current;

(insn 206 205 207 (set (reg:SI 254)
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 16 [0x10])) [3 _29->y_current+0 S4 A64])) "function.c":427 -1
     (nil))

(insn 207 206 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])
        (reg:SI 254)) "function.c":427 -1
     (nil))

;; if (b1_145 == 0)

(insn 208 207 209 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
            (const_int 0 [0]))) "function.c":430 -1
     (nil))

(jump_insn 209 208 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":430 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; step1_krzak (&serwerinfo);

(insn 211 210 212 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":432 -1
     (nil))

(insn 212 211 213 (set (reg:DI 5 di)
        (reg:DI 255)) "function.c":432 -1
     (nil))

(call_insn 213 212 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step1_krzak") [flags 0x3]  <function_decl 0x7f7cd1178000 step1_krzak>) [0 step1_krzak S1 A8])
            (const_int 0 [0]))) "function.c":432 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; b1_229 = step1 (&serwerinfo);

(insn 214 213 215 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":433 -1
     (nil))

(insn 215 214 216 (set (reg:DI 5 di)
        (reg:DI 256)) "function.c":433 -1
     (nil))

(call_insn 216 215 217 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step1") [flags 0x3]  <function_decl 0x7f7cd1178200 step1>) [0 step1 S1 A8])
            (const_int 0 [0]))) "function.c":433 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 217 216 218 (set (reg:SI 257)
        (reg:SI 0 ax)) "function.c":433 -1
     (nil))

(insn 218 217 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
        (reg:SI 257)) "function.c":433 -1
     (nil))

;; stdscr.52_30 = stdscr;

(insn 219 218 0 (set (reg/f:DI 116 [ stdscr.52_30 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":434 -1
     (nil))

;; wmove (stdscr.52_30, y_pom_226, x_pom_225);

(insn 220 219 221 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":434 -1
     (nil))

(insn 221 220 222 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":434 -1
     (nil))

(insn 222 221 223 (set (reg:SI 1 dx)
        (reg:SI 258)) "function.c":434 -1
     (nil))

(insn 223 222 224 (set (reg:SI 4 si)
        (reg:SI 259)) "function.c":434 -1
     (nil))

(insn 224 223 225 (set (reg:DI 5 di)
        (reg/f:DI 116 [ stdscr.52_30 ])) "function.c":434 -1
     (nil))

(call_insn 225 224 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":434 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _31 = serwerinfo.mapa;

(insn 226 225 0 (set (reg/f:DI 117 [ _31 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":435 -1
     (nil))

;; _32 = (long unsigned int) y_pom_226;

(insn 227 226 228 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":435 -1
     (nil))

(insn 228 227 0 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 260))) "function.c":435 -1
     (nil))

;; _33 = _32 * 8;

(insn 229 228 0 (parallel [
            (set (reg:DI 119 [ _33 ])
                (ashift:DI (reg:DI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":435 -1
     (nil))

;; _34 = _31 + _33;

(insn 230 229 0 (parallel [
            (set (reg/f:DI 120 [ _34 ])
                (plus:DI (reg/f:DI 117 [ _31 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":435 -1
     (nil))

;; _35 = *_34;

(insn 231 230 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 120 [ _34 ]) [10 *_34+0 S8 A64])) "function.c":435 -1
     (nil))

;; _36 = (sizetype) x_pom_225;

(insn 232 231 233 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":435 -1
     (nil))

(insn 233 232 0 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 261))) "function.c":435 -1
     (nil))

;; _37 = _35 + _36;

(insn 234 233 0 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":435 -1
     (nil))

;; _38 = *_37;

(insn 235 234 0 (set (reg:QI 124 [ _38 ])
        (mem:QI (reg/f:DI 123 [ _37 ]) [0 *_37+0 S1 A8])) "function.c":435 -1
     (nil))

;; if (_38 == 77)

(insn 236 235 237 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _38 ])
            (const_int 77 [0x4d]))) "function.c":435 -1
     (nil))

(jump_insn 237 236 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":435 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; printw (".");

(insn 239 238 240 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":437 -1
     (nil))

(insn 240 239 241 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":437 -1
     (nil))

(call_insn 241 240 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":437 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; Generating RTL for gimple basic block 15

;; 

(code_label 244 243 245 52 (nil) [0 uses])

(note 245 244 0 NOTE_INSN_BASIC_BLOCK)

;; _39 = serwerinfo.mapa;

(insn 246 245 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":439 -1
     (nil))

;; _40 = (long unsigned int) y_pom_226;

(insn 247 246 248 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":439 -1
     (nil))

(insn 248 247 0 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 262))) "function.c":439 -1
     (nil))

;; _41 = _40 * 8;

(insn 249 248 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (ashift:DI (reg:DI 126 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":439 -1
     (nil))

;; _42 = _39 + _41;

(insn 250 249 0 (parallel [
            (set (reg/f:DI 128 [ _42 ])
                (plus:DI (reg/f:DI 125 [ _39 ])
                    (reg:DI 127 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":439 -1
     (nil))

;; _43 = *_42;

(insn 251 250 0 (set (reg/f:DI 129 [ _43 ])
        (mem/f:DI (reg/f:DI 128 [ _42 ]) [10 *_42+0 S8 A64])) "function.c":439 -1
     (nil))

;; _44 = (sizetype) x_pom_225;

(insn 252 251 253 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":439 -1
     (nil))

(insn 253 252 0 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 263))) "function.c":439 -1
     (nil))

;; _45 = _43 + _44;

(insn 254 253 0 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 129 [ _43 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":439 -1
     (nil))

;; _46 = *_45;

(insn 255 254 0 (set (reg:QI 132 [ _46 ])
        (mem:QI (reg/f:DI 131 [ _45 ]) [0 *_45+0 S1 A8])) "function.c":439 -1
     (nil))

;; if (_46 == 65)

(insn 256 255 257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ _46 ])
            (const_int 65 [0x41]))) "function.c":439 -1
     (nil))

(jump_insn 257 256 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":439 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; stdscr.53_47 = stdscr;

(insn 259 258 0 (set (reg/f:DI 133 [ stdscr.53_47 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":441 -1
     (nil))

;; wattr_on (stdscr.53_47, 2816, 0B);

(insn 260 259 261 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":441 -1
     (nil))

(insn 261 260 262 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":441 -1
     (nil))

(insn 262 261 263 (set (reg:DI 5 di)
        (reg/f:DI 133 [ stdscr.53_47 ])) "function.c":441 -1
     (nil))

(call_insn 263 262 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":441 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("A");

(insn 264 263 265 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":442 -1
     (nil))

(insn 265 264 266 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":442 -1
     (nil))

(call_insn 266 265 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":442 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.54_48 = stdscr;

(insn 267 266 0 (set (reg/f:DI 134 [ stdscr.54_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":443 -1
     (nil))

;; wattr_off (stdscr.54_48, 2816, 0B);

(insn 268 267 269 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":443 -1
     (nil))

(insn 269 268 270 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":443 -1
     (nil))

(insn 270 269 271 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.54_48 ])) "function.c":443 -1
     (nil))

(call_insn 271 270 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":443 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 17

;; 

(code_label 274 273 275 54 (nil) [0 uses])

(note 275 274 0 NOTE_INSN_BASIC_BLOCK)

;; _49 = serwerinfo.mapa;

(insn 276 275 0 (set (reg/f:DI 135 [ _49 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":447 -1
     (nil))

;; _50 = (long unsigned int) y_pom_226;

(insn 277 276 278 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":447 -1
     (nil))

(insn 278 277 0 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 264))) "function.c":447 -1
     (nil))

;; _51 = _50 * 8;

(insn 279 278 0 (parallel [
            (set (reg:DI 137 [ _51 ])
                (ashift:DI (reg:DI 136 [ _50 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":447 -1
     (nil))

;; _52 = _49 + _51;

(insn 280 279 0 (parallel [
            (set (reg/f:DI 138 [ _52 ])
                (plus:DI (reg/f:DI 135 [ _49 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":447 -1
     (nil))

;; _53 = *_52;

(insn 281 280 0 (set (reg/f:DI 139 [ _53 ])
        (mem/f:DI (reg/f:DI 138 [ _52 ]) [10 *_52+0 S8 A64])) "function.c":447 -1
     (nil))

;; _54 = (sizetype) x_pom_225;

(insn 282 281 283 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":447 -1
     (nil))

(insn 283 282 0 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 265))) "function.c":447 -1
     (nil))

;; _55 = _53 + _54;

(insn 284 283 0 (parallel [
            (set (reg/f:DI 141 [ _55 ])
                (plus:DI (reg/f:DI 139 [ _53 ])
                    (reg:DI 140 [ _54 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":447 -1
     (nil))

;; _56 = *_55;

(insn 285 284 0 (set (reg:QI 142 [ _56 ])
        (mem:QI (reg/f:DI 141 [ _55 ]) [0 *_55+0 S1 A8])) "function.c":447 -1
     (nil))

;; _57 = (int) _56;

(insn 286 285 0 (set (reg:SI 143 [ _57 ])
        (sign_extend:SI (reg:QI 142 [ _56 ]))) "function.c":447 -1
     (nil))

;; printw ("%c", _57);

(insn 287 286 288 (set (reg:SI 4 si)
        (reg:SI 143 [ _57 ])) "function.c":447 -1
     (nil))

(insn 288 287 289 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":447 -1
     (nil))

(insn 289 288 290 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":447 -1
     (nil))

(call_insn 290 289 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":447 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 18

;; 

(code_label 291 290 292 53 (nil) [0 uses])

(note 292 291 0 NOTE_INSN_BASIC_BLOCK)

;; _58 = serwerinfo.player1;

(insn 293 292 0 (set (reg/f:DI 144 [ _58 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":450 -1
     (nil))

;; _59 = _58->x_current;

(insn 294 293 0 (set (reg:SI 145 [ _59 ])
        (mem:SI (plus:DI (reg/f:DI 144 [ _58 ])
                (const_int 12 [0xc])) [3 _58->x_current+0 S4 A32])) "function.c":450 -1
     (nil))

;; _60 = serwerinfo.player1;

(insn 295 294 0 (set (reg/f:DI 146 [ _60 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":450 -1
     (nil))

;; _61 = _60->y_current;

(insn 296 295 0 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (reg/f:DI 146 [ _60 ])
                (const_int 16 [0x10])) [3 _60->y_current+0 S4 A64])) "function.c":450 -1
     (nil))

;; stdscr.55_62 = stdscr;

(insn 297 296 0 (set (reg/f:DI 148 [ stdscr.55_62 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":450 -1
     (nil))

;; wmove (stdscr.55_62, _61, _59);

(insn 298 297 299 (set (reg:SI 1 dx)
        (reg:SI 145 [ _59 ])) "function.c":450 -1
     (nil))

(insn 299 298 300 (set (reg:SI 4 si)
        (reg:SI 147 [ _61 ])) "function.c":450 -1
     (nil))

(insn 300 299 301 (set (reg:DI 5 di)
        (reg/f:DI 148 [ stdscr.55_62 ])) "function.c":450 -1
     (nil))

(call_insn 301 300 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":450 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.56_63 = stdscr;

(insn 302 301 0 (set (reg/f:DI 149 [ stdscr.56_63 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":451 -1
     (nil))

;; wattr_on (stdscr.56_63, 512, 0B);

(insn 303 302 304 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":451 -1
     (nil))

(insn 304 303 305 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":451 -1
     (nil))

(insn 305 304 306 (set (reg:DI 5 di)
        (reg/f:DI 149 [ stdscr.56_63 ])) "function.c":451 -1
     (nil))

(call_insn 306 305 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":451 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("1");

(insn 307 306 308 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f7cd0f0d3f0 *.LC38>)) "function.c":452 -1
     (nil))

(insn 308 307 309 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":452 -1
     (nil))

(call_insn 309 308 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":452 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.57_64 = stdscr;

(insn 310 309 0 (set (reg/f:DI 150 [ stdscr.57_64 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":453 -1
     (nil))

;; wattr_off (stdscr.57_64, 512, 0B);

(insn 311 310 312 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":453 -1
     (nil))

(insn 312 311 313 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":453 -1
     (nil))

(insn 313 312 314 (set (reg:DI 5 di)
        (reg/f:DI 150 [ stdscr.57_64 ])) "function.c":453 -1
     (nil))

(call_insn 314 313 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":453 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; wizja1 (&userinfo);

(insn 315 314 316 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":455 -1
     (nil))

(insn 316 315 317 (set (reg:DI 5 di)
        (reg:DI 266)) "function.c":455 -1
     (nil))

(call_insn 317 316 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":455 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; wizja2 (&userinfo);

(insn 318 317 319 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":456 -1
     (nil))

(insn 319 318 320 (set (reg:DI 5 di)
        (reg:DI 267)) "function.c":456 -1
     (nil))

(call_insn 320 319 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":456 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 19

;; 

(code_label 321 320 322 51 (nil) [0 uses])

(note 322 321 0 NOTE_INSN_BASIC_BLOCK)

;; if (b1_146 > 0)

(insn 323 322 324 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
            (const_int 0 [0]))) "function.c":459 -1
     (nil))

(jump_insn 324 323 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":459 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; b1_242 = b1_146 + -1;

(insn 326 325 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":461 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 327 326 328 55 (nil) [0 uses])

(note 328 327 0 NOTE_INSN_BASIC_BLOCK)

;; _65 = serwerinfo.player2;

(insn 329 328 0 (set (reg/f:DI 151 [ _65 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":464 -1
     (nil))

;; _66 = _65->PID;

(insn 330 329 0 (set (reg:SI 152 [ _66 ])
        (mem:SI (reg/f:DI 151 [ _65 ]) [3 _65->PID+0 S4 A64])) "function.c":464 -1
     (nil))

;; _67 = kill (_66, 0);

(insn 331 330 332 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":464 -1
     (nil))

(insn 332 331 333 (set (reg:SI 5 di)
        (reg:SI 152 [ _66 ])) "function.c":464 -1
     (nil))

(call_insn 333 332 334 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x7f7cd1125500 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) "function.c":464 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 334 333 0 (set (reg:SI 153 [ _67 ])
        (reg:SI 0 ax)) "function.c":464 -1
     (nil))

;; if (_67 == 0)

(insn 335 334 336 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ _67 ])
            (const_int 0 [0]))) "function.c":464 -1
     (nil))

(jump_insn 336 335 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":464 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; _68 = serwerinfo.player2;

(insn 338 337 0 (set (reg/f:DI 154 [ _68 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":466 -1
     (nil))

;; _69 = _68->x_current;

(insn 339 338 0 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])) "function.c":466 -1
     (nil))

;; _70 = serwerinfo.player2;

(insn 340 339 0 (set (reg/f:DI 156 [ _70 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":466 -1
     (nil))

;; _71 = _70->y_current;

(insn 341 340 0 (set (reg:SI 157 [ _71 ])
        (mem:SI (plus:DI (reg/f:DI 156 [ _70 ])
                (const_int 16 [0x10])) [3 _70->y_current+0 S4 A64])) "function.c":466 -1
     (nil))

;; stdscr.58_72 = stdscr;

(insn 342 341 0 (set (reg/f:DI 158 [ stdscr.58_72 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":466 -1
     (nil))

;; wmove (stdscr.58_72, _71, _69);

(insn 343 342 344 (set (reg:SI 1 dx)
        (reg:SI 155 [ _69 ])) "function.c":466 -1
     (nil))

(insn 344 343 345 (set (reg:SI 4 si)
        (reg:SI 157 [ _71 ])) "function.c":466 -1
     (nil))

(insn 345 344 346 (set (reg:DI 5 di)
        (reg/f:DI 158 [ stdscr.58_72 ])) "function.c":466 -1
     (nil))

(call_insn 346 345 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":466 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.59_73 = stdscr;

(insn 347 346 0 (set (reg/f:DI 159 [ stdscr.59_73 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":467 -1
     (nil))

;; wattr_on (stdscr.59_73, 512, 0B);

(insn 348 347 349 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":467 -1
     (nil))

(insn 349 348 350 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":467 -1
     (nil))

(insn 350 349 351 (set (reg:DI 5 di)
        (reg/f:DI 159 [ stdscr.59_73 ])) "function.c":467 -1
     (nil))

(call_insn 351 350 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":467 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("2");

(insn 352 351 353 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f7cd0f0d480 *.LC39>)) "function.c":468 -1
     (nil))

(insn 353 352 354 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":468 -1
     (nil))

(call_insn 354 353 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":468 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.60_74 = stdscr;

(insn 355 354 0 (set (reg/f:DI 160 [ stdscr.60_74 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":469 -1
     (nil))

;; wattr_off (stdscr.60_74, 512, 0B);

(insn 356 355 357 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":469 -1
     (nil))

(insn 357 356 358 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":469 -1
     (nil))

(insn 358 357 359 (set (reg:DI 5 di)
        (reg/f:DI 160 [ stdscr.60_74 ])) "function.c":469 -1
     (nil))

(call_insn 359 358 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":469 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 23

;; 

(code_label 360 359 361 56 (nil) [0 uses])

(note 361 360 0 NOTE_INSN_BASIC_BLOCK)

;; _75 = serwerinfo.player2;

(insn 362 361 0 (set (reg/f:DI 161 [ _75 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":472 -1
     (nil))

;; _76 = _75->x_current;

(insn 363 362 0 (set (reg:SI 162 [ _76 ])
        (mem:SI (plus:DI (reg/f:DI 161 [ _75 ])
                (const_int 12 [0xc])) [3 _75->x_current+0 S4 A32])) "function.c":472 -1
     (nil))

;; _77 = serwerinfo.player2;

(insn 364 363 0 (set (reg/f:DI 163 [ _77 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":472 -1
     (nil))

;; _78 = _77->y_current;

(insn 365 364 0 (set (reg:SI 164 [ _78 ])
        (mem:SI (plus:DI (reg/f:DI 163 [ _77 ])
                (const_int 16 [0x10])) [3 _77->y_current+0 S4 A64])) "function.c":472 -1
     (nil))

;; stdscr.61_79 = stdscr;

(insn 366 365 0 (set (reg/f:DI 165 [ stdscr.61_79 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":472 -1
     (nil))

;; wmove (stdscr.61_79, _78, _76);

(insn 367 366 368 (set (reg:SI 1 dx)
        (reg:SI 162 [ _76 ])) "function.c":472 -1
     (nil))

(insn 368 367 369 (set (reg:SI 4 si)
        (reg:SI 164 [ _78 ])) "function.c":472 -1
     (nil))

(insn 369 368 370 (set (reg:DI 5 di)
        (reg/f:DI 165 [ stdscr.61_79 ])) "function.c":472 -1
     (nil))

(call_insn 370 369 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":472 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; wizja1 (&userinfo);

(insn 371 370 372 (parallel [
            (set (reg:DI 268)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":474 -1
     (nil))

(insn 372 371 373 (set (reg:DI 5 di)
        (reg:DI 268)) "function.c":474 -1
     (nil))

(call_insn 373 372 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":474 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; wizja2 (&userinfo);

(insn 374 373 375 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":475 -1
     (nil))

(insn 375 374 376 (set (reg:DI 5 di)
        (reg:DI 269)) "function.c":475 -1
     (nil))

(call_insn 376 375 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":475 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; if (b2_148 == 0)

(insn 377 376 378 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
            (const_int 0 [0]))) "function.c":477 -1
     (nil))

(jump_insn 378 377 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":477 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; _80 = serwerinfo.player2;

(insn 380 379 0 (set (reg/f:DI 166 [ _80 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":477 -1
     (nil))

;; _81 = _80->y_current;

(insn 381 380 0 (set (reg:SI 167 [ _81 ])
        (mem:SI (plus:DI (reg/f:DI 166 [ _80 ])
                (const_int 16 [0x10])) [3 _80->y_current+0 S4 A64])) "function.c":477 -1
     (nil))

;; if (_81 != 0)

(insn 382 381 383 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ _81 ])
            (const_int 0 [0]))) "function.c":477 -1
     (nil))

(jump_insn 383 382 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":477 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; _82 = serwerinfo.player2;

(insn 385 384 0 (set (reg/f:DI 168 [ _82 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":479 -1
     (nil))

;; x_pom_251 = _82->x_current;

(insn 386 385 387 (set (reg:SI 270)
        (mem:SI (plus:DI (reg/f:DI 168 [ _82 ])
                (const_int 12 [0xc])) [3 _82->x_current+0 S4 A32])) "function.c":479 -1
     (nil))

(insn 387 386 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])
        (reg:SI 270)) "function.c":479 -1
     (nil))

;; _83 = serwerinfo.player2;

(insn 388 387 0 (set (reg/f:DI 169 [ _83 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":480 -1
     (nil))

;; y_pom_252 = _83->y_current;

(insn 389 388 390 (set (reg:SI 271)
        (mem:SI (plus:DI (reg/f:DI 169 [ _83 ])
                (const_int 16 [0x10])) [3 _83->y_current+0 S4 A64])) "function.c":480 -1
     (nil))

(insn 390 389 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])
        (reg:SI 271)) "function.c":480 -1
     (nil))

;; wizja1 (&userinfo);

(insn 391 390 392 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":482 -1
     (nil))

(insn 392 391 393 (set (reg:DI 5 di)
        (reg:DI 272)) "function.c":482 -1
     (nil))

(call_insn 393 392 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":482 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; wizja2 (&userinfo);

(insn 394 393 395 (parallel [
            (set (reg:DI 273)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":483 -1
     (nil))

(insn 395 394 396 (set (reg:DI 5 di)
        (reg:DI 273)) "function.c":483 -1
     (nil))

(call_insn 396 395 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":483 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; if (b2_148 == 0)

(insn 397 396 398 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
            (const_int 0 [0]))) "function.c":485 -1
     (nil))

(jump_insn 398 397 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":485 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; step2_krzak (&serwerinfo);

(insn 400 399 401 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":487 -1
     (nil))

(insn 401 400 402 (set (reg:DI 5 di)
        (reg:DI 274)) "function.c":487 -1
     (nil))

(call_insn 402 401 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step2_krzak") [flags 0x3]  <function_decl 0x7f7cd1178100 step2_krzak>) [0 step2_krzak S1 A8])
            (const_int 0 [0]))) "function.c":487 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; b2_257 = step2 (&serwerinfo);

(insn 403 402 404 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":488 -1
     (nil))

(insn 404 403 405 (set (reg:DI 5 di)
        (reg:DI 275)) "function.c":488 -1
     (nil))

(call_insn 405 404 406 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step2") [flags 0x3]  <function_decl 0x7f7cd1178300 step2>) [0 step2 S1 A8])
            (const_int 0 [0]))) "function.c":488 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 406 405 407 (set (reg:SI 276)
        (reg:SI 0 ax)) "function.c":488 -1
     (nil))

(insn 407 406 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
        (reg:SI 276)) "function.c":488 -1
     (nil))

;; stdscr.62_84 = stdscr;

(insn 408 407 0 (set (reg/f:DI 170 [ stdscr.62_84 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":489 -1
     (nil))

;; wmove (stdscr.62_84, y_pom_252, x_pom_251);

(insn 409 408 410 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":489 -1
     (nil))

(insn 410 409 411 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":489 -1
     (nil))

(insn 411 410 412 (set (reg:SI 1 dx)
        (reg:SI 277)) "function.c":489 -1
     (nil))

(insn 412 411 413 (set (reg:SI 4 si)
        (reg:SI 278)) "function.c":489 -1
     (nil))

(insn 413 412 414 (set (reg:DI 5 di)
        (reg/f:DI 170 [ stdscr.62_84 ])) "function.c":489 -1
     (nil))

(call_insn 414 413 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":489 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _85 = serwerinfo.mapa;

(insn 415 414 0 (set (reg/f:DI 171 [ _85 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":490 -1
     (nil))

;; _86 = (long unsigned int) y_pom_252;

(insn 416 415 417 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":490 -1
     (nil))

(insn 417 416 0 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 279))) "function.c":490 -1
     (nil))

;; _87 = _86 * 8;

(insn 418 417 0 (parallel [
            (set (reg:DI 173 [ _87 ])
                (ashift:DI (reg:DI 172 [ _86 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":490 -1
     (nil))

;; _88 = _85 + _87;

(insn 419 418 0 (parallel [
            (set (reg/f:DI 174 [ _88 ])
                (plus:DI (reg/f:DI 171 [ _85 ])
                    (reg:DI 173 [ _87 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":490 -1
     (nil))

;; _89 = *_88;

(insn 420 419 0 (set (reg/f:DI 175 [ _89 ])
        (mem/f:DI (reg/f:DI 174 [ _88 ]) [10 *_88+0 S8 A64])) "function.c":490 -1
     (nil))

;; _90 = (sizetype) x_pom_251;

(insn 421 420 422 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":490 -1
     (nil))

(insn 422 421 0 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 280))) "function.c":490 -1
     (nil))

;; _91 = _89 + _90;

(insn 423 422 0 (parallel [
            (set (reg/f:DI 177 [ _91 ])
                (plus:DI (reg/f:DI 175 [ _89 ])
                    (reg:DI 176 [ _90 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":490 -1
     (nil))

;; _92 = *_91;

(insn 424 423 0 (set (reg:QI 178 [ _92 ])
        (mem:QI (reg/f:DI 177 [ _91 ]) [0 *_91+0 S1 A8])) "function.c":490 -1
     (nil))

;; if (_92 == 77)

(insn 425 424 426 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ _92 ])
            (const_int 77 [0x4d]))) "function.c":490 -1
     (nil))

(jump_insn 426 425 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":490 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; printw (".");

(insn 428 427 429 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":492 -1
     (nil))

(insn 429 428 430 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":492 -1
     (nil))

(call_insn 430 429 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":492 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; Generating RTL for gimple basic block 28

;; 

(code_label 433 432 434 58 (nil) [0 uses])

(note 434 433 0 NOTE_INSN_BASIC_BLOCK)

;; _93 = serwerinfo.mapa;

(insn 435 434 0 (set (reg/f:DI 179 [ _93 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":494 -1
     (nil))

;; _94 = (long unsigned int) y_pom_252;

(insn 436 435 437 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":494 -1
     (nil))

(insn 437 436 0 (set (reg:DI 180 [ _94 ])
        (sign_extend:DI (reg:SI 281))) "function.c":494 -1
     (nil))

;; _95 = _94 * 8;

(insn 438 437 0 (parallel [
            (set (reg:DI 181 [ _95 ])
                (ashift:DI (reg:DI 180 [ _94 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":494 -1
     (nil))

;; _96 = _93 + _95;

(insn 439 438 0 (parallel [
            (set (reg/f:DI 182 [ _96 ])
                (plus:DI (reg/f:DI 179 [ _93 ])
                    (reg:DI 181 [ _95 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":494 -1
     (nil))

;; _97 = *_96;

(insn 440 439 0 (set (reg/f:DI 183 [ _97 ])
        (mem/f:DI (reg/f:DI 182 [ _96 ]) [10 *_96+0 S8 A64])) "function.c":494 -1
     (nil))

;; _98 = (sizetype) x_pom_251;

(insn 441 440 442 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":494 -1
     (nil))

(insn 442 441 0 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 282))) "function.c":494 -1
     (nil))

;; _99 = _97 + _98;

(insn 443 442 0 (parallel [
            (set (reg/f:DI 185 [ _99 ])
                (plus:DI (reg/f:DI 183 [ _97 ])
                    (reg:DI 184 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":494 -1
     (nil))

;; _100 = *_99;

(insn 444 443 0 (set (reg:QI 186 [ _100 ])
        (mem:QI (reg/f:DI 185 [ _99 ]) [0 *_99+0 S1 A8])) "function.c":494 -1
     (nil))

;; if (_100 == 65)

(insn 445 444 446 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 186 [ _100 ])
            (const_int 65 [0x41]))) "function.c":494 -1
     (nil))

(jump_insn 446 445 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":494 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; stdscr.63_101 = stdscr;

(insn 448 447 0 (set (reg/f:DI 187 [ stdscr.63_101 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":496 -1
     (nil))

;; wattr_on (stdscr.63_101, 2816, 0B);

(insn 449 448 450 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":496 -1
     (nil))

(insn 450 449 451 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":496 -1
     (nil))

(insn 451 450 452 (set (reg:DI 5 di)
        (reg/f:DI 187 [ stdscr.63_101 ])) "function.c":496 -1
     (nil))

(call_insn 452 451 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":496 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("A");

(insn 453 452 454 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":497 -1
     (nil))

(insn 454 453 455 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":497 -1
     (nil))

(call_insn 455 454 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":497 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.64_102 = stdscr;

(insn 456 455 0 (set (reg/f:DI 188 [ stdscr.64_102 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":498 -1
     (nil))

;; wattr_off (stdscr.64_102, 2816, 0B);

(insn 457 456 458 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":498 -1
     (nil))

(insn 458 457 459 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":498 -1
     (nil))

(insn 459 458 460 (set (reg:DI 5 di)
        (reg/f:DI 188 [ stdscr.64_102 ])) "function.c":498 -1
     (nil))

(call_insn 460 459 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":498 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 30

;; 

(code_label 463 462 464 60 (nil) [0 uses])

(note 464 463 0 NOTE_INSN_BASIC_BLOCK)

;; _103 = serwerinfo.mapa;

(insn 465 464 0 (set (reg/f:DI 189 [ _103 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":502 -1
     (nil))

;; _104 = (long unsigned int) y_pom_252;

(insn 466 465 467 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":502 -1
     (nil))

(insn 467 466 0 (set (reg:DI 190 [ _104 ])
        (sign_extend:DI (reg:SI 283))) "function.c":502 -1
     (nil))

;; _105 = _104 * 8;

(insn 468 467 0 (parallel [
            (set (reg:DI 191 [ _105 ])
                (ashift:DI (reg:DI 190 [ _104 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":502 -1
     (nil))

;; _106 = _103 + _105;

(insn 469 468 0 (parallel [
            (set (reg/f:DI 192 [ _106 ])
                (plus:DI (reg/f:DI 189 [ _103 ])
                    (reg:DI 191 [ _105 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":502 -1
     (nil))

;; _107 = *_106;

(insn 470 469 0 (set (reg/f:DI 193 [ _107 ])
        (mem/f:DI (reg/f:DI 192 [ _106 ]) [10 *_106+0 S8 A64])) "function.c":502 -1
     (nil))

;; _108 = (sizetype) x_pom_251;

(insn 471 470 472 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":502 -1
     (nil))

(insn 472 471 0 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 284))) "function.c":502 -1
     (nil))

;; _109 = _107 + _108;

(insn 473 472 0 (parallel [
            (set (reg/f:DI 195 [ _109 ])
                (plus:DI (reg/f:DI 193 [ _107 ])
                    (reg:DI 194 [ _108 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":502 -1
     (nil))

;; _110 = *_109;

(insn 474 473 0 (set (reg:QI 196 [ _110 ])
        (mem:QI (reg/f:DI 195 [ _109 ]) [0 *_109+0 S1 A8])) "function.c":502 -1
     (nil))

;; _111 = (int) _110;

(insn 475 474 0 (set (reg:SI 197 [ _111 ])
        (sign_extend:SI (reg:QI 196 [ _110 ]))) "function.c":502 -1
     (nil))

;; printw ("%c", _111);

(insn 476 475 477 (set (reg:SI 4 si)
        (reg:SI 197 [ _111 ])) "function.c":502 -1
     (nil))

(insn 477 476 478 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":502 -1
     (nil))

(insn 478 477 479 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":502 -1
     (nil))

(call_insn 479 478 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":502 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 31

;; 

(code_label 480 479 481 59 (nil) [0 uses])

(note 481 480 0 NOTE_INSN_BASIC_BLOCK)

;; _112 = serwerinfo.player2;

(insn 482 481 0 (set (reg/f:DI 198 [ _112 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":505 -1
     (nil))

;; _113 = _112->x_current;

(insn 483 482 0 (set (reg:SI 199 [ _113 ])
        (mem:SI (plus:DI (reg/f:DI 198 [ _112 ])
                (const_int 12 [0xc])) [3 _112->x_current+0 S4 A32])) "function.c":505 -1
     (nil))

;; _114 = serwerinfo.player2;

(insn 484 483 0 (set (reg/f:DI 200 [ _114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":505 -1
     (nil))

;; _115 = _114->y_current;

(insn 485 484 0 (set (reg:SI 201 [ _115 ])
        (mem:SI (plus:DI (reg/f:DI 200 [ _114 ])
                (const_int 16 [0x10])) [3 _114->y_current+0 S4 A64])) "function.c":505 -1
     (nil))

;; stdscr.65_116 = stdscr;

(insn 486 485 0 (set (reg/f:DI 202 [ stdscr.65_116 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":505 -1
     (nil))

;; wmove (stdscr.65_116, _115, _113);

(insn 487 486 488 (set (reg:SI 1 dx)
        (reg:SI 199 [ _113 ])) "function.c":505 -1
     (nil))

(insn 488 487 489 (set (reg:SI 4 si)
        (reg:SI 201 [ _115 ])) "function.c":505 -1
     (nil))

(insn 489 488 490 (set (reg:DI 5 di)
        (reg/f:DI 202 [ stdscr.65_116 ])) "function.c":505 -1
     (nil))

(call_insn 490 489 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":505 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.66_117 = stdscr;

(insn 491 490 0 (set (reg/f:DI 203 [ stdscr.66_117 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":506 -1
     (nil))

;; wattr_on (stdscr.66_117, 512, 0B);

(insn 492 491 493 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":506 -1
     (nil))

(insn 493 492 494 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":506 -1
     (nil))

(insn 494 493 495 (set (reg:DI 5 di)
        (reg/f:DI 203 [ stdscr.66_117 ])) "function.c":506 -1
     (nil))

(call_insn 495 494 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":506 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("2");

(insn 496 495 497 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f7cd0f0d480 *.LC39>)) "function.c":507 -1
     (nil))

(insn 497 496 498 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":507 -1
     (nil))

(call_insn 498 497 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":507 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.67_118 = stdscr;

(insn 499 498 0 (set (reg/f:DI 204 [ stdscr.67_118 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":508 -1
     (nil))

;; wattr_off (stdscr.67_118, 512, 0B);

(insn 500 499 501 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":508 -1
     (nil))

(insn 501 500 502 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":508 -1
     (nil))

(insn 502 501 503 (set (reg:DI 5 di)
        (reg/f:DI 204 [ stdscr.67_118 ])) "function.c":508 -1
     (nil))

(call_insn 503 502 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":508 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; wizja1 (&userinfo);

(insn 504 503 505 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":510 -1
     (nil))

(insn 505 504 506 (set (reg:DI 5 di)
        (reg:DI 285)) "function.c":510 -1
     (nil))

(call_insn 506 505 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":510 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; wizja2 (&userinfo);

(insn 507 506 508 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":511 -1
     (nil))

(insn 508 507 509 (set (reg:DI 5 di)
        (reg:DI 286)) "function.c":511 -1
     (nil))

(call_insn 509 508 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":511 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 32

;; 

(code_label 510 509 511 57 (nil) [0 uses])

(note 511 510 0 NOTE_INSN_BASIC_BLOCK)

;; if (b2_149 > 0)

(insn 512 511 513 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
            (const_int 0 [0]))) "function.c":514 -1
     (nil))

(jump_insn 513 512 0 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":514 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; b2_270 = b2_149 + -1;

(insn 515 514 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":516 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; 

(code_label 516 515 517 61 (nil) [0 uses])

(note 517 516 0 NOTE_INSN_BASIC_BLOCK)

;; if (bestia_licznik_143 == 0)

(insn 518 517 519 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 bestia_licznik+0 S4 A32])
            (const_int 0 [0]))) "function.c":519 -1
     (nil))

(jump_insn 519 518 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":519 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; BESTIA_ON.68_119 = BESTIA_ON;

(insn 521 520 0 (set (reg:QI 205 [ BESTIA_ON.68_119 ])
        (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])) "function.c":519 -1
     (nil))

;; if (BESTIA_ON.68_119 != 0)

(insn 522 521 523 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 205 [ BESTIA_ON.68_119 ])
            (const_int 0 [0]))) "function.c":519 -1
     (nil))

(jump_insn 523 522 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":519 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; serwerinfo.bestia.alive = 1;

(insn 525 524 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [3 serwerinfo.bestia.alive+0 S4 A32])
        (const_int 1 [0x1])) "function.c":521 -1
     (nil))

;; pthread_create (&bestia1, 0B, bestia, &serwerinfo);

(insn 526 525 527 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":522 -1
     (nil))

(insn 527 526 528 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":522 -1
     (nil))

(insn 528 527 529 (set (reg:DI 2 cx)
        (reg:DI 287)) "function.c":522 -1
     (nil))

(insn 529 528 530 (set (reg:DI 1 dx)
        (symbol_ref:DI ("bestia") [flags 0x3]  <function_decl 0x7f7cd1169a00 bestia>)) "function.c":522 -1
     (nil))

(insn 530 529 531 (set (reg:DI 4 si)
        (const_int 0 [0])) "function.c":522 -1
     (nil))

(insn 531 530 532 (set (reg:DI 5 di)
        (reg:DI 288)) "function.c":522 -1
     (nil))

(call_insn 532 531 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f7cd1033700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "function.c":522 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))

;; bestia_licznik_273 = 1;

(insn 533 532 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 bestia_licznik+0 S4 A32])
        (const_int 1 [0x1])) "function.c":523 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; 

(code_label 534 533 535 62 (nil) [0 uses])

(note 535 534 0 NOTE_INSN_BASIC_BLOCK)

;; BESTIA_ON.69_120 = BESTIA_ON;

(insn 536 535 0 (set (reg:QI 206 [ BESTIA_ON.69_120 ])
        (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])) "function.c":526 -1
     (nil))

;; if (BESTIA_ON.69_120 != 0)

(insn 537 536 538 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 206 [ BESTIA_ON.69_120 ])
            (const_int 0 [0]))) "function.c":526 -1
     (nil))

(jump_insn 538 537 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":526 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; sem_post (sem_bestia1_182);

(insn 540 539 541 (set (reg:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [18 sem_bestia1+0 S8 A64])) "function.c":528 -1
     (nil))

(insn 541 540 542 (set (reg:DI 5 di)
        (reg:DI 289)) "function.c":528 -1
     (nil))

(call_insn 542 541 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":528 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; sem_wait (sem_bestia2_184);

(insn 543 542 544 (set (reg:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [18 sem_bestia2+0 S8 A64])) "function.c":529 -1
     (nil))

(insn 544 543 545 (set (reg:DI 5 di)
        (reg:DI 290)) "function.c":529 -1
     (nil))

(call_insn 545 544 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":529 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _121 = serwerinfo.bestia.x;

(insn 546 545 0 (set (reg:SI 207 [ _121 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 serwerinfo.bestia.x+0 S4 A64])) "function.c":530 -1
     (nil))

;; _122 = serwerinfo.bestia.y;

(insn 547 546 0 (set (reg:SI 208 [ _122 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [3 serwerinfo.bestia.y+0 S4 A32])) "function.c":530 -1
     (nil))

;; stdscr.70_123 = stdscr;

(insn 548 547 0 (set (reg/f:DI 209 [ stdscr.70_123 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":530 -1
     (nil))

;; wmove (stdscr.70_123, _122, _121);

(insn 549 548 550 (set (reg:SI 1 dx)
        (reg:SI 207 [ _121 ])) "function.c":530 -1
     (nil))

(insn 550 549 551 (set (reg:SI 4 si)
        (reg:SI 208 [ _122 ])) "function.c":530 -1
     (nil))

(insn 551 550 552 (set (reg:DI 5 di)
        (reg/f:DI 209 [ stdscr.70_123 ])) "function.c":530 -1
     (nil))

(call_insn 552 551 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":530 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.71_124 = stdscr;

(insn 553 552 0 (set (reg/f:DI 210 [ stdscr.71_124 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":531 -1
     (nil))

;; wattr_on (stdscr.71_124, 3072, 0B);

(insn 554 553 555 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":531 -1
     (nil))

(insn 555 554 556 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":531 -1
     (nil))

(insn 556 555 557 (set (reg:DI 5 di)
        (reg/f:DI 210 [ stdscr.71_124 ])) "function.c":531 -1
     (nil))

(call_insn 557 556 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":531 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("*");

(insn 558 557 559 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f7cd0f0d510 *.LC40>)) "function.c":532 -1
     (nil))

(insn 559 558 560 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":532 -1
     (nil))

(call_insn 560 559 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":532 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.72_125 = stdscr;

(insn 561 560 0 (set (reg/f:DI 211 [ stdscr.72_125 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":533 -1
     (nil))

;; wattr_off (stdscr.72_125, 3072, 0B);

(insn 562 561 563 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":533 -1
     (nil))

(insn 563 562 564 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":533 -1
     (nil))

(insn 564 563 565 (set (reg:DI 5 di)
        (reg/f:DI 211 [ stdscr.72_125 ])) "function.c":533 -1
     (nil))

(call_insn 565 564 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":533 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; bestia_kolizja (&serwerinfo);

(insn 566 565 567 (parallel [
            (set (reg:DI 291)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":534 -1
     (nil))

(insn 567 566 568 (set (reg:DI 5 di)
        (reg:DI 291)) "function.c":534 -1
     (nil))

(call_insn 568 567 0 (call (mem:QI (symbol_ref:DI ("bestia_kolizja") [flags 0x3]  <function_decl 0x7f7cd1178e00 bestia_kolizja>) [0 bestia_kolizja S1 A8])
        (const_int 0 [0])) "function.c":534 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 39

;; 

(code_label 569 568 570 63 (nil) [0 uses])

(note 570 569 0 NOTE_INSN_BASIC_BLOCK)

;; wizja1 (&userinfo);

(insn 571 570 572 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":537 -1
     (nil))

(insn 572 571 573 (set (reg:DI 5 di)
        (reg:DI 292)) "function.c":537 -1
     (nil))

(call_insn 573 572 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":537 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; wizja2 (&userinfo);

(insn 574 573 575 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":538 -1
     (nil))

(insn 575 574 576 (set (reg:DI 5 di)
        (reg:DI 293)) "function.c":538 -1
     (nil))

(call_insn 576 575 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":538 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; player_kolizja (&serwerinfo);

(insn 577 576 578 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":540 -1
     (nil))

(insn 578 577 579 (set (reg:DI 5 di)
        (reg:DI 294)) "function.c":540 -1
     (nil))

(call_insn 579 578 0 (call (mem:QI (symbol_ref:DI ("player_kolizja") [flags 0x3]  <function_decl 0x7f7cd1178f00 player_kolizja>) [0 player_kolizja S1 A8])
        (const_int 0 [0])) "function.c":540 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; collect_skarb (&serwerinfo);

(insn 580 579 581 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":542 -1
     (nil))

(insn 581 580 582 (set (reg:DI 5 di)
        (reg:DI 295)) "function.c":542 -1
     (nil))

(call_insn 582 581 0 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("collect_skarb") [flags 0x3]  <function_decl 0x7f7cd1178a00 collect_skarb>) [0 collect_skarb S1 A8])
            (const_int 0 [0]))) "function.c":542 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _126 = serwerinfo.player1;

(insn 583 582 0 (set (reg/f:DI 212 [ _126 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":544 -1
     (nil))

;; _127 = _126->PID;

(insn 584 583 0 (set (reg:SI 213 [ _127 ])
        (mem:SI (reg/f:DI 212 [ _126 ]) [3 _126->PID+0 S4 A64])) "function.c":544 -1
     (nil))

;; _128 = kill (_127, 0);

(insn 585 584 586 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":544 -1
     (nil))

(insn 586 585 587 (set (reg:SI 5 di)
        (reg:SI 213 [ _127 ])) "function.c":544 -1
     (nil))

(call_insn 587 586 588 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x7f7cd1125500 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) "function.c":544 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 588 587 0 (set (reg:SI 214 [ _128 ])
        (reg:SI 0 ax)) "function.c":544 -1
     (nil))

;; if (_128 == 0)

(insn 589 588 590 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 214 [ _128 ])
            (const_int 0 [0]))) "function.c":544 -1
     (nil))

(jump_insn 590 589 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":544 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; sem_post (sem_p1_174);

(insn 592 591 593 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])) "function.c":546 -1
     (nil))

(insn 593 592 594 (set (reg:DI 5 di)
        (reg:DI 296)) "function.c":546 -1
     (nil))

(call_insn 594 593 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":546 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; sem_wait (sem_p1_pom_176);

(insn 595 594 596 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])) "function.c":547 -1
     (nil))

(insn 596 595 597 (set (reg:DI 5 di)
        (reg:DI 297)) "function.c":547 -1
     (nil))

(call_insn 597 596 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":547 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 41

;; 

(code_label 598 597 599 64 (nil) [0 uses])

(note 599 598 0 NOTE_INSN_BASIC_BLOCK)

;; _129 = serwerinfo.player2;

(insn 600 599 0 (set (reg/f:DI 215 [ _129 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":550 -1
     (nil))

;; _130 = _129->PID;

(insn 601 600 0 (set (reg:SI 216 [ _130 ])
        (mem:SI (reg/f:DI 215 [ _129 ]) [3 _129->PID+0 S4 A64])) "function.c":550 -1
     (nil))

;; _131 = kill (_130, 0);

(insn 602 601 603 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":550 -1
     (nil))

(insn 603 602 604 (set (reg:SI 5 di)
        (reg:SI 216 [ _130 ])) "function.c":550 -1
     (nil))

(call_insn 604 603 605 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x7f7cd1125500 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) "function.c":550 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 605 604 0 (set (reg:SI 217 [ _131 ])
        (reg:SI 0 ax)) "function.c":550 -1
     (nil))

;; if (_131 == 0)

(insn 606 605 607 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 217 [ _131 ])
            (const_int 0 [0]))) "function.c":550 -1
     (nil))

(jump_insn 607 606 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":550 -1
     (nil))

;; Generating RTL for gimple basic block 42

;; sem_post (sem_p2_178);

(insn 609 608 610 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [18 sem_p2+0 S8 A64])) "function.c":552 -1
     (nil))

(insn 610 609 611 (set (reg:DI 5 di)
        (reg:DI 298)) "function.c":552 -1
     (nil))

(call_insn 611 610 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":552 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; sem_wait (sem_p2_pom_180);

(insn 612 611 613 (set (reg:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [18 sem_p2_pom+0 S8 A64])) "function.c":553 -1
     (nil))

(insn 613 612 614 (set (reg:DI 5 di)
        (reg:DI 299)) "function.c":553 -1
     (nil))

(call_insn 614 613 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":553 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 43

;; 

(code_label 617 616 618 65 (nil) [0 uses])

(note 618 617 0 NOTE_INSN_BASIC_BLOCK)

;; _132 = serwerinfo.player2;

(insn 619 618 0 (set (reg/f:DI 218 [ _132 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":557 -1
     (nil))

;; _132->y_current = 0;

(insn 620 619 0 (set (mem:SI (plus:DI (reg/f:DI 218 [ _132 ])
                (const_int 16 [0x10])) [3 _132->y_current+0 S4 A64])
        (const_int 0 [0])) "function.c":557 -1
     (nil))

;; _133 = serwerinfo.player2;

(insn 621 620 0 (set (reg/f:DI 219 [ _133 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":558 -1
     (nil))

;; _133->x_current = 0;

(insn 622 621 0 (set (mem:SI (plus:DI (reg/f:DI 219 [ _133 ])
                (const_int 12 [0xc])) [3 _133->x_current+0 S4 A32])
        (const_int 0 [0])) "function.c":558 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; 

(code_label 623 622 624 66 (nil) [0 uses])

(note 624 623 0 NOTE_INSN_BASIC_BLOCK)

;; oboz_coins (&serwerinfo);

(insn 625 624 626 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":561 -1
     (nil))

(insn 626 625 627 (set (reg:DI 5 di)
        (reg:DI 300)) "function.c":561 -1
     (nil))

(call_insn 627 626 0 (call (mem:QI (symbol_ref:DI ("oboz_coins") [flags 0x3]  <function_decl 0x7f7cd1178c00 oboz_coins>) [0 oboz_coins S1 A8])
        (const_int 0 [0])) "function.c":561 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; druk_info_plansza_s (&serwerinfo);

(insn 628 627 629 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":563 -1
     (nil))

(insn 629 628 630 (set (reg:DI 5 di)
        (reg:DI 301)) "function.c":563 -1
     (nil))

(call_insn 630 629 0 (call (mem:QI (symbol_ref:DI ("druk_info_plansza_s") [flags 0x3]  <function_decl 0x7f7cd1169800 druk_info_plansza_s>) [0 druk_info_plansza_s S1 A8])
        (const_int 0 [0])) "function.c":563 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; stdscr.73_134 = stdscr;

(insn 631 630 0 (set (reg/f:DI 220 [ stdscr.73_134 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":565 -1
     (nil))

;; wrefresh (stdscr.73_134);

(insn 632 631 633 (set (reg:DI 5 di)
        (reg/f:DI 220 [ stdscr.73_134 ])) "function.c":565 -1
     (nil))

(call_insn 633 632 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wrefresh") [flags 0x41]  <function_decl 0x7f7cd10cd300 wrefresh>) [0 wrefresh S1 A8])
            (const_int 0 [0]))) "function.c":565 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; END.74_135 = END;

(insn 634 633 0 (set (reg:QI 221 [ END.74_135 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":567 -1
     (nil))

;; if (END.74_135 == 113)

(insn 635 634 636 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 221 [ END.74_135 ])
            (const_int 113 [0x71]))) "function.c":567 -1
     (nil))

(jump_insn 636 635 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":567 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; sem_post (sem_bestia1_182);

(insn 638 637 639 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [18 sem_bestia1+0 S8 A64])) "function.c":569 -1
     (nil))

(insn 639 638 640 (set (reg:DI 5 di)
        (reg:DI 302)) "function.c":569 -1
     (nil))

(call_insn 640 639 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":569 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; BESTIA_ON.75_136 = BESTIA_ON;

(insn 641 640 0 (set (reg:QI 222 [ BESTIA_ON.75_136 ])
        (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])) "function.c":571 -1
     (nil))

;; if (BESTIA_ON.75_136 != 0)

(insn 642 641 643 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 222 [ BESTIA_ON.75_136 ])
            (const_int 0 [0]))) "function.c":571 -1
     (nil))

(jump_insn 643 642 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":571 -1
     (nil))

;; Generating RTL for gimple basic block 46

;; bestia1.76_137 = bestia1;

(insn 645 644 0 (set (reg:DI 223 [ bestia1.76_137 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [7 bestia1+0 S8 A64])) "function.c":573 -1
     (nil))

;; pthread_join (bestia1.76_137, 0B);

(insn 646 645 647 (set (reg:DI 4 si)
        (const_int 0 [0])) "function.c":573 -1
     (nil))

(insn 647 646 648 (set (reg:DI 5 di)
        (reg:DI 223 [ bestia1.76_137 ])) "function.c":573 -1
     (nil))

(call_insn 648 647 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f7cd1033900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "function.c":573 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

;; Generating RTL for gimple basic block 47

;; 

(code_label 649 648 650 68 (nil) [0 uses])

(note 650 649 0 NOTE_INSN_BASIC_BLOCK)

;; _138 = serwerinfo.player1;

(insn 651 650 0 (set (reg/f:DI 224 [ _138 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":576 -1
     (nil))

;; munmap (_138, 22576);

(insn 652 651 653 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":576 -1
     (nil))

(insn 653 652 654 (set (reg:DI 5 di)
        (reg/f:DI 224 [ _138 ])) "function.c":576 -1
     (nil))

(call_insn 654 653 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("munmap") [flags 0x41]  <function_decl 0x7f7cd133c100 munmap>) [0 munmap S1 A8])
            (const_int 0 [0]))) "function.c":576 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

;; _139 = serwerinfo.player2;

(insn 655 654 0 (set (reg/f:DI 225 [ _139 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":577 -1
     (nil))

;; munmap (_139, 22576);

(insn 656 655 657 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":577 -1
     (nil))

(insn 657 656 658 (set (reg:DI 5 di)
        (reg/f:DI 225 [ _139 ])) "function.c":577 -1
     (nil))

(call_insn 658 657 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("munmap") [flags 0x41]  <function_decl 0x7f7cd133c100 munmap>) [0 munmap S1 A8])
            (const_int 0 [0]))) "function.c":577 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))

;; shm_unlink ("shm_p1");

(insn 659 658 660 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7cd0f0d1b0 *.LC34>)) "function.c":578 -1
     (nil))

(call_insn 660 659 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":578 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; shm_unlink ("shm_p1_pom");

(insn 661 660 662 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f7cd0f0d240 *.LC35>)) "function.c":579 -1
     (nil))

(call_insn 662 661 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":579 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; shm_unlink ("shm_p2");

(insn 663 662 664 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":580 -1
     (nil))

(call_insn 664 663 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":580 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; shm_unlink ("shm_p2_pom");

(insn 665 664 666 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f7cd0f0d360 *.LC37>)) "function.c":581 -1
     (nil))

(call_insn 666 665 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":581 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; shm_unlink ("shm_bestia1");

(insn 667 666 668 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7cd0ef3870 *.LC32>)) "function.c":582 -1
     (nil))

(call_insn 668 667 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":582 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; shm_unlink ("shm_bestia2");

(insn 669 668 670 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7cd0ef3900 *.LC33>)) "function.c":583 -1
     (nil))

(call_insn 670 669 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":583 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _306 = 0B;

(insn 671 670 0 (set (reg/f:DI 229 [ _306 ])
        (const_int 0 [0])) "function.c":585 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; bestia1 ={v} {CLOBBER};

(nil)

;; serwerinfo ={v} {CLOBBER};

(nil)

;; userinfo ={v} {CLOBBER};

(nil)

;; Generating RTL for gimple basic block 48

;; 

(code_label 674 673 675 67 (nil) [0 uses])

(note 675 674 0 NOTE_INSN_BASIC_BLOCK)

;; stdscr.77_140 = stdscr;

(insn 676 675 0 (set (reg/f:DI 226 [ stdscr.77_140 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":589 -1
     (nil))

;; wclear (stdscr.77_140);

(insn 677 676 678 (set (reg:DI 5 di)
        (reg/f:DI 226 [ stdscr.77_140 ])) "function.c":589 -1
     (nil))

(call_insn 678 677 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wclear") [flags 0x41]  <function_decl 0x7f7cd10c4800 wclear>) [0 wclear S1 A8])
            (const_int 0 [0]))) "function.c":589 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; usleep (1000000);

(insn 679 678 680 (set (reg:SI 5 di)
        (const_int 1000000 [0xf4240])) "function.c":590 -1
     (nil))

(call_insn 680 679 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("usleep") [flags 0x41]  <function_decl 0x7f7cd1368000 usleep>) [0 usleep S1 A8])
            (const_int 0 [0]))) "function.c":590 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; _141 = serwerinfo.runda;

(insn 681 680 0 (set (reg:SI 227 [ _141 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])) "function.c":592 -1
     (nil))

;; _142 = _141 + 1;

(insn 682 681 0 (parallel [
            (set (reg:SI 228 [ _142 ])
                (plus:SI (reg:SI 227 [ _141 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":592 -1
     (nil))

;; serwerinfo.runda = _142;

(insn 683 682 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])
        (reg:SI 228 [ _142 ])) "function.c":592 -1
     (nil))

;; Generating RTL for gimple basic block 49

;; <L53>:

(code_label 687 686 688 69 (nil) [0 uses])

(note 688 687 0 NOTE_INSN_BASIC_BLOCK)

;; return _306;

(insn 689 688 690 (set (reg/f:DI 230 [ <retval> ])
        (reg/f:DI 229 [ _306 ])) -1
     (nil))

(jump_insn 690 689 691 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 691 690 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 690.
Merging block 51 into block 50...
Merged blocks 50 and 51.
Merged 50 and 51 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36216 [0xffffffffffff7288])) [19 pom+0 S8 A64])
        (reg:DI 5 di [ pom ])) "function.c":313 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 bestia_licznik+0 S4 A32])
        (const_int 0 [0])) "function.c":314 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
        (const_int 0 [0])) "function.c":315 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
        (const_int 0 [0])) "function.c":316 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":317 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])
        (const_int 0 [0])) "function.c":318 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 licznik+0 S4 A32])
        (const_int 0 [0])) "function.c":319 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":324 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":324 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":324 -1
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7cd0f0d1b0 *.LC34>)) "function.c":324 -1
     (nil))
(insn 16 15 17 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":324 -1
     (nil))
(call_insn 17 16 18 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":324 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 18 17 19 2 (set (reg:DI 231)
        (reg:DI 0 ax)) "function.c":324 -1
     (nil))
(insn 19 18 20 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])
        (reg:DI 231)) "function.c":324 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":325 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":325 -1
     (nil))
(insn 22 21 23 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":325 -1
     (nil))
(insn 23 22 24 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f7cd0f0d240 *.LC35>)) "function.c":325 -1
     (nil))
(insn 24 23 25 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":325 -1
     (nil))
(call_insn 25 24 26 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":325 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 26 25 27 2 (set (reg:DI 232)
        (reg:DI 0 ax)) "function.c":325 -1
     (nil))
(insn 27 26 28 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])
        (reg:DI 232)) "function.c":325 -1
     (nil))
(insn 28 27 29 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":327 -1
     (nil))
(insn 29 28 30 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":327 -1
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":327 -1
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":327 -1
     (nil))
(insn 32 31 33 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":327 -1
     (nil))
(call_insn 33 32 34 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":327 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 34 33 35 2 (set (reg:DI 233)
        (reg:DI 0 ax)) "function.c":327 -1
     (nil))
(insn 35 34 36 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [18 sem_p2+0 S8 A64])
        (reg:DI 233)) "function.c":327 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":328 -1
     (nil))
(insn 37 36 38 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":328 -1
     (nil))
(insn 38 37 39 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":328 -1
     (nil))
(insn 39 38 40 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f7cd0f0d360 *.LC37>)) "function.c":328 -1
     (nil))
(insn 40 39 41 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":328 -1
     (nil))
(call_insn 41 40 42 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":328 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 42 41 43 2 (set (reg:DI 234)
        (reg:DI 0 ax)) "function.c":328 -1
     (nil))
(insn 43 42 44 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [18 sem_p2_pom+0 S8 A64])
        (reg:DI 234)) "function.c":328 -1
     (nil))
(insn 44 43 45 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":330 -1
     (nil))
(insn 45 44 46 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":330 -1
     (nil))
(insn 46 45 47 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":330 -1
     (nil))
(insn 47 46 48 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7cd0ef3870 *.LC32>)) "function.c":330 -1
     (nil))
(insn 48 47 49 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":330 -1
     (nil))
(call_insn 49 48 50 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":330 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 50 49 51 2 (set (reg:DI 235)
        (reg:DI 0 ax)) "function.c":330 -1
     (nil))
(insn 51 50 52 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [18 sem_bestia1+0 S8 A64])
        (reg:DI 235)) "function.c":330 -1
     (nil))
(insn 52 51 53 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":331 -1
     (nil))
(insn 53 52 54 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":331 -1
     (nil))
(insn 54 53 55 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":331 -1
     (nil))
(insn 55 54 56 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7cd0ef3900 *.LC33>)) "function.c":331 -1
     (nil))
(insn 56 55 57 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":331 -1
     (nil))
(call_insn 57 56 58 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":331 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 58 57 59 2 (set (reg:DI 236)
        (reg:DI 0 ax)) "function.c":331 -1
     (nil))
(insn 59 58 60 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [18 sem_bestia2+0 S8 A64])
        (reg:DI 236)) "function.c":331 -1
     (nil))
(insn 60 59 61 2 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) "function.c":334 -1
     (nil))
(insn 61 60 62 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":334 -1
     (nil))
(insn 62 61 63 2 (set (reg:SI 5 di)
        (const_int 2 [0x2])) "function.c":334 -1
     (nil))
(call_insn 63 62 64 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":334 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 64 63 65 2 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36216 [0xffffffffffff7288])) [19 pom+0 S8 A64])) "function.c":338 -1
     (nil))
(insn 65 64 66 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [10 q+0 S8 A64])
        (reg/f:DI 237)) "function.c":338 -1
     (nil))
(insn 66 65 67 2 (set (reg:DI 238)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -88 [0xffffffffffffffa8])) [10 q+0 S8 A64])) "function.c":340 -1
     (nil))
(insn 67 66 68 2 (set (reg:DI 1 dx)
        (const_int 6 [0x6])) "function.c":340 -1
     (nil))
(insn 68 67 69 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":340 -1
     (nil))
(insn 69 68 70 2 (set (reg:DI 5 di)
        (reg:DI 238)) "function.c":340 -1
     (nil))
(call_insn/i 70 69 71 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memcmp") [flags 0x41]  <function_decl 0x7f7cd1238000 memcmp>) [0 __builtin_memcmp S1 A8])
            (const_int 0 [0]))) "function.c":340 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 71 70 72 2 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "function.c":340 -1
     (nil))
(insn 72 71 73 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 0 [0]))) "function.c":340 -1
     (nil))
(jump_insn 73 72 74 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "function.c":340 -1
     (nil)
 -> 78)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 74 73 75 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36168 [0xffffffffffff72b8])) [3 serwerinfo.pom+0 S4 A64])
        (const_int 1 [0x1])) "function.c":342 -1
     (nil))
(jump_insn 76 75 77 4 (set (pc)
        (label_ref 81)) -1
     (nil)
 -> 81)
;;  succ:       6

(barrier 77 76 78)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 78 77 79 5 46 (nil) [1 uses])
(note 79 78 80 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36168 [0xffffffffffff72b8])) [3 serwerinfo.pom+0 S4 A64])
        (const_int 2 [0x2])) "function.c":346 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5 (FALLTHRU)
(code_label 81 80 82 6 47 (nil) [1 uses])
(note 82 81 83 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 83 82 84 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":349 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 84 83 85 6 (set (reg:SI 88 [ _2 ])
        (reg:SI 0 ax)) "function.c":349 -1
     (nil))
(insn 85 84 86 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36192 [0xffffffffffff72a0])) [3 serwerinfo.PID+0 S4 A64])
        (reg:SI 88 [ _2 ])) "function.c":349 -1
     (nil))
(insn 86 85 87 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])
        (const_int 0 [0])) "function.c":350 -1
     (nil))
(insn 87 86 88 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28144 [0xffffffffffff9210])) [3 serwerinfo.skarb.count_one_coin+0 S4 A64])
        (const_int 0 [0])) "function.c":352 -1
     (nil))
(insn 88 87 89 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20140 [0xffffffffffffb154])) [3 serwerinfo.skarb.count_treasure_coin+0 S4 A32])
        (const_int 0 [0])) "function.c":353 -1
     (nil))
(insn 89 88 90 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12136 [0xffffffffffffd098])) [3 serwerinfo.skarb.count_large_treasure_coin+0 S4 A64])
        (const_int 0 [0])) "function.c":354 -1
     (nil))
(insn 90 89 91 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":356 -1
     (nil))
(call_insn 91 90 92 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pobierz_plansze") [flags 0x3]  <function_decl 0x7f7cd1169600 pobierz_plansze>) [0 pobierz_plansze S1 A8])
            (const_int 0 [0]))) "function.c":356 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 92 91 93 6 (set (reg/f:DI 89 [ _3 ])
        (reg:DI 0 ax)) "function.c":356 -1
     (nil))
(insn 93 92 94 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])
        (reg/f:DI 89 [ _3 ])) "function.c":356 -1
     (nil))
(insn 94 93 95 6 (parallel [
            (set (reg:DI 239)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":358 -1
     (nil))
(insn 95 94 96 6 (set (reg:DI 5 di)
        (reg:DI 239)) "function.c":358 -1
     (nil))
(call_insn 96 95 97 6 (call (mem:QI (symbol_ref:DI ("oboz_random") [flags 0x3]  <function_decl 0x7f7cd1178b00 oboz_random>) [0 oboz_random S1 A8])
        (const_int 0 [0])) "function.c":358 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 97 96 98 6 (set (reg/f:DI 90 [ _4 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":360 -1
     (nil))
(insn 98 97 99 6 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "function.c":360 -1
     (nil))
(call_insn 99 98 100 6 (call (mem:QI (symbol_ref:DI ("drukuj_plansze") [flags 0x3]  <function_decl 0x7f7cd1169700 drukuj_plansze>) [0 drukuj_plansze S1 A8])
        (const_int 0 [0])) "function.c":360 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 100 99 101 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7cd0f0d1b0 *.LC34>)) "function.c":362 -1
     (nil))
(call_insn 101 100 102 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("player_set") [flags 0x3]  <function_decl 0x7f7cd1169f00 player_set>) [0 player_set S1 A8])
            (const_int 0 [0]))) "function.c":362 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 102 101 103 6 (set (reg/f:DI 91 [ _5 ])
        (reg:DI 0 ax)) "function.c":362 -1
     (nil))
(insn 103 102 104 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])
        (reg/f:DI 91 [ _5 ])) "function.c":362 -1
     (nil))
(insn 104 103 105 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":363 -1
     (nil))
(call_insn 105 104 106 6 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("player_set") [flags 0x3]  <function_decl 0x7f7cd1169f00 player_set>) [0 player_set S1 A8])
            (const_int 0 [0]))) "function.c":363 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 106 105 107 6 (set (reg/f:DI 92 [ _6 ])
        (reg:DI 0 ax)) "function.c":363 -1
     (nil))
(insn 107 106 108 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])
        (reg/f:DI 92 [ _6 ])) "function.c":363 -1
     (nil))
(insn 108 107 109 6 (set (reg/f:DI 93 [ _7 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":365 -1
     (nil))
(call_insn 109 108 110 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":365 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 110 109 111 6 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "function.c":365 -1
     (nil))
(insn 111 110 112 6 (set (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 4 [0x4])) [3 _7->PID_serwer+0 S4 A32])
        (reg:SI 94 [ _8 ])) "function.c":365 -1
     (nil))
(insn 112 111 113 6 (set (reg/f:DI 95 [ _9 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":366 -1
     (nil))
(call_insn 113 112 114 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getpid") [flags 0x41]  <function_decl 0x7f7cd0f8b200 getpid>) [0 getpid S1 A8])
            (const_int 0 [0]))) "function.c":366 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 114 113 115 6 (set (reg:SI 96 [ _10 ])
        (reg:SI 0 ax)) "function.c":366 -1
     (nil))
(insn 115 114 116 6 (set (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 4 [0x4])) [3 _9->PID_serwer+0 S4 A32])
        (reg:SI 96 [ _10 ])) "function.c":366 -1
     (nil))
(insn 116 115 117 6 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":368 -1
     (nil))
(insn 117 116 118 6 (set (reg:DI 5 di)
        (reg:DI 240)) "function.c":368 -1
     (nil))
(call_insn 118 117 119 6 (call (mem:QI (symbol_ref:DI ("player_position_random") [flags 0x3]  <function_decl 0x7f7cd1178d00 player_position_random>) [0 player_position_random S1 A8])
        (const_int 0 [0])) "function.c":368 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 119 118 120 6 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":373 -1
     (nil))
(insn 120 119 684 6 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36208 [0xffffffffffff7290])) [12 userinfo.serwer+0 S8 A64])
        (reg:DI 241)) "function.c":373 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              49 (DFS_BACK)
(code_label 684 120 121 7 70 (nil) [1 uses])
(note 121 684 122 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 123 7 (set (reg/f:DI 97 [ _11 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":377 -1
     (nil))
(insn 123 122 124 7 (set (reg:SI 98 [ _12 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])) "function.c":377 -1
     (nil))
(insn 124 123 125 7 (set (mem:SI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 22552 [0x5818])) [3 _11->runda+0 S4 A64])
        (reg:SI 98 [ _12 ])) "function.c":377 -1
     (nil))
(insn 125 124 126 7 (set (reg/f:DI 99 [ _13 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":378 -1
     (nil))
(insn 126 125 127 7 (set (reg:SI 100 [ _14 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])) "function.c":378 -1
     (nil))
(insn 127 126 128 7 (set (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 22552 [0x5818])) [3 _13->runda+0 S4 A64])
        (reg:SI 100 [ _14 ])) "function.c":378 -1
     (nil))
(insn 128 127 129 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36200 [0xffffffffffff7298])) [3 userinfo.user+0 S4 A64])
        (const_int 1 [0x1])) "function.c":387 -1
     (nil))
(insn 129 128 130 7 (set (reg/f:DI 101 [ _15 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":389 -1
     (nil))
(insn 130 129 131 7 (set (reg:DI 5 di)
        (reg/f:DI 101 [ _15 ])) "function.c":389 -1
     (nil))
(call_insn 131 130 132 7 (call (mem:QI (symbol_ref:DI ("drukuj_plansze") [flags 0x3]  <function_decl 0x7f7cd1169700 drukuj_plansze>) [0 drukuj_plansze S1 A8])
        (const_int 0 [0])) "function.c":389 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 132 131 133 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":393 -1
     (nil))
(jump_insn 133 132 134 7 (set (pc)
        (label_ref 161)) "function.c":393 -1
     (nil)
 -> 161)
;;  succ:       11

(barrier 134 133 164)
;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 164 134 135 8 50 (nil) [1 uses])
(note 135 164 136 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 8 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":395 -1
     (nil))
(insn 137 136 138 8 (set (reg:DI 242)
        (sign_extend:DI (reg:SI 243))) "function.c":395 -1
     (nil))
(insn 138 137 139 8 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 242)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":395 -1
     (nil))
(insn 139 138 140 8 (set (reg:SI 102 [ _16 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 244)
                        (const_int 4 [0x4]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -36192 [0xffffffffffff72a0])) [3 serwerinfo.skarb.value_all_dropped_coin S4 A32])) "function.c":395 -1
     (nil))
(insn 140 139 141 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 102 [ _16 ])
            (const_int -1 [0xffffffffffffffff]))) "function.c":395 -1
     (nil))
(jump_insn 141 140 142 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 158)
            (pc))) "function.c":395 -1
     (nil)
 -> 158)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 142 141 143 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 9 (set (reg:SI 246)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":397 -1
     (nil))
(insn 144 143 145 9 (set (reg:DI 245)
        (sign_extend:DI (reg:SI 246))) "function.c":397 -1
     (nil))
(insn 145 144 146 9 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 245)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -12124 [0xffffffffffffd0a4])) [3 serwerinfo.skarb.dropped_coin S4 A32])) "function.c":397 -1
     (nil))
(insn 146 145 147 9 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":397 -1
     (nil))
(insn 147 146 148 9 (set (reg:DI 247)
        (sign_extend:DI (reg:SI 248))) "function.c":397 -1
     (nil))
(insn 148 147 149 9 (parallel [
            (set (reg:DI 249)
                (plus:DI (reg:DI 247)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":397 -1
     (nil))
(insn 149 148 150 9 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 249)
                        (const_int 8 [0x8]))
                    (reg/f:DI 82 virtual-stack-vars))
                (const_int -36192 [0xffffffffffff72a0])) [3 serwerinfo.skarb.dropped_coin S4 A64])) "function.c":397 -1
     (nil))
(insn 150 149 151 9 (set (reg/f:DI 105 [ stdscr.48_19 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":397 -1
     (nil))
(insn 151 150 152 9 (set (reg:SI 1 dx)
        (reg:SI 103 [ _17 ])) "function.c":397 -1
     (nil))
(insn 152 151 153 9 (set (reg:SI 4 si)
        (reg:SI 104 [ _18 ])) "function.c":397 -1
     (nil))
(insn 153 152 154 9 (set (reg:DI 5 di)
        (reg/f:DI 105 [ stdscr.48_19 ])) "function.c":397 -1
     (nil))
(call_insn 154 153 155 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":397 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 155 154 156 9 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7cd0ef3120 *.LC24>)) "function.c":398 -1
     (nil))
(insn 156 155 157 9 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":398 -1
     (nil))
(call_insn 157 156 158 9 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":398 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 158 157 159 10 49 (nil) [1 uses])
(note 159 158 160 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":393 -1
     (nil))
;;  succ:       11 (FALLTHRU,DFS_BACK)

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              10 (FALLTHRU,DFS_BACK)
(code_label 161 160 162 11 48 (nil) [1 uses])
(note 162 161 163 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 165 11 (set (reg:SI 106 [ _20 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12132 [0xffffffffffffd09c])) [3 serwerinfo.skarb.count_drop_coin+0 S4 A32])) "function.c":393 -1
     (nil))
(insn 165 163 166 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
            (reg:SI 106 [ _20 ]))) "function.c":393 -1
     (nil))
(jump_insn 166 165 167 11 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 164)
            (pc))) "function.c":393 -1
     (nil)
 -> 164)
;;  succ:       8
;;              12 (FALLTHRU)

;; basic block 12, loop depth 1, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 167 166 168 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 12 (parallel [
            (set (reg:DI 250)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":409 -1
     (nil))
(insn 169 168 170 12 (set (reg:DI 5 di)
        (reg:DI 250)) "function.c":409 -1
     (nil))
(call_insn 170 169 171 12 (call (mem:QI (symbol_ref:DI ("skarbunio") [flags 0x3]  <function_decl 0x7f7cd0d1b000 skarbunio>) [0 skarbunio S1 A8])
        (const_int 0 [0])) "function.c":409 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 171 170 172 12 (set (reg/f:DI 107 [ _21 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":411 -1
     (nil))
(insn 172 171 173 12 (set (reg:SI 108 [ _22 ])
        (mem:SI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 12 [0xc])) [3 _21->x_current+0 S4 A32])) "function.c":411 -1
     (nil))
(insn 173 172 174 12 (set (reg/f:DI 109 [ _23 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":411 -1
     (nil))
(insn 174 173 175 12 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 16 [0x10])) [3 _23->y_current+0 S4 A64])) "function.c":411 -1
     (nil))
(insn 175 174 176 12 (set (reg/f:DI 111 [ stdscr.49_25 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":411 -1
     (nil))
(insn 176 175 177 12 (set (reg:SI 1 dx)
        (reg:SI 108 [ _22 ])) "function.c":411 -1
     (nil))
(insn 177 176 178 12 (set (reg:SI 4 si)
        (reg:SI 110 [ _24 ])) "function.c":411 -1
     (nil))
(insn 178 177 179 12 (set (reg:DI 5 di)
        (reg/f:DI 111 [ stdscr.49_25 ])) "function.c":411 -1
     (nil))
(call_insn 179 178 180 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":411 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 180 179 181 12 (set (reg/f:DI 112 [ stdscr.50_26 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":413 -1
     (nil))
(insn 181 180 182 12 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":413 -1
     (nil))
(insn 182 181 183 12 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":413 -1
     (nil))
(insn 183 182 184 12 (set (reg:DI 5 di)
        (reg/f:DI 112 [ stdscr.50_26 ])) "function.c":413 -1
     (nil))
(call_insn 184 183 185 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":413 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 185 184 186 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f7cd0f0d3f0 *.LC38>)) "function.c":414 -1
     (nil))
(insn 186 185 187 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":414 -1
     (nil))
(call_insn 187 186 188 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":414 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 188 187 189 12 (set (reg/f:DI 113 [ stdscr.51_27 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":415 -1
     (nil))
(insn 189 188 190 12 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":415 -1
     (nil))
(insn 190 189 191 12 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":415 -1
     (nil))
(insn 191 190 192 12 (set (reg:DI 5 di)
        (reg/f:DI 113 [ stdscr.51_27 ])) "function.c":415 -1
     (nil))
(call_insn 192 191 193 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":415 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 193 192 194 12 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":417 -1
     (nil))
(insn 194 193 195 12 (set (reg:DI 5 di)
        (reg:DI 251)) "function.c":417 -1
     (nil))
(call_insn 195 194 196 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":417 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 196 195 197 12 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":418 -1
     (nil))
(insn 197 196 198 12 (set (reg:DI 5 di)
        (reg:DI 252)) "function.c":418 -1
     (nil))
(call_insn 198 197 199 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":418 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 199 198 200 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
            (const_int 0 [0]))) "function.c":419 -1
     (nil))
(jump_insn 200 199 201 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) "function.c":419 -1
     (nil)
 -> 321)
;;  succ:       13 (FALLTHRU)
;;              20

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 201 200 202 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 13 (set (reg/f:DI 114 [ _28 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":426 -1
     (nil))
(insn 203 202 204 13 (set (reg:SI 253)
        (mem:SI (plus:DI (reg/f:DI 114 [ _28 ])
                (const_int 12 [0xc])) [3 _28->x_current+0 S4 A32])) "function.c":426 -1
     (nil))
(insn 204 203 205 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])
        (reg:SI 253)) "function.c":426 -1
     (nil))
(insn 205 204 206 13 (set (reg/f:DI 115 [ _29 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":427 -1
     (nil))
(insn 206 205 207 13 (set (reg:SI 254)
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 16 [0x10])) [3 _29->y_current+0 S4 A64])) "function.c":427 -1
     (nil))
(insn 207 206 208 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])
        (reg:SI 254)) "function.c":427 -1
     (nil))
(insn 208 207 209 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
            (const_int 0 [0]))) "function.c":430 -1
     (nil))
(jump_insn 209 208 210 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 321)
            (pc))) "function.c":430 -1
     (nil)
 -> 321)
;;  succ:       14 (FALLTHRU)
;;              20

;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 210 209 211 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 14 (parallel [
            (set (reg:DI 255)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":432 -1
     (nil))
(insn 212 211 213 14 (set (reg:DI 5 di)
        (reg:DI 255)) "function.c":432 -1
     (nil))
(call_insn 213 212 214 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step1_krzak") [flags 0x3]  <function_decl 0x7f7cd1178000 step1_krzak>) [0 step1_krzak S1 A8])
            (const_int 0 [0]))) "function.c":432 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 214 213 215 14 (parallel [
            (set (reg:DI 256)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":433 -1
     (nil))
(insn 215 214 216 14 (set (reg:DI 5 di)
        (reg:DI 256)) "function.c":433 -1
     (nil))
(call_insn 216 215 217 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step1") [flags 0x3]  <function_decl 0x7f7cd1178200 step1>) [0 step1 S1 A8])
            (const_int 0 [0]))) "function.c":433 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 217 216 218 14 (set (reg:SI 257)
        (reg:SI 0 ax)) "function.c":433 -1
     (nil))
(insn 218 217 219 14 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
        (reg:SI 257)) "function.c":433 -1
     (nil))
(insn 219 218 220 14 (set (reg/f:DI 116 [ stdscr.52_30 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":434 -1
     (nil))
(insn 220 219 221 14 (set (reg:SI 258)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":434 -1
     (nil))
(insn 221 220 222 14 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":434 -1
     (nil))
(insn 222 221 223 14 (set (reg:SI 1 dx)
        (reg:SI 258)) "function.c":434 -1
     (nil))
(insn 223 222 224 14 (set (reg:SI 4 si)
        (reg:SI 259)) "function.c":434 -1
     (nil))
(insn 224 223 225 14 (set (reg:DI 5 di)
        (reg/f:DI 116 [ stdscr.52_30 ])) "function.c":434 -1
     (nil))
(call_insn 225 224 226 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":434 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 226 225 227 14 (set (reg/f:DI 117 [ _31 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":435 -1
     (nil))
(insn 227 226 228 14 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":435 -1
     (nil))
(insn 228 227 229 14 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 260))) "function.c":435 -1
     (nil))
(insn 229 228 230 14 (parallel [
            (set (reg:DI 119 [ _33 ])
                (ashift:DI (reg:DI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":435 -1
     (nil))
(insn 230 229 231 14 (parallel [
            (set (reg/f:DI 120 [ _34 ])
                (plus:DI (reg/f:DI 117 [ _31 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":435 -1
     (nil))
(insn 231 230 232 14 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 120 [ _34 ]) [10 *_34+0 S8 A64])) "function.c":435 -1
     (nil))
(insn 232 231 233 14 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":435 -1
     (nil))
(insn 233 232 234 14 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 261))) "function.c":435 -1
     (nil))
(insn 234 233 235 14 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":435 -1
     (nil))
(insn 235 234 236 14 (set (reg:QI 124 [ _38 ])
        (mem:QI (reg/f:DI 123 [ _37 ]) [0 *_37+0 S1 A8])) "function.c":435 -1
     (nil))
(insn 236 235 237 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 124 [ _38 ])
            (const_int 77 [0x4d]))) "function.c":435 -1
     (nil))
(jump_insn 237 236 238 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 244)
            (pc))) "function.c":435 -1
     (nil)
 -> 244)
;;  succ:       15 (FALLTHRU)
;;              16

;; basic block 15, loop depth 1, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 238 237 239 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 239 238 240 15 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":437 -1
     (nil))
(insn 240 239 241 15 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":437 -1
     (nil))
(call_insn 241 240 242 15 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":437 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 242 241 243 15 (set (pc)
        (label_ref 291)) -1
     (nil)
 -> 291)
;;  succ:       19

(barrier 243 242 244)
;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 244 243 245 16 52 (nil) [1 uses])
(note 245 244 246 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 16 (set (reg/f:DI 125 [ _39 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":439 -1
     (nil))
(insn 247 246 248 16 (set (reg:SI 262)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":439 -1
     (nil))
(insn 248 247 249 16 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 262))) "function.c":439 -1
     (nil))
(insn 249 248 250 16 (parallel [
            (set (reg:DI 127 [ _41 ])
                (ashift:DI (reg:DI 126 [ _40 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":439 -1
     (nil))
(insn 250 249 251 16 (parallel [
            (set (reg/f:DI 128 [ _42 ])
                (plus:DI (reg/f:DI 125 [ _39 ])
                    (reg:DI 127 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":439 -1
     (nil))
(insn 251 250 252 16 (set (reg/f:DI 129 [ _43 ])
        (mem/f:DI (reg/f:DI 128 [ _42 ]) [10 *_42+0 S8 A64])) "function.c":439 -1
     (nil))
(insn 252 251 253 16 (set (reg:SI 263)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":439 -1
     (nil))
(insn 253 252 254 16 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 263))) "function.c":439 -1
     (nil))
(insn 254 253 255 16 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 129 [ _43 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":439 -1
     (nil))
(insn 255 254 256 16 (set (reg:QI 132 [ _46 ])
        (mem:QI (reg/f:DI 131 [ _45 ]) [0 *_45+0 S1 A8])) "function.c":439 -1
     (nil))
(insn 256 255 257 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 132 [ _46 ])
            (const_int 65 [0x41]))) "function.c":439 -1
     (nil))
(jump_insn 257 256 258 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 274)
            (pc))) "function.c":439 -1
     (nil)
 -> 274)
;;  succ:       17 (FALLTHRU)
;;              18

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 258 257 259 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 17 (set (reg/f:DI 133 [ stdscr.53_47 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":441 -1
     (nil))
(insn 260 259 261 17 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":441 -1
     (nil))
(insn 261 260 262 17 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":441 -1
     (nil))
(insn 262 261 263 17 (set (reg:DI 5 di)
        (reg/f:DI 133 [ stdscr.53_47 ])) "function.c":441 -1
     (nil))
(call_insn 263 262 264 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":441 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 264 263 265 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":442 -1
     (nil))
(insn 265 264 266 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":442 -1
     (nil))
(call_insn 266 265 267 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":442 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 267 266 268 17 (set (reg/f:DI 134 [ stdscr.54_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":443 -1
     (nil))
(insn 268 267 269 17 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":443 -1
     (nil))
(insn 269 268 270 17 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":443 -1
     (nil))
(insn 270 269 271 17 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.54_48 ])) "function.c":443 -1
     (nil))
(call_insn 271 270 272 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":443 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 272 271 273 17 (set (pc)
        (label_ref 291)) -1
     (nil)
 -> 291)
;;  succ:       19

(barrier 273 272 274)
;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 274 273 275 18 54 (nil) [1 uses])
(note 275 274 276 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 18 (set (reg/f:DI 135 [ _49 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":447 -1
     (nil))
(insn 277 276 278 18 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":447 -1
     (nil))
(insn 278 277 279 18 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 264))) "function.c":447 -1
     (nil))
(insn 279 278 280 18 (parallel [
            (set (reg:DI 137 [ _51 ])
                (ashift:DI (reg:DI 136 [ _50 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":447 -1
     (nil))
(insn 280 279 281 18 (parallel [
            (set (reg/f:DI 138 [ _52 ])
                (plus:DI (reg/f:DI 135 [ _49 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":447 -1
     (nil))
(insn 281 280 282 18 (set (reg/f:DI 139 [ _53 ])
        (mem/f:DI (reg/f:DI 138 [ _52 ]) [10 *_52+0 S8 A64])) "function.c":447 -1
     (nil))
(insn 282 281 283 18 (set (reg:SI 265)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":447 -1
     (nil))
(insn 283 282 284 18 (set (reg:DI 140 [ _54 ])
        (sign_extend:DI (reg:SI 265))) "function.c":447 -1
     (nil))
(insn 284 283 285 18 (parallel [
            (set (reg/f:DI 141 [ _55 ])
                (plus:DI (reg/f:DI 139 [ _53 ])
                    (reg:DI 140 [ _54 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":447 -1
     (nil))
(insn 285 284 286 18 (set (reg:QI 142 [ _56 ])
        (mem:QI (reg/f:DI 141 [ _55 ]) [0 *_55+0 S1 A8])) "function.c":447 -1
     (nil))
(insn 286 285 287 18 (set (reg:SI 143 [ _57 ])
        (sign_extend:SI (reg:QI 142 [ _56 ]))) "function.c":447 -1
     (nil))
(insn 287 286 288 18 (set (reg:SI 4 si)
        (reg:SI 143 [ _57 ])) "function.c":447 -1
     (nil))
(insn 288 287 289 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":447 -1
     (nil))
(insn 289 288 290 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":447 -1
     (nil))
(call_insn 290 289 291 18 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":447 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
;;              17
;;              18 (FALLTHRU)
(code_label 291 290 292 19 53 (nil) [2 uses])
(note 292 291 293 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 293 292 294 19 (set (reg/f:DI 144 [ _58 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":450 -1
     (nil))
(insn 294 293 295 19 (set (reg:SI 145 [ _59 ])
        (mem:SI (plus:DI (reg/f:DI 144 [ _58 ])
                (const_int 12 [0xc])) [3 _58->x_current+0 S4 A32])) "function.c":450 -1
     (nil))
(insn 295 294 296 19 (set (reg/f:DI 146 [ _60 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":450 -1
     (nil))
(insn 296 295 297 19 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (reg/f:DI 146 [ _60 ])
                (const_int 16 [0x10])) [3 _60->y_current+0 S4 A64])) "function.c":450 -1
     (nil))
(insn 297 296 298 19 (set (reg/f:DI 148 [ stdscr.55_62 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":450 -1
     (nil))
(insn 298 297 299 19 (set (reg:SI 1 dx)
        (reg:SI 145 [ _59 ])) "function.c":450 -1
     (nil))
(insn 299 298 300 19 (set (reg:SI 4 si)
        (reg:SI 147 [ _61 ])) "function.c":450 -1
     (nil))
(insn 300 299 301 19 (set (reg:DI 5 di)
        (reg/f:DI 148 [ stdscr.55_62 ])) "function.c":450 -1
     (nil))
(call_insn 301 300 302 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":450 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 302 301 303 19 (set (reg/f:DI 149 [ stdscr.56_63 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":451 -1
     (nil))
(insn 303 302 304 19 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":451 -1
     (nil))
(insn 304 303 305 19 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":451 -1
     (nil))
(insn 305 304 306 19 (set (reg:DI 5 di)
        (reg/f:DI 149 [ stdscr.56_63 ])) "function.c":451 -1
     (nil))
(call_insn 306 305 307 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":451 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 307 306 308 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f7cd0f0d3f0 *.LC38>)) "function.c":452 -1
     (nil))
(insn 308 307 309 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":452 -1
     (nil))
(call_insn 309 308 310 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":452 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 310 309 311 19 (set (reg/f:DI 150 [ stdscr.57_64 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":453 -1
     (nil))
(insn 311 310 312 19 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":453 -1
     (nil))
(insn 312 311 313 19 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":453 -1
     (nil))
(insn 313 312 314 19 (set (reg:DI 5 di)
        (reg/f:DI 150 [ stdscr.57_64 ])) "function.c":453 -1
     (nil))
(call_insn 314 313 315 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":453 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 315 314 316 19 (parallel [
            (set (reg:DI 266)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":455 -1
     (nil))
(insn 316 315 317 19 (set (reg:DI 5 di)
        (reg:DI 266)) "function.c":455 -1
     (nil))
(call_insn 317 316 318 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":455 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 318 317 319 19 (parallel [
            (set (reg:DI 267)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":456 -1
     (nil))
(insn 319 318 320 19 (set (reg:DI 5 di)
        (reg:DI 267)) "function.c":456 -1
     (nil))
(call_insn 320 319 321 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":456 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
;;              13
;;              19 (FALLTHRU)
(code_label 321 320 322 20 51 (nil) [2 uses])
(note 322 321 323 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 323 322 324 20 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
            (const_int 0 [0]))) "function.c":459 -1
     (nil))
(jump_insn 324 323 325 20 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 327)
            (pc))) "function.c":459 -1
     (nil)
 -> 327)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 1, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 325 324 326 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 326 325 327 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 b1+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":461 -1
     (nil))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 1, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
;;              21 (FALLTHRU)
(code_label 327 326 328 22 55 (nil) [1 uses])
(note 328 327 329 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 22 (set (reg/f:DI 151 [ _65 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":464 -1
     (nil))
(insn 330 329 331 22 (set (reg:SI 152 [ _66 ])
        (mem:SI (reg/f:DI 151 [ _65 ]) [3 _65->PID+0 S4 A64])) "function.c":464 -1
     (nil))
(insn 331 330 332 22 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":464 -1
     (nil))
(insn 332 331 333 22 (set (reg:SI 5 di)
        (reg:SI 152 [ _66 ])) "function.c":464 -1
     (nil))
(call_insn 333 332 334 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x7f7cd1125500 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) "function.c":464 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 334 333 335 22 (set (reg:SI 153 [ _67 ])
        (reg:SI 0 ax)) "function.c":464 -1
     (nil))
(insn 335 334 336 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ _67 ])
            (const_int 0 [0]))) "function.c":464 -1
     (nil))
(jump_insn 336 335 337 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 360)
            (pc))) "function.c":464 -1
     (nil)
 -> 360)
;;  succ:       23 (FALLTHRU)
;;              24

;; basic block 23, loop depth 1, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
(note 337 336 338 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 23 (set (reg/f:DI 154 [ _68 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":466 -1
     (nil))
(insn 339 338 340 23 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])) "function.c":466 -1
     (nil))
(insn 340 339 341 23 (set (reg/f:DI 156 [ _70 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":466 -1
     (nil))
(insn 341 340 342 23 (set (reg:SI 157 [ _71 ])
        (mem:SI (plus:DI (reg/f:DI 156 [ _70 ])
                (const_int 16 [0x10])) [3 _70->y_current+0 S4 A64])) "function.c":466 -1
     (nil))
(insn 342 341 343 23 (set (reg/f:DI 158 [ stdscr.58_72 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":466 -1
     (nil))
(insn 343 342 344 23 (set (reg:SI 1 dx)
        (reg:SI 155 [ _69 ])) "function.c":466 -1
     (nil))
(insn 344 343 345 23 (set (reg:SI 4 si)
        (reg:SI 157 [ _71 ])) "function.c":466 -1
     (nil))
(insn 345 344 346 23 (set (reg:DI 5 di)
        (reg/f:DI 158 [ stdscr.58_72 ])) "function.c":466 -1
     (nil))
(call_insn 346 345 347 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":466 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 347 346 348 23 (set (reg/f:DI 159 [ stdscr.59_73 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":467 -1
     (nil))
(insn 348 347 349 23 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":467 -1
     (nil))
(insn 349 348 350 23 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":467 -1
     (nil))
(insn 350 349 351 23 (set (reg:DI 5 di)
        (reg/f:DI 159 [ stdscr.59_73 ])) "function.c":467 -1
     (nil))
(call_insn 351 350 352 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":467 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 352 351 353 23 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f7cd0f0d480 *.LC39>)) "function.c":468 -1
     (nil))
(insn 353 352 354 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":468 -1
     (nil))
(call_insn 354 353 355 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":468 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 355 354 356 23 (set (reg/f:DI 160 [ stdscr.60_74 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":469 -1
     (nil))
(insn 356 355 357 23 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":469 -1
     (nil))
(insn 357 356 358 23 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":469 -1
     (nil))
(insn 358 357 359 23 (set (reg:DI 5 di)
        (reg/f:DI 160 [ stdscr.60_74 ])) "function.c":469 -1
     (nil))
(call_insn 359 358 360 23 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":469 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       24 (FALLTHRU)

;; basic block 24, loop depth 1, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              23 (FALLTHRU)
(code_label 360 359 361 24 56 (nil) [1 uses])
(note 361 360 362 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 24 (set (reg/f:DI 161 [ _75 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":472 -1
     (nil))
(insn 363 362 364 24 (set (reg:SI 162 [ _76 ])
        (mem:SI (plus:DI (reg/f:DI 161 [ _75 ])
                (const_int 12 [0xc])) [3 _75->x_current+0 S4 A32])) "function.c":472 -1
     (nil))
(insn 364 363 365 24 (set (reg/f:DI 163 [ _77 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":472 -1
     (nil))
(insn 365 364 366 24 (set (reg:SI 164 [ _78 ])
        (mem:SI (plus:DI (reg/f:DI 163 [ _77 ])
                (const_int 16 [0x10])) [3 _77->y_current+0 S4 A64])) "function.c":472 -1
     (nil))
(insn 366 365 367 24 (set (reg/f:DI 165 [ stdscr.61_79 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":472 -1
     (nil))
(insn 367 366 368 24 (set (reg:SI 1 dx)
        (reg:SI 162 [ _76 ])) "function.c":472 -1
     (nil))
(insn 368 367 369 24 (set (reg:SI 4 si)
        (reg:SI 164 [ _78 ])) "function.c":472 -1
     (nil))
(insn 369 368 370 24 (set (reg:DI 5 di)
        (reg/f:DI 165 [ stdscr.61_79 ])) "function.c":472 -1
     (nil))
(call_insn 370 369 371 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":472 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 371 370 372 24 (parallel [
            (set (reg:DI 268)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":474 -1
     (nil))
(insn 372 371 373 24 (set (reg:DI 5 di)
        (reg:DI 268)) "function.c":474 -1
     (nil))
(call_insn 373 372 374 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":474 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 374 373 375 24 (parallel [
            (set (reg:DI 269)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":475 -1
     (nil))
(insn 375 374 376 24 (set (reg:DI 5 di)
        (reg:DI 269)) "function.c":475 -1
     (nil))
(call_insn 376 375 377 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":475 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 377 376 378 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
            (const_int 0 [0]))) "function.c":477 -1
     (nil))
(jump_insn 378 377 379 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) "function.c":477 -1
     (nil)
 -> 510)
;;  succ:       25 (FALLTHRU)
;;              33

;; basic block 25, loop depth 1, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 379 378 380 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 25 (set (reg/f:DI 166 [ _80 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":477 -1
     (nil))
(insn 381 380 382 25 (set (reg:SI 167 [ _81 ])
        (mem:SI (plus:DI (reg/f:DI 166 [ _80 ])
                (const_int 16 [0x10])) [3 _80->y_current+0 S4 A64])) "function.c":477 -1
     (nil))
(insn 382 381 383 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 167 [ _81 ])
            (const_int 0 [0]))) "function.c":477 -1
     (nil))
(jump_insn 383 382 384 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) "function.c":477 -1
     (nil)
 -> 510)
;;  succ:       26 (FALLTHRU)
;;              33

;; basic block 26, loop depth 1, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 384 383 385 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 26 (set (reg/f:DI 168 [ _82 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":479 -1
     (nil))
(insn 386 385 387 26 (set (reg:SI 270)
        (mem:SI (plus:DI (reg/f:DI 168 [ _82 ])
                (const_int 12 [0xc])) [3 _82->x_current+0 S4 A32])) "function.c":479 -1
     (nil))
(insn 387 386 388 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])
        (reg:SI 270)) "function.c":479 -1
     (nil))
(insn 388 387 389 26 (set (reg/f:DI 169 [ _83 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":480 -1
     (nil))
(insn 389 388 390 26 (set (reg:SI 271)
        (mem:SI (plus:DI (reg/f:DI 169 [ _83 ])
                (const_int 16 [0x10])) [3 _83->y_current+0 S4 A64])) "function.c":480 -1
     (nil))
(insn 390 389 391 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])
        (reg:SI 271)) "function.c":480 -1
     (nil))
(insn 391 390 392 26 (parallel [
            (set (reg:DI 272)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":482 -1
     (nil))
(insn 392 391 393 26 (set (reg:DI 5 di)
        (reg:DI 272)) "function.c":482 -1
     (nil))
(call_insn 393 392 394 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":482 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 394 393 395 26 (parallel [
            (set (reg:DI 273)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":483 -1
     (nil))
(insn 395 394 396 26 (set (reg:DI 5 di)
        (reg:DI 273)) "function.c":483 -1
     (nil))
(call_insn 396 395 397 26 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":483 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 397 396 398 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
            (const_int 0 [0]))) "function.c":485 -1
     (nil))
(jump_insn 398 397 399 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 510)
            (pc))) "function.c":485 -1
     (nil)
 -> 510)
;;  succ:       27 (FALLTHRU)
;;              33

;; basic block 27, loop depth 1, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 (FALLTHRU)
(note 399 398 400 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 400 399 401 27 (parallel [
            (set (reg:DI 274)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":487 -1
     (nil))
(insn 401 400 402 27 (set (reg:DI 5 di)
        (reg:DI 274)) "function.c":487 -1
     (nil))
(call_insn 402 401 403 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step2_krzak") [flags 0x3]  <function_decl 0x7f7cd1178100 step2_krzak>) [0 step2_krzak S1 A8])
            (const_int 0 [0]))) "function.c":487 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 403 402 404 27 (parallel [
            (set (reg:DI 275)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":488 -1
     (nil))
(insn 404 403 405 27 (set (reg:DI 5 di)
        (reg:DI 275)) "function.c":488 -1
     (nil))
(call_insn 405 404 406 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("step2") [flags 0x3]  <function_decl 0x7f7cd1178300 step2>) [0 step2 S1 A8])
            (const_int 0 [0]))) "function.c":488 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 406 405 407 27 (set (reg:SI 276)
        (reg:SI 0 ax)) "function.c":488 -1
     (nil))
(insn 407 406 408 27 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
        (reg:SI 276)) "function.c":488 -1
     (nil))
(insn 408 407 409 27 (set (reg/f:DI 170 [ stdscr.62_84 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":489 -1
     (nil))
(insn 409 408 410 27 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":489 -1
     (nil))
(insn 410 409 411 27 (set (reg:SI 278)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":489 -1
     (nil))
(insn 411 410 412 27 (set (reg:SI 1 dx)
        (reg:SI 277)) "function.c":489 -1
     (nil))
(insn 412 411 413 27 (set (reg:SI 4 si)
        (reg:SI 278)) "function.c":489 -1
     (nil))
(insn 413 412 414 27 (set (reg:DI 5 di)
        (reg/f:DI 170 [ stdscr.62_84 ])) "function.c":489 -1
     (nil))
(call_insn 414 413 415 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":489 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 415 414 416 27 (set (reg/f:DI 171 [ _85 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":490 -1
     (nil))
(insn 416 415 417 27 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":490 -1
     (nil))
(insn 417 416 418 27 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 279))) "function.c":490 -1
     (nil))
(insn 418 417 419 27 (parallel [
            (set (reg:DI 173 [ _87 ])
                (ashift:DI (reg:DI 172 [ _86 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":490 -1
     (nil))
(insn 419 418 420 27 (parallel [
            (set (reg/f:DI 174 [ _88 ])
                (plus:DI (reg/f:DI 171 [ _85 ])
                    (reg:DI 173 [ _87 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":490 -1
     (nil))
(insn 420 419 421 27 (set (reg/f:DI 175 [ _89 ])
        (mem/f:DI (reg/f:DI 174 [ _88 ]) [10 *_88+0 S8 A64])) "function.c":490 -1
     (nil))
(insn 421 420 422 27 (set (reg:SI 280)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":490 -1
     (nil))
(insn 422 421 423 27 (set (reg:DI 176 [ _90 ])
        (sign_extend:DI (reg:SI 280))) "function.c":490 -1
     (nil))
(insn 423 422 424 27 (parallel [
            (set (reg/f:DI 177 [ _91 ])
                (plus:DI (reg/f:DI 175 [ _89 ])
                    (reg:DI 176 [ _90 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":490 -1
     (nil))
(insn 424 423 425 27 (set (reg:QI 178 [ _92 ])
        (mem:QI (reg/f:DI 177 [ _91 ]) [0 *_91+0 S1 A8])) "function.c":490 -1
     (nil))
(insn 425 424 426 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 178 [ _92 ])
            (const_int 77 [0x4d]))) "function.c":490 -1
     (nil))
(jump_insn 426 425 427 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 433)
            (pc))) "function.c":490 -1
     (nil)
 -> 433)
;;  succ:       28 (FALLTHRU)
;;              29

;; basic block 28, loop depth 1, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 427 426 428 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 428 427 429 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":492 -1
     (nil))
(insn 429 428 430 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":492 -1
     (nil))
(call_insn 430 429 431 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":492 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 431 430 432 28 (set (pc)
        (label_ref 480)) -1
     (nil)
 -> 480)
;;  succ:       32

(barrier 432 431 433)
;; basic block 29, loop depth 1, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 433 432 434 29 58 (nil) [1 uses])
(note 434 433 435 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 435 434 436 29 (set (reg/f:DI 179 [ _93 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":494 -1
     (nil))
(insn 436 435 437 29 (set (reg:SI 281)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":494 -1
     (nil))
(insn 437 436 438 29 (set (reg:DI 180 [ _94 ])
        (sign_extend:DI (reg:SI 281))) "function.c":494 -1
     (nil))
(insn 438 437 439 29 (parallel [
            (set (reg:DI 181 [ _95 ])
                (ashift:DI (reg:DI 180 [ _94 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":494 -1
     (nil))
(insn 439 438 440 29 (parallel [
            (set (reg/f:DI 182 [ _96 ])
                (plus:DI (reg/f:DI 179 [ _93 ])
                    (reg:DI 181 [ _95 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":494 -1
     (nil))
(insn 440 439 441 29 (set (reg/f:DI 183 [ _97 ])
        (mem/f:DI (reg/f:DI 182 [ _96 ]) [10 *_96+0 S8 A64])) "function.c":494 -1
     (nil))
(insn 441 440 442 29 (set (reg:SI 282)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":494 -1
     (nil))
(insn 442 441 443 29 (set (reg:DI 184 [ _98 ])
        (sign_extend:DI (reg:SI 282))) "function.c":494 -1
     (nil))
(insn 443 442 444 29 (parallel [
            (set (reg/f:DI 185 [ _99 ])
                (plus:DI (reg/f:DI 183 [ _97 ])
                    (reg:DI 184 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":494 -1
     (nil))
(insn 444 443 445 29 (set (reg:QI 186 [ _100 ])
        (mem:QI (reg/f:DI 185 [ _99 ]) [0 *_99+0 S1 A8])) "function.c":494 -1
     (nil))
(insn 445 444 446 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 186 [ _100 ])
            (const_int 65 [0x41]))) "function.c":494 -1
     (nil))
(jump_insn 446 445 447 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 463)
            (pc))) "function.c":494 -1
     (nil)
 -> 463)
;;  succ:       30 (FALLTHRU)
;;              31

;; basic block 30, loop depth 1, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 447 446 448 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 30 (set (reg/f:DI 187 [ stdscr.63_101 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":496 -1
     (nil))
(insn 449 448 450 30 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":496 -1
     (nil))
(insn 450 449 451 30 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":496 -1
     (nil))
(insn 451 450 452 30 (set (reg:DI 5 di)
        (reg/f:DI 187 [ stdscr.63_101 ])) "function.c":496 -1
     (nil))
(call_insn 452 451 453 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":496 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 453 452 454 30 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":497 -1
     (nil))
(insn 454 453 455 30 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":497 -1
     (nil))
(call_insn 455 454 456 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":497 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 456 455 457 30 (set (reg/f:DI 188 [ stdscr.64_102 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":498 -1
     (nil))
(insn 457 456 458 30 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":498 -1
     (nil))
(insn 458 457 459 30 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":498 -1
     (nil))
(insn 459 458 460 30 (set (reg:DI 5 di)
        (reg/f:DI 188 [ stdscr.64_102 ])) "function.c":498 -1
     (nil))
(call_insn 460 459 461 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":498 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 461 460 462 30 (set (pc)
        (label_ref 480)) -1
     (nil)
 -> 480)
;;  succ:       32

(barrier 462 461 463)
;; basic block 31, loop depth 1, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29
(code_label 463 462 464 31 60 (nil) [1 uses])
(note 464 463 465 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 465 464 466 31 (set (reg/f:DI 189 [ _103 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36176 [0xffffffffffff72b0])) [9 serwerinfo.mapa+0 S8 A64])) "function.c":502 -1
     (nil))
(insn 466 465 467 31 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_pom+0 S4 A32])) "function.c":502 -1
     (nil))
(insn 467 466 468 31 (set (reg:DI 190 [ _104 ])
        (sign_extend:DI (reg:SI 283))) "function.c":502 -1
     (nil))
(insn 468 467 469 31 (parallel [
            (set (reg:DI 191 [ _105 ])
                (ashift:DI (reg:DI 190 [ _104 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":502 -1
     (nil))
(insn 469 468 470 31 (parallel [
            (set (reg/f:DI 192 [ _106 ])
                (plus:DI (reg/f:DI 189 [ _103 ])
                    (reg:DI 191 [ _105 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":502 -1
     (nil))
(insn 470 469 471 31 (set (reg/f:DI 193 [ _107 ])
        (mem/f:DI (reg/f:DI 192 [ _106 ]) [10 *_106+0 S8 A64])) "function.c":502 -1
     (nil))
(insn 471 470 472 31 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 x_pom+0 S4 A32])) "function.c":502 -1
     (nil))
(insn 472 471 473 31 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 284))) "function.c":502 -1
     (nil))
(insn 473 472 474 31 (parallel [
            (set (reg/f:DI 195 [ _109 ])
                (plus:DI (reg/f:DI 193 [ _107 ])
                    (reg:DI 194 [ _108 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":502 -1
     (nil))
(insn 474 473 475 31 (set (reg:QI 196 [ _110 ])
        (mem:QI (reg/f:DI 195 [ _109 ]) [0 *_109+0 S1 A8])) "function.c":502 -1
     (nil))
(insn 475 474 476 31 (set (reg:SI 197 [ _111 ])
        (sign_extend:SI (reg:QI 196 [ _110 ]))) "function.c":502 -1
     (nil))
(insn 476 475 477 31 (set (reg:SI 4 si)
        (reg:SI 197 [ _111 ])) "function.c":502 -1
     (nil))
(insn 477 476 478 31 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":502 -1
     (nil))
(insn 478 477 479 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":502 -1
     (nil))
(call_insn 479 478 480 31 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":502 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
;;  succ:       32 (FALLTHRU)

;; basic block 32, loop depth 1, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
;;              30
;;              31 (FALLTHRU)
(code_label 480 479 481 32 59 (nil) [2 uses])
(note 481 480 482 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 482 481 483 32 (set (reg/f:DI 198 [ _112 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":505 -1
     (nil))
(insn 483 482 484 32 (set (reg:SI 199 [ _113 ])
        (mem:SI (plus:DI (reg/f:DI 198 [ _112 ])
                (const_int 12 [0xc])) [3 _112->x_current+0 S4 A32])) "function.c":505 -1
     (nil))
(insn 484 483 485 32 (set (reg/f:DI 200 [ _114 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":505 -1
     (nil))
(insn 485 484 486 32 (set (reg:SI 201 [ _115 ])
        (mem:SI (plus:DI (reg/f:DI 200 [ _114 ])
                (const_int 16 [0x10])) [3 _114->y_current+0 S4 A64])) "function.c":505 -1
     (nil))
(insn 486 485 487 32 (set (reg/f:DI 202 [ stdscr.65_116 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":505 -1
     (nil))
(insn 487 486 488 32 (set (reg:SI 1 dx)
        (reg:SI 199 [ _113 ])) "function.c":505 -1
     (nil))
(insn 488 487 489 32 (set (reg:SI 4 si)
        (reg:SI 201 [ _115 ])) "function.c":505 -1
     (nil))
(insn 489 488 490 32 (set (reg:DI 5 di)
        (reg/f:DI 202 [ stdscr.65_116 ])) "function.c":505 -1
     (nil))
(call_insn 490 489 491 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":505 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 491 490 492 32 (set (reg/f:DI 203 [ stdscr.66_117 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":506 -1
     (nil))
(insn 492 491 493 32 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":506 -1
     (nil))
(insn 493 492 494 32 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":506 -1
     (nil))
(insn 494 493 495 32 (set (reg:DI 5 di)
        (reg/f:DI 203 [ stdscr.66_117 ])) "function.c":506 -1
     (nil))
(call_insn 495 494 496 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":506 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 496 495 497 32 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f7cd0f0d480 *.LC39>)) "function.c":507 -1
     (nil))
(insn 497 496 498 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":507 -1
     (nil))
(call_insn 498 497 499 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":507 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 499 498 500 32 (set (reg/f:DI 204 [ stdscr.67_118 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":508 -1
     (nil))
(insn 500 499 501 32 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":508 -1
     (nil))
(insn 501 500 502 32 (set (reg:SI 4 si)
        (const_int 512 [0x200])) "function.c":508 -1
     (nil))
(insn 502 501 503 32 (set (reg:DI 5 di)
        (reg/f:DI 204 [ stdscr.67_118 ])) "function.c":508 -1
     (nil))
(call_insn 503 502 504 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":508 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 504 503 505 32 (parallel [
            (set (reg:DI 285)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":510 -1
     (nil))
(insn 505 504 506 32 (set (reg:DI 5 di)
        (reg:DI 285)) "function.c":510 -1
     (nil))
(call_insn 506 505 507 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":510 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 507 506 508 32 (parallel [
            (set (reg:DI 286)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":511 -1
     (nil))
(insn 508 507 509 32 (set (reg:DI 5 di)
        (reg:DI 286)) "function.c":511 -1
     (nil))
(call_insn 509 508 510 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":511 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       33 (FALLTHRU)

;; basic block 33, loop depth 1, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
;;              25
;;              26
;;              32 (FALLTHRU)
(code_label 510 509 511 33 57 (nil) [3 uses])
(note 511 510 512 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 33 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
            (const_int 0 [0]))) "function.c":514 -1
     (nil))
(jump_insn 513 512 514 33 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 516)
            (pc))) "function.c":514 -1
     (nil)
 -> 516)
;;  succ:       34 (FALLTHRU)
;;              35

;; basic block 34, loop depth 1, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 514 513 515 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 515 514 516 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [3 b2+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":516 -1
     (nil))
;;  succ:       35 (FALLTHRU)

;; basic block 35, loop depth 1, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
;;              34 (FALLTHRU)
(code_label 516 515 517 35 61 (nil) [1 uses])
(note 517 516 518 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 518 517 519 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 bestia_licznik+0 S4 A32])
            (const_int 0 [0]))) "function.c":519 -1
     (nil))
(jump_insn 519 518 520 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 534)
            (pc))) "function.c":519 -1
     (nil)
 -> 534)
;;  succ:       36 (FALLTHRU)
;;              38

;; basic block 36, loop depth 1, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 (FALLTHRU)
(note 520 519 521 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 521 520 522 36 (set (reg:QI 205 [ BESTIA_ON.68_119 ])
        (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])) "function.c":519 -1
     (nil))
(insn 522 521 523 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 205 [ BESTIA_ON.68_119 ])
            (const_int 0 [0]))) "function.c":519 -1
     (nil))
(jump_insn 523 522 524 36 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 534)
            (pc))) "function.c":519 -1
     (nil)
 -> 534)
;;  succ:       37 (FALLTHRU)
;;              38

;; basic block 37, loop depth 1, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       36 (FALLTHRU)
(note 524 523 525 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 525 524 526 37 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -100 [0xffffffffffffff9c])) [3 serwerinfo.bestia.alive+0 S4 A32])
        (const_int 1 [0x1])) "function.c":521 -1
     (nil))
(insn 526 525 527 37 (parallel [
            (set (reg:DI 287)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":522 -1
     (nil))
(insn 527 526 528 37 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":522 -1
     (nil))
(insn 528 527 529 37 (set (reg:DI 2 cx)
        (reg:DI 287)) "function.c":522 -1
     (nil))
(insn 529 528 530 37 (set (reg:DI 1 dx)
        (symbol_ref:DI ("bestia") [flags 0x3]  <function_decl 0x7f7cd1169a00 bestia>)) "function.c":522 -1
     (nil))
(insn 530 529 531 37 (set (reg:DI 4 si)
        (const_int 0 [0])) "function.c":522 -1
     (nil))
(insn 531 530 532 37 (set (reg:DI 5 di)
        (reg:DI 288)) "function.c":522 -1
     (nil))
(call_insn 532 531 533 37 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_create") [flags 0x41]  <function_decl 0x7f7cd1033700 pthread_create>) [0 pthread_create S1 A8])
            (const_int 0 [0]))) "function.c":522 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (expr_list:DI (use (reg:DI 2 cx))
                    (nil))))))
(insn 533 532 534 37 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 bestia_licznik+0 S4 A32])
        (const_int 1 [0x1])) "function.c":523 -1
     (nil))
;;  succ:       38 (FALLTHRU)

;; basic block 38, loop depth 1, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       35
;;              36
;;              37 (FALLTHRU)
(code_label 534 533 535 38 62 (nil) [2 uses])
(note 535 534 536 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 38 (set (reg:QI 206 [ BESTIA_ON.69_120 ])
        (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])) "function.c":526 -1
     (nil))
(insn 537 536 538 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 206 [ BESTIA_ON.69_120 ])
            (const_int 0 [0]))) "function.c":526 -1
     (nil))
(jump_insn 538 537 539 38 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 569)
            (pc))) "function.c":526 -1
     (nil)
 -> 569)
;;  succ:       39 (FALLTHRU)
;;              40

;; basic block 39, loop depth 1, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       38 (FALLTHRU)
(note 539 538 540 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 39 (set (reg:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [18 sem_bestia1+0 S8 A64])) "function.c":528 -1
     (nil))
(insn 541 540 542 39 (set (reg:DI 5 di)
        (reg:DI 289)) "function.c":528 -1
     (nil))
(call_insn 542 541 543 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":528 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 543 542 544 39 (set (reg:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -80 [0xffffffffffffffb0])) [18 sem_bestia2+0 S8 A64])) "function.c":529 -1
     (nil))
(insn 544 543 545 39 (set (reg:DI 5 di)
        (reg:DI 290)) "function.c":529 -1
     (nil))
(call_insn 545 544 546 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":529 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 546 545 547 39 (set (reg:SI 207 [ _121 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -128 [0xffffffffffffff80])) [3 serwerinfo.bestia.x+0 S4 A64])) "function.c":530 -1
     (nil))
(insn 547 546 548 39 (set (reg:SI 208 [ _122 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -124 [0xffffffffffffff84])) [3 serwerinfo.bestia.y+0 S4 A32])) "function.c":530 -1
     (nil))
(insn 548 547 549 39 (set (reg/f:DI 209 [ stdscr.70_123 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":530 -1
     (nil))
(insn 549 548 550 39 (set (reg:SI 1 dx)
        (reg:SI 207 [ _121 ])) "function.c":530 -1
     (nil))
(insn 550 549 551 39 (set (reg:SI 4 si)
        (reg:SI 208 [ _122 ])) "function.c":530 -1
     (nil))
(insn 551 550 552 39 (set (reg:DI 5 di)
        (reg/f:DI 209 [ stdscr.70_123 ])) "function.c":530 -1
     (nil))
(call_insn 552 551 553 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":530 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 553 552 554 39 (set (reg/f:DI 210 [ stdscr.71_124 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":531 -1
     (nil))
(insn 554 553 555 39 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":531 -1
     (nil))
(insn 555 554 556 39 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":531 -1
     (nil))
(insn 556 555 557 39 (set (reg:DI 5 di)
        (reg/f:DI 210 [ stdscr.71_124 ])) "function.c":531 -1
     (nil))
(call_insn 557 556 558 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":531 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 558 557 559 39 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f7cd0f0d510 *.LC40>)) "function.c":532 -1
     (nil))
(insn 559 558 560 39 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":532 -1
     (nil))
(call_insn 560 559 561 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":532 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 561 560 562 39 (set (reg/f:DI 211 [ stdscr.72_125 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":533 -1
     (nil))
(insn 562 561 563 39 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":533 -1
     (nil))
(insn 563 562 564 39 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":533 -1
     (nil))
(insn 564 563 565 39 (set (reg:DI 5 di)
        (reg/f:DI 211 [ stdscr.72_125 ])) "function.c":533 -1
     (nil))
(call_insn 565 564 566 39 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":533 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 566 565 567 39 (parallel [
            (set (reg:DI 291)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":534 -1
     (nil))
(insn 567 566 568 39 (set (reg:DI 5 di)
        (reg:DI 291)) "function.c":534 -1
     (nil))
(call_insn 568 567 569 39 (call (mem:QI (symbol_ref:DI ("bestia_kolizja") [flags 0x3]  <function_decl 0x7f7cd1178e00 bestia_kolizja>) [0 bestia_kolizja S1 A8])
        (const_int 0 [0])) "function.c":534 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       40 (FALLTHRU)

;; basic block 40, loop depth 1, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       38
;;              39 (FALLTHRU)
(code_label 569 568 570 40 63 (nil) [1 uses])
(note 570 569 571 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 40 (parallel [
            (set (reg:DI 292)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":537 -1
     (nil))
(insn 572 571 573 40 (set (reg:DI 5 di)
        (reg:DI 292)) "function.c":537 -1
     (nil))
(call_insn 573 572 574 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja1") [flags 0x3]  <function_decl 0x7f7cd1178500 wizja1>) [0 wizja1 S1 A8])
            (const_int 0 [0]))) "function.c":537 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 574 573 575 40 (parallel [
            (set (reg:DI 293)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36208 [0xffffffffffff7290])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":538 -1
     (nil))
(insn 575 574 576 40 (set (reg:DI 5 di)
        (reg:DI 293)) "function.c":538 -1
     (nil))
(call_insn 576 575 577 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wizja2") [flags 0x3]  <function_decl 0x7f7cd1178600 wizja2>) [0 wizja2 S1 A8])
            (const_int 0 [0]))) "function.c":538 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 577 576 578 40 (parallel [
            (set (reg:DI 294)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":540 -1
     (nil))
(insn 578 577 579 40 (set (reg:DI 5 di)
        (reg:DI 294)) "function.c":540 -1
     (nil))
(call_insn 579 578 580 40 (call (mem:QI (symbol_ref:DI ("player_kolizja") [flags 0x3]  <function_decl 0x7f7cd1178f00 player_kolizja>) [0 player_kolizja S1 A8])
        (const_int 0 [0])) "function.c":540 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 580 579 581 40 (parallel [
            (set (reg:DI 295)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":542 -1
     (nil))
(insn 581 580 582 40 (set (reg:DI 5 di)
        (reg:DI 295)) "function.c":542 -1
     (nil))
(call_insn 582 581 583 40 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("collect_skarb") [flags 0x3]  <function_decl 0x7f7cd1178a00 collect_skarb>) [0 collect_skarb S1 A8])
            (const_int 0 [0]))) "function.c":542 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 583 582 584 40 (set (reg/f:DI 212 [ _126 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":544 -1
     (nil))
(insn 584 583 585 40 (set (reg:SI 213 [ _127 ])
        (mem:SI (reg/f:DI 212 [ _126 ]) [3 _126->PID+0 S4 A64])) "function.c":544 -1
     (nil))
(insn 585 584 586 40 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":544 -1
     (nil))
(insn 586 585 587 40 (set (reg:SI 5 di)
        (reg:SI 213 [ _127 ])) "function.c":544 -1
     (nil))
(call_insn 587 586 588 40 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x7f7cd1125500 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) "function.c":544 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 588 587 589 40 (set (reg:SI 214 [ _128 ])
        (reg:SI 0 ax)) "function.c":544 -1
     (nil))
(insn 589 588 590 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 214 [ _128 ])
            (const_int 0 [0]))) "function.c":544 -1
     (nil))
(jump_insn 590 589 591 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 598)
            (pc))) "function.c":544 -1
     (nil)
 -> 598)
;;  succ:       41 (FALLTHRU)
;;              42

;; basic block 41, loop depth 1, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 591 590 592 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 592 591 593 41 (set (reg:DI 296)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])) "function.c":546 -1
     (nil))
(insn 593 592 594 41 (set (reg:DI 5 di)
        (reg:DI 296)) "function.c":546 -1
     (nil))
(call_insn 594 593 595 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":546 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 595 594 596 41 (set (reg:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])) "function.c":547 -1
     (nil))
(insn 596 595 597 41 (set (reg:DI 5 di)
        (reg:DI 297)) "function.c":547 -1
     (nil))
(call_insn 597 596 598 41 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":547 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       42 (FALLTHRU)

;; basic block 42, loop depth 1, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       40
;;              41 (FALLTHRU)
(code_label 598 597 599 42 64 (nil) [1 uses])
(note 599 598 600 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 600 599 601 42 (set (reg/f:DI 215 [ _129 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":550 -1
     (nil))
(insn 601 600 602 42 (set (reg:SI 216 [ _130 ])
        (mem:SI (reg/f:DI 215 [ _129 ]) [3 _129->PID+0 S4 A64])) "function.c":550 -1
     (nil))
(insn 602 601 603 42 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":550 -1
     (nil))
(insn 603 602 604 42 (set (reg:SI 5 di)
        (reg:SI 216 [ _130 ])) "function.c":550 -1
     (nil))
(call_insn 604 603 605 42 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("kill") [flags 0x41]  <function_decl 0x7f7cd1125500 kill>) [0 kill S1 A8])
            (const_int 0 [0]))) "function.c":550 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 605 604 606 42 (set (reg:SI 217 [ _131 ])
        (reg:SI 0 ax)) "function.c":550 -1
     (nil))
(insn 606 605 607 42 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 217 [ _131 ])
            (const_int 0 [0]))) "function.c":550 -1
     (nil))
(jump_insn 607 606 608 42 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 617)
            (pc))) "function.c":550 -1
     (nil)
 -> 617)
;;  succ:       43 (FALLTHRU)
;;              44

;; basic block 43, loop depth 1, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       42 (FALLTHRU)
(note 608 607 609 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 609 608 610 43 (set (reg:DI 298)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [18 sem_p2+0 S8 A64])) "function.c":552 -1
     (nil))
(insn 610 609 611 43 (set (reg:DI 5 di)
        (reg:DI 298)) "function.c":552 -1
     (nil))
(call_insn 611 610 612 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":552 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 612 611 613 43 (set (reg:DI 299)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [18 sem_p2_pom+0 S8 A64])) "function.c":553 -1
     (nil))
(insn 613 612 614 43 (set (reg:DI 5 di)
        (reg:DI 299)) "function.c":553 -1
     (nil))
(call_insn 614 613 615 43 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":553 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(jump_insn 615 614 616 43 (set (pc)
        (label_ref 623)) -1
     (nil)
 -> 623)
;;  succ:       45

(barrier 616 615 617)
;; basic block 44, loop depth 1, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       42
(code_label 617 616 618 44 65 (nil) [1 uses])
(note 618 617 619 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 44 (set (reg/f:DI 218 [ _132 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":557 -1
     (nil))
(insn 620 619 621 44 (set (mem:SI (plus:DI (reg/f:DI 218 [ _132 ])
                (const_int 16 [0x10])) [3 _132->y_current+0 S4 A64])
        (const_int 0 [0])) "function.c":557 -1
     (nil))
(insn 621 620 622 44 (set (reg/f:DI 219 [ _133 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":558 -1
     (nil))
(insn 622 621 623 44 (set (mem:SI (plus:DI (reg/f:DI 219 [ _133 ])
                (const_int 12 [0xc])) [3 _133->x_current+0 S4 A32])
        (const_int 0 [0])) "function.c":558 -1
     (nil))
;;  succ:       45 (FALLTHRU)

;; basic block 45, loop depth 1, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       43
;;              44 (FALLTHRU)
(code_label 623 622 624 45 66 (nil) [1 uses])
(note 624 623 625 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 625 624 626 45 (parallel [
            (set (reg:DI 300)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":561 -1
     (nil))
(insn 626 625 627 45 (set (reg:DI 5 di)
        (reg:DI 300)) "function.c":561 -1
     (nil))
(call_insn 627 626 628 45 (call (mem:QI (symbol_ref:DI ("oboz_coins") [flags 0x3]  <function_decl 0x7f7cd1178c00 oboz_coins>) [0 oboz_coins S1 A8])
        (const_int 0 [0])) "function.c":561 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 628 627 629 45 (parallel [
            (set (reg:DI 301)
                (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36192 [0xffffffffffff72a0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":563 -1
     (nil))
(insn 629 628 630 45 (set (reg:DI 5 di)
        (reg:DI 301)) "function.c":563 -1
     (nil))
(call_insn 630 629 631 45 (call (mem:QI (symbol_ref:DI ("druk_info_plansza_s") [flags 0x3]  <function_decl 0x7f7cd1169800 druk_info_plansza_s>) [0 druk_info_plansza_s S1 A8])
        (const_int 0 [0])) "function.c":563 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 631 630 632 45 (set (reg/f:DI 220 [ stdscr.73_134 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":565 -1
     (nil))
(insn 632 631 633 45 (set (reg:DI 5 di)
        (reg/f:DI 220 [ stdscr.73_134 ])) "function.c":565 -1
     (nil))
(call_insn 633 632 634 45 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wrefresh") [flags 0x41]  <function_decl 0x7f7cd10cd300 wrefresh>) [0 wrefresh S1 A8])
            (const_int 0 [0]))) "function.c":565 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 634 633 635 45 (set (reg:QI 221 [ END.74_135 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":567 -1
     (nil))
(insn 635 634 636 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 221 [ END.74_135 ])
            (const_int 113 [0x71]))) "function.c":567 -1
     (nil))
(jump_insn 636 635 637 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 674)
            (pc))) "function.c":567 -1
     (nil)
 -> 674)
;;  succ:       46 (FALLTHRU)
;;              49

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       45 (FALLTHRU)
(note 637 636 638 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 638 637 639 46 (set (reg:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [18 sem_bestia1+0 S8 A64])) "function.c":569 -1
     (nil))
(insn 639 638 640 46 (set (reg:DI 5 di)
        (reg:DI 302)) "function.c":569 -1
     (nil))
(call_insn 640 639 641 46 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":569 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 641 640 642 46 (set (reg:QI 222 [ BESTIA_ON.75_136 ])
        (mem/c:QI (symbol_ref:DI ("BESTIA_ON") [flags 0x2]  <var_decl 0x7f7cd111b5a0 BESTIA_ON>) [0 BESTIA_ON+0 S1 A8])) "function.c":571 -1
     (nil))
(insn 642 641 643 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 222 [ BESTIA_ON.75_136 ])
            (const_int 0 [0]))) "function.c":571 -1
     (nil))
(jump_insn 643 642 644 46 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 649)
            (pc))) "function.c":571 -1
     (nil)
 -> 649)
;;  succ:       47 (FALLTHRU)
;;              48

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       46 (FALLTHRU)
(note 644 643 645 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 646 47 (set (reg:DI 223 [ bestia1.76_137 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -96 [0xffffffffffffffa0])) [7 bestia1+0 S8 A64])) "function.c":573 -1
     (nil))
(insn 646 645 647 47 (set (reg:DI 4 si)
        (const_int 0 [0])) "function.c":573 -1
     (nil))
(insn 647 646 648 47 (set (reg:DI 5 di)
        (reg:DI 223 [ bestia1.76_137 ])) "function.c":573 -1
     (nil))
(call_insn 648 647 649 47 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("pthread_join") [flags 0x41]  <function_decl 0x7f7cd1033900 pthread_join>) [0 pthread_join S1 A8])
            (const_int 0 [0]))) "function.c":573 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       48 (FALLTHRU)

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       46
;;              47 (FALLTHRU)
(code_label 649 648 650 48 68 (nil) [1 uses])
(note 650 649 651 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 651 650 652 48 (set (reg/f:DI 224 [ _138 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36160 [0xffffffffffff72c0])) [14 serwerinfo.player1+0 S8 A64])) "function.c":576 -1
     (nil))
(insn 652 651 653 48 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":576 -1
     (nil))
(insn 653 652 654 48 (set (reg:DI 5 di)
        (reg/f:DI 224 [ _138 ])) "function.c":576 -1
     (nil))
(call_insn 654 653 655 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("munmap") [flags 0x41]  <function_decl 0x7f7cd133c100 munmap>) [0 munmap S1 A8])
            (const_int 0 [0]))) "function.c":576 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 655 654 656 48 (set (reg/f:DI 225 [ _139 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36152 [0xffffffffffff72c8])) [14 serwerinfo.player2+0 S8 A64])) "function.c":577 -1
     (nil))
(insn 656 655 657 48 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":577 -1
     (nil))
(insn 657 656 658 48 (set (reg:DI 5 di)
        (reg/f:DI 225 [ _139 ])) "function.c":577 -1
     (nil))
(call_insn 658 657 659 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("munmap") [flags 0x41]  <function_decl 0x7f7cd133c100 munmap>) [0 munmap S1 A8])
            (const_int 0 [0]))) "function.c":577 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 659 658 660 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f7cd0f0d1b0 *.LC34>)) "function.c":578 -1
     (nil))
(call_insn 660 659 661 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":578 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 661 660 662 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f7cd0f0d240 *.LC35>)) "function.c":579 -1
     (nil))
(call_insn 662 661 663 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":579 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 663 662 664 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f7cd0f0d2d0 *.LC36>)) "function.c":580 -1
     (nil))
(call_insn 664 663 665 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":580 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 665 664 666 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f7cd0f0d360 *.LC37>)) "function.c":581 -1
     (nil))
(call_insn 666 665 667 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":581 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 667 666 668 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f7cd0ef3870 *.LC32>)) "function.c":582 -1
     (nil))
(call_insn 668 667 669 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":582 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 669 668 670 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f7cd0ef3900 *.LC33>)) "function.c":583 -1
     (nil))
(call_insn 670 669 671 48 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":583 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 671 670 672 48 (set (reg/f:DI 229 [ _306 ])
        (const_int 0 [0])) "function.c":585 -1
     (nil))
(jump_insn 672 671 673 48 (set (pc)
        (label_ref 687)) -1
     (nil)
 -> 687)
;;  succ:       50

(barrier 673 672 674)
;; basic block 49, loop depth 1, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       45
(code_label 674 673 675 49 67 (nil) [1 uses])
(note 675 674 676 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 676 675 677 49 (set (reg/f:DI 226 [ stdscr.77_140 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":589 -1
     (nil))
(insn 677 676 678 49 (set (reg:DI 5 di)
        (reg/f:DI 226 [ stdscr.77_140 ])) "function.c":589 -1
     (nil))
(call_insn 678 677 679 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wclear") [flags 0x41]  <function_decl 0x7f7cd10c4800 wclear>) [0 wclear S1 A8])
            (const_int 0 [0]))) "function.c":589 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 679 678 680 49 (set (reg:SI 5 di)
        (const_int 1000000 [0xf4240])) "function.c":590 -1
     (nil))
(call_insn 680 679 681 49 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("usleep") [flags 0x41]  <function_decl 0x7f7cd1368000 usleep>) [0 usleep S1 A8])
            (const_int 0 [0]))) "function.c":590 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 681 680 682 49 (set (reg:SI 227 [ _141 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])) "function.c":592 -1
     (nil))
(insn 682 681 683 49 (parallel [
            (set (reg:SI 228 [ _142 ])
                (plus:SI (reg:SI 227 [ _141 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":592 -1
     (nil))
(insn 683 682 685 49 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36180 [0xffffffffffff72ac])) [3 serwerinfo.runda+0 S4 A32])
        (reg:SI 228 [ _142 ])) "function.c":592 -1
     (nil))
(jump_insn 685 683 686 49 (set (pc)
        (label_ref 684)) "function.c":377 -1
     (nil)
 -> 684)
;;  succ:       7 (DFS_BACK)

(barrier 686 685 687)
;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 687 686 688 50 69 (nil) [1 uses])
(note 688 687 689 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 689 688 693 50 (set (reg/f:DI 230 [ <retval> ])
        (reg/f:DI 229 [ _306 ])) -1
     (nil))
(insn 693 689 694 50 (set (reg/i:DI 0 ax)
        (reg/f:DI 230 [ <retval> ])) "function.c":595 -1
     (nil))
(insn 694 693 0 50 (use (reg/i:DI 0 ax)) "function.c":595 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function gracz_fun (gracz_fun, funcdef_no=12, decl_uid=6227, cgraph_uid=12, symbol_order=15)

gracz_fun (void * pom)
{
  int j;
  int i;
  union sem_t * sem_p1_pom;
  union sem_t * sem_p1;
  struct player_info * playerinfo;
  int fd;
  struct create_player * createplayer;
  void * D.6671;
  char * _1;
  char END.78_2;
  char * _3;
  char * _4;
  int _5;
  int _6;
  struct WINDOW * stdscr.79_7;
  char _8;
  struct WINDOW * stdscr.80_9;
  struct WINDOW * stdscr.81_10;
  char _11;
  char _12;
  char _13;
  char _14;
  struct WINDOW * stdscr.82_15;
  char _16;
  int _17;
  struct WINDOW * stdscr.83_18;
  char _19;
  char _20;
  char _21;
  char _22;
  struct WINDOW * stdscr.84_23;
  char _24;
  int _25;
  struct WINDOW * stdscr.85_26;
  char _27;
  struct WINDOW * stdscr.86_28;
  struct WINDOW * stdscr.87_29;
  char _30;
  struct WINDOW * stdscr.88_31;
  struct WINDOW * stdscr.89_32;
  char _33;
  int _34;
  struct WINDOW * stdscr.90_35;
  int _36;
  struct WINDOW * stdscr.91_37;
  struct WINDOW * stdscr.92_38;
  struct WINDOW * stdscr.93_39;
  int _40;
  struct WINDOW * stdscr.94_41;
  struct WINDOW * stdscr.95_42;
  int _43;
  struct WINDOW * stdscr.96_44;
  struct WINDOW * stdscr.97_45;
  int _46;
  int _47;
  struct WINDOW * stdscr.98_48;
  int _49;
  struct WINDOW * stdscr.99_50;
  int _51;
  struct WINDOW * stdscr.100_52;
  int _53;
  struct WINDOW * stdscr.101_54;
  struct WINDOW * stdscr.102_55;
  struct WINDOW * stdscr.103_56;
  struct WINDOW * stdscr.104_57;
  struct WINDOW * stdscr.105_58;
  struct WINDOW * stdscr.106_59;
  struct WINDOW * stdscr.107_60;
  struct WINDOW * stdscr.108_61;
  struct WINDOW * stdscr.109_62;
  struct WINDOW * stdscr.110_63;
  struct WINDOW * stdscr.111_64;
  struct WINDOW * stdscr.112_65;
  struct WINDOW * stdscr.113_66;
  struct WINDOW * stdscr.114_67;
  struct WINDOW * stdscr.115_68;
  struct WINDOW * stdscr.116_69;
  struct WINDOW * stdscr.117_70;
  struct WINDOW * stdscr.118_71;
  struct WINDOW * stdscr.119_72;
  struct WINDOW * stdscr.120_73;
  struct WINDOW * stdscr.121_74;
  struct WINDOW * stdscr.122_75;
  struct WINDOW * stdscr.123_76;
  struct WINDOW * stdscr.124_77;
  struct WINDOW * stdscr.125_78;
  struct WINDOW * stdscr.126_79;
  char END.127_80;
  char * _81;
  void * _195;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  createplayer_89 = pom_88(D);
  _1 = createplayer_89->name1;
  fd_92 = shm_open (_1, 66, 511);
  playerinfo_94 = mmap (0B, 22576, 3, 1, fd_92, 0);
  END.78_2 = END;
  playerinfo_94->request = END.78_2;
  _3 = createplayer_89->name1;
  sem_p1_97 = sem_open (_3, 64, 511, 0);
  _4 = createplayer_89->name2;
  sem_p1_pom_99 = sem_open (_4, 64, 511, 0);
  start_color ();
  init_pair (3, 0, 3);
  init_pair (5, 7, 7);
  init_pair (6, 0, 5);
  init_pair (11, 7, 2);
  init_pair (12, 7, 1);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                28
  sem_wait (sem_p1_97);
  i_107 = 0;
  goto <bb 25>; [INV]
;;    succ:       25

;;   basic block 4, loop depth 2
;;    pred:       25
  j_108 = 0;
  goto <bb 23>; [INV]
;;    succ:       23

;;   basic block 5, loop depth 3
;;    pred:       23
  _5 = j_83 + 5;
  _6 = i_82 + 25;
  stdscr.79_7 = stdscr;
  wmove (stdscr.79_7, _6, _5);
  _8 = playerinfo_94->area[i_82][j_83];
  if (_8 == 77)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 3
;;    pred:       5
  stdscr.80_9 = stdscr;
  wattr_on (stdscr.80_9, 1280, 0B);
  printw (" ");
  stdscr.81_10 = stdscr;
  wattr_off (stdscr.81_10, 1280, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 7, loop depth 3
;;    pred:       5
  _11 = playerinfo_94->area[i_82][j_83];
  if (_11 == 49)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       11
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _12 = playerinfo_94->area[i_82][j_83];
  if (_12 == 50)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       11
;;                9

;;   basic block 9, loop depth 3
;;    pred:       8
  _13 = playerinfo_94->area[i_82][j_83];
  if (_13 == 51)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 3
;;    pred:       9
  _14 = playerinfo_94->area[i_82][j_83];
  if (_14 == 52)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 3
;;    pred:       7
;;                8
;;                9
;;                10
  stdscr.82_15 = stdscr;
  wattr_on (stdscr.82_15, 1536, 0B);
  _16 = playerinfo_94->area[i_82][j_83];
  _17 = (int) _16;
  printw ("%c", _17);
  stdscr.83_18 = stdscr;
  wattr_off (stdscr.83_18, 1536, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 12, loop depth 3
;;    pred:       10
  _19 = playerinfo_94->area[i_82][j_83];
  if (_19 == 99)
    goto <bb 16>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       16
;;                13

;;   basic block 13, loop depth 3
;;    pred:       12
  _20 = playerinfo_94->area[i_82][j_83];
  if (_20 == 116)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       16
;;                14

;;   basic block 14, loop depth 3
;;    pred:       13
  _21 = playerinfo_94->area[i_82][j_83];
  if (_21 == 84)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 3
;;    pred:       14
  _22 = playerinfo_94->area[i_82][j_83];
  if (_22 == 68)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       16
;;                17

;;   basic block 16, loop depth 3
;;    pred:       12
;;                13
;;                14
;;                15
  stdscr.84_23 = stdscr;
  wattr_on (stdscr.84_23, 768, 0B);
  _24 = playerinfo_94->area[i_82][j_83];
  _25 = (int) _24;
  printw ("%c", _25);
  stdscr.85_26 = stdscr;
  wattr_off (stdscr.85_26, 768, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 17, loop depth 3
;;    pred:       15
  _27 = playerinfo_94->area[i_82][j_83];
  if (_27 == 42)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       18
;;                19

;;   basic block 18, loop depth 3
;;    pred:       17
  stdscr.86_28 = stdscr;
  wattr_on (stdscr.86_28, 3072, 0B);
  printw ("*");
  stdscr.87_29 = stdscr;
  wattr_off (stdscr.87_29, 3072, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 19, loop depth 3
;;    pred:       17
  _30 = playerinfo_94->area[i_82][j_83];
  if (_30 == 65)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 3
;;    pred:       19
  stdscr.88_31 = stdscr;
  wattr_on (stdscr.88_31, 2816, 0B);
  printw ("A");
  stdscr.89_32 = stdscr;
  wattr_off (stdscr.89_32, 2816, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 21, loop depth 3
;;    pred:       19
  _33 = playerinfo_94->area[i_82][j_83];
  _34 = (int) _33;
  printw ("%c", _34);
;;    succ:       22

;;   basic block 22, loop depth 3
;;    pred:       6
;;                11
;;                16
;;                18
;;                20
;;                21
  j_126 = j_83 + 1;
;;    succ:       23

;;   basic block 23, loop depth 3
;;    pred:       4
;;                22
  # j_83 = PHI <j_108(4), j_126(22)>
  if (j_83 <= 4)
    goto <bb 5>; [INV]
  else
    goto <bb 24>; [INV]
;;    succ:       5
;;                24

;;   basic block 24, loop depth 2
;;    pred:       23
  i_127 = i_82 + 1;
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       3
;;                24
  # i_82 = PHI <i_107(3), i_127(24)>
  if (i_82 <= 4)
    goto <bb 4>; [INV]
  else
    goto <bb 26>; [INV]
;;    succ:       4
;;                26

;;   basic block 26, loop depth 1
;;    pred:       25
  stdscr.90_35 = stdscr;
  wmove (stdscr.90_35, 25, 13);
  _36 = playerinfo_94->PID_serwer;
  printw ("Server\'s PID: %d", _36);
  stdscr.91_37 = stdscr;
  wmove (stdscr.91_37, 26, 13);
  printw ("Campsite X/Y: unknown");
  stdscr.92_38 = stdscr;
  wmove (stdscr.92_38, 27, 13);
  printw ("Campsite X/Y: ");
  stdscr.93_39 = stdscr;
  wmove (stdscr.93_39, 28, 13);
  _40 = playerinfo_94->runda;
  printw ("Round number: %d", _40);
  stdscr.94_41 = stdscr;
  wmove (stdscr.94_41, 30, 13);
  printw ("Player: ");
  stdscr.95_42 = stdscr;
  wmove (stdscr.95_42, 31, 13);
  _43 = playerinfo_94->numer;
  printw ("Number: %d", _43);
  stdscr.96_44 = stdscr;
  wmove (stdscr.96_44, 32, 13);
  printw ("Type : HUMAN");
  stdscr.97_45 = stdscr;
  wmove (stdscr.97_45, 33, 13);
  _46 = playerinfo_94->y_current;
  _47 = playerinfo_94->x_current;
  printw ("Curr X/Y %d/%d ", _47, _46);
  stdscr.98_48 = stdscr;
  wmove (stdscr.98_48, 34, 13);
  _49 = playerinfo_94->deaths;
  printw ("Deaths :    %d", _49);
  stdscr.99_50 = stdscr;
  wmove (stdscr.99_50, 36, 13);
  _51 = playerinfo_94->coins_carried;
  printw ("Coins found : %d", _51);
  stdscr.100_52 = stdscr;
  wmove (stdscr.100_52, 37, 13);
  _53 = playerinfo_94->coins_brought;
  printw ("Coins brought : %d", _53);
  stdscr.101_54 = stdscr;
  wmove (stdscr.101_54, 40, 13);
  printw ("LEGEND: ");
  stdscr.102_55 = stdscr;
  wmove (stdscr.102_55, 41, 13);
  stdscr.103_56 = stdscr;
  wattr_on (stdscr.103_56, 1536, 0B);
  printw ("1234");
  stdscr.104_57 = stdscr;
  wattr_off (stdscr.104_57, 1536, 0B);
  printw (" - players");
  stdscr.105_58 = stdscr;
  wmove (stdscr.105_58, 42, 13);
  stdscr.106_59 = stdscr;
  wattr_on (stdscr.106_59, 1280, 0B);
  printw (" ");
  stdscr.107_60 = stdscr;
  wattr_off (stdscr.107_60, 1280, 0B);
  printw (" - wall");
  stdscr.108_61 = stdscr;
  wmove (stdscr.108_61, 43, 13);
  printw ("# - bushes (slow down)");
  stdscr.109_62 = stdscr;
  wmove (stdscr.109_62, 44, 13);
  stdscr.110_63 = stdscr;
  wattr_on (stdscr.110_63, 3072, 0B);
  printw ("* - enemy");
  stdscr.111_64 = stdscr;
  wattr_off (stdscr.111_64, 3072, 0B);
  stdscr.112_65 = stdscr;
  wmove (stdscr.112_65, 45, 13);
  stdscr.113_66 = stdscr;
  wattr_on (stdscr.113_66, 768, 0B);
  printw ("c");
  stdscr.114_67 = stdscr;
  wattr_off (stdscr.114_67, 768, 0B);
  printw (" - one coin        ");
  stdscr.115_68 = stdscr;
  wattr_on (stdscr.115_68, 768, 0B);
  printw ("D");
  stdscr.116_69 = stdscr;
  wattr_off (stdscr.116_69, 768, 0B);
  printw (" - dropped treasures");
  stdscr.117_70 = stdscr;
  wmove (stdscr.117_70, 46, 13);
  stdscr.118_71 = stdscr;
  wattr_on (stdscr.118_71, 768, 0B);
  printw ("C");
  stdscr.119_72 = stdscr;
  wattr_off (stdscr.119_72, 768, 0B);
  printw (" - treasure (10 coins)");
  stdscr.120_73 = stdscr;
  wmove (stdscr.120_73, 47, 13);
  stdscr.121_74 = stdscr;
  wattr_on (stdscr.121_74, 768, 0B);
  printw ("T");
  stdscr.122_75 = stdscr;
  wattr_off (stdscr.122_75, 768, 0B);
  printw (" - large treasure (50 coins)");
  stdscr.123_76 = stdscr;
  wmove (stdscr.123_76, 48, 13);
  stdscr.124_77 = stdscr;
  wattr_on (stdscr.124_77, 2816, 0B);
  printw ("A");
  stdscr.125_78 = stdscr;
  wattr_off (stdscr.125_78, 2816, 0B);
  printw (" - campsite");
  stdscr.126_79 = stdscr;
  wrefresh (stdscr.126_79);
  sem_post (sem_p1_pom_99);
  END.127_80 = END;
  if (END.127_80 == 113)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
  _81 = createplayer_89->name1;
  shm_unlink (_81);
  _195 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]
;;    succ:       29

;;   basic block 28, loop depth 1
;;    pred:       26
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 29, loop depth 0
;;    pred:       27
<L30>:
  return _195;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (END.78_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (stdscr.79_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (stdscr.80_9 - 9 )
Partition 10 (stdscr.81_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (stdscr.82_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (stdscr.83_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (stdscr.84_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (stdscr.85_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (stdscr.86_28 - 28 )
Partition 29 (stdscr.87_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (stdscr.88_31 - 31 )
Partition 32 (stdscr.89_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (stdscr.90_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (stdscr.91_37 - 37 )
Partition 38 (stdscr.92_38 - 38 )
Partition 39 (stdscr.93_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (stdscr.94_41 - 41 )
Partition 42 (stdscr.95_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (stdscr.96_44 - 44 )
Partition 45 (stdscr.97_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (stdscr.98_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (stdscr.99_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (stdscr.100_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (stdscr.101_54 - 54 )
Partition 55 (stdscr.102_55 - 55 )
Partition 56 (stdscr.103_56 - 56 )
Partition 57 (stdscr.104_57 - 57 )
Partition 58 (stdscr.105_58 - 58 )
Partition 59 (stdscr.106_59 - 59 )
Partition 60 (stdscr.107_60 - 60 )
Partition 61 (stdscr.108_61 - 61 )
Partition 62 (stdscr.109_62 - 62 )
Partition 63 (stdscr.110_63 - 63 )
Partition 64 (stdscr.111_64 - 64 )
Partition 65 (stdscr.112_65 - 65 )
Partition 66 (stdscr.113_66 - 66 )
Partition 67 (stdscr.114_67 - 67 )
Partition 68 (stdscr.115_68 - 68 )
Partition 69 (stdscr.116_69 - 69 )
Partition 70 (stdscr.117_70 - 70 )
Partition 71 (stdscr.118_71 - 71 )
Partition 72 (stdscr.119_72 - 72 )
Partition 73 (stdscr.120_73 - 73 )
Partition 74 (stdscr.121_74 - 74 )
Partition 75 (stdscr.122_75 - 75 )
Partition 76 (stdscr.123_76 - 76 )
Partition 77 (stdscr.124_77 - 77 )
Partition 78 (stdscr.125_78 - 78 )
Partition 79 (stdscr.126_79 - 79 )
Partition 80 (END.127_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (i_82 - 82 )
Partition 83 (j_83 - 83 )
Partition 88 (pom_88(D) - 88 )
Partition 89 (createplayer_89 - 89 )
Partition 92 (fd_92 - 92 )
Partition 94 (playerinfo_94 - 94 )
Partition 97 (sem_p1_97 - 97 )
Partition 99 (sem_p1_pom_99 - 99 )
Partition 107 (i_107 - 107 )
Partition 108 (j_108 - 108 )
Partition 126 (j_126 - 126 )
Partition 127 (i_127 - 127 )
Partition 195 (_195 - 195 )
Partition 196 (_196(D) - 196 )


Coalescible Partition map 

Partition 0, base 0 (i_82 - 82 107 127 )
Partition 1, base 1 (j_83 - 83 108 126 )
Partition 2, base 2 (pom_88(D) - 88 )
Partition 7, base 3 (_196(D) - 196 )


Partition map 

Partition 0 (i_82 - 82 )
Partition 1 (j_83 - 83 )
Partition 2 (pom_88(D) - 88 )
Partition 3 (i_107 - 107 )
Partition 4 (j_108 - 108 )
Partition 5 (j_126 - 126 )
Partition 6 (i_127 - 127 )
Partition 7 (_196(D) - 196 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_83 <-> j_108
(2147483646, 0) j_83 <-> j_126
(2147483646, 0) i_82 <-> i_107
(2147483646, 0) i_82 <-> i_127

Partition map 

Partition 0 (i_82 - 82 )
Partition 1 (j_83 - 83 )
Partition 2 (pom_88(D) - 88 )
Partition 3 (i_107 - 107 )
Partition 4 (j_108 - 108 )
Partition 5 (j_126 - 126 )
Partition 6 (i_127 - 127 )
Partition 7 (_196(D) - 196 )

Coalesce list: (83)j_83 & (108)j_108 [map: 1, 4] : Success -> 1
Coalesce list: (83)j_83 & (126)j_126 [map: 1, 5] : Success -> 1
Coalesce list: (82)i_82 & (107)i_107 [map: 0, 3] : Success -> 0
Coalesce list: (82)i_82 & (127)i_127 [map: 0, 6] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (END.78_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (stdscr.79_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (stdscr.80_9 - 9 )
Partition 9 (stdscr.81_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (stdscr.82_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (stdscr.83_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (stdscr.84_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (stdscr.85_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (stdscr.86_28 - 28 )
Partition 28 (stdscr.87_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (stdscr.88_31 - 31 )
Partition 31 (stdscr.89_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (stdscr.90_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (stdscr.91_37 - 37 )
Partition 37 (stdscr.92_38 - 38 )
Partition 38 (stdscr.93_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (stdscr.94_41 - 41 )
Partition 41 (stdscr.95_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (stdscr.96_44 - 44 )
Partition 44 (stdscr.97_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (stdscr.98_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (stdscr.99_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (stdscr.100_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (stdscr.101_54 - 54 )
Partition 54 (stdscr.102_55 - 55 )
Partition 55 (stdscr.103_56 - 56 )
Partition 56 (stdscr.104_57 - 57 )
Partition 57 (stdscr.105_58 - 58 )
Partition 58 (stdscr.106_59 - 59 )
Partition 59 (stdscr.107_60 - 60 )
Partition 60 (stdscr.108_61 - 61 )
Partition 61 (stdscr.109_62 - 62 )
Partition 62 (stdscr.110_63 - 63 )
Partition 63 (stdscr.111_64 - 64 )
Partition 64 (stdscr.112_65 - 65 )
Partition 65 (stdscr.113_66 - 66 )
Partition 66 (stdscr.114_67 - 67 )
Partition 67 (stdscr.115_68 - 68 )
Partition 68 (stdscr.116_69 - 69 )
Partition 69 (stdscr.117_70 - 70 )
Partition 70 (stdscr.118_71 - 71 )
Partition 71 (stdscr.119_72 - 72 )
Partition 72 (stdscr.120_73 - 73 )
Partition 73 (stdscr.121_74 - 74 )
Partition 74 (stdscr.122_75 - 75 )
Partition 75 (stdscr.123_76 - 76 )
Partition 76 (stdscr.124_77 - 77 )
Partition 77 (stdscr.125_78 - 78 )
Partition 78 (stdscr.126_79 - 79 )
Partition 79 (END.127_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (i_82 - 82 107 127 )
Partition 82 (j_83 - 83 108 126 )
Partition 83 (pom_88(D) - 88 )
Partition 84 (createplayer_89 - 89 )
Partition 85 (fd_92 - 92 )
Partition 86 (playerinfo_94 - 94 )
Partition 87 (sem_p1_97 - 97 )
Partition 88 (sem_p1_pom_99 - 99 )
Partition 89 (_195 - 195 )
Partition 90 (_196(D) - 196 )

gracz_fun (void * pom)
{
  int j;
  int i;
  union sem_t * sem_p1_pom;
  union sem_t * sem_p1;
  struct player_info * playerinfo;
  int fd;
  struct create_player * createplayer;
  void * D.6671;
  char * _1;
  char END.78_2;
  char * _3;
  char * _4;
  int _5;
  int _6;
  struct WINDOW * stdscr.79_7;
  char _8;
  struct WINDOW * stdscr.80_9;
  struct WINDOW * stdscr.81_10;
  char _11;
  char _12;
  char _13;
  char _14;
  struct WINDOW * stdscr.82_15;
  char _16;
  int _17;
  struct WINDOW * stdscr.83_18;
  char _19;
  char _20;
  char _21;
  char _22;
  struct WINDOW * stdscr.84_23;
  char _24;
  int _25;
  struct WINDOW * stdscr.85_26;
  char _27;
  struct WINDOW * stdscr.86_28;
  struct WINDOW * stdscr.87_29;
  char _30;
  struct WINDOW * stdscr.88_31;
  struct WINDOW * stdscr.89_32;
  char _33;
  int _34;
  struct WINDOW * stdscr.90_35;
  int _36;
  struct WINDOW * stdscr.91_37;
  struct WINDOW * stdscr.92_38;
  struct WINDOW * stdscr.93_39;
  int _40;
  struct WINDOW * stdscr.94_41;
  struct WINDOW * stdscr.95_42;
  int _43;
  struct WINDOW * stdscr.96_44;
  struct WINDOW * stdscr.97_45;
  int _46;
  int _47;
  struct WINDOW * stdscr.98_48;
  int _49;
  struct WINDOW * stdscr.99_50;
  int _51;
  struct WINDOW * stdscr.100_52;
  int _53;
  struct WINDOW * stdscr.101_54;
  struct WINDOW * stdscr.102_55;
  struct WINDOW * stdscr.103_56;
  struct WINDOW * stdscr.104_57;
  struct WINDOW * stdscr.105_58;
  struct WINDOW * stdscr.106_59;
  struct WINDOW * stdscr.107_60;
  struct WINDOW * stdscr.108_61;
  struct WINDOW * stdscr.109_62;
  struct WINDOW * stdscr.110_63;
  struct WINDOW * stdscr.111_64;
  struct WINDOW * stdscr.112_65;
  struct WINDOW * stdscr.113_66;
  struct WINDOW * stdscr.114_67;
  struct WINDOW * stdscr.115_68;
  struct WINDOW * stdscr.116_69;
  struct WINDOW * stdscr.117_70;
  struct WINDOW * stdscr.118_71;
  struct WINDOW * stdscr.119_72;
  struct WINDOW * stdscr.120_73;
  struct WINDOW * stdscr.121_74;
  struct WINDOW * stdscr.122_75;
  struct WINDOW * stdscr.123_76;
  struct WINDOW * stdscr.124_77;
  struct WINDOW * stdscr.125_78;
  struct WINDOW * stdscr.126_79;
  char END.127_80;
  char * _81;
  void * _195;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  createplayer_89 = pom_88(D);
  _1 = createplayer_89->name1;
  fd_92 = shm_open (_1, 66, 511);
  playerinfo_94 = mmap (0B, 22576, 3, 1, fd_92, 0);
  END.78_2 = END;
  playerinfo_94->request = END.78_2;
  _3 = createplayer_89->name1;
  sem_p1_97 = sem_open (_3, 64, 511, 0);
  _4 = createplayer_89->name2;
  sem_p1_pom_99 = sem_open (_4, 64, 511, 0);
  start_color ();
  init_pair (3, 0, 3);
  init_pair (5, 7, 7);
  init_pair (6, 0, 5);
  init_pair (11, 7, 2);
  init_pair (12, 7, 1);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                28
  sem_wait (sem_p1_97);
  i_107 = 0;
  goto <bb 25>; [INV]
;;    succ:       25

;;   basic block 4, loop depth 2
;;    pred:       25
  j_108 = 0;
  goto <bb 23>; [INV]
;;    succ:       23

;;   basic block 5, loop depth 3
;;    pred:       23
  _5 = j_83 + 5;
  _6 = i_82 + 25;
  stdscr.79_7 = stdscr;
  wmove (stdscr.79_7, _6, _5);
  _8 = playerinfo_94->area[i_82][j_83];
  if (_8 == 77)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 3
;;    pred:       5
  stdscr.80_9 = stdscr;
  wattr_on (stdscr.80_9, 1280, 0B);
  printw (" ");
  stdscr.81_10 = stdscr;
  wattr_off (stdscr.81_10, 1280, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 7, loop depth 3
;;    pred:       5
  _11 = playerinfo_94->area[i_82][j_83];
  if (_11 == 49)
    goto <bb 11>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       11
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _12 = playerinfo_94->area[i_82][j_83];
  if (_12 == 50)
    goto <bb 11>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       11
;;                9

;;   basic block 9, loop depth 3
;;    pred:       8
  _13 = playerinfo_94->area[i_82][j_83];
  if (_13 == 51)
    goto <bb 11>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       11
;;                10

;;   basic block 10, loop depth 3
;;    pred:       9
  _14 = playerinfo_94->area[i_82][j_83];
  if (_14 == 52)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 3
;;    pred:       7
;;                8
;;                9
;;                10
  stdscr.82_15 = stdscr;
  wattr_on (stdscr.82_15, 1536, 0B);
  _16 = playerinfo_94->area[i_82][j_83];
  _17 = (int) _16;
  printw ("%c", _17);
  stdscr.83_18 = stdscr;
  wattr_off (stdscr.83_18, 1536, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 12, loop depth 3
;;    pred:       10
  _19 = playerinfo_94->area[i_82][j_83];
  if (_19 == 99)
    goto <bb 16>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       16
;;                13

;;   basic block 13, loop depth 3
;;    pred:       12
  _20 = playerinfo_94->area[i_82][j_83];
  if (_20 == 116)
    goto <bb 16>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       16
;;                14

;;   basic block 14, loop depth 3
;;    pred:       13
  _21 = playerinfo_94->area[i_82][j_83];
  if (_21 == 84)
    goto <bb 16>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       16
;;                15

;;   basic block 15, loop depth 3
;;    pred:       14
  _22 = playerinfo_94->area[i_82][j_83];
  if (_22 == 68)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]
;;    succ:       16
;;                17

;;   basic block 16, loop depth 3
;;    pred:       12
;;                13
;;                14
;;                15
  stdscr.84_23 = stdscr;
  wattr_on (stdscr.84_23, 768, 0B);
  _24 = playerinfo_94->area[i_82][j_83];
  _25 = (int) _24;
  printw ("%c", _25);
  stdscr.85_26 = stdscr;
  wattr_off (stdscr.85_26, 768, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 17, loop depth 3
;;    pred:       15
  _27 = playerinfo_94->area[i_82][j_83];
  if (_27 == 42)
    goto <bb 18>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       18
;;                19

;;   basic block 18, loop depth 3
;;    pred:       17
  stdscr.86_28 = stdscr;
  wattr_on (stdscr.86_28, 3072, 0B);
  printw ("*");
  stdscr.87_29 = stdscr;
  wattr_off (stdscr.87_29, 3072, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 19, loop depth 3
;;    pred:       17
  _30 = playerinfo_94->area[i_82][j_83];
  if (_30 == 65)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 3
;;    pred:       19
  stdscr.88_31 = stdscr;
  wattr_on (stdscr.88_31, 2816, 0B);
  printw ("A");
  stdscr.89_32 = stdscr;
  wattr_off (stdscr.89_32, 2816, 0B);
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 21, loop depth 3
;;    pred:       19
  _33 = playerinfo_94->area[i_82][j_83];
  _34 = (int) _33;
  printw ("%c", _34);
;;    succ:       22

;;   basic block 22, loop depth 3
;;    pred:       6
;;                11
;;                16
;;                18
;;                20
;;                21
  j_126 = j_83 + 1;
;;    succ:       23

;;   basic block 23, loop depth 3
;;    pred:       4
;;                22
  # j_83 = PHI <j_108(4), j_126(22)>
  if (j_83 <= 4)
    goto <bb 5>; [INV]
  else
    goto <bb 24>; [INV]
;;    succ:       5
;;                24

;;   basic block 24, loop depth 2
;;    pred:       23
  i_127 = i_82 + 1;
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       3
;;                24
  # i_82 = PHI <i_107(3), i_127(24)>
  if (i_82 <= 4)
    goto <bb 4>; [INV]
  else
    goto <bb 26>; [INV]
;;    succ:       4
;;                26

;;   basic block 26, loop depth 1
;;    pred:       25
  stdscr.90_35 = stdscr;
  wmove (stdscr.90_35, 25, 13);
  _36 = playerinfo_94->PID_serwer;
  printw ("Server\'s PID: %d", _36);
  stdscr.91_37 = stdscr;
  wmove (stdscr.91_37, 26, 13);
  printw ("Campsite X/Y: unknown");
  stdscr.92_38 = stdscr;
  wmove (stdscr.92_38, 27, 13);
  printw ("Campsite X/Y: ");
  stdscr.93_39 = stdscr;
  wmove (stdscr.93_39, 28, 13);
  _40 = playerinfo_94->runda;
  printw ("Round number: %d", _40);
  stdscr.94_41 = stdscr;
  wmove (stdscr.94_41, 30, 13);
  printw ("Player: ");
  stdscr.95_42 = stdscr;
  wmove (stdscr.95_42, 31, 13);
  _43 = playerinfo_94->numer;
  printw ("Number: %d", _43);
  stdscr.96_44 = stdscr;
  wmove (stdscr.96_44, 32, 13);
  printw ("Type : HUMAN");
  stdscr.97_45 = stdscr;
  wmove (stdscr.97_45, 33, 13);
  _46 = playerinfo_94->y_current;
  _47 = playerinfo_94->x_current;
  printw ("Curr X/Y %d/%d ", _47, _46);
  stdscr.98_48 = stdscr;
  wmove (stdscr.98_48, 34, 13);
  _49 = playerinfo_94->deaths;
  printw ("Deaths :    %d", _49);
  stdscr.99_50 = stdscr;
  wmove (stdscr.99_50, 36, 13);
  _51 = playerinfo_94->coins_carried;
  printw ("Coins found : %d", _51);
  stdscr.100_52 = stdscr;
  wmove (stdscr.100_52, 37, 13);
  _53 = playerinfo_94->coins_brought;
  printw ("Coins brought : %d", _53);
  stdscr.101_54 = stdscr;
  wmove (stdscr.101_54, 40, 13);
  printw ("LEGEND: ");
  stdscr.102_55 = stdscr;
  wmove (stdscr.102_55, 41, 13);
  stdscr.103_56 = stdscr;
  wattr_on (stdscr.103_56, 1536, 0B);
  printw ("1234");
  stdscr.104_57 = stdscr;
  wattr_off (stdscr.104_57, 1536, 0B);
  printw (" - players");
  stdscr.105_58 = stdscr;
  wmove (stdscr.105_58, 42, 13);
  stdscr.106_59 = stdscr;
  wattr_on (stdscr.106_59, 1280, 0B);
  printw (" ");
  stdscr.107_60 = stdscr;
  wattr_off (stdscr.107_60, 1280, 0B);
  printw (" - wall");
  stdscr.108_61 = stdscr;
  wmove (stdscr.108_61, 43, 13);
  printw ("# - bushes (slow down)");
  stdscr.109_62 = stdscr;
  wmove (stdscr.109_62, 44, 13);
  stdscr.110_63 = stdscr;
  wattr_on (stdscr.110_63, 3072, 0B);
  printw ("* - enemy");
  stdscr.111_64 = stdscr;
  wattr_off (stdscr.111_64, 3072, 0B);
  stdscr.112_65 = stdscr;
  wmove (stdscr.112_65, 45, 13);
  stdscr.113_66 = stdscr;
  wattr_on (stdscr.113_66, 768, 0B);
  printw ("c");
  stdscr.114_67 = stdscr;
  wattr_off (stdscr.114_67, 768, 0B);
  printw (" - one coin        ");
  stdscr.115_68 = stdscr;
  wattr_on (stdscr.115_68, 768, 0B);
  printw ("D");
  stdscr.116_69 = stdscr;
  wattr_off (stdscr.116_69, 768, 0B);
  printw (" - dropped treasures");
  stdscr.117_70 = stdscr;
  wmove (stdscr.117_70, 46, 13);
  stdscr.118_71 = stdscr;
  wattr_on (stdscr.118_71, 768, 0B);
  printw ("C");
  stdscr.119_72 = stdscr;
  wattr_off (stdscr.119_72, 768, 0B);
  printw (" - treasure (10 coins)");
  stdscr.120_73 = stdscr;
  wmove (stdscr.120_73, 47, 13);
  stdscr.121_74 = stdscr;
  wattr_on (stdscr.121_74, 768, 0B);
  printw ("T");
  stdscr.122_75 = stdscr;
  wattr_off (stdscr.122_75, 768, 0B);
  printw (" - large treasure (50 coins)");
  stdscr.123_76 = stdscr;
  wmove (stdscr.123_76, 48, 13);
  stdscr.124_77 = stdscr;
  wattr_on (stdscr.124_77, 2816, 0B);
  printw ("A");
  stdscr.125_78 = stdscr;
  wattr_off (stdscr.125_78, 2816, 0B);
  printw (" - campsite");
  stdscr.126_79 = stdscr;
  wrefresh (stdscr.126_79);
  sem_post (sem_p1_pom_99);
  END.127_80 = END;
  if (END.127_80 == 113)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
  _81 = createplayer_89->name1;
  shm_unlink (_81);
  _195 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 29>; [INV]
;;    succ:       29

;;   basic block 28, loop depth 1
;;    pred:       26
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 29, loop depth 0
;;    pred:       27
<L30>:
  return _195;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; createplayer_89 = pom_88(D);

(insn 6 5 7 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [19 pom+0 S8 A64])) "function.c":599 -1
     (nil))

(insn 7 6 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])
        (reg/f:DI 170)) "function.c":599 -1
     (nil))

;; _1 = createplayer_89->name1;

(insn 8 7 9 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":600 -1
     (nil))

(insn 9 8 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 171) [10 createplayer_89->name1+0 S8 A64])) "function.c":600 -1
     (nil))

;; fd_92 = shm_open (_1, 66, 511);

(insn 10 9 11 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":600 -1
     (nil))

(insn 11 10 12 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "function.c":600 -1
     (nil))

(insn 12 11 13 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "function.c":600 -1
     (nil))

(call_insn 13 12 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f7cd133cb00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "function.c":600 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 14 13 15 (set (reg:SI 172)
        (reg:SI 0 ax)) "function.c":600 -1
     (nil))

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 fd+0 S4 A32])
        (reg:SI 172)) "function.c":600 -1
     (nil))

;; playerinfo_94 = mmap (0B, 22576, 3, 1, fd_92, 0);

(insn 16 15 17 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 fd+0 S4 A32])) "function.c":602 -1
     (nil))

(insn 17 16 18 (set (reg:DI 38 r9)
        (const_int 0 [0])) "function.c":602 -1
     (nil))

(insn 18 17 19 (set (reg:SI 37 r8)
        (reg:SI 173)) "function.c":602 -1
     (nil))

(insn 19 18 20 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "function.c":602 -1
     (nil))

(insn 20 19 21 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":602 -1
     (nil))

(insn 21 20 22 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":602 -1
     (nil))

(insn 22 21 23 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":602 -1
     (nil))

(call_insn 23 22 24 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f7cd133c000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "function.c":602 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

(insn 24 23 25 (set (reg:DI 174)
        (reg:DI 0 ax)) "function.c":602 -1
     (nil))

(insn 25 24 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])
        (reg:DI 174)) "function.c":602 -1
     (nil))

;; END.78_2 = END;

(insn 26 25 0 (set (reg:QI 88 [ END.78_2 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":605 -1
     (nil))

;; playerinfo_94->request = END.78_2;

(insn 27 26 28 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":605 -1
     (nil))

(insn 28 27 0 (set (mem:QI (plus:DI (reg/f:DI 175)
                (const_int 40 [0x28])) [0 playerinfo_94->request+0 S1 A64])
        (reg:QI 88 [ END.78_2 ])) "function.c":605 -1
     (nil))

;; _3 = createplayer_89->name1;

(insn 29 28 30 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":607 -1
     (nil))

(insn 30 29 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 176) [10 createplayer_89->name1+0 S8 A64])) "function.c":607 -1
     (nil))

;; sem_p1_97 = sem_open (_3, 64, 511, 0);

(insn 31 30 32 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":607 -1
     (nil))

(insn 32 31 33 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":607 -1
     (nil))

(insn 33 32 34 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":607 -1
     (nil))

(insn 34 33 35 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "function.c":607 -1
     (nil))

(insn 35 34 36 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":607 -1
     (nil))

(call_insn 36 35 37 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":607 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 37 36 38 (set (reg:DI 177)
        (reg:DI 0 ax)) "function.c":607 -1
     (nil))

(insn 38 37 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])
        (reg:DI 177)) "function.c":607 -1
     (nil))

;; _4 = createplayer_89->name2;

(insn 39 38 40 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":608 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 8 [0x8])) [10 createplayer_89->name2+0 S8 A64])) "function.c":608 -1
     (nil))

;; sem_p1_pom_99 = sem_open (_4, 64, 511, 0);

(insn 41 40 42 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":608 -1
     (nil))

(insn 42 41 43 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":608 -1
     (nil))

(insn 43 42 44 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":608 -1
     (nil))

(insn 44 43 45 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "function.c":608 -1
     (nil))

(insn 45 44 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":608 -1
     (nil))

(call_insn 46 45 47 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":608 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))

(insn 47 46 48 (set (reg:DI 179)
        (reg:DI 0 ax)) "function.c":608 -1
     (nil))

(insn 48 47 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])
        (reg:DI 179)) "function.c":608 -1
     (nil))

;; start_color ();

(call_insn 49 48 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f7cd10bd300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "function.c":610 -1
     (nil)
    (nil))

;; init_pair (3, 0, 3);

(insn 50 49 51 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":611 -1
     (nil))

(insn 51 50 52 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":611 -1
     (nil))

(insn 52 51 53 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":611 -1
     (nil))

(call_insn 53 52 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":611 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (5, 7, 7);

(insn 54 53 55 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":612 -1
     (nil))

(insn 55 54 56 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":612 -1
     (nil))

(insn 56 55 57 (set (reg:SI 5 di)
        (const_int 5 [0x5])) "function.c":612 -1
     (nil))

(call_insn 57 56 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":612 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (6, 0, 5);

(insn 58 57 59 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) "function.c":613 -1
     (nil))

(insn 59 58 60 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":613 -1
     (nil))

(insn 60 59 61 (set (reg:SI 5 di)
        (const_int 6 [0x6])) "function.c":613 -1
     (nil))

(call_insn 61 60 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":613 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (11, 7, 2);

(insn 62 61 63 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "function.c":614 -1
     (nil))

(insn 63 62 64 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":614 -1
     (nil))

(insn 64 63 65 (set (reg:SI 5 di)
        (const_int 11 [0xb])) "function.c":614 -1
     (nil))

(call_insn 65 64 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":614 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (12, 7, 1);

(insn 66 65 67 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "function.c":615 -1
     (nil))

(insn 67 66 68 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":615 -1
     (nil))

(insn 68 67 69 (set (reg:SI 5 di)
        (const_int 12 [0xc])) "function.c":615 -1
     (nil))

(call_insn 69 68 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":615 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 3

;; sem_wait (sem_p1_97);

(insn 71 70 72 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])) "function.c":620 -1
     (nil))

(insn 72 71 73 (set (reg:DI 5 di)
        (reg:DI 180)) "function.c":620 -1
     (nil))

(call_insn 73 72 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":620 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; i_107 = 0;

(insn 74 73 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":622 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; j_108 = 0;

(insn 78 77 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":624 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _5 = j_83 + 5;

(insn 82 81 83 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":626 -1
     (nil))

(insn 83 82 0 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 181)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":626 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 5 [0x5]))
        (nil)))

;; _6 = i_82 + 25;

(insn 84 83 85 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":626 -1
     (nil))

(insn 85 84 0 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 182)
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":626 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 25 [0x19]))
        (nil)))

;; stdscr.79_7 = stdscr;

(insn 86 85 0 (set (reg/f:DI 93 [ stdscr.79_7 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":626 -1
     (nil))

;; wmove (stdscr.79_7, _6, _5);

(insn 87 86 88 (set (reg:SI 1 dx)
        (reg:SI 91 [ _5 ])) "function.c":626 -1
     (nil))

(insn 88 87 89 (set (reg:SI 4 si)
        (reg:SI 92 [ _6 ])) "function.c":626 -1
     (nil))

(insn 89 88 90 (set (reg:DI 5 di)
        (reg/f:DI 93 [ stdscr.79_7 ])) "function.c":626 -1
     (nil))

(call_insn 90 89 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":626 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _8 = playerinfo_94->area[i_82][j_83];

(insn 91 90 92 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":627 -1
     (nil))

(insn 92 91 93 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":627 -1
     (nil))

(insn 93 92 94 (set (reg:DI 184)
        (sign_extend:DI (reg:SI 185))) "function.c":627 -1
     (nil))

(insn 94 93 95 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":627 -1
     (nil))

(insn 95 94 96 (set (reg:DI 186)
        (sign_extend:DI (reg:SI 187))) "function.c":627 -1
     (nil))

(insn 96 95 97 (parallel [
            (set (reg:DI 188)
                (mult:DI (reg:DI 186)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))

(insn 97 96 98 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 183)
                    (reg:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg:DI 189)
                    (reg:DI 184)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))

(insn 99 98 100 (parallel [
            (set (reg/f:DI 191)
                (plus:DI (reg:DI 190)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))

(insn 100 99 0 (set (reg:QI 94 [ _8 ])
        (mem/j:QI (reg/f:DI 191) [0 playerinfo_94->area S1 A8])) "function.c":627 -1
     (nil))

;; if (_8 == 77)

(insn 101 100 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 77 [0x4d]))) "function.c":627 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":627 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; stdscr.80_9 = stdscr;

(insn 104 103 0 (set (reg/f:DI 95 [ stdscr.80_9 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":629 -1
     (nil))

;; wattr_on (stdscr.80_9, 1280, 0B);

(insn 105 104 106 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":629 -1
     (nil))

(insn 106 105 107 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":629 -1
     (nil))

(insn 107 106 108 (set (reg:DI 5 di)
        (reg/f:DI 95 [ stdscr.80_9 ])) "function.c":629 -1
     (nil))

(call_insn 108 107 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":629 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" ");

(insn 109 108 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":630 -1
     (nil))

(insn 110 109 111 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":630 -1
     (nil))

(call_insn 111 110 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":630 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.81_10 = stdscr;

(insn 112 111 0 (set (reg/f:DI 96 [ stdscr.81_10 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":631 -1
     (nil))

;; wattr_off (stdscr.81_10, 1280, 0B);

(insn 113 112 114 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":631 -1
     (nil))

(insn 114 113 115 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":631 -1
     (nil))

(insn 115 114 116 (set (reg:DI 5 di)
        (reg/f:DI 96 [ stdscr.81_10 ])) "function.c":631 -1
     (nil))

(call_insn 116 115 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":631 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 7

;; 

(code_label 119 118 120 75 (nil) [0 uses])

(note 120 119 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = playerinfo_94->area[i_82][j_83];

(insn 121 120 122 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))

(insn 122 121 123 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 123 122 124 (set (reg:DI 193)
        (sign_extend:DI (reg:SI 194))) "function.c":633 -1
     (nil))

(insn 124 123 125 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 125 124 126 (set (reg:DI 195)
        (sign_extend:DI (reg:SI 196))) "function.c":633 -1
     (nil))

(insn 126 125 127 (parallel [
            (set (reg:DI 197)
                (mult:DI (reg:DI 195)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 127 126 128 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 192)
                    (reg:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 128 127 129 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 198)
                    (reg:DI 193)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 129 128 130 (parallel [
            (set (reg/f:DI 200)
                (plus:DI (reg:DI 199)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 130 129 0 (set (reg:QI 97 [ _11 ])
        (mem/j:QI (reg/f:DI 200) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))

;; if (_11 == 49)

(insn 131 130 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ _11 ])
            (const_int 49 [0x31]))) "function.c":633 -1
     (nil))

(jump_insn 132 131 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":633 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _12 = playerinfo_94->area[i_82][j_83];

(insn 134 133 135 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))

(insn 135 134 136 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 136 135 137 (set (reg:DI 202)
        (sign_extend:DI (reg:SI 203))) "function.c":633 -1
     (nil))

(insn 137 136 138 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 138 137 139 (set (reg:DI 204)
        (sign_extend:DI (reg:SI 205))) "function.c":633 -1
     (nil))

(insn 139 138 140 (parallel [
            (set (reg:DI 206)
                (mult:DI (reg:DI 204)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 140 139 141 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 201)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 141 140 142 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg:DI 207)
                    (reg:DI 202)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 142 141 143 (parallel [
            (set (reg/f:DI 209)
                (plus:DI (reg:DI 208)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 143 142 0 (set (reg:QI 98 [ _12 ])
        (mem/j:QI (reg/f:DI 209) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))

;; if (_12 == 50)

(insn 144 143 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _12 ])
            (const_int 50 [0x32]))) "function.c":633 -1
     (nil))

(jump_insn 145 144 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":633 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _13 = playerinfo_94->area[i_82][j_83];

(insn 147 146 148 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))

(insn 148 147 149 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 149 148 150 (set (reg:DI 211)
        (sign_extend:DI (reg:SI 212))) "function.c":633 -1
     (nil))

(insn 150 149 151 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 151 150 152 (set (reg:DI 213)
        (sign_extend:DI (reg:SI 214))) "function.c":633 -1
     (nil))

(insn 152 151 153 (parallel [
            (set (reg:DI 215)
                (mult:DI (reg:DI 213)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 153 152 154 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 210)
                    (reg:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 154 153 155 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg:DI 216)
                    (reg:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 155 154 156 (parallel [
            (set (reg/f:DI 218)
                (plus:DI (reg:DI 217)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 156 155 0 (set (reg:QI 99 [ _13 ])
        (mem/j:QI (reg/f:DI 218) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))

;; if (_13 == 51)

(insn 157 156 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _13 ])
            (const_int 51 [0x33]))) "function.c":633 -1
     (nil))

(jump_insn 158 157 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":633 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _14 = playerinfo_94->area[i_82][j_83];

(insn 160 159 161 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))

(insn 161 160 162 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 162 161 163 (set (reg:DI 220)
        (sign_extend:DI (reg:SI 221))) "function.c":633 -1
     (nil))

(insn 163 162 164 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))

(insn 164 163 165 (set (reg:DI 222)
        (sign_extend:DI (reg:SI 223))) "function.c":633 -1
     (nil))

(insn 165 164 166 (parallel [
            (set (reg:DI 224)
                (mult:DI (reg:DI 222)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 166 165 167 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 219)
                    (reg:DI 224)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 167 166 168 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 225)
                    (reg:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 168 167 169 (parallel [
            (set (reg/f:DI 227)
                (plus:DI (reg:DI 226)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))

(insn 169 168 0 (set (reg:QI 100 [ _14 ])
        (mem/j:QI (reg/f:DI 227) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))

;; if (_14 == 52)

(insn 170 169 171 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ _14 ])
            (const_int 52 [0x34]))) "function.c":633 -1
     (nil))

(jump_insn 171 170 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":633 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 172 171 173 77 (nil) [0 uses])

(note 173 172 0 NOTE_INSN_BASIC_BLOCK)

;; stdscr.82_15 = stdscr;

(insn 174 173 0 (set (reg/f:DI 101 [ stdscr.82_15 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":635 -1
     (nil))

;; wattr_on (stdscr.82_15, 1536, 0B);

(insn 175 174 176 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":635 -1
     (nil))

(insn 176 175 177 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":635 -1
     (nil))

(insn 177 176 178 (set (reg:DI 5 di)
        (reg/f:DI 101 [ stdscr.82_15 ])) "function.c":635 -1
     (nil))

(call_insn 178 177 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":635 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _16 = playerinfo_94->area[i_82][j_83];

(insn 179 178 180 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":636 -1
     (nil))

(insn 180 179 181 (set (reg:SI 230)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":636 -1
     (nil))

(insn 181 180 182 (set (reg:DI 229)
        (sign_extend:DI (reg:SI 230))) "function.c":636 -1
     (nil))

(insn 182 181 183 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":636 -1
     (nil))

(insn 183 182 184 (set (reg:DI 231)
        (sign_extend:DI (reg:SI 232))) "function.c":636 -1
     (nil))

(insn 184 183 185 (parallel [
            (set (reg:DI 233)
                (mult:DI (reg:DI 231)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))

(insn 185 184 186 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 228)
                    (reg:DI 233)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))

(insn 186 185 187 (parallel [
            (set (reg:DI 235)
                (plus:DI (reg:DI 234)
                    (reg:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))

(insn 187 186 188 (parallel [
            (set (reg/f:DI 236)
                (plus:DI (reg:DI 235)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))

(insn 188 187 0 (set (reg:QI 102 [ _16 ])
        (mem/j:QI (reg/f:DI 236) [0 playerinfo_94->area S1 A8])) "function.c":636 -1
     (nil))

;; _17 = (int) _16;

(insn 189 188 0 (set (reg:SI 103 [ _17 ])
        (sign_extend:SI (reg:QI 102 [ _16 ]))) "function.c":636 -1
     (nil))

;; printw ("%c", _17);

(insn 190 189 191 (set (reg:SI 4 si)
        (reg:SI 103 [ _17 ])) "function.c":636 -1
     (nil))

(insn 191 190 192 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":636 -1
     (nil))

(insn 192 191 193 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":636 -1
     (nil))

(call_insn 193 192 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":636 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.83_18 = stdscr;

(insn 194 193 0 (set (reg/f:DI 104 [ stdscr.83_18 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":637 -1
     (nil))

;; wattr_off (stdscr.83_18, 1536, 0B);

(insn 195 194 196 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":637 -1
     (nil))

(insn 196 195 197 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":637 -1
     (nil))

(insn 197 196 198 (set (reg:DI 5 di)
        (reg/f:DI 104 [ stdscr.83_18 ])) "function.c":637 -1
     (nil))

(call_insn 198 197 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":637 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 12

;; 

(code_label 201 200 202 78 (nil) [0 uses])

(note 202 201 0 NOTE_INSN_BASIC_BLOCK)

;; _19 = playerinfo_94->area[i_82][j_83];

(insn 203 202 204 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))

(insn 204 203 205 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 205 204 206 (set (reg:DI 238)
        (sign_extend:DI (reg:SI 239))) "function.c":639 -1
     (nil))

(insn 206 205 207 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 207 206 208 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 241))) "function.c":639 -1
     (nil))

(insn 208 207 209 (parallel [
            (set (reg:DI 242)
                (mult:DI (reg:DI 240)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 209 208 210 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 237)
                    (reg:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 210 209 211 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 243)
                    (reg:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 211 210 212 (parallel [
            (set (reg/f:DI 245)
                (plus:DI (reg:DI 244)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 212 211 0 (set (reg:QI 105 [ _19 ])
        (mem/j:QI (reg/f:DI 245) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))

;; if (_19 == 99)

(insn 213 212 214 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ _19 ])
            (const_int 99 [0x63]))) "function.c":639 -1
     (nil))

(jump_insn 214 213 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":639 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _20 = playerinfo_94->area[i_82][j_83];

(insn 216 215 217 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))

(insn 217 216 218 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 218 217 219 (set (reg:DI 247)
        (sign_extend:DI (reg:SI 248))) "function.c":639 -1
     (nil))

(insn 219 218 220 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 220 219 221 (set (reg:DI 249)
        (sign_extend:DI (reg:SI 250))) "function.c":639 -1
     (nil))

(insn 221 220 222 (parallel [
            (set (reg:DI 251)
                (mult:DI (reg:DI 249)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 222 221 223 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 246)
                    (reg:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 223 222 224 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg:DI 252)
                    (reg:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 224 223 225 (parallel [
            (set (reg/f:DI 254)
                (plus:DI (reg:DI 253)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 225 224 0 (set (reg:QI 106 [ _20 ])
        (mem/j:QI (reg/f:DI 254) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))

;; if (_20 == 116)

(insn 226 225 227 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ _20 ])
            (const_int 116 [0x74]))) "function.c":639 -1
     (nil))

(jump_insn 227 226 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":639 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _21 = playerinfo_94->area[i_82][j_83];

(insn 229 228 230 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))

(insn 230 229 231 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 231 230 232 (set (reg:DI 256)
        (sign_extend:DI (reg:SI 257))) "function.c":639 -1
     (nil))

(insn 232 231 233 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 233 232 234 (set (reg:DI 258)
        (sign_extend:DI (reg:SI 259))) "function.c":639 -1
     (nil))

(insn 234 233 235 (parallel [
            (set (reg:DI 260)
                (mult:DI (reg:DI 258)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 235 234 236 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 255)
                    (reg:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 236 235 237 (parallel [
            (set (reg:DI 262)
                (plus:DI (reg:DI 261)
                    (reg:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 237 236 238 (parallel [
            (set (reg/f:DI 263)
                (plus:DI (reg:DI 262)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 238 237 0 (set (reg:QI 107 [ _21 ])
        (mem/j:QI (reg/f:DI 263) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))

;; if (_21 == 84)

(insn 239 238 240 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ _21 ])
            (const_int 84 [0x54]))) "function.c":639 -1
     (nil))

(jump_insn 240 239 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":639 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; _22 = playerinfo_94->area[i_82][j_83];

(insn 242 241 243 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))

(insn 243 242 244 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 244 243 245 (set (reg:DI 265)
        (sign_extend:DI (reg:SI 266))) "function.c":639 -1
     (nil))

(insn 245 244 246 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))

(insn 246 245 247 (set (reg:DI 267)
        (sign_extend:DI (reg:SI 268))) "function.c":639 -1
     (nil))

(insn 247 246 248 (parallel [
            (set (reg:DI 269)
                (mult:DI (reg:DI 267)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 248 247 249 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 264)
                    (reg:DI 269)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 249 248 250 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg:DI 270)
                    (reg:DI 265)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 250 249 251 (parallel [
            (set (reg/f:DI 272)
                (plus:DI (reg:DI 271)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))

(insn 251 250 0 (set (reg:QI 108 [ _22 ])
        (mem/j:QI (reg/f:DI 272) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))

;; if (_22 == 68)

(insn 252 251 253 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _22 ])
            (const_int 68 [0x44]))) "function.c":639 -1
     (nil))

(jump_insn 253 252 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":639 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 254 253 255 79 (nil) [0 uses])

(note 255 254 0 NOTE_INSN_BASIC_BLOCK)

;; stdscr.84_23 = stdscr;

(insn 256 255 0 (set (reg/f:DI 109 [ stdscr.84_23 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":641 -1
     (nil))

;; wattr_on (stdscr.84_23, 768, 0B);

(insn 257 256 258 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":641 -1
     (nil))

(insn 258 257 259 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":641 -1
     (nil))

(insn 259 258 260 (set (reg:DI 5 di)
        (reg/f:DI 109 [ stdscr.84_23 ])) "function.c":641 -1
     (nil))

(call_insn 260 259 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":641 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _24 = playerinfo_94->area[i_82][j_83];

(insn 261 260 262 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":642 -1
     (nil))

(insn 262 261 263 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":642 -1
     (nil))

(insn 263 262 264 (set (reg:DI 274)
        (sign_extend:DI (reg:SI 275))) "function.c":642 -1
     (nil))

(insn 264 263 265 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":642 -1
     (nil))

(insn 265 264 266 (set (reg:DI 276)
        (sign_extend:DI (reg:SI 277))) "function.c":642 -1
     (nil))

(insn 266 265 267 (parallel [
            (set (reg:DI 278)
                (mult:DI (reg:DI 276)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))

(insn 267 266 268 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 273)
                    (reg:DI 278)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))

(insn 268 267 269 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg:DI 279)
                    (reg:DI 274)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))

(insn 269 268 270 (parallel [
            (set (reg/f:DI 281)
                (plus:DI (reg:DI 280)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))

(insn 270 269 0 (set (reg:QI 110 [ _24 ])
        (mem/j:QI (reg/f:DI 281) [0 playerinfo_94->area S1 A8])) "function.c":642 -1
     (nil))

;; _25 = (int) _24;

(insn 271 270 0 (set (reg:SI 111 [ _25 ])
        (sign_extend:SI (reg:QI 110 [ _24 ]))) "function.c":642 -1
     (nil))

;; printw ("%c", _25);

(insn 272 271 273 (set (reg:SI 4 si)
        (reg:SI 111 [ _25 ])) "function.c":642 -1
     (nil))

(insn 273 272 274 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":642 -1
     (nil))

(insn 274 273 275 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":642 -1
     (nil))

(call_insn 275 274 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":642 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.85_26 = stdscr;

(insn 276 275 0 (set (reg/f:DI 112 [ stdscr.85_26 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":643 -1
     (nil))

;; wattr_off (stdscr.85_26, 768, 0B);

(insn 277 276 278 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":643 -1
     (nil))

(insn 278 277 279 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":643 -1
     (nil))

(insn 279 278 280 (set (reg:DI 5 di)
        (reg/f:DI 112 [ stdscr.85_26 ])) "function.c":643 -1
     (nil))

(call_insn 280 279 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":643 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 17

;; 

(code_label 283 282 284 80 (nil) [0 uses])

(note 284 283 0 NOTE_INSN_BASIC_BLOCK)

;; _27 = playerinfo_94->area[i_82][j_83];

(insn 285 284 286 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":645 -1
     (nil))

(insn 286 285 287 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":645 -1
     (nil))

(insn 287 286 288 (set (reg:DI 283)
        (sign_extend:DI (reg:SI 284))) "function.c":645 -1
     (nil))

(insn 288 287 289 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":645 -1
     (nil))

(insn 289 288 290 (set (reg:DI 285)
        (sign_extend:DI (reg:SI 286))) "function.c":645 -1
     (nil))

(insn 290 289 291 (parallel [
            (set (reg:DI 287)
                (mult:DI (reg:DI 285)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))

(insn 291 290 292 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 282)
                    (reg:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))

(insn 292 291 293 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg:DI 288)
                    (reg:DI 283)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))

(insn 293 292 294 (parallel [
            (set (reg/f:DI 290)
                (plus:DI (reg:DI 289)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))

(insn 294 293 0 (set (reg:QI 113 [ _27 ])
        (mem/j:QI (reg/f:DI 290) [0 playerinfo_94->area S1 A8])) "function.c":645 -1
     (nil))

;; if (_27 == 42)

(insn 295 294 296 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _27 ])
            (const_int 42 [0x2a]))) "function.c":645 -1
     (nil))

(jump_insn 296 295 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":645 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; stdscr.86_28 = stdscr;

(insn 298 297 0 (set (reg/f:DI 114 [ stdscr.86_28 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":647 -1
     (nil))

;; wattr_on (stdscr.86_28, 3072, 0B);

(insn 299 298 300 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":647 -1
     (nil))

(insn 300 299 301 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":647 -1
     (nil))

(insn 301 300 302 (set (reg:DI 5 di)
        (reg/f:DI 114 [ stdscr.86_28 ])) "function.c":647 -1
     (nil))

(call_insn 302 301 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":647 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("*");

(insn 303 302 304 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f7cd0f0d510 *.LC40>)) "function.c":648 -1
     (nil))

(insn 304 303 305 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":648 -1
     (nil))

(call_insn 305 304 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":648 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.87_29 = stdscr;

(insn 306 305 0 (set (reg/f:DI 115 [ stdscr.87_29 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":649 -1
     (nil))

;; wattr_off (stdscr.87_29, 3072, 0B);

(insn 307 306 308 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":649 -1
     (nil))

(insn 308 307 309 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":649 -1
     (nil))

(insn 309 308 310 (set (reg:DI 5 di)
        (reg/f:DI 115 [ stdscr.87_29 ])) "function.c":649 -1
     (nil))

(call_insn 310 309 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":649 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 19

;; 

(code_label 313 312 314 81 (nil) [0 uses])

(note 314 313 0 NOTE_INSN_BASIC_BLOCK)

;; _30 = playerinfo_94->area[i_82][j_83];

(insn 315 314 316 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":651 -1
     (nil))

(insn 316 315 317 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":651 -1
     (nil))

(insn 317 316 318 (set (reg:DI 292)
        (sign_extend:DI (reg:SI 293))) "function.c":651 -1
     (nil))

(insn 318 317 319 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":651 -1
     (nil))

(insn 319 318 320 (set (reg:DI 294)
        (sign_extend:DI (reg:SI 295))) "function.c":651 -1
     (nil))

(insn 320 319 321 (parallel [
            (set (reg:DI 296)
                (mult:DI (reg:DI 294)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))

(insn 321 320 322 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 291)
                    (reg:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))

(insn 322 321 323 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg:DI 297)
                    (reg:DI 292)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))

(insn 323 322 324 (parallel [
            (set (reg/f:DI 299)
                (plus:DI (reg:DI 298)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))

(insn 324 323 0 (set (reg:QI 116 [ _30 ])
        (mem/j:QI (reg/f:DI 299) [0 playerinfo_94->area S1 A8])) "function.c":651 -1
     (nil))

;; if (_30 == 65)

(insn 325 324 326 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ _30 ])
            (const_int 65 [0x41]))) "function.c":651 -1
     (nil))

(jump_insn 326 325 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":651 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; stdscr.88_31 = stdscr;

(insn 328 327 0 (set (reg/f:DI 117 [ stdscr.88_31 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":653 -1
     (nil))

;; wattr_on (stdscr.88_31, 2816, 0B);

(insn 329 328 330 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":653 -1
     (nil))

(insn 330 329 331 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":653 -1
     (nil))

(insn 331 330 332 (set (reg:DI 5 di)
        (reg/f:DI 117 [ stdscr.88_31 ])) "function.c":653 -1
     (nil))

(call_insn 332 331 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":653 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("A");

(insn 333 332 334 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":654 -1
     (nil))

(insn 334 333 335 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":654 -1
     (nil))

(call_insn 335 334 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":654 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.89_32 = stdscr;

(insn 336 335 0 (set (reg/f:DI 118 [ stdscr.89_32 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":655 -1
     (nil))

;; wattr_off (stdscr.89_32, 2816, 0B);

(insn 337 336 338 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":655 -1
     (nil))

(insn 338 337 339 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":655 -1
     (nil))

(insn 339 338 340 (set (reg:DI 5 di)
        (reg/f:DI 118 [ stdscr.89_32 ])) "function.c":655 -1
     (nil))

(call_insn 340 339 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":655 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 21

;; 

(code_label 343 342 344 82 (nil) [0 uses])

(note 344 343 0 NOTE_INSN_BASIC_BLOCK)

;; _33 = playerinfo_94->area[i_82][j_83];

(insn 345 344 346 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":659 -1
     (nil))

(insn 346 345 347 (set (reg:SI 302)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":659 -1
     (nil))

(insn 347 346 348 (set (reg:DI 301)
        (sign_extend:DI (reg:SI 302))) "function.c":659 -1
     (nil))

(insn 348 347 349 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":659 -1
     (nil))

(insn 349 348 350 (set (reg:DI 303)
        (sign_extend:DI (reg:SI 304))) "function.c":659 -1
     (nil))

(insn 350 349 351 (parallel [
            (set (reg:DI 305)
                (mult:DI (reg:DI 303)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))

(insn 351 350 352 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 300)
                    (reg:DI 305)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))

(insn 352 351 353 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg:DI 306)
                    (reg:DI 301)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))

(insn 353 352 354 (parallel [
            (set (reg/f:DI 308)
                (plus:DI (reg:DI 307)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))

(insn 354 353 0 (set (reg:QI 119 [ _33 ])
        (mem/j:QI (reg/f:DI 308) [0 playerinfo_94->area S1 A8])) "function.c":659 -1
     (nil))

;; _34 = (int) _33;

(insn 355 354 0 (set (reg:SI 120 [ _34 ])
        (sign_extend:SI (reg:QI 119 [ _33 ]))) "function.c":659 -1
     (nil))

;; printw ("%c", _34);

(insn 356 355 357 (set (reg:SI 4 si)
        (reg:SI 120 [ _34 ])) "function.c":659 -1
     (nil))

(insn 357 356 358 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":659 -1
     (nil))

(insn 358 357 359 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":659 -1
     (nil))

(call_insn 359 358 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":659 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 22

;; 

(code_label 360 359 361 76 (nil) [0 uses])

(note 361 360 0 NOTE_INSN_BASIC_BLOCK)

;; j_126 = j_83 + 1;

(insn 362 361 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":624 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; 

(code_label 363 362 364 74 (nil) [0 uses])

(note 364 363 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_83 <= 4)

(insn 366 364 367 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":624 -1
     (nil))

(jump_insn 367 366 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) "function.c":624 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; i_127 = i_82 + 1;

(insn 369 368 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":622 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 370 369 371 73 (nil) [0 uses])

(note 371 370 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_82 <= 4)

(insn 373 371 374 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":622 -1
     (nil))

(jump_insn 374 373 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) "function.c":622 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; stdscr.90_35 = stdscr;

(insn 376 375 0 (set (reg/f:DI 121 [ stdscr.90_35 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":664 -1
     (nil))

;; wmove (stdscr.90_35, 25, 13);

(insn 377 376 378 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":664 -1
     (nil))

(insn 378 377 379 (set (reg:SI 4 si)
        (const_int 25 [0x19])) "function.c":664 -1
     (nil))

(insn 379 378 380 (set (reg:DI 5 di)
        (reg/f:DI 121 [ stdscr.90_35 ])) "function.c":664 -1
     (nil))

(call_insn 380 379 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":664 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _36 = playerinfo_94->PID_serwer;

(insn 381 380 382 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":665 -1
     (nil))

(insn 382 381 0 (set (reg:SI 122 [ _36 ])
        (mem:SI (plus:DI (reg/f:DI 309)
                (const_int 4 [0x4])) [3 playerinfo_94->PID_serwer+0 S4 A32])) "function.c":665 -1
     (nil))

;; printw ("Server\'s PID: %d", _36);

(insn 383 382 384 (set (reg:SI 4 si)
        (reg:SI 122 [ _36 ])) "function.c":665 -1
     (nil))

(insn 384 383 385 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7cd0ee26c0 *.LC5>)) "function.c":665 -1
     (nil))

(insn 385 384 386 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":665 -1
     (nil))

(call_insn 386 385 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":665 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.91_37 = stdscr;

(insn 387 386 0 (set (reg/f:DI 123 [ stdscr.91_37 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":667 -1
     (nil))

;; wmove (stdscr.91_37, 26, 13);

(insn 388 387 389 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":667 -1
     (nil))

(insn 389 388 390 (set (reg:SI 4 si)
        (const_int 26 [0x1a])) "function.c":667 -1
     (nil))

(insn 390 389 391 (set (reg:DI 5 di)
        (reg/f:DI 123 [ stdscr.91_37 ])) "function.c":667 -1
     (nil))

(call_insn 391 390 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":667 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("Campsite X/Y: unknown");

(insn 392 391 393 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f7cd0f0d120 *.LC41>)) "function.c":668 -1
     (nil))

(insn 393 392 394 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":668 -1
     (nil))

(call_insn 394 393 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":668 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.92_38 = stdscr;

(insn 395 394 0 (set (reg/f:DI 124 [ stdscr.92_38 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":670 -1
     (nil))

;; wmove (stdscr.92_38, 27, 13);

(insn 396 395 397 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":670 -1
     (nil))

(insn 397 396 398 (set (reg:SI 4 si)
        (const_int 27 [0x1b])) "function.c":670 -1
     (nil))

(insn 398 397 399 (set (reg:DI 5 di)
        (reg/f:DI 124 [ stdscr.92_38 ])) "function.c":670 -1
     (nil))

(call_insn 399 398 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":670 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("Campsite X/Y: ");

(insn 400 399 401 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f7cd0aac480 *.LC42>)) "function.c":671 -1
     (nil))

(insn 401 400 402 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":671 -1
     (nil))

(call_insn 402 401 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":671 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.93_39 = stdscr;

(insn 403 402 0 (set (reg/f:DI 125 [ stdscr.93_39 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":673 -1
     (nil))

;; wmove (stdscr.93_39, 28, 13);

(insn 404 403 405 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":673 -1
     (nil))

(insn 405 404 406 (set (reg:SI 4 si)
        (const_int 28 [0x1c])) "function.c":673 -1
     (nil))

(insn 406 405 407 (set (reg:DI 5 di)
        (reg/f:DI 125 [ stdscr.93_39 ])) "function.c":673 -1
     (nil))

(call_insn 407 406 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":673 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _40 = playerinfo_94->runda;

(insn 408 407 409 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":674 -1
     (nil))

(insn 409 408 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 310)
                (const_int 22552 [0x5818])) [3 playerinfo_94->runda+0 S4 A64])) "function.c":674 -1
     (nil))

;; printw ("Round number: %d", _40);

(insn 410 409 411 (set (reg:SI 4 si)
        (reg:SI 126 [ _40 ])) "function.c":674 -1
     (nil))

(insn 411 410 412 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7cd0ee27e0 *.LC7>)) "function.c":674 -1
     (nil))

(insn 412 411 413 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":674 -1
     (nil))

(call_insn 413 412 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":674 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.94_41 = stdscr;

(insn 414 413 0 (set (reg/f:DI 127 [ stdscr.94_41 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":676 -1
     (nil))

;; wmove (stdscr.94_41, 30, 13);

(insn 415 414 416 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":676 -1
     (nil))

(insn 416 415 417 (set (reg:SI 4 si)
        (const_int 30 [0x1e])) "function.c":676 -1
     (nil))

(insn 417 416 418 (set (reg:DI 5 di)
        (reg/f:DI 127 [ stdscr.94_41 ])) "function.c":676 -1
     (nil))

(call_insn 418 417 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":676 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("Player: ");

(insn 419 418 420 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7f7cd0aac510 *.LC43>)) "function.c":677 -1
     (nil))

(insn 420 419 421 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":677 -1
     (nil))

(call_insn 421 420 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":677 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.95_42 = stdscr;

(insn 422 421 0 (set (reg/f:DI 128 [ stdscr.95_42 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":679 -1
     (nil))

;; wmove (stdscr.95_42, 31, 13);

(insn 423 422 424 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":679 -1
     (nil))

(insn 424 423 425 (set (reg:SI 4 si)
        (const_int 31 [0x1f])) "function.c":679 -1
     (nil))

(insn 425 424 426 (set (reg:DI 5 di)
        (reg/f:DI 128 [ stdscr.95_42 ])) "function.c":679 -1
     (nil))

(call_insn 426 425 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":679 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _43 = playerinfo_94->numer;

(insn 427 426 428 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":680 -1
     (nil))

(insn 428 427 0 (set (reg:SI 129 [ _43 ])
        (mem:SI (plus:DI (reg/f:DI 311)
                (const_int 8 [0x8])) [3 playerinfo_94->numer+0 S4 A64])) "function.c":680 -1
     (nil))

;; printw ("Number: %d", _43);

(insn 429 428 430 (set (reg:SI 4 si)
        (reg:SI 129 [ _43 ])) "function.c":680 -1
     (nil))

(insn 430 429 431 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7f7cd0aac5a0 *.LC44>)) "function.c":680 -1
     (nil))

(insn 431 430 432 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":680 -1
     (nil))

(call_insn 432 431 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":680 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.96_44 = stdscr;

(insn 433 432 0 (set (reg/f:DI 130 [ stdscr.96_44 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":682 -1
     (nil))

;; wmove (stdscr.96_44, 32, 13);

(insn 434 433 435 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":682 -1
     (nil))

(insn 435 434 436 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "function.c":682 -1
     (nil))

(insn 436 435 437 (set (reg:DI 5 di)
        (reg/f:DI 130 [ stdscr.96_44 ])) "function.c":682 -1
     (nil))

(call_insn 437 436 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":682 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("Type : HUMAN");

(insn 438 437 439 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7f7cd0aac630 *.LC45>)) "function.c":683 -1
     (nil))

(insn 439 438 440 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":683 -1
     (nil))

(call_insn 440 439 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":683 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.97_45 = stdscr;

(insn 441 440 0 (set (reg/f:DI 131 [ stdscr.97_45 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":685 -1
     (nil))

;; wmove (stdscr.97_45, 33, 13);

(insn 442 441 443 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":685 -1
     (nil))

(insn 443 442 444 (set (reg:SI 4 si)
        (const_int 33 [0x21])) "function.c":685 -1
     (nil))

(insn 444 443 445 (set (reg:DI 5 di)
        (reg/f:DI 131 [ stdscr.97_45 ])) "function.c":685 -1
     (nil))

(call_insn 445 444 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":685 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _46 = playerinfo_94->y_current;

(insn 446 445 447 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":686 -1
     (nil))

(insn 447 446 0 (set (reg:SI 132 [ _46 ])
        (mem:SI (plus:DI (reg/f:DI 312)
                (const_int 16 [0x10])) [3 playerinfo_94->y_current+0 S4 A64])) "function.c":686 -1
     (nil))

;; _47 = playerinfo_94->x_current;

(insn 448 447 449 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":686 -1
     (nil))

(insn 449 448 0 (set (reg:SI 133 [ _47 ])
        (mem:SI (plus:DI (reg/f:DI 313)
                (const_int 12 [0xc])) [3 playerinfo_94->x_current+0 S4 A32])) "function.c":686 -1
     (nil))

;; printw ("Curr X/Y %d/%d ", _47, _46);

(insn 450 449 451 (set (reg:SI 1 dx)
        (reg:SI 132 [ _46 ])) "function.c":686 -1
     (nil))

(insn 451 450 452 (set (reg:SI 4 si)
        (reg:SI 133 [ _47 ])) "function.c":686 -1
     (nil))

(insn 452 451 453 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7f7cd0aac6c0 *.LC46>)) "function.c":686 -1
     (nil))

(insn 453 452 454 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":686 -1
     (nil))

(call_insn 454 453 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":686 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))

;; stdscr.98_48 = stdscr;

(insn 455 454 0 (set (reg/f:DI 134 [ stdscr.98_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":688 -1
     (nil))

;; wmove (stdscr.98_48, 34, 13);

(insn 456 455 457 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":688 -1
     (nil))

(insn 457 456 458 (set (reg:SI 4 si)
        (const_int 34 [0x22])) "function.c":688 -1
     (nil))

(insn 458 457 459 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.98_48 ])) "function.c":688 -1
     (nil))

(call_insn 459 458 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":688 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _49 = playerinfo_94->deaths;

(insn 460 459 461 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":689 -1
     (nil))

(insn 461 460 0 (set (reg:SI 135 [ _49 ])
        (mem:SI (plus:DI (reg/f:DI 314)
                (const_int 28 [0x1c])) [3 playerinfo_94->deaths+0 S4 A32])) "function.c":689 -1
     (nil))

;; printw ("Deaths :    %d", _49);

(insn 462 461 463 (set (reg:SI 4 si)
        (reg:SI 135 [ _49 ])) "function.c":689 -1
     (nil))

(insn 463 462 464 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7f7cd0aac750 *.LC47>)) "function.c":689 -1
     (nil))

(insn 464 463 465 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":689 -1
     (nil))

(call_insn 465 464 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":689 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.99_50 = stdscr;

(insn 466 465 0 (set (reg/f:DI 136 [ stdscr.99_50 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":691 -1
     (nil))

;; wmove (stdscr.99_50, 36, 13);

(insn 467 466 468 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":691 -1
     (nil))

(insn 468 467 469 (set (reg:SI 4 si)
        (const_int 36 [0x24])) "function.c":691 -1
     (nil))

(insn 469 468 470 (set (reg:DI 5 di)
        (reg/f:DI 136 [ stdscr.99_50 ])) "function.c":691 -1
     (nil))

(call_insn 470 469 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":691 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _51 = playerinfo_94->coins_carried;

(insn 471 470 472 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":692 -1
     (nil))

(insn 472 471 0 (set (reg:SI 137 [ _51 ])
        (mem:SI (plus:DI (reg/f:DI 315)
                (const_int 32 [0x20])) [3 playerinfo_94->coins_carried+0 S4 A64])) "function.c":692 -1
     (nil))

;; printw ("Coins found : %d", _51);

(insn 473 472 474 (set (reg:SI 4 si)
        (reg:SI 137 [ _51 ])) "function.c":692 -1
     (nil))

(insn 474 473 475 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7f7cd0aac7e0 *.LC48>)) "function.c":692 -1
     (nil))

(insn 475 474 476 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":692 -1
     (nil))

(call_insn 476 475 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":692 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.100_52 = stdscr;

(insn 477 476 0 (set (reg/f:DI 138 [ stdscr.100_52 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":694 -1
     (nil))

;; wmove (stdscr.100_52, 37, 13);

(insn 478 477 479 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":694 -1
     (nil))

(insn 479 478 480 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "function.c":694 -1
     (nil))

(insn 480 479 481 (set (reg:DI 5 di)
        (reg/f:DI 138 [ stdscr.100_52 ])) "function.c":694 -1
     (nil))

(call_insn 481 480 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":694 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _53 = playerinfo_94->coins_brought;

(insn 482 481 483 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":695 -1
     (nil))

(insn 483 482 0 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 316)
                (const_int 36 [0x24])) [3 playerinfo_94->coins_brought+0 S4 A32])) "function.c":695 -1
     (nil))

;; printw ("Coins brought : %d", _53);

(insn 484 483 485 (set (reg:SI 4 si)
        (reg:SI 139 [ _53 ])) "function.c":695 -1
     (nil))

(insn 485 484 486 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7f7cd0aac870 *.LC49>)) "function.c":695 -1
     (nil))

(insn 486 485 487 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":695 -1
     (nil))

(call_insn 487 486 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":695 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.101_54 = stdscr;

(insn 488 487 0 (set (reg/f:DI 140 [ stdscr.101_54 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":697 -1
     (nil))

;; wmove (stdscr.101_54, 40, 13);

(insn 489 488 490 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":697 -1
     (nil))

(insn 490 489 491 (set (reg:SI 4 si)
        (const_int 40 [0x28])) "function.c":697 -1
     (nil))

(insn 491 490 492 (set (reg:DI 5 di)
        (reg/f:DI 140 [ stdscr.101_54 ])) "function.c":697 -1
     (nil))

(call_insn 492 491 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":697 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("LEGEND: ");

(insn 493 492 494 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7cd0ee2c60 *.LC16>)) "function.c":698 -1
     (nil))

(insn 494 493 495 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":698 -1
     (nil))

(call_insn 495 494 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":698 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.102_55 = stdscr;

(insn 496 495 0 (set (reg/f:DI 141 [ stdscr.102_55 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":700 -1
     (nil))

;; wmove (stdscr.102_55, 41, 13);

(insn 497 496 498 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":700 -1
     (nil))

(insn 498 497 499 (set (reg:SI 4 si)
        (const_int 41 [0x29])) "function.c":700 -1
     (nil))

(insn 499 498 500 (set (reg:DI 5 di)
        (reg/f:DI 141 [ stdscr.102_55 ])) "function.c":700 -1
     (nil))

(call_insn 500 499 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":700 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.103_56 = stdscr;

(insn 501 500 0 (set (reg/f:DI 142 [ stdscr.103_56 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":701 -1
     (nil))

;; wattr_on (stdscr.103_56, 1536, 0B);

(insn 502 501 503 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":701 -1
     (nil))

(insn 503 502 504 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":701 -1
     (nil))

(insn 504 503 505 (set (reg:DI 5 di)
        (reg/f:DI 142 [ stdscr.103_56 ])) "function.c":701 -1
     (nil))

(call_insn 505 504 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":701 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("1234");

(insn 506 505 507 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7cd0ee2cf0 *.LC17>)) "function.c":702 -1
     (nil))

(insn 507 506 508 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":702 -1
     (nil))

(call_insn 508 507 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":702 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.104_57 = stdscr;

(insn 509 508 0 (set (reg/f:DI 143 [ stdscr.104_57 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":703 -1
     (nil))

;; wattr_off (stdscr.104_57, 1536, 0B);

(insn 510 509 511 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":703 -1
     (nil))

(insn 511 510 512 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":703 -1
     (nil))

(insn 512 511 513 (set (reg:DI 5 di)
        (reg/f:DI 143 [ stdscr.104_57 ])) "function.c":703 -1
     (nil))

(call_insn 513 512 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":703 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - players");

(insn 514 513 515 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7cd0ee2d80 *.LC18>)) "function.c":704 -1
     (nil))

(insn 515 514 516 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":704 -1
     (nil))

(call_insn 516 515 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":704 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.105_58 = stdscr;

(insn 517 516 0 (set (reg/f:DI 144 [ stdscr.105_58 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":706 -1
     (nil))

;; wmove (stdscr.105_58, 42, 13);

(insn 518 517 519 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":706 -1
     (nil))

(insn 519 518 520 (set (reg:SI 4 si)
        (const_int 42 [0x2a])) "function.c":706 -1
     (nil))

(insn 520 519 521 (set (reg:DI 5 di)
        (reg/f:DI 144 [ stdscr.105_58 ])) "function.c":706 -1
     (nil))

(call_insn 521 520 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":706 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.106_59 = stdscr;

(insn 522 521 0 (set (reg/f:DI 145 [ stdscr.106_59 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":707 -1
     (nil))

;; wattr_on (stdscr.106_59, 1280, 0B);

(insn 523 522 524 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":707 -1
     (nil))

(insn 524 523 525 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":707 -1
     (nil))

(insn 525 524 526 (set (reg:DI 5 di)
        (reg/f:DI 145 [ stdscr.106_59 ])) "function.c":707 -1
     (nil))

(call_insn 526 525 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":707 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" ");

(insn 527 526 528 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":708 -1
     (nil))

(insn 528 527 529 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":708 -1
     (nil))

(call_insn 529 528 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":708 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.107_60 = stdscr;

(insn 530 529 0 (set (reg/f:DI 146 [ stdscr.107_60 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":709 -1
     (nil))

;; wattr_off (stdscr.107_60, 1280, 0B);

(insn 531 530 532 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":709 -1
     (nil))

(insn 532 531 533 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":709 -1
     (nil))

(insn 533 532 534 (set (reg:DI 5 di)
        (reg/f:DI 146 [ stdscr.107_60 ])) "function.c":709 -1
     (nil))

(call_insn 534 533 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":709 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - wall");

(insn 535 534 536 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7cd0ee2e10 *.LC19>)) "function.c":710 -1
     (nil))

(insn 536 535 537 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":710 -1
     (nil))

(call_insn 537 536 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":710 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.108_61 = stdscr;

(insn 538 537 0 (set (reg/f:DI 147 [ stdscr.108_61 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":712 -1
     (nil))

;; wmove (stdscr.108_61, 43, 13);

(insn 539 538 540 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":712 -1
     (nil))

(insn 540 539 541 (set (reg:SI 4 si)
        (const_int 43 [0x2b])) "function.c":712 -1
     (nil))

(insn 541 540 542 (set (reg:DI 5 di)
        (reg/f:DI 147 [ stdscr.108_61 ])) "function.c":712 -1
     (nil))

(call_insn 542 541 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":712 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; printw ("# - bushes (slow down)");

(insn 543 542 544 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7cd0ee2ea0 *.LC20>)) "function.c":713 -1
     (nil))

(insn 544 543 545 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":713 -1
     (nil))

(call_insn 545 544 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":713 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.109_62 = stdscr;

(insn 546 545 0 (set (reg/f:DI 148 [ stdscr.109_62 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":715 -1
     (nil))

;; wmove (stdscr.109_62, 44, 13);

(insn 547 546 548 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":715 -1
     (nil))

(insn 548 547 549 (set (reg:SI 4 si)
        (const_int 44 [0x2c])) "function.c":715 -1
     (nil))

(insn 549 548 550 (set (reg:DI 5 di)
        (reg/f:DI 148 [ stdscr.109_62 ])) "function.c":715 -1
     (nil))

(call_insn 550 549 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":715 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.110_63 = stdscr;

(insn 551 550 0 (set (reg/f:DI 149 [ stdscr.110_63 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":716 -1
     (nil))

;; wattr_on (stdscr.110_63, 3072, 0B);

(insn 552 551 553 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":716 -1
     (nil))

(insn 553 552 554 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":716 -1
     (nil))

(insn 554 553 555 (set (reg:DI 5 di)
        (reg/f:DI 149 [ stdscr.110_63 ])) "function.c":716 -1
     (nil))

(call_insn 555 554 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":716 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("* - enemy");

(insn 556 555 557 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7cd0ee2f30 *.LC21>)) "function.c":717 -1
     (nil))

(insn 557 556 558 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":717 -1
     (nil))

(call_insn 558 557 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":717 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.111_64 = stdscr;

(insn 559 558 0 (set (reg/f:DI 150 [ stdscr.111_64 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":718 -1
     (nil))

;; wattr_off (stdscr.111_64, 3072, 0B);

(insn 560 559 561 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":718 -1
     (nil))

(insn 561 560 562 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":718 -1
     (nil))

(insn 562 561 563 (set (reg:DI 5 di)
        (reg/f:DI 150 [ stdscr.111_64 ])) "function.c":718 -1
     (nil))

(call_insn 563 562 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":718 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; stdscr.112_65 = stdscr;

(insn 564 563 0 (set (reg/f:DI 151 [ stdscr.112_65 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":720 -1
     (nil))

;; wmove (stdscr.112_65, 45, 13);

(insn 565 564 566 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":720 -1
     (nil))

(insn 566 565 567 (set (reg:SI 4 si)
        (const_int 45 [0x2d])) "function.c":720 -1
     (nil))

(insn 567 566 568 (set (reg:DI 5 di)
        (reg/f:DI 151 [ stdscr.112_65 ])) "function.c":720 -1
     (nil))

(call_insn 568 567 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":720 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.113_66 = stdscr;

(insn 569 568 0 (set (reg/f:DI 152 [ stdscr.113_66 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":721 -1
     (nil))

;; wattr_on (stdscr.113_66, 768, 0B);

(insn 570 569 571 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":721 -1
     (nil))

(insn 571 570 572 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":721 -1
     (nil))

(insn 572 571 573 (set (reg:DI 5 di)
        (reg/f:DI 152 [ stdscr.113_66 ])) "function.c":721 -1
     (nil))

(call_insn 573 572 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":721 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("c");

(insn 574 573 575 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7cd0ef3000 *.LC22>)) "function.c":722 -1
     (nil))

(insn 575 574 576 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":722 -1
     (nil))

(call_insn 576 575 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":722 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.114_67 = stdscr;

(insn 577 576 0 (set (reg/f:DI 153 [ stdscr.114_67 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":723 -1
     (nil))

;; wattr_off (stdscr.114_67, 768, 0B);

(insn 578 577 579 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":723 -1
     (nil))

(insn 579 578 580 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":723 -1
     (nil))

(insn 580 579 581 (set (reg:DI 5 di)
        (reg/f:DI 153 [ stdscr.114_67 ])) "function.c":723 -1
     (nil))

(call_insn 581 580 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":723 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - one coin        ");

(insn 582 581 583 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7f7cd0aac900 *.LC50>)) "function.c":724 -1
     (nil))

(insn 583 582 584 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":724 -1
     (nil))

(call_insn 584 583 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":724 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.115_68 = stdscr;

(insn 585 584 0 (set (reg/f:DI 154 [ stdscr.115_68 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":725 -1
     (nil))

;; wattr_on (stdscr.115_68, 768, 0B);

(insn 586 585 587 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":725 -1
     (nil))

(insn 587 586 588 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":725 -1
     (nil))

(insn 588 587 589 (set (reg:DI 5 di)
        (reg/f:DI 154 [ stdscr.115_68 ])) "function.c":725 -1
     (nil))

(call_insn 589 588 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":725 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("D");

(insn 590 589 591 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7cd0ef3120 *.LC24>)) "function.c":726 -1
     (nil))

(insn 591 590 592 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":726 -1
     (nil))

(call_insn 592 591 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":726 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.116_69 = stdscr;

(insn 593 592 0 (set (reg/f:DI 155 [ stdscr.116_69 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":727 -1
     (nil))

;; wattr_off (stdscr.116_69, 768, 0B);

(insn 594 593 595 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":727 -1
     (nil))

(insn 595 594 596 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":727 -1
     (nil))

(insn 596 595 597 (set (reg:DI 5 di)
        (reg/f:DI 155 [ stdscr.116_69 ])) "function.c":727 -1
     (nil))

(call_insn 597 596 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":727 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - dropped treasures");

(insn 598 597 599 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f7cd0ef31b0 *.LC25>)) "function.c":728 -1
     (nil))

(insn 599 598 600 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":728 -1
     (nil))

(call_insn 600 599 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":728 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.117_70 = stdscr;

(insn 601 600 0 (set (reg/f:DI 156 [ stdscr.117_70 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":730 -1
     (nil))

;; wmove (stdscr.117_70, 46, 13);

(insn 602 601 603 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":730 -1
     (nil))

(insn 603 602 604 (set (reg:SI 4 si)
        (const_int 46 [0x2e])) "function.c":730 -1
     (nil))

(insn 604 603 605 (set (reg:DI 5 di)
        (reg/f:DI 156 [ stdscr.117_70 ])) "function.c":730 -1
     (nil))

(call_insn 605 604 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":730 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.118_71 = stdscr;

(insn 606 605 0 (set (reg/f:DI 157 [ stdscr.118_71 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":731 -1
     (nil))

;; wattr_on (stdscr.118_71, 768, 0B);

(insn 607 606 608 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":731 -1
     (nil))

(insn 608 607 609 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":731 -1
     (nil))

(insn 609 608 610 (set (reg:DI 5 di)
        (reg/f:DI 157 [ stdscr.118_71 ])) "function.c":731 -1
     (nil))

(call_insn 610 609 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":731 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("C");

(insn 611 610 612 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f7cd0ef3240 *.LC26>)) "function.c":732 -1
     (nil))

(insn 612 611 613 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":732 -1
     (nil))

(call_insn 613 612 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":732 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.119_72 = stdscr;

(insn 614 613 0 (set (reg/f:DI 158 [ stdscr.119_72 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":733 -1
     (nil))

;; wattr_off (stdscr.119_72, 768, 0B);

(insn 615 614 616 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":733 -1
     (nil))

(insn 616 615 617 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":733 -1
     (nil))

(insn 617 616 618 (set (reg:DI 5 di)
        (reg/f:DI 158 [ stdscr.119_72 ])) "function.c":733 -1
     (nil))

(call_insn 618 617 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":733 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - treasure (10 coins)");

(insn 619 618 620 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f7cd0ef32d0 *.LC27>)) "function.c":734 -1
     (nil))

(insn 620 619 621 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":734 -1
     (nil))

(call_insn 621 620 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":734 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.120_73 = stdscr;

(insn 622 621 0 (set (reg/f:DI 159 [ stdscr.120_73 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":736 -1
     (nil))

;; wmove (stdscr.120_73, 47, 13);

(insn 623 622 624 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":736 -1
     (nil))

(insn 624 623 625 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) "function.c":736 -1
     (nil))

(insn 625 624 626 (set (reg:DI 5 di)
        (reg/f:DI 159 [ stdscr.120_73 ])) "function.c":736 -1
     (nil))

(call_insn 626 625 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":736 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.121_74 = stdscr;

(insn 627 626 0 (set (reg/f:DI 160 [ stdscr.121_74 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":737 -1
     (nil))

;; wattr_on (stdscr.121_74, 768, 0B);

(insn 628 627 629 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":737 -1
     (nil))

(insn 629 628 630 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":737 -1
     (nil))

(insn 630 629 631 (set (reg:DI 5 di)
        (reg/f:DI 160 [ stdscr.121_74 ])) "function.c":737 -1
     (nil))

(call_insn 631 630 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":737 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("T");

(insn 632 631 633 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7cd0ef3360 *.LC28>)) "function.c":738 -1
     (nil))

(insn 633 632 634 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":738 -1
     (nil))

(call_insn 634 633 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":738 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.122_75 = stdscr;

(insn 635 634 0 (set (reg/f:DI 161 [ stdscr.122_75 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":739 -1
     (nil))

;; wattr_off (stdscr.122_75, 768, 0B);

(insn 636 635 637 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":739 -1
     (nil))

(insn 637 636 638 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":739 -1
     (nil))

(insn 638 637 639 (set (reg:DI 5 di)
        (reg/f:DI 161 [ stdscr.122_75 ])) "function.c":739 -1
     (nil))

(call_insn 639 638 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":739 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - large treasure (50 coins)");

(insn 640 639 641 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f7cd0ef33f0 *.LC29>)) "function.c":740 -1
     (nil))

(insn 641 640 642 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":740 -1
     (nil))

(call_insn 642 641 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":740 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.123_76 = stdscr;

(insn 643 642 0 (set (reg/f:DI 162 [ stdscr.123_76 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":742 -1
     (nil))

;; wmove (stdscr.123_76, 48, 13);

(insn 644 643 645 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":742 -1
     (nil))

(insn 645 644 646 (set (reg:SI 4 si)
        (const_int 48 [0x30])) "function.c":742 -1
     (nil))

(insn 646 645 647 (set (reg:DI 5 di)
        (reg/f:DI 162 [ stdscr.123_76 ])) "function.c":742 -1
     (nil))

(call_insn 647 646 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":742 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; stdscr.124_77 = stdscr;

(insn 648 647 0 (set (reg/f:DI 163 [ stdscr.124_77 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":743 -1
     (nil))

;; wattr_on (stdscr.124_77, 2816, 0B);

(insn 649 648 650 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":743 -1
     (nil))

(insn 650 649 651 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":743 -1
     (nil))

(insn 651 650 652 (set (reg:DI 5 di)
        (reg/f:DI 163 [ stdscr.124_77 ])) "function.c":743 -1
     (nil))

(call_insn 652 651 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":743 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw ("A");

(insn 653 652 654 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":744 -1
     (nil))

(insn 654 653 655 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":744 -1
     (nil))

(call_insn 655 654 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":744 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.125_78 = stdscr;

(insn 656 655 0 (set (reg/f:DI 164 [ stdscr.125_78 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":745 -1
     (nil))

;; wattr_off (stdscr.125_78, 2816, 0B);

(insn 657 656 658 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":745 -1
     (nil))

(insn 658 657 659 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":745 -1
     (nil))

(insn 659 658 660 (set (reg:DI 5 di)
        (reg/f:DI 164 [ stdscr.125_78 ])) "function.c":745 -1
     (nil))

(call_insn 660 659 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":745 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" - campsite");

(insn 661 660 662 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f7cd0ef3510 *.LC31>)) "function.c":746 -1
     (nil))

(insn 662 661 663 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":746 -1
     (nil))

(call_insn 663 662 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":746 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.126_79 = stdscr;

(insn 664 663 0 (set (reg/f:DI 165 [ stdscr.126_79 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":747 -1
     (nil))

;; wrefresh (stdscr.126_79);

(insn 665 664 666 (set (reg:DI 5 di)
        (reg/f:DI 165 [ stdscr.126_79 ])) "function.c":747 -1
     (nil))

(call_insn 666 665 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wrefresh") [flags 0x41]  <function_decl 0x7f7cd10cd300 wrefresh>) [0 wrefresh S1 A8])
            (const_int 0 [0]))) "function.c":747 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; sem_post (sem_p1_pom_99);

(insn 667 666 668 (set (reg:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])) "function.c":748 -1
     (nil))

(insn 668 667 669 (set (reg:DI 5 di)
        (reg:DI 317)) "function.c":748 -1
     (nil))

(call_insn 669 668 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":748 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; END.127_80 = END;

(insn 670 669 0 (set (reg:QI 166 [ END.127_80 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":749 -1
     (nil))

;; if (END.127_80 == 113)

(insn 671 670 672 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ END.127_80 ])
            (const_int 113 [0x71]))) "function.c":749 -1
     (nil))

(jump_insn 672 671 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":749 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; _81 = createplayer_89->name1;

(insn 674 673 675 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":751 -1
     (nil))

(insn 675 674 0 (set (reg/f:DI 167 [ _81 ])
        (mem/f:DI (reg/f:DI 318) [10 createplayer_89->name1+0 S8 A64])) "function.c":751 -1
     (nil))

;; shm_unlink (_81);

(insn 676 675 677 (set (reg:DI 5 di)
        (reg/f:DI 167 [ _81 ])) "function.c":751 -1
     (nil))

(call_insn 677 676 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":751 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _195 = 0B;

(insn 678 677 0 (set (reg/f:DI 168 [ _195 ])
        (const_int 0 [0])) "function.c":752 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 28

;; 

(code_label 681 680 682 85 (nil) [0 uses])

(note 682 681 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 29

;; <L30>:

(code_label 686 685 687 86 (nil) [0 uses])

(note 687 686 0 NOTE_INSN_BASIC_BLOCK)

;; return _195;

(insn 688 687 689 (set (reg/f:DI 169 [ <retval> ])
        (reg/f:DI 168 [ _195 ])) -1
     (nil))

(jump_insn 689 688 690 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 690 689 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 689.
Merging block 31 into block 30...
Merged blocks 30 and 31.
Merged 30 and 31 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [19 pom+0 S8 A64])
        (reg:DI 5 di [ pom ])) "function.c":598 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [19 pom+0 S8 A64])) "function.c":599 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])
        (reg/f:DI 170)) "function.c":599 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":600 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 171) [10 createplayer_89->name1+0 S8 A64])) "function.c":600 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":600 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "function.c":600 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 87 [ _1 ])) "function.c":600 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f7cd133cb00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "function.c":600 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 172)
        (reg:SI 0 ax)) "function.c":600 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 fd+0 S4 A32])
        (reg:SI 172)) "function.c":600 -1
     (nil))
(insn 16 15 17 2 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 fd+0 S4 A32])) "function.c":602 -1
     (nil))
(insn 17 16 18 2 (set (reg:DI 38 r9)
        (const_int 0 [0])) "function.c":602 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 37 r8)
        (reg:SI 173)) "function.c":602 -1
     (nil))
(insn 19 18 20 2 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "function.c":602 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":602 -1
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":602 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":602 -1
     (nil))
(call_insn 23 22 24 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f7cd133c000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "function.c":602 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 24 23 25 2 (set (reg:DI 174)
        (reg:DI 0 ax)) "function.c":602 -1
     (nil))
(insn 25 24 26 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])
        (reg:DI 174)) "function.c":602 -1
     (nil))
(insn 26 25 27 2 (set (reg:QI 88 [ END.78_2 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":605 -1
     (nil))
(insn 27 26 28 2 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":605 -1
     (nil))
(insn 28 27 29 2 (set (mem:QI (plus:DI (reg/f:DI 175)
                (const_int 40 [0x28])) [0 playerinfo_94->request+0 S1 A64])
        (reg:QI 88 [ END.78_2 ])) "function.c":605 -1
     (nil))
(insn 29 28 30 2 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":607 -1
     (nil))
(insn 30 29 31 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 176) [10 createplayer_89->name1+0 S8 A64])) "function.c":607 -1
     (nil))
(insn 31 30 32 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":607 -1
     (nil))
(insn 32 31 33 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":607 -1
     (nil))
(insn 33 32 34 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":607 -1
     (nil))
(insn 34 33 35 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ _3 ])) "function.c":607 -1
     (nil))
(insn 35 34 36 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":607 -1
     (nil))
(call_insn 36 35 37 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":607 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 37 36 38 2 (set (reg:DI 177)
        (reg:DI 0 ax)) "function.c":607 -1
     (nil))
(insn 38 37 39 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])
        (reg:DI 177)) "function.c":607 -1
     (nil))
(insn 39 38 40 2 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":608 -1
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 8 [0x8])) [10 createplayer_89->name2+0 S8 A64])) "function.c":608 -1
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 cx)
        (const_int 0 [0])) "function.c":608 -1
     (nil))
(insn 42 41 43 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":608 -1
     (nil))
(insn 43 42 44 2 (set (reg:SI 4 si)
        (const_int 64 [0x40])) "function.c":608 -1
     (nil))
(insn 44 43 45 2 (set (reg:DI 5 di)
        (reg/f:DI 90 [ _4 ])) "function.c":608 -1
     (nil))
(insn 45 44 46 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":608 -1
     (nil))
(call_insn 46 45 47 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_open") [flags 0x41]  <function_decl 0x7f7cd0faca00 sem_open>) [0 sem_open S1 A8])
            (const_int 0 [0]))) "function.c":608 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (expr_list:SI (use (reg:SI 2 cx))
                        (nil)))))))
(insn 47 46 48 2 (set (reg:DI 179)
        (reg:DI 0 ax)) "function.c":608 -1
     (nil))
(insn 48 47 49 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])
        (reg:DI 179)) "function.c":608 -1
     (nil))
(call_insn 49 48 50 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("start_color") [flags 0x41]  <function_decl 0x7f7cd10bd300 start_color>) [0 start_color S1 A8])
            (const_int 0 [0]))) "function.c":610 -1
     (nil)
    (nil))
(insn 50 49 51 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":611 -1
     (nil))
(insn 51 50 52 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":611 -1
     (nil))
(insn 52 51 53 2 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":611 -1
     (nil))
(call_insn 53 52 54 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":611 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 54 53 55 2 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":612 -1
     (nil))
(insn 55 54 56 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":612 -1
     (nil))
(insn 56 55 57 2 (set (reg:SI 5 di)
        (const_int 5 [0x5])) "function.c":612 -1
     (nil))
(call_insn 57 56 58 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":612 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 58 57 59 2 (set (reg:SI 1 dx)
        (const_int 5 [0x5])) "function.c":613 -1
     (nil))
(insn 59 58 60 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":613 -1
     (nil))
(insn 60 59 61 2 (set (reg:SI 5 di)
        (const_int 6 [0x6])) "function.c":613 -1
     (nil))
(call_insn 61 60 62 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":613 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 62 61 63 2 (set (reg:SI 1 dx)
        (const_int 2 [0x2])) "function.c":614 -1
     (nil))
(insn 63 62 64 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":614 -1
     (nil))
(insn 64 63 65 2 (set (reg:SI 5 di)
        (const_int 11 [0xb])) "function.c":614 -1
     (nil))
(call_insn 65 64 66 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":614 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 66 65 67 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "function.c":615 -1
     (nil))
(insn 67 66 68 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":615 -1
     (nil))
(insn 68 67 69 2 (set (reg:SI 5 di)
        (const_int 12 [0xc])) "function.c":615 -1
     (nil))
(call_insn 69 68 683 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":615 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              29 (DFS_BACK)
(code_label 683 69 70 4 87 (nil) [1 uses])
(note 70 683 71 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 4 (set (reg:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [18 sem_p1+0 S8 A64])) "function.c":620 -1
     (nil))
(insn 72 71 73 4 (set (reg:DI 5 di)
        (reg:DI 180)) "function.c":620 -1
     (nil))
(call_insn 73 72 74 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_wait") [flags 0x41]  <function_decl 0x7f7cd0facd00 sem_wait>) [0 sem_wait S1 A8])
            (const_int 0 [0]))) "function.c":620 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 74 73 75 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":622 -1
     (nil))
(jump_insn 75 74 76 4 (set (pc)
        (label_ref 370)) "function.c":622 -1
     (nil)
 -> 370)
;;  succ:       26

(barrier 76 75 372)
;; basic block 5, loop depth 2, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
(code_label 372 76 77 5 84 (nil) [1 uses])
(note 77 372 78 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":624 -1
     (nil))
(jump_insn 79 78 80 5 (set (pc)
        (label_ref 363)) "function.c":624 -1
     (nil)
 -> 363)
;;  succ:       24

(barrier 80 79 365)
;; basic block 6, loop depth 3, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
(code_label 365 80 81 6 83 (nil) [1 uses])
(note 81 365 82 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 6 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":626 -1
     (nil))
(insn 83 82 84 6 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 181)
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":626 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 5 [0x5]))
        (nil)))
(insn 84 83 85 6 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":626 -1
     (nil))
(insn 85 84 86 6 (parallel [
            (set (reg:SI 92 [ _6 ])
                (plus:SI (reg:SI 182)
                    (const_int 25 [0x19])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":626 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 25 [0x19]))
        (nil)))
(insn 86 85 87 6 (set (reg/f:DI 93 [ stdscr.79_7 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":626 -1
     (nil))
(insn 87 86 88 6 (set (reg:SI 1 dx)
        (reg:SI 91 [ _5 ])) "function.c":626 -1
     (nil))
(insn 88 87 89 6 (set (reg:SI 4 si)
        (reg:SI 92 [ _6 ])) "function.c":626 -1
     (nil))
(insn 89 88 90 6 (set (reg:DI 5 di)
        (reg/f:DI 93 [ stdscr.79_7 ])) "function.c":626 -1
     (nil))
(call_insn 90 89 91 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":626 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 91 90 92 6 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":627 -1
     (nil))
(insn 92 91 93 6 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":627 -1
     (nil))
(insn 93 92 94 6 (set (reg:DI 184)
        (sign_extend:DI (reg:SI 185))) "function.c":627 -1
     (nil))
(insn 94 93 95 6 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":627 -1
     (nil))
(insn 95 94 96 6 (set (reg:DI 186)
        (sign_extend:DI (reg:SI 187))) "function.c":627 -1
     (nil))
(insn 96 95 97 6 (parallel [
            (set (reg:DI 188)
                (mult:DI (reg:DI 186)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))
(insn 97 96 98 6 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg/f:DI 183)
                    (reg:DI 188)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))
(insn 98 97 99 6 (parallel [
            (set (reg:DI 190)
                (plus:DI (reg:DI 189)
                    (reg:DI 184)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))
(insn 99 98 100 6 (parallel [
            (set (reg/f:DI 191)
                (plus:DI (reg:DI 190)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":627 -1
     (nil))
(insn 100 99 101 6 (set (reg:QI 94 [ _8 ])
        (mem/j:QI (reg/f:DI 191) [0 playerinfo_94->area S1 A8])) "function.c":627 -1
     (nil))
(insn 101 100 102 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 94 [ _8 ])
            (const_int 77 [0x4d]))) "function.c":627 -1
     (nil))
(jump_insn 102 101 103 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 119)
            (pc))) "function.c":627 -1
     (nil)
 -> 119)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 3, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 103 102 104 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 7 (set (reg/f:DI 95 [ stdscr.80_9 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":629 -1
     (nil))
(insn 105 104 106 7 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":629 -1
     (nil))
(insn 106 105 107 7 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":629 -1
     (nil))
(insn 107 106 108 7 (set (reg:DI 5 di)
        (reg/f:DI 95 [ stdscr.80_9 ])) "function.c":629 -1
     (nil))
(call_insn 108 107 109 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":629 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 109 108 110 7 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":630 -1
     (nil))
(insn 110 109 111 7 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":630 -1
     (nil))
(call_insn 111 110 112 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":630 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 112 111 113 7 (set (reg/f:DI 96 [ stdscr.81_10 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":631 -1
     (nil))
(insn 113 112 114 7 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":631 -1
     (nil))
(insn 114 113 115 7 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":631 -1
     (nil))
(insn 115 114 116 7 (set (reg:DI 5 di)
        (reg/f:DI 96 [ stdscr.81_10 ])) "function.c":631 -1
     (nil))
(call_insn 116 115 117 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":631 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 117 116 118 7 (set (pc)
        (label_ref 360)) -1
     (nil)
 -> 360)
;;  succ:       23

(barrier 118 117 119)
;; basic block 8, loop depth 3, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 119 118 120 8 75 (nil) [1 uses])
(note 120 119 121 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 122 8 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))
(insn 122 121 123 8 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 123 122 124 8 (set (reg:DI 193)
        (sign_extend:DI (reg:SI 194))) "function.c":633 -1
     (nil))
(insn 124 123 125 8 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 125 124 126 8 (set (reg:DI 195)
        (sign_extend:DI (reg:SI 196))) "function.c":633 -1
     (nil))
(insn 126 125 127 8 (parallel [
            (set (reg:DI 197)
                (mult:DI (reg:DI 195)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 127 126 128 8 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg/f:DI 192)
                    (reg:DI 197)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 128 127 129 8 (parallel [
            (set (reg:DI 199)
                (plus:DI (reg:DI 198)
                    (reg:DI 193)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 129 128 130 8 (parallel [
            (set (reg/f:DI 200)
                (plus:DI (reg:DI 199)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 130 129 131 8 (set (reg:QI 97 [ _11 ])
        (mem/j:QI (reg/f:DI 200) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))
(insn 131 130 132 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ _11 ])
            (const_int 49 [0x31]))) "function.c":633 -1
     (nil))
(jump_insn 132 131 133 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "function.c":633 -1
     (nil)
 -> 172)
;;  succ:       12
;;              9 (FALLTHRU)

;; basic block 9, loop depth 3, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 133 132 134 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 135 9 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))
(insn 135 134 136 9 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 136 135 137 9 (set (reg:DI 202)
        (sign_extend:DI (reg:SI 203))) "function.c":633 -1
     (nil))
(insn 137 136 138 9 (set (reg:SI 205)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 138 137 139 9 (set (reg:DI 204)
        (sign_extend:DI (reg:SI 205))) "function.c":633 -1
     (nil))
(insn 139 138 140 9 (parallel [
            (set (reg:DI 206)
                (mult:DI (reg:DI 204)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 140 139 141 9 (parallel [
            (set (reg:DI 207)
                (plus:DI (reg/f:DI 201)
                    (reg:DI 206)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 141 140 142 9 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg:DI 207)
                    (reg:DI 202)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 142 141 143 9 (parallel [
            (set (reg/f:DI 209)
                (plus:DI (reg:DI 208)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 143 142 144 9 (set (reg:QI 98 [ _12 ])
        (mem/j:QI (reg/f:DI 209) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))
(insn 144 143 145 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _12 ])
            (const_int 50 [0x32]))) "function.c":633 -1
     (nil))
(jump_insn 145 144 146 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "function.c":633 -1
     (nil)
 -> 172)
;;  succ:       12
;;              10 (FALLTHRU)

;; basic block 10, loop depth 3, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 146 145 147 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 10 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))
(insn 148 147 149 10 (set (reg:SI 212)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 149 148 150 10 (set (reg:DI 211)
        (sign_extend:DI (reg:SI 212))) "function.c":633 -1
     (nil))
(insn 150 149 151 10 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 151 150 152 10 (set (reg:DI 213)
        (sign_extend:DI (reg:SI 214))) "function.c":633 -1
     (nil))
(insn 152 151 153 10 (parallel [
            (set (reg:DI 215)
                (mult:DI (reg:DI 213)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 153 152 154 10 (parallel [
            (set (reg:DI 216)
                (plus:DI (reg/f:DI 210)
                    (reg:DI 215)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 154 153 155 10 (parallel [
            (set (reg:DI 217)
                (plus:DI (reg:DI 216)
                    (reg:DI 211)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 155 154 156 10 (parallel [
            (set (reg/f:DI 218)
                (plus:DI (reg:DI 217)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 156 155 157 10 (set (reg:QI 99 [ _13 ])
        (mem/j:QI (reg/f:DI 218) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))
(insn 157 156 158 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _13 ])
            (const_int 51 [0x33]))) "function.c":633 -1
     (nil))
(jump_insn 158 157 159 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 172)
            (pc))) "function.c":633 -1
     (nil)
 -> 172)
;;  succ:       12
;;              11 (FALLTHRU)

;; basic block 11, loop depth 3, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 159 158 160 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 11 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":633 -1
     (nil))
(insn 161 160 162 11 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 162 161 163 11 (set (reg:DI 220)
        (sign_extend:DI (reg:SI 221))) "function.c":633 -1
     (nil))
(insn 163 162 164 11 (set (reg:SI 223)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":633 -1
     (nil))
(insn 164 163 165 11 (set (reg:DI 222)
        (sign_extend:DI (reg:SI 223))) "function.c":633 -1
     (nil))
(insn 165 164 166 11 (parallel [
            (set (reg:DI 224)
                (mult:DI (reg:DI 222)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 166 165 167 11 (parallel [
            (set (reg:DI 225)
                (plus:DI (reg/f:DI 219)
                    (reg:DI 224)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 167 166 168 11 (parallel [
            (set (reg:DI 226)
                (plus:DI (reg:DI 225)
                    (reg:DI 220)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 168 167 169 11 (parallel [
            (set (reg/f:DI 227)
                (plus:DI (reg:DI 226)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":633 -1
     (nil))
(insn 169 168 170 11 (set (reg:QI 100 [ _14 ])
        (mem/j:QI (reg/f:DI 227) [0 playerinfo_94->area S1 A8])) "function.c":633 -1
     (nil))
(insn 170 169 171 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 100 [ _14 ])
            (const_int 52 [0x34]))) "function.c":633 -1
     (nil))
(jump_insn 171 170 172 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 201)
            (pc))) "function.c":633 -1
     (nil)
 -> 201)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 3, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9
;;              10
;;              11 (FALLTHRU)
(code_label 172 171 173 12 77 (nil) [3 uses])
(note 173 172 174 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 174 173 175 12 (set (reg/f:DI 101 [ stdscr.82_15 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":635 -1
     (nil))
(insn 175 174 176 12 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":635 -1
     (nil))
(insn 176 175 177 12 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":635 -1
     (nil))
(insn 177 176 178 12 (set (reg:DI 5 di)
        (reg/f:DI 101 [ stdscr.82_15 ])) "function.c":635 -1
     (nil))
(call_insn 178 177 179 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":635 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 179 178 180 12 (set (reg/f:DI 228)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":636 -1
     (nil))
(insn 180 179 181 12 (set (reg:SI 230)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":636 -1
     (nil))
(insn 181 180 182 12 (set (reg:DI 229)
        (sign_extend:DI (reg:SI 230))) "function.c":636 -1
     (nil))
(insn 182 181 183 12 (set (reg:SI 232)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":636 -1
     (nil))
(insn 183 182 184 12 (set (reg:DI 231)
        (sign_extend:DI (reg:SI 232))) "function.c":636 -1
     (nil))
(insn 184 183 185 12 (parallel [
            (set (reg:DI 233)
                (mult:DI (reg:DI 231)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))
(insn 185 184 186 12 (parallel [
            (set (reg:DI 234)
                (plus:DI (reg/f:DI 228)
                    (reg:DI 233)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))
(insn 186 185 187 12 (parallel [
            (set (reg:DI 235)
                (plus:DI (reg:DI 234)
                    (reg:DI 229)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))
(insn 187 186 188 12 (parallel [
            (set (reg/f:DI 236)
                (plus:DI (reg:DI 235)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":636 -1
     (nil))
(insn 188 187 189 12 (set (reg:QI 102 [ _16 ])
        (mem/j:QI (reg/f:DI 236) [0 playerinfo_94->area S1 A8])) "function.c":636 -1
     (nil))
(insn 189 188 190 12 (set (reg:SI 103 [ _17 ])
        (sign_extend:SI (reg:QI 102 [ _16 ]))) "function.c":636 -1
     (nil))
(insn 190 189 191 12 (set (reg:SI 4 si)
        (reg:SI 103 [ _17 ])) "function.c":636 -1
     (nil))
(insn 191 190 192 12 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":636 -1
     (nil))
(insn 192 191 193 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":636 -1
     (nil))
(call_insn 193 192 194 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":636 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 194 193 195 12 (set (reg/f:DI 104 [ stdscr.83_18 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":637 -1
     (nil))
(insn 195 194 196 12 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":637 -1
     (nil))
(insn 196 195 197 12 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":637 -1
     (nil))
(insn 197 196 198 12 (set (reg:DI 5 di)
        (reg/f:DI 104 [ stdscr.83_18 ])) "function.c":637 -1
     (nil))
(call_insn 198 197 199 12 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":637 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 199 198 200 12 (set (pc)
        (label_ref 360)) "function.c":637 -1
     (nil)
 -> 360)
;;  succ:       23

(barrier 200 199 201)
;; basic block 13, loop depth 3, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 201 200 202 13 78 (nil) [1 uses])
(note 202 201 203 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 203 202 204 13 (set (reg/f:DI 237)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))
(insn 204 203 205 13 (set (reg:SI 239)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 205 204 206 13 (set (reg:DI 238)
        (sign_extend:DI (reg:SI 239))) "function.c":639 -1
     (nil))
(insn 206 205 207 13 (set (reg:SI 241)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 207 206 208 13 (set (reg:DI 240)
        (sign_extend:DI (reg:SI 241))) "function.c":639 -1
     (nil))
(insn 208 207 209 13 (parallel [
            (set (reg:DI 242)
                (mult:DI (reg:DI 240)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 209 208 210 13 (parallel [
            (set (reg:DI 243)
                (plus:DI (reg/f:DI 237)
                    (reg:DI 242)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 210 209 211 13 (parallel [
            (set (reg:DI 244)
                (plus:DI (reg:DI 243)
                    (reg:DI 238)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 211 210 212 13 (parallel [
            (set (reg/f:DI 245)
                (plus:DI (reg:DI 244)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 212 211 213 13 (set (reg:QI 105 [ _19 ])
        (mem/j:QI (reg/f:DI 245) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))
(insn 213 212 214 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ _19 ])
            (const_int 99 [0x63]))) "function.c":639 -1
     (nil))
(jump_insn 214 213 215 13 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) "function.c":639 -1
     (nil)
 -> 254)
;;  succ:       17
;;              14 (FALLTHRU)

;; basic block 14, loop depth 3, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 215 214 216 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 14 (set (reg/f:DI 246)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))
(insn 217 216 218 14 (set (reg:SI 248)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 218 217 219 14 (set (reg:DI 247)
        (sign_extend:DI (reg:SI 248))) "function.c":639 -1
     (nil))
(insn 219 218 220 14 (set (reg:SI 250)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 220 219 221 14 (set (reg:DI 249)
        (sign_extend:DI (reg:SI 250))) "function.c":639 -1
     (nil))
(insn 221 220 222 14 (parallel [
            (set (reg:DI 251)
                (mult:DI (reg:DI 249)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 222 221 223 14 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg/f:DI 246)
                    (reg:DI 251)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 223 222 224 14 (parallel [
            (set (reg:DI 253)
                (plus:DI (reg:DI 252)
                    (reg:DI 247)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 224 223 225 14 (parallel [
            (set (reg/f:DI 254)
                (plus:DI (reg:DI 253)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 225 224 226 14 (set (reg:QI 106 [ _20 ])
        (mem/j:QI (reg/f:DI 254) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))
(insn 226 225 227 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 106 [ _20 ])
            (const_int 116 [0x74]))) "function.c":639 -1
     (nil))
(jump_insn 227 226 228 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) "function.c":639 -1
     (nil)
 -> 254)
;;  succ:       17
;;              15 (FALLTHRU)

;; basic block 15, loop depth 3, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 228 227 229 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 229 228 230 15 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))
(insn 230 229 231 15 (set (reg:SI 257)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 231 230 232 15 (set (reg:DI 256)
        (sign_extend:DI (reg:SI 257))) "function.c":639 -1
     (nil))
(insn 232 231 233 15 (set (reg:SI 259)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 233 232 234 15 (set (reg:DI 258)
        (sign_extend:DI (reg:SI 259))) "function.c":639 -1
     (nil))
(insn 234 233 235 15 (parallel [
            (set (reg:DI 260)
                (mult:DI (reg:DI 258)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 235 234 236 15 (parallel [
            (set (reg:DI 261)
                (plus:DI (reg/f:DI 255)
                    (reg:DI 260)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 236 235 237 15 (parallel [
            (set (reg:DI 262)
                (plus:DI (reg:DI 261)
                    (reg:DI 256)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 237 236 238 15 (parallel [
            (set (reg/f:DI 263)
                (plus:DI (reg:DI 262)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 238 237 239 15 (set (reg:QI 107 [ _21 ])
        (mem/j:QI (reg/f:DI 263) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))
(insn 239 238 240 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 107 [ _21 ])
            (const_int 84 [0x54]))) "function.c":639 -1
     (nil))
(jump_insn 240 239 241 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 254)
            (pc))) "function.c":639 -1
     (nil)
 -> 254)
;;  succ:       17
;;              16 (FALLTHRU)

;; basic block 16, loop depth 3, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 241 240 242 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 16 (set (reg/f:DI 264)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":639 -1
     (nil))
(insn 243 242 244 16 (set (reg:SI 266)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 244 243 245 16 (set (reg:DI 265)
        (sign_extend:DI (reg:SI 266))) "function.c":639 -1
     (nil))
(insn 245 244 246 16 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":639 -1
     (nil))
(insn 246 245 247 16 (set (reg:DI 267)
        (sign_extend:DI (reg:SI 268))) "function.c":639 -1
     (nil))
(insn 247 246 248 16 (parallel [
            (set (reg:DI 269)
                (mult:DI (reg:DI 267)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 248 247 249 16 (parallel [
            (set (reg:DI 270)
                (plus:DI (reg/f:DI 264)
                    (reg:DI 269)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 249 248 250 16 (parallel [
            (set (reg:DI 271)
                (plus:DI (reg:DI 270)
                    (reg:DI 265)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 250 249 251 16 (parallel [
            (set (reg/f:DI 272)
                (plus:DI (reg:DI 271)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":639 -1
     (nil))
(insn 251 250 252 16 (set (reg:QI 108 [ _22 ])
        (mem/j:QI (reg/f:DI 272) [0 playerinfo_94->area S1 A8])) "function.c":639 -1
     (nil))
(insn 252 251 253 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _22 ])
            (const_int 68 [0x44]))) "function.c":639 -1
     (nil))
(jump_insn 253 252 254 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "function.c":639 -1
     (nil)
 -> 283)
;;  succ:       17 (FALLTHRU)
;;              18

;; basic block 17, loop depth 3, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              14
;;              15
;;              16 (FALLTHRU)
(code_label 254 253 255 17 79 (nil) [3 uses])
(note 255 254 256 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 256 255 257 17 (set (reg/f:DI 109 [ stdscr.84_23 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":641 -1
     (nil))
(insn 257 256 258 17 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":641 -1
     (nil))
(insn 258 257 259 17 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":641 -1
     (nil))
(insn 259 258 260 17 (set (reg:DI 5 di)
        (reg/f:DI 109 [ stdscr.84_23 ])) "function.c":641 -1
     (nil))
(call_insn 260 259 261 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":641 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 261 260 262 17 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":642 -1
     (nil))
(insn 262 261 263 17 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":642 -1
     (nil))
(insn 263 262 264 17 (set (reg:DI 274)
        (sign_extend:DI (reg:SI 275))) "function.c":642 -1
     (nil))
(insn 264 263 265 17 (set (reg:SI 277)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":642 -1
     (nil))
(insn 265 264 266 17 (set (reg:DI 276)
        (sign_extend:DI (reg:SI 277))) "function.c":642 -1
     (nil))
(insn 266 265 267 17 (parallel [
            (set (reg:DI 278)
                (mult:DI (reg:DI 276)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))
(insn 267 266 268 17 (parallel [
            (set (reg:DI 279)
                (plus:DI (reg/f:DI 273)
                    (reg:DI 278)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))
(insn 268 267 269 17 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg:DI 279)
                    (reg:DI 274)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))
(insn 269 268 270 17 (parallel [
            (set (reg/f:DI 281)
                (plus:DI (reg:DI 280)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":642 -1
     (nil))
(insn 270 269 271 17 (set (reg:QI 110 [ _24 ])
        (mem/j:QI (reg/f:DI 281) [0 playerinfo_94->area S1 A8])) "function.c":642 -1
     (nil))
(insn 271 270 272 17 (set (reg:SI 111 [ _25 ])
        (sign_extend:SI (reg:QI 110 [ _24 ]))) "function.c":642 -1
     (nil))
(insn 272 271 273 17 (set (reg:SI 4 si)
        (reg:SI 111 [ _25 ])) "function.c":642 -1
     (nil))
(insn 273 272 274 17 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":642 -1
     (nil))
(insn 274 273 275 17 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":642 -1
     (nil))
(call_insn 275 274 276 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":642 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 276 275 277 17 (set (reg/f:DI 112 [ stdscr.85_26 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":643 -1
     (nil))
(insn 277 276 278 17 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":643 -1
     (nil))
(insn 278 277 279 17 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":643 -1
     (nil))
(insn 279 278 280 17 (set (reg:DI 5 di)
        (reg/f:DI 112 [ stdscr.85_26 ])) "function.c":643 -1
     (nil))
(call_insn 280 279 281 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":643 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 281 280 282 17 (set (pc)
        (label_ref 360)) "function.c":643 -1
     (nil)
 -> 360)
;;  succ:       23

(barrier 282 281 283)
;; basic block 18, loop depth 3, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 283 282 284 18 80 (nil) [1 uses])
(note 284 283 285 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 18 (set (reg/f:DI 282)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":645 -1
     (nil))
(insn 286 285 287 18 (set (reg:SI 284)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":645 -1
     (nil))
(insn 287 286 288 18 (set (reg:DI 283)
        (sign_extend:DI (reg:SI 284))) "function.c":645 -1
     (nil))
(insn 288 287 289 18 (set (reg:SI 286)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":645 -1
     (nil))
(insn 289 288 290 18 (set (reg:DI 285)
        (sign_extend:DI (reg:SI 286))) "function.c":645 -1
     (nil))
(insn 290 289 291 18 (parallel [
            (set (reg:DI 287)
                (mult:DI (reg:DI 285)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))
(insn 291 290 292 18 (parallel [
            (set (reg:DI 288)
                (plus:DI (reg/f:DI 282)
                    (reg:DI 287)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))
(insn 292 291 293 18 (parallel [
            (set (reg:DI 289)
                (plus:DI (reg:DI 288)
                    (reg:DI 283)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))
(insn 293 292 294 18 (parallel [
            (set (reg/f:DI 290)
                (plus:DI (reg:DI 289)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":645 -1
     (nil))
(insn 294 293 295 18 (set (reg:QI 113 [ _27 ])
        (mem/j:QI (reg/f:DI 290) [0 playerinfo_94->area S1 A8])) "function.c":645 -1
     (nil))
(insn 295 294 296 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 113 [ _27 ])
            (const_int 42 [0x2a]))) "function.c":645 -1
     (nil))
(jump_insn 296 295 297 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 313)
            (pc))) "function.c":645 -1
     (nil)
 -> 313)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 3, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 297 296 298 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 298 297 299 19 (set (reg/f:DI 114 [ stdscr.86_28 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":647 -1
     (nil))
(insn 299 298 300 19 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":647 -1
     (nil))
(insn 300 299 301 19 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":647 -1
     (nil))
(insn 301 300 302 19 (set (reg:DI 5 di)
        (reg/f:DI 114 [ stdscr.86_28 ])) "function.c":647 -1
     (nil))
(call_insn 302 301 303 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":647 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 303 302 304 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f7cd0f0d510 *.LC40>)) "function.c":648 -1
     (nil))
(insn 304 303 305 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":648 -1
     (nil))
(call_insn 305 304 306 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":648 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 306 305 307 19 (set (reg/f:DI 115 [ stdscr.87_29 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":649 -1
     (nil))
(insn 307 306 308 19 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":649 -1
     (nil))
(insn 308 307 309 19 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":649 -1
     (nil))
(insn 309 308 310 19 (set (reg:DI 5 di)
        (reg/f:DI 115 [ stdscr.87_29 ])) "function.c":649 -1
     (nil))
(call_insn 310 309 311 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":649 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 311 310 312 19 (set (pc)
        (label_ref 360)) -1
     (nil)
 -> 360)
;;  succ:       23

(barrier 312 311 313)
;; basic block 20, loop depth 3, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 313 312 314 20 81 (nil) [1 uses])
(note 314 313 315 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 315 314 316 20 (set (reg/f:DI 291)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":651 -1
     (nil))
(insn 316 315 317 20 (set (reg:SI 293)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":651 -1
     (nil))
(insn 317 316 318 20 (set (reg:DI 292)
        (sign_extend:DI (reg:SI 293))) "function.c":651 -1
     (nil))
(insn 318 317 319 20 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":651 -1
     (nil))
(insn 319 318 320 20 (set (reg:DI 294)
        (sign_extend:DI (reg:SI 295))) "function.c":651 -1
     (nil))
(insn 320 319 321 20 (parallel [
            (set (reg:DI 296)
                (mult:DI (reg:DI 294)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))
(insn 321 320 322 20 (parallel [
            (set (reg:DI 297)
                (plus:DI (reg/f:DI 291)
                    (reg:DI 296)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))
(insn 322 321 323 20 (parallel [
            (set (reg:DI 298)
                (plus:DI (reg:DI 297)
                    (reg:DI 292)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))
(insn 323 322 324 20 (parallel [
            (set (reg/f:DI 299)
                (plus:DI (reg:DI 298)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":651 -1
     (nil))
(insn 324 323 325 20 (set (reg:QI 116 [ _30 ])
        (mem/j:QI (reg/f:DI 299) [0 playerinfo_94->area S1 A8])) "function.c":651 -1
     (nil))
(insn 325 324 326 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 116 [ _30 ])
            (const_int 65 [0x41]))) "function.c":651 -1
     (nil))
(jump_insn 326 325 327 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) "function.c":651 -1
     (nil)
 -> 343)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 3, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 327 326 328 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 329 21 (set (reg/f:DI 117 [ stdscr.88_31 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":653 -1
     (nil))
(insn 329 328 330 21 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":653 -1
     (nil))
(insn 330 329 331 21 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":653 -1
     (nil))
(insn 331 330 332 21 (set (reg:DI 5 di)
        (reg/f:DI 117 [ stdscr.88_31 ])) "function.c":653 -1
     (nil))
(call_insn 332 331 333 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":653 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 333 332 334 21 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":654 -1
     (nil))
(insn 334 333 335 21 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":654 -1
     (nil))
(call_insn 335 334 336 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":654 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 336 335 337 21 (set (reg/f:DI 118 [ stdscr.89_32 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":655 -1
     (nil))
(insn 337 336 338 21 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":655 -1
     (nil))
(insn 338 337 339 21 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":655 -1
     (nil))
(insn 339 338 340 21 (set (reg:DI 5 di)
        (reg/f:DI 118 [ stdscr.89_32 ])) "function.c":655 -1
     (nil))
(call_insn 340 339 341 21 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":655 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 341 340 342 21 (set (pc)
        (label_ref 360)) -1
     (nil)
 -> 360)
;;  succ:       23

(barrier 342 341 343)
;; basic block 22, loop depth 3, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       20
(code_label 343 342 344 22 82 (nil) [1 uses])
(note 344 343 345 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 346 22 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":659 -1
     (nil))
(insn 346 345 347 22 (set (reg:SI 302)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":659 -1
     (nil))
(insn 347 346 348 22 (set (reg:DI 301)
        (sign_extend:DI (reg:SI 302))) "function.c":659 -1
     (nil))
(insn 348 347 349 22 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":659 -1
     (nil))
(insn 349 348 350 22 (set (reg:DI 303)
        (sign_extend:DI (reg:SI 304))) "function.c":659 -1
     (nil))
(insn 350 349 351 22 (parallel [
            (set (reg:DI 305)
                (mult:DI (reg:DI 303)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))
(insn 351 350 352 22 (parallel [
            (set (reg:DI 306)
                (plus:DI (reg/f:DI 300)
                    (reg:DI 305)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))
(insn 352 351 353 22 (parallel [
            (set (reg:DI 307)
                (plus:DI (reg:DI 306)
                    (reg:DI 301)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))
(insn 353 352 354 22 (parallel [
            (set (reg/f:DI 308)
                (plus:DI (reg:DI 307)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":659 -1
     (nil))
(insn 354 353 355 22 (set (reg:QI 119 [ _33 ])
        (mem/j:QI (reg/f:DI 308) [0 playerinfo_94->area S1 A8])) "function.c":659 -1
     (nil))
(insn 355 354 356 22 (set (reg:SI 120 [ _34 ])
        (sign_extend:SI (reg:QI 119 [ _33 ]))) "function.c":659 -1
     (nil))
(insn 356 355 357 22 (set (reg:SI 4 si)
        (reg:SI 120 [ _34 ])) "function.c":659 -1
     (nil))
(insn 357 356 358 22 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":659 -1
     (nil))
(insn 358 357 359 22 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":659 -1
     (nil))
(call_insn 359 358 360 22 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":659 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 3, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              12
;;              17
;;              19
;;              21
;;              22 (FALLTHRU)
(code_label 360 359 361 23 76 (nil) [5 uses])
(note 361 360 362 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":624 -1
     (nil))
;;  succ:       24 (FALLTHRU,DFS_BACK)

;; basic block 24, loop depth 3, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              23 (FALLTHRU,DFS_BACK)
(code_label 363 362 364 24 74 (nil) [1 uses])
(note 364 363 366 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 366 364 367 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":624 -1
     (nil))
(jump_insn 367 366 368 24 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 365)
            (pc))) "function.c":624 -1
     (nil)
 -> 365)
;;  succ:       6
;;              25 (FALLTHRU)

;; basic block 25, loop depth 2, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 368 367 369 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 369 368 370 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":622 -1
     (nil))
;;  succ:       26 (FALLTHRU,DFS_BACK)

;; basic block 26, loop depth 2, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              25 (FALLTHRU,DFS_BACK)
(code_label 370 369 371 26 73 (nil) [1 uses])
(note 371 370 373 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 373 371 374 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":622 -1
     (nil))
(jump_insn 374 373 375 26 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 372)
            (pc))) "function.c":622 -1
     (nil)
 -> 372)
;;  succ:       5
;;              27 (FALLTHRU)

;; basic block 27, loop depth 1, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 (FALLTHRU)
(note 375 374 376 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 376 375 377 27 (set (reg/f:DI 121 [ stdscr.90_35 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":664 -1
     (nil))
(insn 377 376 378 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":664 -1
     (nil))
(insn 378 377 379 27 (set (reg:SI 4 si)
        (const_int 25 [0x19])) "function.c":664 -1
     (nil))
(insn 379 378 380 27 (set (reg:DI 5 di)
        (reg/f:DI 121 [ stdscr.90_35 ])) "function.c":664 -1
     (nil))
(call_insn 380 379 381 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":664 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 381 380 382 27 (set (reg/f:DI 309)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":665 -1
     (nil))
(insn 382 381 383 27 (set (reg:SI 122 [ _36 ])
        (mem:SI (plus:DI (reg/f:DI 309)
                (const_int 4 [0x4])) [3 playerinfo_94->PID_serwer+0 S4 A32])) "function.c":665 -1
     (nil))
(insn 383 382 384 27 (set (reg:SI 4 si)
        (reg:SI 122 [ _36 ])) "function.c":665 -1
     (nil))
(insn 384 383 385 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f7cd0ee26c0 *.LC5>)) "function.c":665 -1
     (nil))
(insn 385 384 386 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":665 -1
     (nil))
(call_insn 386 385 387 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":665 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 387 386 388 27 (set (reg/f:DI 123 [ stdscr.91_37 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":667 -1
     (nil))
(insn 388 387 389 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":667 -1
     (nil))
(insn 389 388 390 27 (set (reg:SI 4 si)
        (const_int 26 [0x1a])) "function.c":667 -1
     (nil))
(insn 390 389 391 27 (set (reg:DI 5 di)
        (reg/f:DI 123 [ stdscr.91_37 ])) "function.c":667 -1
     (nil))
(call_insn 391 390 392 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":667 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 392 391 393 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f7cd0f0d120 *.LC41>)) "function.c":668 -1
     (nil))
(insn 393 392 394 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":668 -1
     (nil))
(call_insn 394 393 395 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":668 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 395 394 396 27 (set (reg/f:DI 124 [ stdscr.92_38 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":670 -1
     (nil))
(insn 396 395 397 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":670 -1
     (nil))
(insn 397 396 398 27 (set (reg:SI 4 si)
        (const_int 27 [0x1b])) "function.c":670 -1
     (nil))
(insn 398 397 399 27 (set (reg:DI 5 di)
        (reg/f:DI 124 [ stdscr.92_38 ])) "function.c":670 -1
     (nil))
(call_insn 399 398 400 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":670 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 400 399 401 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f7cd0aac480 *.LC42>)) "function.c":671 -1
     (nil))
(insn 401 400 402 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":671 -1
     (nil))
(call_insn 402 401 403 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":671 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 403 402 404 27 (set (reg/f:DI 125 [ stdscr.93_39 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":673 -1
     (nil))
(insn 404 403 405 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":673 -1
     (nil))
(insn 405 404 406 27 (set (reg:SI 4 si)
        (const_int 28 [0x1c])) "function.c":673 -1
     (nil))
(insn 406 405 407 27 (set (reg:DI 5 di)
        (reg/f:DI 125 [ stdscr.93_39 ])) "function.c":673 -1
     (nil))
(call_insn 407 406 408 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":673 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 408 407 409 27 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":674 -1
     (nil))
(insn 409 408 410 27 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 310)
                (const_int 22552 [0x5818])) [3 playerinfo_94->runda+0 S4 A64])) "function.c":674 -1
     (nil))
(insn 410 409 411 27 (set (reg:SI 4 si)
        (reg:SI 126 [ _40 ])) "function.c":674 -1
     (nil))
(insn 411 410 412 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f7cd0ee27e0 *.LC7>)) "function.c":674 -1
     (nil))
(insn 412 411 413 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":674 -1
     (nil))
(call_insn 413 412 414 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":674 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 414 413 415 27 (set (reg/f:DI 127 [ stdscr.94_41 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":676 -1
     (nil))
(insn 415 414 416 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":676 -1
     (nil))
(insn 416 415 417 27 (set (reg:SI 4 si)
        (const_int 30 [0x1e])) "function.c":676 -1
     (nil))
(insn 417 416 418 27 (set (reg:DI 5 di)
        (reg/f:DI 127 [ stdscr.94_41 ])) "function.c":676 -1
     (nil))
(call_insn 418 417 419 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":676 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 419 418 420 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC43") [flags 0x2]  <var_decl 0x7f7cd0aac510 *.LC43>)) "function.c":677 -1
     (nil))
(insn 420 419 421 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":677 -1
     (nil))
(call_insn 421 420 422 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":677 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 422 421 423 27 (set (reg/f:DI 128 [ stdscr.95_42 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":679 -1
     (nil))
(insn 423 422 424 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":679 -1
     (nil))
(insn 424 423 425 27 (set (reg:SI 4 si)
        (const_int 31 [0x1f])) "function.c":679 -1
     (nil))
(insn 425 424 426 27 (set (reg:DI 5 di)
        (reg/f:DI 128 [ stdscr.95_42 ])) "function.c":679 -1
     (nil))
(call_insn 426 425 427 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":679 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 427 426 428 27 (set (reg/f:DI 311)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":680 -1
     (nil))
(insn 428 427 429 27 (set (reg:SI 129 [ _43 ])
        (mem:SI (plus:DI (reg/f:DI 311)
                (const_int 8 [0x8])) [3 playerinfo_94->numer+0 S4 A64])) "function.c":680 -1
     (nil))
(insn 429 428 430 27 (set (reg:SI 4 si)
        (reg:SI 129 [ _43 ])) "function.c":680 -1
     (nil))
(insn 430 429 431 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7f7cd0aac5a0 *.LC44>)) "function.c":680 -1
     (nil))
(insn 431 430 432 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":680 -1
     (nil))
(call_insn 432 431 433 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":680 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 433 432 434 27 (set (reg/f:DI 130 [ stdscr.96_44 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":682 -1
     (nil))
(insn 434 433 435 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":682 -1
     (nil))
(insn 435 434 436 27 (set (reg:SI 4 si)
        (const_int 32 [0x20])) "function.c":682 -1
     (nil))
(insn 436 435 437 27 (set (reg:DI 5 di)
        (reg/f:DI 130 [ stdscr.96_44 ])) "function.c":682 -1
     (nil))
(call_insn 437 436 438 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":682 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 438 437 439 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7f7cd0aac630 *.LC45>)) "function.c":683 -1
     (nil))
(insn 439 438 440 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":683 -1
     (nil))
(call_insn 440 439 441 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":683 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 441 440 442 27 (set (reg/f:DI 131 [ stdscr.97_45 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":685 -1
     (nil))
(insn 442 441 443 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":685 -1
     (nil))
(insn 443 442 444 27 (set (reg:SI 4 si)
        (const_int 33 [0x21])) "function.c":685 -1
     (nil))
(insn 444 443 445 27 (set (reg:DI 5 di)
        (reg/f:DI 131 [ stdscr.97_45 ])) "function.c":685 -1
     (nil))
(call_insn 445 444 446 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":685 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 446 445 447 27 (set (reg/f:DI 312)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":686 -1
     (nil))
(insn 447 446 448 27 (set (reg:SI 132 [ _46 ])
        (mem:SI (plus:DI (reg/f:DI 312)
                (const_int 16 [0x10])) [3 playerinfo_94->y_current+0 S4 A64])) "function.c":686 -1
     (nil))
(insn 448 447 449 27 (set (reg/f:DI 313)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":686 -1
     (nil))
(insn 449 448 450 27 (set (reg:SI 133 [ _47 ])
        (mem:SI (plus:DI (reg/f:DI 313)
                (const_int 12 [0xc])) [3 playerinfo_94->x_current+0 S4 A32])) "function.c":686 -1
     (nil))
(insn 450 449 451 27 (set (reg:SI 1 dx)
        (reg:SI 132 [ _46 ])) "function.c":686 -1
     (nil))
(insn 451 450 452 27 (set (reg:SI 4 si)
        (reg:SI 133 [ _47 ])) "function.c":686 -1
     (nil))
(insn 452 451 453 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC46") [flags 0x2]  <var_decl 0x7f7cd0aac6c0 *.LC46>)) "function.c":686 -1
     (nil))
(insn 453 452 454 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":686 -1
     (nil))
(call_insn 454 453 455 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":686 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 455 454 456 27 (set (reg/f:DI 134 [ stdscr.98_48 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":688 -1
     (nil))
(insn 456 455 457 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":688 -1
     (nil))
(insn 457 456 458 27 (set (reg:SI 4 si)
        (const_int 34 [0x22])) "function.c":688 -1
     (nil))
(insn 458 457 459 27 (set (reg:DI 5 di)
        (reg/f:DI 134 [ stdscr.98_48 ])) "function.c":688 -1
     (nil))
(call_insn 459 458 460 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":688 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 460 459 461 27 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":689 -1
     (nil))
(insn 461 460 462 27 (set (reg:SI 135 [ _49 ])
        (mem:SI (plus:DI (reg/f:DI 314)
                (const_int 28 [0x1c])) [3 playerinfo_94->deaths+0 S4 A32])) "function.c":689 -1
     (nil))
(insn 462 461 463 27 (set (reg:SI 4 si)
        (reg:SI 135 [ _49 ])) "function.c":689 -1
     (nil))
(insn 463 462 464 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC47") [flags 0x2]  <var_decl 0x7f7cd0aac750 *.LC47>)) "function.c":689 -1
     (nil))
(insn 464 463 465 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":689 -1
     (nil))
(call_insn 465 464 466 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":689 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 466 465 467 27 (set (reg/f:DI 136 [ stdscr.99_50 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":691 -1
     (nil))
(insn 467 466 468 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":691 -1
     (nil))
(insn 468 467 469 27 (set (reg:SI 4 si)
        (const_int 36 [0x24])) "function.c":691 -1
     (nil))
(insn 469 468 470 27 (set (reg:DI 5 di)
        (reg/f:DI 136 [ stdscr.99_50 ])) "function.c":691 -1
     (nil))
(call_insn 470 469 471 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":691 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 471 470 472 27 (set (reg/f:DI 315)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":692 -1
     (nil))
(insn 472 471 473 27 (set (reg:SI 137 [ _51 ])
        (mem:SI (plus:DI (reg/f:DI 315)
                (const_int 32 [0x20])) [3 playerinfo_94->coins_carried+0 S4 A64])) "function.c":692 -1
     (nil))
(insn 473 472 474 27 (set (reg:SI 4 si)
        (reg:SI 137 [ _51 ])) "function.c":692 -1
     (nil))
(insn 474 473 475 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC48") [flags 0x2]  <var_decl 0x7f7cd0aac7e0 *.LC48>)) "function.c":692 -1
     (nil))
(insn 475 474 476 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":692 -1
     (nil))
(call_insn 476 475 477 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":692 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 477 476 478 27 (set (reg/f:DI 138 [ stdscr.100_52 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":694 -1
     (nil))
(insn 478 477 479 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":694 -1
     (nil))
(insn 479 478 480 27 (set (reg:SI 4 si)
        (const_int 37 [0x25])) "function.c":694 -1
     (nil))
(insn 480 479 481 27 (set (reg:DI 5 di)
        (reg/f:DI 138 [ stdscr.100_52 ])) "function.c":694 -1
     (nil))
(call_insn 481 480 482 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":694 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 482 481 483 27 (set (reg/f:DI 316)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [14 playerinfo+0 S8 A64])) "function.c":695 -1
     (nil))
(insn 483 482 484 27 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 316)
                (const_int 36 [0x24])) [3 playerinfo_94->coins_brought+0 S4 A32])) "function.c":695 -1
     (nil))
(insn 484 483 485 27 (set (reg:SI 4 si)
        (reg:SI 139 [ _53 ])) "function.c":695 -1
     (nil))
(insn 485 484 486 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC49") [flags 0x2]  <var_decl 0x7f7cd0aac870 *.LC49>)) "function.c":695 -1
     (nil))
(insn 486 485 487 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":695 -1
     (nil))
(call_insn 487 486 488 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":695 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 488 487 489 27 (set (reg/f:DI 140 [ stdscr.101_54 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":697 -1
     (nil))
(insn 489 488 490 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":697 -1
     (nil))
(insn 490 489 491 27 (set (reg:SI 4 si)
        (const_int 40 [0x28])) "function.c":697 -1
     (nil))
(insn 491 490 492 27 (set (reg:DI 5 di)
        (reg/f:DI 140 [ stdscr.101_54 ])) "function.c":697 -1
     (nil))
(call_insn 492 491 493 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":697 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 493 492 494 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC16") [flags 0x2]  <var_decl 0x7f7cd0ee2c60 *.LC16>)) "function.c":698 -1
     (nil))
(insn 494 493 495 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":698 -1
     (nil))
(call_insn 495 494 496 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":698 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 496 495 497 27 (set (reg/f:DI 141 [ stdscr.102_55 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":700 -1
     (nil))
(insn 497 496 498 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":700 -1
     (nil))
(insn 498 497 499 27 (set (reg:SI 4 si)
        (const_int 41 [0x29])) "function.c":700 -1
     (nil))
(insn 499 498 500 27 (set (reg:DI 5 di)
        (reg/f:DI 141 [ stdscr.102_55 ])) "function.c":700 -1
     (nil))
(call_insn 500 499 501 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":700 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 501 500 502 27 (set (reg/f:DI 142 [ stdscr.103_56 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":701 -1
     (nil))
(insn 502 501 503 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":701 -1
     (nil))
(insn 503 502 504 27 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":701 -1
     (nil))
(insn 504 503 505 27 (set (reg:DI 5 di)
        (reg/f:DI 142 [ stdscr.103_56 ])) "function.c":701 -1
     (nil))
(call_insn 505 504 506 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":701 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 506 505 507 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC17") [flags 0x2]  <var_decl 0x7f7cd0ee2cf0 *.LC17>)) "function.c":702 -1
     (nil))
(insn 507 506 508 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":702 -1
     (nil))
(call_insn 508 507 509 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":702 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 509 508 510 27 (set (reg/f:DI 143 [ stdscr.104_57 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":703 -1
     (nil))
(insn 510 509 511 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":703 -1
     (nil))
(insn 511 510 512 27 (set (reg:SI 4 si)
        (const_int 1536 [0x600])) "function.c":703 -1
     (nil))
(insn 512 511 513 27 (set (reg:DI 5 di)
        (reg/f:DI 143 [ stdscr.104_57 ])) "function.c":703 -1
     (nil))
(call_insn 513 512 514 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":703 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 514 513 515 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC18") [flags 0x2]  <var_decl 0x7f7cd0ee2d80 *.LC18>)) "function.c":704 -1
     (nil))
(insn 515 514 516 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":704 -1
     (nil))
(call_insn 516 515 517 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":704 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 517 516 518 27 (set (reg/f:DI 144 [ stdscr.105_58 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":706 -1
     (nil))
(insn 518 517 519 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":706 -1
     (nil))
(insn 519 518 520 27 (set (reg:SI 4 si)
        (const_int 42 [0x2a])) "function.c":706 -1
     (nil))
(insn 520 519 521 27 (set (reg:DI 5 di)
        (reg/f:DI 144 [ stdscr.105_58 ])) "function.c":706 -1
     (nil))
(call_insn 521 520 522 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":706 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 522 521 523 27 (set (reg/f:DI 145 [ stdscr.106_59 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":707 -1
     (nil))
(insn 523 522 524 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":707 -1
     (nil))
(insn 524 523 525 27 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":707 -1
     (nil))
(insn 525 524 526 27 (set (reg:DI 5 di)
        (reg/f:DI 145 [ stdscr.106_59 ])) "function.c":707 -1
     (nil))
(call_insn 526 525 527 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":707 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 527 526 528 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":708 -1
     (nil))
(insn 528 527 529 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":708 -1
     (nil))
(call_insn 529 528 530 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":708 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 530 529 531 27 (set (reg/f:DI 146 [ stdscr.107_60 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":709 -1
     (nil))
(insn 531 530 532 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":709 -1
     (nil))
(insn 532 531 533 27 (set (reg:SI 4 si)
        (const_int 1280 [0x500])) "function.c":709 -1
     (nil))
(insn 533 532 534 27 (set (reg:DI 5 di)
        (reg/f:DI 146 [ stdscr.107_60 ])) "function.c":709 -1
     (nil))
(call_insn 534 533 535 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":709 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 535 534 536 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC19") [flags 0x2]  <var_decl 0x7f7cd0ee2e10 *.LC19>)) "function.c":710 -1
     (nil))
(insn 536 535 537 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":710 -1
     (nil))
(call_insn 537 536 538 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":710 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 538 537 539 27 (set (reg/f:DI 147 [ stdscr.108_61 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":712 -1
     (nil))
(insn 539 538 540 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":712 -1
     (nil))
(insn 540 539 541 27 (set (reg:SI 4 si)
        (const_int 43 [0x2b])) "function.c":712 -1
     (nil))
(insn 541 540 542 27 (set (reg:DI 5 di)
        (reg/f:DI 147 [ stdscr.108_61 ])) "function.c":712 -1
     (nil))
(call_insn 542 541 543 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":712 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 543 542 544 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f7cd0ee2ea0 *.LC20>)) "function.c":713 -1
     (nil))
(insn 544 543 545 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":713 -1
     (nil))
(call_insn 545 544 546 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":713 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 546 545 547 27 (set (reg/f:DI 148 [ stdscr.109_62 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":715 -1
     (nil))
(insn 547 546 548 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":715 -1
     (nil))
(insn 548 547 549 27 (set (reg:SI 4 si)
        (const_int 44 [0x2c])) "function.c":715 -1
     (nil))
(insn 549 548 550 27 (set (reg:DI 5 di)
        (reg/f:DI 148 [ stdscr.109_62 ])) "function.c":715 -1
     (nil))
(call_insn 550 549 551 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":715 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 551 550 552 27 (set (reg/f:DI 149 [ stdscr.110_63 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":716 -1
     (nil))
(insn 552 551 553 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":716 -1
     (nil))
(insn 553 552 554 27 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":716 -1
     (nil))
(insn 554 553 555 27 (set (reg:DI 5 di)
        (reg/f:DI 149 [ stdscr.110_63 ])) "function.c":716 -1
     (nil))
(call_insn 555 554 556 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":716 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 556 555 557 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f7cd0ee2f30 *.LC21>)) "function.c":717 -1
     (nil))
(insn 557 556 558 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":717 -1
     (nil))
(call_insn 558 557 559 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":717 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 559 558 560 27 (set (reg/f:DI 150 [ stdscr.111_64 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":718 -1
     (nil))
(insn 560 559 561 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":718 -1
     (nil))
(insn 561 560 562 27 (set (reg:SI 4 si)
        (const_int 3072 [0xc00])) "function.c":718 -1
     (nil))
(insn 562 561 563 27 (set (reg:DI 5 di)
        (reg/f:DI 150 [ stdscr.111_64 ])) "function.c":718 -1
     (nil))
(call_insn 563 562 564 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":718 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 564 563 565 27 (set (reg/f:DI 151 [ stdscr.112_65 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":720 -1
     (nil))
(insn 565 564 566 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":720 -1
     (nil))
(insn 566 565 567 27 (set (reg:SI 4 si)
        (const_int 45 [0x2d])) "function.c":720 -1
     (nil))
(insn 567 566 568 27 (set (reg:DI 5 di)
        (reg/f:DI 151 [ stdscr.112_65 ])) "function.c":720 -1
     (nil))
(call_insn 568 567 569 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":720 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 569 568 570 27 (set (reg/f:DI 152 [ stdscr.113_66 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":721 -1
     (nil))
(insn 570 569 571 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":721 -1
     (nil))
(insn 571 570 572 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":721 -1
     (nil))
(insn 572 571 573 27 (set (reg:DI 5 di)
        (reg/f:DI 152 [ stdscr.113_66 ])) "function.c":721 -1
     (nil))
(call_insn 573 572 574 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":721 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 574 573 575 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f7cd0ef3000 *.LC22>)) "function.c":722 -1
     (nil))
(insn 575 574 576 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":722 -1
     (nil))
(call_insn 576 575 577 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":722 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 577 576 578 27 (set (reg/f:DI 153 [ stdscr.114_67 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":723 -1
     (nil))
(insn 578 577 579 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":723 -1
     (nil))
(insn 579 578 580 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":723 -1
     (nil))
(insn 580 579 581 27 (set (reg:DI 5 di)
        (reg/f:DI 153 [ stdscr.114_67 ])) "function.c":723 -1
     (nil))
(call_insn 581 580 582 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":723 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 582 581 583 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC50") [flags 0x2]  <var_decl 0x7f7cd0aac900 *.LC50>)) "function.c":724 -1
     (nil))
(insn 583 582 584 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":724 -1
     (nil))
(call_insn 584 583 585 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":724 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 585 584 586 27 (set (reg/f:DI 154 [ stdscr.115_68 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":725 -1
     (nil))
(insn 586 585 587 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":725 -1
     (nil))
(insn 587 586 588 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":725 -1
     (nil))
(insn 588 587 589 27 (set (reg:DI 5 di)
        (reg/f:DI 154 [ stdscr.115_68 ])) "function.c":725 -1
     (nil))
(call_insn 589 588 590 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":725 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 590 589 591 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f7cd0ef3120 *.LC24>)) "function.c":726 -1
     (nil))
(insn 591 590 592 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":726 -1
     (nil))
(call_insn 592 591 593 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":726 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 593 592 594 27 (set (reg/f:DI 155 [ stdscr.116_69 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":727 -1
     (nil))
(insn 594 593 595 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":727 -1
     (nil))
(insn 595 594 596 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":727 -1
     (nil))
(insn 596 595 597 27 (set (reg:DI 5 di)
        (reg/f:DI 155 [ stdscr.116_69 ])) "function.c":727 -1
     (nil))
(call_insn 597 596 598 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":727 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 598 597 599 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f7cd0ef31b0 *.LC25>)) "function.c":728 -1
     (nil))
(insn 599 598 600 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":728 -1
     (nil))
(call_insn 600 599 601 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":728 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 601 600 602 27 (set (reg/f:DI 156 [ stdscr.117_70 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":730 -1
     (nil))
(insn 602 601 603 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":730 -1
     (nil))
(insn 603 602 604 27 (set (reg:SI 4 si)
        (const_int 46 [0x2e])) "function.c":730 -1
     (nil))
(insn 604 603 605 27 (set (reg:DI 5 di)
        (reg/f:DI 156 [ stdscr.117_70 ])) "function.c":730 -1
     (nil))
(call_insn 605 604 606 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":730 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 606 605 607 27 (set (reg/f:DI 157 [ stdscr.118_71 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":731 -1
     (nil))
(insn 607 606 608 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":731 -1
     (nil))
(insn 608 607 609 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":731 -1
     (nil))
(insn 609 608 610 27 (set (reg:DI 5 di)
        (reg/f:DI 157 [ stdscr.118_71 ])) "function.c":731 -1
     (nil))
(call_insn 610 609 611 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":731 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 611 610 612 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f7cd0ef3240 *.LC26>)) "function.c":732 -1
     (nil))
(insn 612 611 613 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":732 -1
     (nil))
(call_insn 613 612 614 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":732 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 614 613 615 27 (set (reg/f:DI 158 [ stdscr.119_72 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":733 -1
     (nil))
(insn 615 614 616 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":733 -1
     (nil))
(insn 616 615 617 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":733 -1
     (nil))
(insn 617 616 618 27 (set (reg:DI 5 di)
        (reg/f:DI 158 [ stdscr.119_72 ])) "function.c":733 -1
     (nil))
(call_insn 618 617 619 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":733 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 619 618 620 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f7cd0ef32d0 *.LC27>)) "function.c":734 -1
     (nil))
(insn 620 619 621 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":734 -1
     (nil))
(call_insn 621 620 622 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":734 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 622 621 623 27 (set (reg/f:DI 159 [ stdscr.120_73 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":736 -1
     (nil))
(insn 623 622 624 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":736 -1
     (nil))
(insn 624 623 625 27 (set (reg:SI 4 si)
        (const_int 47 [0x2f])) "function.c":736 -1
     (nil))
(insn 625 624 626 27 (set (reg:DI 5 di)
        (reg/f:DI 159 [ stdscr.120_73 ])) "function.c":736 -1
     (nil))
(call_insn 626 625 627 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":736 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 627 626 628 27 (set (reg/f:DI 160 [ stdscr.121_74 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":737 -1
     (nil))
(insn 628 627 629 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":737 -1
     (nil))
(insn 629 628 630 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":737 -1
     (nil))
(insn 630 629 631 27 (set (reg:DI 5 di)
        (reg/f:DI 160 [ stdscr.121_74 ])) "function.c":737 -1
     (nil))
(call_insn 631 630 632 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":737 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 632 631 633 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f7cd0ef3360 *.LC28>)) "function.c":738 -1
     (nil))
(insn 633 632 634 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":738 -1
     (nil))
(call_insn 634 633 635 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":738 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 635 634 636 27 (set (reg/f:DI 161 [ stdscr.122_75 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":739 -1
     (nil))
(insn 636 635 637 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":739 -1
     (nil))
(insn 637 636 638 27 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":739 -1
     (nil))
(insn 638 637 639 27 (set (reg:DI 5 di)
        (reg/f:DI 161 [ stdscr.122_75 ])) "function.c":739 -1
     (nil))
(call_insn 639 638 640 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":739 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 640 639 641 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f7cd0ef33f0 *.LC29>)) "function.c":740 -1
     (nil))
(insn 641 640 642 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":740 -1
     (nil))
(call_insn 642 641 643 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":740 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 643 642 644 27 (set (reg/f:DI 162 [ stdscr.123_76 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":742 -1
     (nil))
(insn 644 643 645 27 (set (reg:SI 1 dx)
        (const_int 13 [0xd])) "function.c":742 -1
     (nil))
(insn 645 644 646 27 (set (reg:SI 4 si)
        (const_int 48 [0x30])) "function.c":742 -1
     (nil))
(insn 646 645 647 27 (set (reg:DI 5 di)
        (reg/f:DI 162 [ stdscr.123_76 ])) "function.c":742 -1
     (nil))
(call_insn 647 646 648 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":742 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 648 647 649 27 (set (reg/f:DI 163 [ stdscr.124_77 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":743 -1
     (nil))
(insn 649 648 650 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":743 -1
     (nil))
(insn 650 649 651 27 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":743 -1
     (nil))
(insn 651 650 652 27 (set (reg:DI 5 di)
        (reg/f:DI 163 [ stdscr.124_77 ])) "function.c":743 -1
     (nil))
(call_insn 652 651 653 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":743 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 653 652 654 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f7cd0ef3480 *.LC30>)) "function.c":744 -1
     (nil))
(insn 654 653 655 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":744 -1
     (nil))
(call_insn 655 654 656 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":744 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 656 655 657 27 (set (reg/f:DI 164 [ stdscr.125_78 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":745 -1
     (nil))
(insn 657 656 658 27 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":745 -1
     (nil))
(insn 658 657 659 27 (set (reg:SI 4 si)
        (const_int 2816 [0xb00])) "function.c":745 -1
     (nil))
(insn 659 658 660 27 (set (reg:DI 5 di)
        (reg/f:DI 164 [ stdscr.125_78 ])) "function.c":745 -1
     (nil))
(call_insn 660 659 661 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":745 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 661 660 662 27 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f7cd0ef3510 *.LC31>)) "function.c":746 -1
     (nil))
(insn 662 661 663 27 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":746 -1
     (nil))
(call_insn 663 662 664 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":746 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 664 663 665 27 (set (reg/f:DI 165 [ stdscr.126_79 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":747 -1
     (nil))
(insn 665 664 666 27 (set (reg:DI 5 di)
        (reg/f:DI 165 [ stdscr.126_79 ])) "function.c":747 -1
     (nil))
(call_insn 666 665 667 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wrefresh") [flags 0x41]  <function_decl 0x7f7cd10cd300 wrefresh>) [0 wrefresh S1 A8])
            (const_int 0 [0]))) "function.c":747 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 667 666 668 27 (set (reg:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [18 sem_p1_pom+0 S8 A64])) "function.c":748 -1
     (nil))
(insn 668 667 669 27 (set (reg:DI 5 di)
        (reg:DI 317)) "function.c":748 -1
     (nil))
(call_insn 669 668 670 27 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("sem_post") [flags 0x41]  <function_decl 0x7f7cd0fcf000 sem_post>) [0 sem_post S1 A8])
            (const_int 0 [0]))) "function.c":748 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 670 669 671 27 (set (reg:QI 166 [ END.127_80 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":749 -1
     (nil))
(insn 671 670 672 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 166 [ END.127_80 ])
            (const_int 113 [0x71]))) "function.c":749 -1
     (nil))
(jump_insn 672 671 673 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 681)
            (pc))) "function.c":749 -1
     (nil)
 -> 681)
;;  succ:       28 (FALLTHRU)
;;              29

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 673 672 674 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 674 673 675 28 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [21 createplayer+0 S8 A64])) "function.c":751 -1
     (nil))
(insn 675 674 676 28 (set (reg/f:DI 167 [ _81 ])
        (mem/f:DI (reg/f:DI 318) [10 createplayer_89->name1+0 S8 A64])) "function.c":751 -1
     (nil))
(insn 676 675 677 28 (set (reg:DI 5 di)
        (reg/f:DI 167 [ _81 ])) "function.c":751 -1
     (nil))
(call_insn 677 676 678 28 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_unlink") [flags 0x41]  <function_decl 0x7f7cd133cc00 shm_unlink>) [0 shm_unlink S1 A8])
            (const_int 0 [0]))) "function.c":751 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 678 677 679 28 (set (reg/f:DI 168 [ _195 ])
        (const_int 0 [0])) "function.c":752 -1
     (nil))
(jump_insn 679 678 680 28 (set (pc)
        (label_ref 686)) "function.c":752 -1
     (nil)
 -> 686)
;;  succ:       30

(barrier 680 679 681)
;; basic block 29, loop depth 1, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 681 680 682 29 85 (nil) [1 uses])
(note 682 681 684 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(jump_insn 684 682 685 29 (set (pc)
        (label_ref 683)) "function.c":620 -1
     (nil)
 -> 683)
;;  succ:       4 (DFS_BACK)

(barrier 685 684 686)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       28
(code_label 686 685 687 30 86 (nil) [1 uses])
(note 687 686 688 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 688 687 692 30 (set (reg/f:DI 169 [ <retval> ])
        (reg/f:DI 168 [ _195 ])) -1
     (nil))
(insn 692 688 693 30 (set (reg/i:DI 0 ax)
        (reg/f:DI 169 [ <retval> ])) "function.c":756 -1
     (nil))
(insn 693 692 0 30 (use (reg/i:DI 0 ax)) "function.c":756 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function random_return (random_return, funcdef_no=13, decl_uid=6230, cgraph_uid=13, symbol_order=16)

random_return (int low, int upp)
{
  int D.6673;
  int _1;
  int _2;
  int _3;
  int _4;
  int _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = rand ();
  _2 = upp_7(D) - low_8(D);
  _3 = _2 + 1;
  _4 = _1 % _3;
  _9 = low_8(D) + _4;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _9;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 7 (upp_7(D) - 7 )
Partition 8 (low_8(D) - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10(D) - 10 )


Coalescible Partition map 

Partition 0, base 0 (upp_7(D) - 7 )
Partition 1, base 1 (low_8(D) - 8 )
Partition 2, base 2 (_10(D) - 10 )


Partition map 

Partition 0 (upp_7(D) - 7 )
Partition 1 (low_8(D) - 8 )
Partition 2 (_10(D) - 10 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (upp_7(D) - 7 )
Partition 1 (low_8(D) - 8 )
Partition 2 (_10(D) - 10 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (upp_7(D) - 7 )
Partition 5 (low_8(D) - 8 )
Partition 6 (_9 - 9 )
Partition 7 (_10(D) - 10 )

random_return (int low, int upp)
{
  int D.6673;
  int _1;
  int _2;
  int _3;
  int _4;
  int _9;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = rand ();
  _2 = upp_7(D) - low_8(D);
  _3 = _2 + 1;
  _4 = _1 % _3;
  _9 = low_8(D) + _4;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _9;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = rand ();

(call_insn 7 6 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f7cd0fe1600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "function.c":760 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 8 7 0 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "function.c":760 -1
     (nil))

;; _2 = upp_7(D) - low_8(D);

(insn 9 8 10 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":760 -1
     (nil))

(insn 10 9 0 (parallel [
            (set (reg:SI 88 [ _2 ])
                (minus:SI (reg:SI 93)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))

;; _3 = _2 + 1;

(insn 11 10 0 (parallel [
            (set (reg:SI 89 [ _3 ])
                (plus:SI (reg:SI 88 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (nil))

;; _4 = _1 % _3;

(insn 12 11 13 (parallel [
            (set (reg:SI 95)
                (div:SI (reg:SI 87 [ _1 ])
                    (reg:SI 89 [ _3 ])))
            (set (reg:SI 94)
                (mod:SI (reg:SI 87 [ _1 ])
                    (reg:SI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (nil))

(insn 13 12 0 (set (reg:SI 90 [ _4 ])
        (reg:SI 94)) "function.c":760 -1
     (nil))

;; _9 = low_8(D) + _4;

(insn 14 13 15 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":760 -1
     (nil))

(insn 15 14 0 (parallel [
            (set (reg:SI 91 [ _9 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (reg:SI 96)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ _4 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 16 15 17 90 (nil) [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; return _9;

(insn 18 17 19 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _9 ])) "function.c":760 -1
     (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 0)) "function.c":760 -1
     (nil))

(barrier 20 19 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 19.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (reg:SI 5 di [ low ])) "function.c":759 -1
     (nil))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (reg:SI 4 si [ upp ])) "function.c":759 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 7 4 8 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f7cd0fe1600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "function.c":760 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 8 7 9 2 (set (reg:SI 87 [ _1 ])
        (reg:SI 0 ax)) "function.c":760 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 93)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":760 -1
     (nil))
(insn 10 9 11 2 (parallel [
            (set (reg:SI 88 [ _2 ])
                (minus:SI (reg:SI 93)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))
(insn 11 10 12 2 (parallel [
            (set (reg:SI 89 [ _3 ])
                (plus:SI (reg:SI 88 [ _2 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (nil))
(insn 12 11 13 2 (parallel [
            (set (reg:SI 95)
                (div:SI (reg:SI 87 [ _1 ])
                    (reg:SI 89 [ _3 ])))
            (set (reg:SI 94)
                (mod:SI (reg:SI 87 [ _1 ])
                    (reg:SI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 90 [ _4 ])
        (reg:SI 94)) "function.c":760 -1
     (nil))
(insn 14 13 15 2 (set (reg:SI 96)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":760 -1
     (nil))
(insn 15 14 18 2 (parallel [
            (set (reg:SI 91 [ _9 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (reg:SI 96)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":760 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 90 [ _4 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))
(insn 18 15 22 2 (set (reg:SI 92 [ <retval> ])
        (reg:SI 91 [ _9 ])) "function.c":760 -1
     (nil))
(insn 22 18 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 92 [ <retval> ])) "function.c":761 -1
     (nil))
(insn 23 22 0 2 (use (reg/i:SI 0 ax)) "function.c":761 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function player_set (player_set, funcdef_no=14, decl_uid=6232, cgraph_uid=14, symbol_order=17)

player_set (char * pom)
{
  struct player_info * playerinfo;
  int fd;
  struct player_info * D.6677;
  struct player_info * _1;
  struct player_info * _7;
  struct player_info * _10;
  struct player_info * _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  fd_6 = shm_open (pom_4(D), 66, 511);
  if (fd_6 == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _7 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  playerinfo_9 = mmap (0B, 22576, 3, 1, fd_6, 0);
  if (playerinfo_9 == -1B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _10 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _11 = playerinfo_9;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  # _1 = PHI <_7(3), _10(5), _11(6)>
<L4>:
  return _1;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 4 (pom_4(D) - 4 )
Partition 6 (fd_6 - 6 )
Partition 7 (_7 - 7 )
Partition 9 (playerinfo_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12(D) - 12 )


Coalescible Partition map 

Partition 0, base 0 (_1 - 1 7 10 11 )
Partition 1, base 1 (pom_4(D) - 4 )
Partition 5, base 2 (_12(D) - 12 )


Partition map 

Partition 0 (_1 - 1 )
Partition 1 (pom_4(D) - 4 )
Partition 2 (_7 - 7 )
Partition 3 (_10 - 10 )
Partition 4 (_11 - 11 )
Partition 5 (_12(D) - 12 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(10000, 0) _1 <-> _7
(10000, 0) _1 <-> _10
(10000, 0) _1 <-> _11

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (pom_4(D) - 4 )
Partition 2 (_7 - 7 )
Partition 3 (_10 - 10 )
Partition 4 (_11 - 11 )
Partition 5 (_12(D) - 12 )

Coalesce list: (1)_1 & (7)_7 [map: 0, 2] : Success -> 0
Coalesce list: (1)_1 & (10)_10 [map: 0, 3] : Success -> 0
Coalesce list: (1)_1 & (11)_11 [map: 0, 4] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 7 10 11 )
Partition 1 (pom_4(D) - 4 )
Partition 2 (fd_6 - 6 )
Partition 3 (playerinfo_9 - 9 )
Partition 4 (_12(D) - 12 )

player_set (char * pom)
{
  struct player_info * playerinfo;
  int fd;
  struct player_info * D.6677;
  struct player_info * _1;
  struct player_info * _7;
  struct player_info * _10;
  struct player_info * _11;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  fd_6 = shm_open (pom_4(D), 66, 511);
  if (fd_6 == -1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  _7 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 4, loop depth 0
;;    pred:       2
  playerinfo_9 = mmap (0B, 22576, 3, 1, fd_6, 0);
  if (playerinfo_9 == -1B)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _10 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 0
;;    pred:       4
  _11 = playerinfo_9;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       3
;;                5
;;                6
  # _1 = PHI <_7(3), _10(5), _11(6)>
<L4>:
  return _1;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; fd_6 = shm_open (pom_4(D), 66, 511);

(insn 6 5 7 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 pom+0 S8 A64])) "function.c":765 -1
     (nil))

(insn 7 6 8 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":765 -1
     (nil))

(insn 8 7 9 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "function.c":765 -1
     (nil))

(insn 9 8 10 (set (reg:DI 5 di)
        (reg:DI 89)) "function.c":765 -1
     (nil))

(call_insn 10 9 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f7cd133cb00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "function.c":765 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

(insn 11 10 12 (set (reg:SI 90)
        (reg:SI 0 ax)) "function.c":765 -1
     (nil))

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 fd+0 S4 A32])
        (reg:SI 90)) "function.c":765 -1
     (nil))

;; if (fd_6 == -1)

(insn 13 12 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 fd+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "function.c":766 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":766 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _7 = 0B;

(insn 16 15 0 (set (reg/f:DI 87 [ _1 ])
        (const_int 0 [0])) "function.c":768 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 4

;; 

(code_label 19 18 20 92 (nil) [0 uses])

(note 20 19 0 NOTE_INSN_BASIC_BLOCK)

;; playerinfo_9 = mmap (0B, 22576, 3, 1, fd_6, 0);

(insn 21 20 22 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 fd+0 S4 A32])) "function.c":770 -1
     (nil))

(insn 22 21 23 (set (reg:DI 38 r9)
        (const_int 0 [0])) "function.c":770 -1
     (nil))

(insn 23 22 24 (set (reg:SI 37 r8)
        (reg:SI 91)) "function.c":770 -1
     (nil))

(insn 24 23 25 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "function.c":770 -1
     (nil))

(insn 25 24 26 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":770 -1
     (nil))

(insn 26 25 27 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":770 -1
     (nil))

(insn 27 26 28 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":770 -1
     (nil))

(call_insn 28 27 29 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f7cd133c000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "function.c":770 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))

(insn 29 28 30 (set (reg:DI 92)
        (reg:DI 0 ax)) "function.c":770 -1
     (nil))

(insn 30 29 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [14 playerinfo+0 S8 A64])
        (reg:DI 92)) "function.c":770 -1
     (nil))

;; if (playerinfo_9 == -1B)

(insn 31 30 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [14 playerinfo+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) "function.c":772 -1
     (nil))

(jump_insn 32 31 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":772 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _10 = 0B;

(insn 34 33 0 (set (reg/f:DI 87 [ _1 ])
        (const_int 0 [0])) "function.c":774 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 6

;; 

(code_label 37 36 38 94 (nil) [0 uses])

(note 38 37 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = playerinfo_9;

(insn 39 38 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [14 playerinfo+0 S8 A64])) "function.c":776 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 40 39 41 93 (nil) [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; return _1;

(insn 42 41 43 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _1 ])) -1
     (nil))

(jump_insn 43 42 44 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 44 43 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 43.
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 pom+0 S8 A64])
        (reg:DI 5 di [ pom ])) "function.c":764 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [10 pom+0 S8 A64])) "function.c":765 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 1 dx)
        (const_int 511 [0x1ff])) "function.c":765 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 4 si)
        (const_int 66 [0x42])) "function.c":765 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (reg:DI 89)) "function.c":765 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("shm_open") [flags 0x41]  <function_decl 0x7f7cd133cb00 shm_open>) [0 shm_open S1 A8])
            (const_int 0 [0]))) "function.c":765 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 11 10 12 2 (set (reg:SI 90)
        (reg:SI 0 ax)) "function.c":765 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 fd+0 S4 A32])
        (reg:SI 90)) "function.c":765 -1
     (nil))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 fd+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))) "function.c":766 -1
     (nil))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 19)
            (pc))) "function.c":766 -1
     (nil)
 -> 19)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 15 14 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (reg/f:DI 87 [ _1 ])
        (const_int 0 [0])) "function.c":768 -1
     (nil))
(jump_insn 17 16 18 4 (set (pc)
        (label_ref 40)) "function.c":768 -1
     (nil)
 -> 40)
;;  succ:       8

(barrier 18 17 19)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 19 18 20 5 92 (nil) [1 uses])
(note 20 19 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 fd+0 S4 A32])) "function.c":770 -1
     (nil))
(insn 22 21 23 5 (set (reg:DI 38 r9)
        (const_int 0 [0])) "function.c":770 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 37 r8)
        (reg:SI 91)) "function.c":770 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 2 cx)
        (const_int 1 [0x1])) "function.c":770 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":770 -1
     (nil))
(insn 26 25 27 5 (set (reg:DI 4 si)
        (const_int 22576 [0x5830])) "function.c":770 -1
     (nil))
(insn 27 26 28 5 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":770 -1
     (nil))
(call_insn 28 27 29 5 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("mmap") [flags 0x41]  <function_decl 0x7f7cd133c000 mmap>) [0 mmap S1 A8])
            (const_int 0 [0]))) "function.c":770 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (expr_list:SI (use (reg:SI 37 r8))
                        (expr_list:DI (use (reg:DI 38 r9))
                            (nil))))))))
(insn 29 28 30 5 (set (reg:DI 92)
        (reg:DI 0 ax)) "function.c":770 -1
     (nil))
(insn 30 29 31 5 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [14 playerinfo+0 S8 A64])
        (reg:DI 92)) "function.c":770 -1
     (nil))
(insn 31 30 32 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [14 playerinfo+0 S8 A64])
            (const_int -1 [0xffffffffffffffff]))) "function.c":772 -1
     (nil))
(jump_insn 32 31 33 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 37)
            (pc))) "function.c":772 -1
     (nil)
 -> 37)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:DI 87 [ _1 ])
        (const_int 0 [0])) "function.c":774 -1
     (nil))
(jump_insn 35 34 36 6 (set (pc)
        (label_ref 40)) "function.c":774 -1
     (nil)
 -> 40)
;;  succ:       8

(barrier 36 35 37)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 37 36 38 7 94 (nil) [1 uses])
(note 38 37 39 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 7 (set (reg/f:DI 87 [ _1 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [14 playerinfo+0 S8 A64])) "function.c":776 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              6
;;              7 (FALLTHRU)
(code_label 40 39 41 8 93 (nil) [2 uses])
(note 41 40 42 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 46 8 (set (reg/f:DI 88 [ <retval> ])
        (reg/f:DI 87 [ _1 ])) -1
     (nil))
(insn 46 42 47 8 (set (reg/i:DI 0 ax)
        (reg/f:DI 88 [ <retval> ])) "function.c":777 -1
     (nil))
(insn 47 46 0 8 (use (reg/i:DI 0 ax)) "function.c":777 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function step1_krzak (step1_krzak, funcdef_no=15, decl_uid=6234, cgraph_uid=15, symbol_order=18)

step1_krzak (struct serwer_info * serwer)
{
  int krzok;
  int D.6683;
  char * * _1;
  struct player_info * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  struct player_info * _8;
  int _9;
  sizetype _10;
  char * _11;
  char _12;
  int _18;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  krzok_14 = 0;
  _1 = serwer_16(D)->mapa;
  _2 = serwer_16(D)->player1;
  _3 = _2->y_current;
  _4 = (long unsigned int) _3;
  _5 = _4 * 8;
  _6 = _1 + _5;
  _7 = *_6;
  _8 = serwer_16(D)->player1;
  _9 = _8->x_current;
  _10 = (sizetype) _9;
  _11 = _7 + _10;
  _12 = *_11;
  if (_12 == 35)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  krzok_17 = 2;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # krzok_13 = PHI <krzok_14(2), krzok_17(3)>
  _18 = krzok_13;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _18;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (krzok_13 - 13 )
Partition 14 (krzok_14 - 14 )
Partition 16 (serwer_16(D) - 16 )
Partition 17 (krzok_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19(D) - 19 )


Coalescible Partition map 

Partition 0, base 0 (krzok_13 - 13 14 17 )
Partition 2, base 1 (serwer_16(D) - 16 )
Partition 4, base 2 (_19(D) - 19 )


Partition map 

Partition 0 (krzok_13 - 13 )
Partition 1 (krzok_14 - 14 )
Partition 2 (serwer_16(D) - 16 )
Partition 3 (krzok_17 - 17 )
Partition 4 (_19(D) - 19 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) krzok_13 <-> krzok_14
(2147483646, 0) krzok_13 <-> krzok_17

Partition map 

Partition 0 (krzok_13 - 13 )
Partition 1 (krzok_14 - 14 )
Partition 2 (serwer_16(D) - 16 )
Partition 3 (krzok_17 - 17 )
Partition 4 (_19(D) - 19 )

Coalesce list: (13)krzok_13 & (14)krzok_14 [map: 0, 1] : Success -> 0
Coalesce list: (13)krzok_13 & (17)krzok_17 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (krzok_13 - 13 14 17 )
Partition 13 (serwer_16(D) - 16 )
Partition 14 (_18 - 18 )
Partition 15 (_19(D) - 19 )

step1_krzak (struct serwer_info * serwer)
{
  int krzok;
  int D.6683;
  char * * _1;
  struct player_info * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  struct player_info * _8;
  int _9;
  sizetype _10;
  char * _11;
  char _12;
  int _18;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  krzok_14 = 0;
  _1 = serwer_16(D)->mapa;
  _2 = serwer_16(D)->player1;
  _3 = _2->y_current;
  _4 = (long unsigned int) _3;
  _5 = _4 * 8;
  _6 = _1 + _5;
  _7 = *_6;
  _8 = serwer_16(D)->player1;
  _9 = _8->x_current;
  _10 = (sizetype) _9;
  _11 = _7 + _10;
  _12 = *_11;
  if (_12 == 35)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  krzok_17 = 2;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # krzok_13 = PHI <krzok_14(2), krzok_17(3)>
  _18 = krzok_13;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _18;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; krzok_14 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 0 [0])) "function.c":781 -1
     (nil))

;; _1 = serwer_16(D)->mapa;

(insn 7 6 8 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":782 -1
     (nil))

(insn 8 7 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 16 [0x10])) [9 serwer_16(D)->mapa+0 S8 A64])) "function.c":782 -1
     (nil))

;; _2 = serwer_16(D)->player1;

(insn 9 8 10 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":782 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 32 [0x20])) [14 serwer_16(D)->player1+0 S8 A64])) "function.c":782 -1
     (nil))

;; _3 = _2->y_current;

(insn 11 10 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":782 -1
     (nil))

;; _4 = (long unsigned int) _3;

(insn 12 11 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 89 [ _3 ]))) "function.c":782 -1
     (nil))

;; _5 = _4 * 8;

(insn 13 12 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":782 -1
     (nil))

;; _6 = _1 + _5;

(insn 14 13 0 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":782 -1
     (nil))

;; _7 = *_6;

(insn 15 14 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":782 -1
     (nil))

;; _8 = serwer_16(D)->player1;

(insn 16 15 17 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":782 -1
     (nil))

(insn 17 16 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 32 [0x20])) [14 serwer_16(D)->player1+0 S8 A64])) "function.c":782 -1
     (nil))

;; _9 = _8->x_current;

(insn 18 17 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 12 [0xc])) [3 _8->x_current+0 S4 A32])) "function.c":782 -1
     (nil))

;; _10 = (sizetype) _9;

(insn 19 18 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "function.c":782 -1
     (nil))

;; _11 = _7 + _10;

(insn 20 19 0 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":782 -1
     (nil))

;; _12 = *_11;

(insn 21 20 0 (set (reg:QI 98 [ _12 ])
        (mem:QI (reg/f:DI 97 [ _11 ]) [0 *_11+0 S1 A8])) "function.c":782 -1
     (nil))

;; if (_12 == 35)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _12 ])
            (const_int 35 [0x23]))) "function.c":782 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":782 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; krzok_17 = 2;

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 2 [0x2])) "function.c":784 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 26 25 27 96 (nil) [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _18 = krzok_13;

(insn 28 27 0 (set (reg:SI 99 [ _18 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])) "function.c":787 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 29 28 30 97 (nil) [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; return _18;

(insn 31 30 32 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _18 ])) "function.c":787 -1
     (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 0)) "function.c":787 -1
     (nil))

(barrier 33 32 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 32.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":780 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 0 [0])) "function.c":781 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 16 [0x10])) [9 serwer_16(D)->mapa+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 32 [0x20])) [14 serwer_16(D)->player1+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":782 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 89 [ _3 ]))) "function.c":782 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":782 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":782 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 32 [0x20])) [14 serwer_16(D)->player1+0 S8 A64])) "function.c":782 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 12 [0xc])) [3 _8->x_current+0 S4 A32])) "function.c":782 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "function.c":782 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":782 -1
     (nil))
(insn 21 20 22 2 (set (reg:QI 98 [ _12 ])
        (mem:QI (reg/f:DI 97 [ _11 ]) [0 *_11+0 S1 A8])) "function.c":782 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _12 ])
            (const_int 35 [0x23]))) "function.c":782 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "function.c":782 -1
     (nil)
 -> 26)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 2 [0x2])) "function.c":784 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 26 25 27 5 96 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 5 (set (reg:SI 99 [ _18 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])) "function.c":787 -1
     (nil))
(insn 31 28 35 5 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _18 ])) "function.c":787 -1
     (nil))
(insn 35 31 36 5 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) "function.c":788 -1
     (nil))
(insn 36 35 0 5 (use (reg/i:SI 0 ax)) "function.c":788 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function step2_krzak (step2_krzak, funcdef_no=16, decl_uid=6236, cgraph_uid=16, symbol_order=19)

step2_krzak (struct serwer_info * serwer)
{
  int krzok;
  int D.6687;
  char * * _1;
  struct player_info * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  struct player_info * _8;
  int _9;
  sizetype _10;
  char * _11;
  char _12;
  int _18;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  krzok_14 = 0;
  _1 = serwer_16(D)->mapa;
  _2 = serwer_16(D)->player2;
  _3 = _2->y_current;
  _4 = (long unsigned int) _3;
  _5 = _4 * 8;
  _6 = _1 + _5;
  _7 = *_6;
  _8 = serwer_16(D)->player2;
  _9 = _8->x_current;
  _10 = (sizetype) _9;
  _11 = _7 + _10;
  _12 = *_11;
  if (_12 == 35)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  krzok_17 = 2;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # krzok_13 = PHI <krzok_14(2), krzok_17(3)>
  _18 = krzok_13;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _18;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (krzok_13 - 13 )
Partition 14 (krzok_14 - 14 )
Partition 16 (serwer_16(D) - 16 )
Partition 17 (krzok_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19(D) - 19 )


Coalescible Partition map 

Partition 0, base 0 (krzok_13 - 13 14 17 )
Partition 2, base 1 (serwer_16(D) - 16 )
Partition 4, base 2 (_19(D) - 19 )


Partition map 

Partition 0 (krzok_13 - 13 )
Partition 1 (krzok_14 - 14 )
Partition 2 (serwer_16(D) - 16 )
Partition 3 (krzok_17 - 17 )
Partition 4 (_19(D) - 19 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) krzok_13 <-> krzok_14
(2147483646, 0) krzok_13 <-> krzok_17

Partition map 

Partition 0 (krzok_13 - 13 )
Partition 1 (krzok_14 - 14 )
Partition 2 (serwer_16(D) - 16 )
Partition 3 (krzok_17 - 17 )
Partition 4 (_19(D) - 19 )

Coalesce list: (13)krzok_13 & (14)krzok_14 [map: 0, 1] : Success -> 0
Coalesce list: (13)krzok_13 & (17)krzok_17 [map: 0, 3] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (krzok_13 - 13 14 17 )
Partition 13 (serwer_16(D) - 16 )
Partition 14 (_18 - 18 )
Partition 15 (_19(D) - 19 )

step2_krzak (struct serwer_info * serwer)
{
  int krzok;
  int D.6687;
  char * * _1;
  struct player_info * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  struct player_info * _8;
  int _9;
  sizetype _10;
  char * _11;
  char _12;
  int _18;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  krzok_14 = 0;
  _1 = serwer_16(D)->mapa;
  _2 = serwer_16(D)->player2;
  _3 = _2->y_current;
  _4 = (long unsigned int) _3;
  _5 = _4 * 8;
  _6 = _1 + _5;
  _7 = *_6;
  _8 = serwer_16(D)->player2;
  _9 = _8->x_current;
  _10 = (sizetype) _9;
  _11 = _7 + _10;
  _12 = *_11;
  if (_12 == 35)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  krzok_17 = 2;
;;    succ:       4

;;   basic block 4, loop depth 0
;;    pred:       2
;;                3
  # krzok_13 = PHI <krzok_14(2), krzok_17(3)>
  _18 = krzok_13;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       4
<L2>:
  return _18;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; krzok_14 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 0 [0])) "function.c":792 -1
     (nil))

;; _1 = serwer_16(D)->mapa;

(insn 7 6 8 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":793 -1
     (nil))

(insn 8 7 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 16 [0x10])) [9 serwer_16(D)->mapa+0 S8 A64])) "function.c":793 -1
     (nil))

;; _2 = serwer_16(D)->player2;

(insn 9 8 10 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":793 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 40 [0x28])) [14 serwer_16(D)->player2+0 S8 A64])) "function.c":793 -1
     (nil))

;; _3 = _2->y_current;

(insn 11 10 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":793 -1
     (nil))

;; _4 = (long unsigned int) _3;

(insn 12 11 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 89 [ _3 ]))) "function.c":793 -1
     (nil))

;; _5 = _4 * 8;

(insn 13 12 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":793 -1
     (nil))

;; _6 = _1 + _5;

(insn 14 13 0 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":793 -1
     (nil))

;; _7 = *_6;

(insn 15 14 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":793 -1
     (nil))

;; _8 = serwer_16(D)->player2;

(insn 16 15 17 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":793 -1
     (nil))

(insn 17 16 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 40 [0x28])) [14 serwer_16(D)->player2+0 S8 A64])) "function.c":793 -1
     (nil))

;; _9 = _8->x_current;

(insn 18 17 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 12 [0xc])) [3 _8->x_current+0 S4 A32])) "function.c":793 -1
     (nil))

;; _10 = (sizetype) _9;

(insn 19 18 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "function.c":793 -1
     (nil))

;; _11 = _7 + _10;

(insn 20 19 0 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":793 -1
     (nil))

;; _12 = *_11;

(insn 21 20 0 (set (reg:QI 98 [ _12 ])
        (mem:QI (reg/f:DI 97 [ _11 ]) [0 *_11+0 S1 A8])) "function.c":793 -1
     (nil))

;; if (_12 == 35)

(insn 22 21 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _12 ])
            (const_int 35 [0x23]))) "function.c":793 -1
     (nil))

(jump_insn 23 22 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":793 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; krzok_17 = 2;

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 2 [0x2])) "function.c":795 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 26 25 27 99 (nil) [0 uses])

(note 27 26 0 NOTE_INSN_BASIC_BLOCK)

;; _18 = krzok_13;

(insn 28 27 0 (set (reg:SI 99 [ _18 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])) "function.c":798 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; <L2>:

(code_label 29 28 30 100 (nil) [0 uses])

(note 30 29 0 NOTE_INSN_BASIC_BLOCK)

;; return _18;

(insn 31 30 32 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _18 ])) "function.c":798 -1
     (nil))

(jump_insn 32 31 33 (set (pc)
        (label_ref 0)) "function.c":798 -1
     (nil))

(barrier 33 32 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Removing jump 32.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":791 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 0 [0])) "function.c":792 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 101)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 101)
                (const_int 16 [0x10])) [9 serwer_16(D)->mapa+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 102)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 102)
                (const_int 40 [0x28])) [14 serwer_16(D)->player2+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":793 -1
     (nil))
(insn 12 11 13 2 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 89 [ _3 ]))) "function.c":793 -1
     (nil))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":793 -1
     (nil))
(insn 14 13 15 2 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 87 [ _1 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":793 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 103)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 103)
                (const_int 40 [0x28])) [14 serwer_16(D)->player2+0 S8 A64])) "function.c":793 -1
     (nil))
(insn 18 17 19 2 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 12 [0xc])) [3 _8->x_current+0 S4 A32])) "function.c":793 -1
     (nil))
(insn 19 18 20 2 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "function.c":793 -1
     (nil))
(insn 20 19 21 2 (parallel [
            (set (reg/f:DI 97 [ _11 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":793 -1
     (nil))
(insn 21 20 22 2 (set (reg:QI 98 [ _12 ])
        (mem:QI (reg/f:DI 97 [ _11 ]) [0 *_11+0 S1 A8])) "function.c":793 -1
     (nil))
(insn 22 21 23 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 98 [ _12 ])
            (const_int 35 [0x23]))) "function.c":793 -1
     (nil))
(jump_insn 23 22 24 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 26)
            (pc))) "function.c":793 -1
     (nil)
 -> 26)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 24 23 25 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])
        (const_int 2 [0x2])) "function.c":795 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              4 (FALLTHRU)
(code_label 26 25 27 5 99 (nil) [1 uses])
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 31 5 (set (reg:SI 99 [ _18 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 krzok+0 S4 A32])) "function.c":798 -1
     (nil))
(insn 31 28 35 5 (set (reg:SI 100 [ <retval> ])
        (reg:SI 99 [ _18 ])) "function.c":798 -1
     (nil))
(insn 35 31 36 5 (set (reg/i:SI 0 ax)
        (reg:SI 100 [ <retval> ])) "function.c":799 -1
     (nil))
(insn 36 35 0 5 (use (reg/i:SI 0 ax)) "function.c":799 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function step1 (step1, funcdef_no=17, decl_uid=6238, cgraph_uid=17, symbol_order=20)

step1 (struct serwer_info * serwer)
{
  int D.6698;
  struct player_info * _1;
  char _2;
  int _3;
  char * * _4;
  struct player_info * _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  sizetype _9;
  char * * _10;
  char * _11;
  struct player_info * _12;
  int _13;
  sizetype _14;
  char * _15;
  char _16;
  struct player_info * _17;
  int _18;
  int _19;
  struct player_info * _20;
  char * * _21;
  struct player_info * _22;
  int _23;
  long unsigned int _24;
  long unsigned int _25;
  char * * _26;
  char * _27;
  struct player_info * _28;
  int _29;
  sizetype _30;
  sizetype _31;
  char * _32;
  char _33;
  struct player_info * _34;
  int _35;
  int _36;
  struct player_info * _37;
  char * * _38;
  struct player_info * _39;
  int _40;
  sizetype _41;
  sizetype _42;
  sizetype _43;
  char * * _44;
  char * _45;
  struct player_info * _46;
  int _47;
  sizetype _48;
  char * _49;
  char _50;
  struct player_info * _51;
  int _52;
  int _53;
  struct player_info * _54;
  char * * _55;
  struct player_info * _56;
  int _57;
  long unsigned int _58;
  long unsigned int _59;
  char * * _60;
  char * _61;
  struct player_info * _62;
  int _63;
  sizetype _64;
  sizetype _65;
  char * _66;
  char _67;
  struct player_info * _68;
  int _69;
  int _70;
  struct player_info * _71;
  int _91;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_78(D)->player1;
  _2 = _1->request;
  _3 = (int) _2;
  if (_3 == 100)
    goto <bb 16>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       3
;;                16

;;   basic block 3, loop depth 0
;;    pred:       2
  if (_3 > 100)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  if (_3 == 97)
    goto <bb 10>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                10

;;   basic block 5, loop depth 0
;;    pred:       3
  if (_3 == 115)
    goto <bb 13>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       6
;;                13

;;   basic block 6, loop depth 0
;;    pred:       5
  if (_3 == 119)
    goto <bb 7>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _4 = serwer_78(D)->mapa;
  _5 = serwer_78(D)->player1;
  _6 = _5->y_current;
  _7 = (long unsigned int) _6;
  _8 = _7 * 8;
  _9 = _8 + 18446744073709551608;
  _10 = _4 + _9;
  _11 = *_10;
  _12 = serwer_78(D)->player1;
  _13 = _12->x_current;
  _14 = (sizetype) _13;
  _15 = _11 + _14;
  _16 = *_15;
  if (_16 != 77)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  _17 = serwer_78(D)->player1;
  _18 = _17->y_current;
  _19 = _18 + -1;
  _17->y_current = _19;
  _20 = serwer_78(D)->player1;
  _20->request = 48;
  END = 48;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 10, loop depth 0
;;    pred:       4
  _21 = serwer_78(D)->mapa;
  _22 = serwer_78(D)->player1;
  _23 = _22->y_current;
  _24 = (long unsigned int) _23;
  _25 = _24 * 8;
  _26 = _21 + _25;
  _27 = *_26;
  _28 = serwer_78(D)->player1;
  _29 = _28->x_current;
  _30 = (sizetype) _29;
  _31 = _30 + 18446744073709551615;
  _32 = _27 + _31;
  _33 = *_32;
  if (_33 != 77)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _34 = serwer_78(D)->player1;
  _35 = _34->x_current;
  _36 = _35 + -1;
  _34->x_current = _36;
  _37 = serwer_78(D)->player1;
  _37->request = 48;
  END = 48;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 13, loop depth 0
;;    pred:       5
  _38 = serwer_78(D)->mapa;
  _39 = serwer_78(D)->player1;
  _40 = _39->y_current;
  _41 = (sizetype) _40;
  _42 = _41 + 1;
  _43 = _42 * 8;
  _44 = _38 + _43;
  _45 = *_44;
  _46 = serwer_78(D)->player1;
  _47 = _46->x_current;
  _48 = (sizetype) _47;
  _49 = _45 + _48;
  _50 = *_49;
  if (_50 != 77)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  _51 = serwer_78(D)->player1;
  _52 = _51->y_current;
  _53 = _52 + 1;
  _51->y_current = _53;
  _54 = serwer_78(D)->player1;
  _54->request = 48;
  END = 48;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 16, loop depth 0
;;    pred:       2
  _55 = serwer_78(D)->mapa;
  _56 = serwer_78(D)->player1;
  _57 = _56->y_current;
  _58 = (long unsigned int) _57;
  _59 = _58 * 8;
  _60 = _55 + _59;
  _61 = *_60;
  _62 = serwer_78(D)->player1;
  _63 = _62->x_current;
  _64 = (sizetype) _63;
  _65 = _64 + 1;
  _66 = _61 + _65;
  _67 = *_66;
  if (_67 != 77)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _68 = serwer_78(D)->player1;
  _69 = _68->x_current;
  _70 = _69 + 1;
  _68->x_current = _70;
  _71 = serwer_78(D)->player1;
  _71->request = 48;
  END = 48;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       6
;;                9
;;                12
;;                15
;;                18
;;                4
  _91 = 0;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       19
<L14>:
  return _91;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 78 (serwer_78(D) - 78 )
Partition 91 (_91 - 91 )
Partition 92 (_92(D) - 92 )


Coalescible Partition map 

Partition 0, base 0 (serwer_78(D) - 78 )
Partition 1, base 1 (_92(D) - 92 )


Partition map 

Partition 0 (serwer_78(D) - 78 )
Partition 1 (_92(D) - 92 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (serwer_78(D) - 78 )
Partition 1 (_92(D) - 92 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (serwer_78(D) - 78 )
Partition 72 (_91 - 91 )
Partition 73 (_92(D) - 92 )

step1 (struct serwer_info * serwer)
{
  int D.6698;
  struct player_info * _1;
  char _2;
  int _3;
  char * * _4;
  struct player_info * _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  sizetype _9;
  char * * _10;
  char * _11;
  struct player_info * _12;
  int _13;
  sizetype _14;
  char * _15;
  char _16;
  struct player_info * _17;
  int _18;
  int _19;
  struct player_info * _20;
  char * * _21;
  struct player_info * _22;
  int _23;
  long unsigned int _24;
  long unsigned int _25;
  char * * _26;
  char * _27;
  struct player_info * _28;
  int _29;
  sizetype _30;
  sizetype _31;
  char * _32;
  char _33;
  struct player_info * _34;
  int _35;
  int _36;
  struct player_info * _37;
  char * * _38;
  struct player_info * _39;
  int _40;
  sizetype _41;
  sizetype _42;
  sizetype _43;
  char * * _44;
  char * _45;
  struct player_info * _46;
  int _47;
  sizetype _48;
  char * _49;
  char _50;
  struct player_info * _51;
  int _52;
  int _53;
  struct player_info * _54;
  char * * _55;
  struct player_info * _56;
  int _57;
  long unsigned int _58;
  long unsigned int _59;
  char * * _60;
  char * _61;
  struct player_info * _62;
  int _63;
  sizetype _64;
  sizetype _65;
  char * _66;
  char _67;
  struct player_info * _68;
  int _69;
  int _70;
  struct player_info * _71;
  int _91;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_78(D)->player1;
  _2 = _1->request;
  _3 = (int) _2;
  if (_3 == 100)
    goto <bb 16>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       3
;;                16

;;   basic block 3, loop depth 0
;;    pred:       2
  if (_3 > 100)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  if (_3 == 97)
    goto <bb 10>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                10

;;   basic block 5, loop depth 0
;;    pred:       3
  if (_3 == 115)
    goto <bb 13>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       6
;;                13

;;   basic block 6, loop depth 0
;;    pred:       5
  if (_3 == 119)
    goto <bb 7>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _4 = serwer_78(D)->mapa;
  _5 = serwer_78(D)->player1;
  _6 = _5->y_current;
  _7 = (long unsigned int) _6;
  _8 = _7 * 8;
  _9 = _8 + 18446744073709551608;
  _10 = _4 + _9;
  _11 = *_10;
  _12 = serwer_78(D)->player1;
  _13 = _12->x_current;
  _14 = (sizetype) _13;
  _15 = _11 + _14;
  _16 = *_15;
  if (_16 != 77)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  _17 = serwer_78(D)->player1;
  _18 = _17->y_current;
  _19 = _18 + -1;
  _17->y_current = _19;
  _20 = serwer_78(D)->player1;
  _20->request = 48;
  END = 48;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 10, loop depth 0
;;    pred:       4
  _21 = serwer_78(D)->mapa;
  _22 = serwer_78(D)->player1;
  _23 = _22->y_current;
  _24 = (long unsigned int) _23;
  _25 = _24 * 8;
  _26 = _21 + _25;
  _27 = *_26;
  _28 = serwer_78(D)->player1;
  _29 = _28->x_current;
  _30 = (sizetype) _29;
  _31 = _30 + 18446744073709551615;
  _32 = _27 + _31;
  _33 = *_32;
  if (_33 != 77)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _34 = serwer_78(D)->player1;
  _35 = _34->x_current;
  _36 = _35 + -1;
  _34->x_current = _36;
  _37 = serwer_78(D)->player1;
  _37->request = 48;
  END = 48;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 13, loop depth 0
;;    pred:       5
  _38 = serwer_78(D)->mapa;
  _39 = serwer_78(D)->player1;
  _40 = _39->y_current;
  _41 = (sizetype) _40;
  _42 = _41 + 1;
  _43 = _42 * 8;
  _44 = _38 + _43;
  _45 = *_44;
  _46 = serwer_78(D)->player1;
  _47 = _46->x_current;
  _48 = (sizetype) _47;
  _49 = _45 + _48;
  _50 = *_49;
  if (_50 != 77)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  _51 = serwer_78(D)->player1;
  _52 = _51->y_current;
  _53 = _52 + 1;
  _51->y_current = _53;
  _54 = serwer_78(D)->player1;
  _54->request = 48;
  END = 48;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 16, loop depth 0
;;    pred:       2
  _55 = serwer_78(D)->mapa;
  _56 = serwer_78(D)->player1;
  _57 = _56->y_current;
  _58 = (long unsigned int) _57;
  _59 = _58 * 8;
  _60 = _55 + _59;
  _61 = *_60;
  _62 = serwer_78(D)->player1;
  _63 = _62->x_current;
  _64 = (sizetype) _63;
  _65 = _64 + 1;
  _66 = _61 + _65;
  _67 = *_66;
  if (_67 != 77)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _68 = serwer_78(D)->player1;
  _69 = _68->x_current;
  _70 = _69 + 1;
  _68->x_current = _70;
  _71 = serwer_78(D)->player1;
  _71->request = 48;
  END = 48;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       6
;;                9
;;                12
;;                15
;;                18
;;                4
  _91 = 0;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       19
<L14>:
  return _91;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = serwer_78(D)->player1;

(insn 6 5 7 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":803 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":803 -1
     (nil))

;; _2 = _1->request;

(insn 8 7 0 (set (reg:QI 88 [ _2 ])
        (mem:QI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 40 [0x28])) [0 _1->request+0 S1 A64])) "function.c":803 -1
     (nil))

;; _3 = (int) _2;

(insn 9 8 0 (set (reg:SI 89 [ _3 ])
        (sign_extend:SI (reg:QI 88 [ _2 ]))) "function.c":803 -1
     (nil))

;; if (_3 == 100)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":803 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":803 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (_3 > 100)

(insn 13 12 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":803 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":803 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; if (_3 == 97)

(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 97 [0x61]))) "function.c":803 -1
     (nil))

(jump_insn 17 16 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":803 -1
     (nil))

(note 20 17 18 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 18 20 19 22 (set (pc)
        (label_ref 0)) "function.c":803 -1
     (nil))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 21 19 22 103 (nil) [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; if (_3 == 115)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 115 [0x73]))) "function.c":803 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":803 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; if (_3 == 119)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 119 [0x77]))) "function.c":803 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":803 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _4 = serwer_78(D)->mapa;

(insn 29 28 30 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":806 -1
     (nil))

(insn 30 29 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":806 -1
     (nil))

;; _5 = serwer_78(D)->player1;

(insn 31 30 32 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":806 -1
     (nil))

(insn 32 31 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":806 -1
     (nil))

;; _6 = _5->y_current;

(insn 33 32 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":806 -1
     (nil))

;; _7 = (long unsigned int) _6;

(insn 34 33 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 92 [ _6 ]))) "function.c":806 -1
     (nil))

;; _8 = _7 * 8;

(insn 35 34 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (ashift:DI (reg:DI 93 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))

;; _9 = _8 + 18446744073709551608;

(insn 36 35 0 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))

;; _10 = _4 + _9;

(insn 37 36 0 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))

;; _11 = *_10;

(insn 38 37 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 96 [ _10 ]) [10 *_10+0 S8 A64])) "function.c":806 -1
     (nil))

;; _12 = serwer_78(D)->player1;

(insn 39 38 40 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":806 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":806 -1
     (nil))

;; _13 = _12->x_current;

(insn 41 40 0 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 12 [0xc])) [3 _12->x_current+0 S4 A32])) "function.c":806 -1
     (nil))

;; _14 = (sizetype) _13;

(insn 42 41 0 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "function.c":806 -1
     (nil))

;; _15 = _11 + _14;

(insn 43 42 0 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg/f:DI 97 [ _11 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))

;; _16 = *_15;

(insn 44 43 0 (set (reg:QI 102 [ _16 ])
        (mem:QI (reg/f:DI 101 [ _15 ]) [0 *_15+0 S1 A8])) "function.c":806 -1
     (nil))

;; if (_16 != 77)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _16 ])
            (const_int 77 [0x4d]))) "function.c":806 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":806 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _17 = serwer_78(D)->player1;

(insn 48 47 49 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":808 -1
     (nil))

(insn 49 48 0 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":808 -1
     (nil))

;; _18 = _17->y_current;

(insn 50 49 0 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])) "function.c":808 -1
     (nil))

;; _19 = _18 + -1;

(insn 51 50 0 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":808 -1
     (nil))

;; _17->y_current = _19;

(insn 52 51 0 (set (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])
        (reg:SI 105 [ _19 ])) "function.c":808 -1
     (nil))

;; _20 = serwer_78(D)->player1;

(insn 53 52 54 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":809 -1
     (nil))

(insn 54 53 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":809 -1
     (nil))

;; _20->request = 48;

(insn 55 54 0 (set (mem:QI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 40 [0x28])) [0 _20->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":809 -1
     (nil))

;; END = 48;

(insn 56 55 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":810 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 57 56 58 107 (nil) [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 10

;; 

(code_label 61 60 62 104 (nil) [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = serwer_78(D)->mapa;

(insn 63 62 64 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":814 -1
     (nil))

(insn 64 63 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 166)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":814 -1
     (nil))

;; _22 = serwer_78(D)->player1;

(insn 65 64 66 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":814 -1
     (nil))

(insn 66 65 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":814 -1
     (nil))

;; _23 = _22->y_current;

(insn 67 66 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 16 [0x10])) [3 _22->y_current+0 S4 A64])) "function.c":814 -1
     (nil))

;; _24 = (long unsigned int) _23;

(insn 68 67 0 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "function.c":814 -1
     (nil))

;; _25 = _24 * 8;

(insn 69 68 0 (parallel [
            (set (reg:DI 111 [ _25 ])
                (ashift:DI (reg:DI 110 [ _24 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))

;; _26 = _21 + _25;

(insn 70 69 0 (parallel [
            (set (reg/f:DI 112 [ _26 ])
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 111 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))

;; _27 = *_26;

(insn 71 70 0 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (reg/f:DI 112 [ _26 ]) [10 *_26+0 S8 A64])) "function.c":814 -1
     (nil))

;; _28 = serwer_78(D)->player1;

(insn 72 71 73 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":814 -1
     (nil))

(insn 73 72 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":814 -1
     (nil))

;; _29 = _28->x_current;

(insn 74 73 0 (set (reg:SI 115 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 114 [ _28 ])
                (const_int 12 [0xc])) [3 _28->x_current+0 S4 A32])) "function.c":814 -1
     (nil))

;; _30 = (sizetype) _29;

(insn 75 74 0 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "function.c":814 -1
     (nil))

;; _31 = _30 + 18446744073709551615;

(insn 76 75 0 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))

;; _32 = _27 + _31;

(insn 77 76 0 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg/f:DI 113 [ _27 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))

;; _33 = *_32;

(insn 78 77 0 (set (reg:QI 119 [ _33 ])
        (mem:QI (reg/f:DI 118 [ _32 ]) [0 *_32+0 S1 A8])) "function.c":814 -1
     (nil))

;; if (_33 != 77)

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _33 ])
            (const_int 77 [0x4d]))) "function.c":814 -1
     (nil))

(jump_insn 80 79 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":814 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _34 = serwer_78(D)->player1;

(insn 82 81 83 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":816 -1
     (nil))

(insn 83 82 0 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":816 -1
     (nil))

;; _35 = _34->x_current;

(insn 84 83 0 (set (reg:SI 121 [ _35 ])
        (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 12 [0xc])) [3 _34->x_current+0 S4 A32])) "function.c":816 -1
     (nil))

;; _36 = _35 + -1;

(insn 85 84 0 (parallel [
            (set (reg:SI 122 [ _36 ])
                (plus:SI (reg:SI 121 [ _35 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":816 -1
     (nil))

;; _34->x_current = _36;

(insn 86 85 0 (set (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 12 [0xc])) [3 _34->x_current+0 S4 A32])
        (reg:SI 122 [ _36 ])) "function.c":816 -1
     (nil))

;; _37 = serwer_78(D)->player1;

(insn 87 86 88 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":817 -1
     (nil))

(insn 88 87 0 (set (reg/f:DI 123 [ _37 ])
        (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":817 -1
     (nil))

;; _37->request = 48;

(insn 89 88 0 (set (mem:QI (plus:DI (reg/f:DI 123 [ _37 ])
                (const_int 40 [0x28])) [0 _37->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":817 -1
     (nil))

;; END = 48;

(insn 90 89 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":818 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 91 90 92 108 (nil) [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; 

(code_label 95 94 96 106 (nil) [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; _38 = serwer_78(D)->mapa;

(insn 97 96 98 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":822 -1
     (nil))

(insn 98 97 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":822 -1
     (nil))

;; _39 = serwer_78(D)->player1;

(insn 99 98 100 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":822 -1
     (nil))

(insn 100 99 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 172)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":822 -1
     (nil))

;; _40 = _39->y_current;

(insn 101 100 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 16 [0x10])) [3 _39->y_current+0 S4 A64])) "function.c":822 -1
     (nil))

;; _41 = (sizetype) _40;

(insn 102 101 0 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 126 [ _40 ]))) "function.c":822 -1
     (nil))

;; _42 = _41 + 1;

(insn 103 102 0 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))

;; _43 = _42 * 8;

(insn 104 103 0 (parallel [
            (set (reg:DI 129 [ _43 ])
                (ashift:DI (reg:DI 128 [ _42 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))

;; _44 = _38 + _43;

(insn 105 104 0 (parallel [
            (set (reg/f:DI 130 [ _44 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))

;; _45 = *_44;

(insn 106 105 0 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (reg/f:DI 130 [ _44 ]) [10 *_44+0 S8 A64])) "function.c":822 -1
     (nil))

;; _46 = serwer_78(D)->player1;

(insn 107 106 108 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":822 -1
     (nil))

(insn 108 107 0 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":822 -1
     (nil))

;; _47 = _46->x_current;

(insn 109 108 0 (set (reg:SI 133 [ _47 ])
        (mem:SI (plus:DI (reg/f:DI 132 [ _46 ])
                (const_int 12 [0xc])) [3 _46->x_current+0 S4 A32])) "function.c":822 -1
     (nil))

;; _48 = (sizetype) _47;

(insn 110 109 0 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 133 [ _47 ]))) "function.c":822 -1
     (nil))

;; _49 = _45 + _48;

(insn 111 110 0 (parallel [
            (set (reg/f:DI 135 [ _49 ])
                (plus:DI (reg/f:DI 131 [ _45 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))

;; _50 = *_49;

(insn 112 111 0 (set (reg:QI 136 [ _50 ])
        (mem:QI (reg/f:DI 135 [ _49 ]) [0 *_49+0 S1 A8])) "function.c":822 -1
     (nil))

;; if (_50 != 77)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ _50 ])
            (const_int 77 [0x4d]))) "function.c":822 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":822 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _51 = serwer_78(D)->player1;

(insn 116 115 117 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":824 -1
     (nil))

(insn 117 116 0 (set (reg/f:DI 137 [ _51 ])
        (mem/f:DI (plus:DI (reg/f:DI 174)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":824 -1
     (nil))

;; _52 = _51->y_current;

(insn 118 117 0 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 16 [0x10])) [3 _51->y_current+0 S4 A64])) "function.c":824 -1
     (nil))

;; _53 = _52 + 1;

(insn 119 118 0 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 138 [ _52 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":824 -1
     (nil))

;; _51->y_current = _53;

(insn 120 119 0 (set (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 16 [0x10])) [3 _51->y_current+0 S4 A64])
        (reg:SI 139 [ _53 ])) "function.c":824 -1
     (nil))

;; _54 = serwer_78(D)->player1;

(insn 121 120 122 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":825 -1
     (nil))

(insn 122 121 0 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (plus:DI (reg/f:DI 175)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":825 -1
     (nil))

;; _54->request = 48;

(insn 123 122 0 (set (mem:QI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 40 [0x28])) [0 _54->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":825 -1
     (nil))

;; END = 48;

(insn 124 123 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":826 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 125 124 126 109 (nil) [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 16

;; 

(code_label 129 128 130 102 (nil) [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; _55 = serwer_78(D)->mapa;

(insn 131 130 132 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":830 -1
     (nil))

(insn 132 131 0 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (plus:DI (reg/f:DI 176)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":830 -1
     (nil))

;; _56 = serwer_78(D)->player1;

(insn 133 132 134 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":830 -1
     (nil))

(insn 134 133 0 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 177)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":830 -1
     (nil))

;; _57 = _56->y_current;

(insn 135 134 0 (set (reg:SI 143 [ _57 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 16 [0x10])) [3 _56->y_current+0 S4 A64])) "function.c":830 -1
     (nil))

;; _58 = (long unsigned int) _57;

(insn 136 135 0 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 143 [ _57 ]))) "function.c":830 -1
     (nil))

;; _59 = _58 * 8;

(insn 137 136 0 (parallel [
            (set (reg:DI 145 [ _59 ])
                (ashift:DI (reg:DI 144 [ _58 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))

;; _60 = _55 + _59;

(insn 138 137 0 (parallel [
            (set (reg/f:DI 146 [ _60 ])
                (plus:DI (reg/f:DI 141 [ _55 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))

;; _61 = *_60;

(insn 139 138 0 (set (reg/f:DI 147 [ _61 ])
        (mem/f:DI (reg/f:DI 146 [ _60 ]) [10 *_60+0 S8 A64])) "function.c":830 -1
     (nil))

;; _62 = serwer_78(D)->player1;

(insn 140 139 141 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":830 -1
     (nil))

(insn 141 140 0 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":830 -1
     (nil))

;; _63 = _62->x_current;

(insn 142 141 0 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (reg/f:DI 148 [ _62 ])
                (const_int 12 [0xc])) [3 _62->x_current+0 S4 A32])) "function.c":830 -1
     (nil))

;; _64 = (sizetype) _63;

(insn 143 142 0 (set (reg:DI 150 [ _64 ])
        (sign_extend:DI (reg:SI 149 [ _63 ]))) "function.c":830 -1
     (nil))

;; _65 = _64 + 1;

(insn 144 143 0 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))

;; _66 = _61 + _65;

(insn 145 144 0 (parallel [
            (set (reg/f:DI 152 [ _66 ])
                (plus:DI (reg/f:DI 147 [ _61 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))

;; _67 = *_66;

(insn 146 145 0 (set (reg:QI 153 [ _67 ])
        (mem:QI (reg/f:DI 152 [ _66 ]) [0 *_66+0 S1 A8])) "function.c":830 -1
     (nil))

;; if (_67 != 77)

(insn 147 146 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _67 ])
            (const_int 77 [0x4d]))) "function.c":830 -1
     (nil))

(jump_insn 148 147 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":830 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _68 = serwer_78(D)->player1;

(insn 150 149 151 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":832 -1
     (nil))

(insn 151 150 0 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (plus:DI (reg/f:DI 179)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":832 -1
     (nil))

;; _69 = _68->x_current;

(insn 152 151 0 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])) "function.c":832 -1
     (nil))

;; _70 = _69 + 1;

(insn 153 152 0 (parallel [
            (set (reg:SI 156 [ _70 ])
                (plus:SI (reg:SI 155 [ _69 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":832 -1
     (nil))

;; _68->x_current = _70;

(insn 154 153 0 (set (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])
        (reg:SI 156 [ _70 ])) "function.c":832 -1
     (nil))

;; _71 = serwer_78(D)->player1;

(insn 155 154 156 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":833 -1
     (nil))

(insn 156 155 0 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":833 -1
     (nil))

;; _71->request = 48;

(insn 157 156 0 (set (mem:QI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 40 [0x28])) [0 _71->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":833 -1
     (nil))

;; END = 48;

(insn 158 157 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":834 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 159 158 160 110 (nil) [0 uses])

(note 160 159 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 19

;; 

(code_label 161 160 162 105 (nil) [0 uses])

(note 162 161 0 NOTE_INSN_BASIC_BLOCK)

;; _91 = 0;

(insn 163 162 0 (set (reg:SI 158 [ _91 ])
        (const_int 0 [0])) "function.c":838 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; <L14>:

(code_label 164 163 165 111 (nil) [0 uses])

(note 165 164 0 NOTE_INSN_BASIC_BLOCK)

;; return _91;

(insn 166 165 167 (set (reg:SI 159 [ <retval> ])
        (reg:SI 158 [ _91 ])) "function.c":838 -1
     (nil))

(jump_insn 167 166 168 (set (pc)
        (label_ref 0)) "function.c":838 -1
     (nil))

(barrier 168 167 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 21 failed.
Edge 9->11 redirected to 21
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Edge 12->14 redirected to 21
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Edge 15->17 redirected to 21
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Edge 18->20 redirected to 21
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Merging block 22 into block 21...
Merged blocks 21 and 22.
Merged 21 and 22 without moving.
Removing jump 167.
Merging block 23 into block 21...
Merged blocks 21 and 23.
Merged 21 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 21 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":802 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":803 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":803 -1
     (nil))
(insn 8 7 9 2 (set (reg:QI 88 [ _2 ])
        (mem:QI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 40 [0x28])) [0 _1->request+0 S1 A64])) "function.c":803 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 89 [ _3 ])
        (sign_extend:SI (reg:QI 88 [ _2 ]))) "function.c":803 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":803 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "function.c":803 -1
     (nil)
 -> 129)
;;  succ:       4 (FALLTHRU)
;;              18

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":803 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "function.c":803 -1
     (nil)
 -> 21)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 97 [0x61]))) "function.c":803 -1
     (nil))
(jump_insn 17 16 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "function.c":803 -1
     (nil)
 -> 61)
;;  succ:       6 (FALLTHRU)
;;              12

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 20 17 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 20 19 6 (set (pc)
        (label_ref 161)) "function.c":803 -1
     (nil)
 -> 161)
;;  succ:       21 [always] 

(barrier 19 18 21)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 21 19 22 7 103 (nil) [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 115 [0x73]))) "function.c":803 -1
     (nil))
(jump_insn 24 23 25 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "function.c":803 -1
     (nil)
 -> 95)
;;  succ:       8 (FALLTHRU)
;;              15

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 25 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 119 [0x77]))) "function.c":803 -1
     (nil))
(jump_insn 27 26 28 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "function.c":803 -1
     (nil)
 -> 161)
;;  succ:       21
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 28 27 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 9 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 30 29 31 9 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 31 30 32 9 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 32 31 33 9 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 33 32 34 9 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":806 -1
     (nil))
(insn 34 33 35 9 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 92 [ _6 ]))) "function.c":806 -1
     (nil))
(insn 35 34 36 9 (parallel [
            (set (reg:DI 94 [ _8 ])
                (ashift:DI (reg:DI 93 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))
(insn 36 35 37 9 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))
(insn 37 36 38 9 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))
(insn 38 37 39 9 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 96 [ _10 ]) [10 *_10+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 39 38 40 9 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 40 39 41 9 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":806 -1
     (nil))
(insn 41 40 42 9 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 12 [0xc])) [3 _12->x_current+0 S4 A32])) "function.c":806 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "function.c":806 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg/f:DI 97 [ _11 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":806 -1
     (nil))
(insn 44 43 45 9 (set (reg:QI 102 [ _16 ])
        (mem:QI (reg/f:DI 101 [ _15 ]) [0 *_15+0 S1 A8])) "function.c":806 -1
     (nil))
(insn 45 44 46 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _16 ])
            (const_int 77 [0x4d]))) "function.c":806 -1
     (nil))
(jump_insn 46 45 47 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":806 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       10 (FALLTHRU)
;;              21

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":808 -1
     (nil))
(insn 49 48 50 10 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":808 -1
     (nil))
(insn 50 49 51 10 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])) "function.c":808 -1
     (nil))
(insn 51 50 52 10 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":808 -1
     (nil))
(insn 52 51 53 10 (set (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])
        (reg:SI 105 [ _19 ])) "function.c":808 -1
     (nil))
(insn 53 52 54 10 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":809 -1
     (nil))
(insn 54 53 55 10 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":809 -1
     (nil))
(insn 55 54 56 10 (set (mem:QI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 40 [0x28])) [0 _20->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":809 -1
     (nil))
(insn 56 55 59 10 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":810 -1
     (nil))
(jump_insn 59 56 60 10 (set (pc)
        (label_ref 161)) "function.c":812 -1
     (nil)
 -> 161)
;;  succ:       21

(barrier 60 59 61)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 10, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
(code_label 61 60 62 12 104 (nil) [1 uses])
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 64 63 65 12 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 166)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 65 64 66 12 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 66 65 67 12 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 67 66 68 12 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 16 [0x10])) [3 _22->y_current+0 S4 A64])) "function.c":814 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "function.c":814 -1
     (nil))
(insn 69 68 70 12 (parallel [
            (set (reg:DI 111 [ _25 ])
                (ashift:DI (reg:DI 110 [ _24 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg/f:DI 112 [ _26 ])
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 111 [ _25 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))
(insn 71 70 72 12 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (reg/f:DI 112 [ _26 ]) [10 *_26+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 73 72 74 12 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":814 -1
     (nil))
(insn 74 73 75 12 (set (reg:SI 115 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 114 [ _28 ])
                (const_int 12 [0xc])) [3 _28->x_current+0 S4 A32])) "function.c":814 -1
     (nil))
(insn 75 74 76 12 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "function.c":814 -1
     (nil))
(insn 76 75 77 12 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))
(insn 77 76 78 12 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg/f:DI 113 [ _27 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":814 -1
     (nil))
(insn 78 77 79 12 (set (reg:QI 119 [ _33 ])
        (mem:QI (reg/f:DI 118 [ _32 ]) [0 *_32+0 S1 A8])) "function.c":814 -1
     (nil))
(insn 79 78 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _33 ])
            (const_int 77 [0x4d]))) "function.c":814 -1
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":814 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       13 (FALLTHRU)
;;              21

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":816 -1
     (nil))
(insn 83 82 84 13 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":816 -1
     (nil))
(insn 84 83 85 13 (set (reg:SI 121 [ _35 ])
        (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 12 [0xc])) [3 _34->x_current+0 S4 A32])) "function.c":816 -1
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:SI 122 [ _36 ])
                (plus:SI (reg:SI 121 [ _35 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":816 -1
     (nil))
(insn 86 85 87 13 (set (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 12 [0xc])) [3 _34->x_current+0 S4 A32])
        (reg:SI 122 [ _36 ])) "function.c":816 -1
     (nil))
(insn 87 86 88 13 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":817 -1
     (nil))
(insn 88 87 89 13 (set (reg/f:DI 123 [ _37 ])
        (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":817 -1
     (nil))
(insn 89 88 90 13 (set (mem:QI (plus:DI (reg/f:DI 123 [ _37 ])
                (const_int 40 [0x28])) [0 _37->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":817 -1
     (nil))
(insn 90 89 93 13 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":818 -1
     (nil))
(jump_insn 93 90 94 13 (set (pc)
        (label_ref 161)) "function.c":820 -1
     (nil)
 -> 161)
;;  succ:       21

(barrier 94 93 95)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
(code_label 95 94 96 15 106 (nil) [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 98 97 99 15 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 99 98 100 15 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 100 99 101 15 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 172)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 101 100 102 15 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 16 [0x10])) [3 _39->y_current+0 S4 A64])) "function.c":822 -1
     (nil))
(insn 102 101 103 15 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 126 [ _40 ]))) "function.c":822 -1
     (nil))
(insn 103 102 104 15 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))
(insn 104 103 105 15 (parallel [
            (set (reg:DI 129 [ _43 ])
                (ashift:DI (reg:DI 128 [ _42 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))
(insn 105 104 106 15 (parallel [
            (set (reg/f:DI 130 [ _44 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))
(insn 106 105 107 15 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (reg/f:DI 130 [ _44 ]) [10 *_44+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 107 106 108 15 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 108 107 109 15 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":822 -1
     (nil))
(insn 109 108 110 15 (set (reg:SI 133 [ _47 ])
        (mem:SI (plus:DI (reg/f:DI 132 [ _46 ])
                (const_int 12 [0xc])) [3 _46->x_current+0 S4 A32])) "function.c":822 -1
     (nil))
(insn 110 109 111 15 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 133 [ _47 ]))) "function.c":822 -1
     (nil))
(insn 111 110 112 15 (parallel [
            (set (reg/f:DI 135 [ _49 ])
                (plus:DI (reg/f:DI 131 [ _45 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":822 -1
     (nil))
(insn 112 111 113 15 (set (reg:QI 136 [ _50 ])
        (mem:QI (reg/f:DI 135 [ _49 ]) [0 *_49+0 S1 A8])) "function.c":822 -1
     (nil))
(insn 113 112 114 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ _50 ])
            (const_int 77 [0x4d]))) "function.c":822 -1
     (nil))
(jump_insn 114 113 115 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":822 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       16 (FALLTHRU)
;;              21

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 115 114 116 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 16 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":824 -1
     (nil))
(insn 117 116 118 16 (set (reg/f:DI 137 [ _51 ])
        (mem/f:DI (plus:DI (reg/f:DI 174)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":824 -1
     (nil))
(insn 118 117 119 16 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 16 [0x10])) [3 _51->y_current+0 S4 A64])) "function.c":824 -1
     (nil))
(insn 119 118 120 16 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 138 [ _52 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":824 -1
     (nil))
(insn 120 119 121 16 (set (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 16 [0x10])) [3 _51->y_current+0 S4 A64])
        (reg:SI 139 [ _53 ])) "function.c":824 -1
     (nil))
(insn 121 120 122 16 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":825 -1
     (nil))
(insn 122 121 123 16 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (plus:DI (reg/f:DI 175)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":825 -1
     (nil))
(insn 123 122 124 16 (set (mem:QI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 40 [0x28])) [0 _54->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":825 -1
     (nil))
(insn 124 123 127 16 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":826 -1
     (nil))
(jump_insn 127 124 128 16 (set (pc)
        (label_ref 161)) "function.c":828 -1
     (nil)
 -> 161)
;;  succ:       21

(barrier 128 127 129)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 16, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 129 128 130 18 102 (nil) [1 uses])
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 132 131 133 18 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (plus:DI (reg/f:DI 176)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 133 132 134 18 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 134 133 135 18 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 177)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 135 134 136 18 (set (reg:SI 143 [ _57 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 16 [0x10])) [3 _56->y_current+0 S4 A64])) "function.c":830 -1
     (nil))
(insn 136 135 137 18 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 143 [ _57 ]))) "function.c":830 -1
     (nil))
(insn 137 136 138 18 (parallel [
            (set (reg:DI 145 [ _59 ])
                (ashift:DI (reg:DI 144 [ _58 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))
(insn 138 137 139 18 (parallel [
            (set (reg/f:DI 146 [ _60 ])
                (plus:DI (reg/f:DI 141 [ _55 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))
(insn 139 138 140 18 (set (reg/f:DI 147 [ _61 ])
        (mem/f:DI (reg/f:DI 146 [ _60 ]) [10 *_60+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 140 139 141 18 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 141 140 142 18 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":830 -1
     (nil))
(insn 142 141 143 18 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (reg/f:DI 148 [ _62 ])
                (const_int 12 [0xc])) [3 _62->x_current+0 S4 A32])) "function.c":830 -1
     (nil))
(insn 143 142 144 18 (set (reg:DI 150 [ _64 ])
        (sign_extend:DI (reg:SI 149 [ _63 ]))) "function.c":830 -1
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))
(insn 145 144 146 18 (parallel [
            (set (reg/f:DI 152 [ _66 ])
                (plus:DI (reg/f:DI 147 [ _61 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":830 -1
     (nil))
(insn 146 145 147 18 (set (reg:QI 153 [ _67 ])
        (mem:QI (reg/f:DI 152 [ _66 ]) [0 *_66+0 S1 A8])) "function.c":830 -1
     (nil))
(insn 147 146 148 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _67 ])
            (const_int 77 [0x4d]))) "function.c":830 -1
     (nil))
(jump_insn 148 147 149 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":830 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       19 (FALLTHRU)
;;              21

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 149 148 150 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 19 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":832 -1
     (nil))
(insn 151 150 152 19 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (plus:DI (reg/f:DI 179)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":832 -1
     (nil))
(insn 152 151 153 19 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])) "function.c":832 -1
     (nil))
(insn 153 152 154 19 (parallel [
            (set (reg:SI 156 [ _70 ])
                (plus:SI (reg:SI 155 [ _69 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":832 -1
     (nil))
(insn 154 153 155 19 (set (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])
        (reg:SI 156 [ _70 ])) "function.c":832 -1
     (nil))
(insn 155 154 156 19 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":833 -1
     (nil))
(insn 156 155 157 19 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 32 [0x20])) [14 serwer_78(D)->player1+0 S8 A64])) "function.c":833 -1
     (nil))
(insn 157 156 158 19 (set (mem:QI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 40 [0x28])) [0 _71->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":833 -1
     (nil))
(insn 158 157 161 19 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":834 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              10
;;              13
;;              16
;;              19 (FALLTHRU)
;;              6 [always] 
;;              9
;;              12
;;              15
;;              18
(code_label 161 158 162 21 105 (nil) [9 uses])
(note 162 161 163 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 166 21 (set (reg:SI 158 [ _91 ])
        (const_int 0 [0])) "function.c":838 -1
     (nil))
(insn 166 163 170 21 (set (reg:SI 159 [ <retval> ])
        (reg:SI 158 [ _91 ])) "function.c":838 -1
     (nil))
(insn 170 166 171 21 (set (reg/i:SI 0 ax)
        (reg:SI 159 [ <retval> ])) "function.c":839 -1
     (nil))
(insn 171 170 0 21 (use (reg/i:SI 0 ax)) "function.c":839 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function step2 (step2, funcdef_no=18, decl_uid=6240, cgraph_uid=18, symbol_order=21)

step2 (struct serwer_info * serwer)
{
  int D.6709;
  struct player_info * _1;
  char _2;
  int _3;
  char * * _4;
  struct player_info * _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  sizetype _9;
  char * * _10;
  char * _11;
  struct player_info * _12;
  int _13;
  sizetype _14;
  char * _15;
  char _16;
  struct player_info * _17;
  int _18;
  int _19;
  struct player_info * _20;
  char * * _21;
  struct player_info * _22;
  int _23;
  sizetype _24;
  sizetype _25;
  sizetype _26;
  char * * _27;
  char * _28;
  struct player_info * _29;
  int _30;
  sizetype _31;
  char * _32;
  char _33;
  struct player_info * _34;
  int _35;
  int _36;
  struct player_info * _37;
  char * * _38;
  struct player_info * _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  char * * _43;
  char * _44;
  struct player_info * _45;
  int _46;
  sizetype _47;
  sizetype _48;
  char * _49;
  char _50;
  struct player_info * _51;
  int _52;
  int _53;
  struct player_info * _54;
  char * * _55;
  struct player_info * _56;
  int _57;
  long unsigned int _58;
  long unsigned int _59;
  char * * _60;
  char * _61;
  struct player_info * _62;
  int _63;
  sizetype _64;
  sizetype _65;
  char * _66;
  char _67;
  struct player_info * _68;
  int _69;
  int _70;
  struct player_info * _71;
  int _91;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_78(D)->player2;
  _2 = _1->request;
  _3 = (int) _2;
  if (_3 == 100)
    goto <bb 16>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       3
;;                16

;;   basic block 3, loop depth 0
;;    pred:       2
  if (_3 > 100)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  if (_3 == 97)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                13

;;   basic block 5, loop depth 0
;;    pred:       3
  if (_3 == 115)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       6
;;                10

;;   basic block 6, loop depth 0
;;    pred:       5
  if (_3 == 119)
    goto <bb 7>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _4 = serwer_78(D)->mapa;
  _5 = serwer_78(D)->player2;
  _6 = _5->y_current;
  _7 = (long unsigned int) _6;
  _8 = _7 * 8;
  _9 = _8 + 18446744073709551608;
  _10 = _4 + _9;
  _11 = *_10;
  _12 = serwer_78(D)->player2;
  _13 = _12->x_current;
  _14 = (sizetype) _13;
  _15 = _11 + _14;
  _16 = *_15;
  if (_16 != 77)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  _17 = serwer_78(D)->player2;
  _18 = _17->y_current;
  _19 = _18 + -1;
  _17->y_current = _19;
  _20 = serwer_78(D)->player2;
  _20->request = 48;
  END = 48;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 10, loop depth 0
;;    pred:       5
  _21 = serwer_78(D)->mapa;
  _22 = serwer_78(D)->player2;
  _23 = _22->y_current;
  _24 = (sizetype) _23;
  _25 = _24 + 1;
  _26 = _25 * 8;
  _27 = _21 + _26;
  _28 = *_27;
  _29 = serwer_78(D)->player2;
  _30 = _29->x_current;
  _31 = (sizetype) _30;
  _32 = _28 + _31;
  _33 = *_32;
  if (_33 != 77)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _34 = serwer_78(D)->player2;
  _35 = _34->y_current;
  _36 = _35 + 1;
  _34->y_current = _36;
  _37 = serwer_78(D)->player2;
  _37->request = 48;
  END = 48;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 13, loop depth 0
;;    pred:       4
  _38 = serwer_78(D)->mapa;
  _39 = serwer_78(D)->player2;
  _40 = _39->y_current;
  _41 = (long unsigned int) _40;
  _42 = _41 * 8;
  _43 = _38 + _42;
  _44 = *_43;
  _45 = serwer_78(D)->player2;
  _46 = _45->x_current;
  _47 = (sizetype) _46;
  _48 = _47 + 18446744073709551615;
  _49 = _44 + _48;
  _50 = *_49;
  if (_50 != 77)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  _51 = serwer_78(D)->player2;
  _52 = _51->x_current;
  _53 = _52 + -1;
  _51->x_current = _53;
  _54 = serwer_78(D)->player2;
  _54->request = 48;
  END = 48;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 16, loop depth 0
;;    pred:       2
  _55 = serwer_78(D)->mapa;
  _56 = serwer_78(D)->player2;
  _57 = _56->y_current;
  _58 = (long unsigned int) _57;
  _59 = _58 * 8;
  _60 = _55 + _59;
  _61 = *_60;
  _62 = serwer_78(D)->player2;
  _63 = _62->x_current;
  _64 = (sizetype) _63;
  _65 = _64 + 1;
  _66 = _61 + _65;
  _67 = *_66;
  if (_67 != 77)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _68 = serwer_78(D)->player2;
  _69 = _68->x_current;
  _70 = _69 + 1;
  _68->x_current = _70;
  _71 = serwer_78(D)->player2;
  _71->request = 48;
  END = 48;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       6
;;                9
;;                12
;;                15
;;                18
;;                4
  _91 = 0;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       19
<L14>:
  return _91;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 78 (serwer_78(D) - 78 )
Partition 91 (_91 - 91 )
Partition 92 (_92(D) - 92 )


Coalescible Partition map 

Partition 0, base 0 (serwer_78(D) - 78 )
Partition 1, base 1 (_92(D) - 92 )


Partition map 

Partition 0 (serwer_78(D) - 78 )
Partition 1 (_92(D) - 92 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (serwer_78(D) - 78 )
Partition 1 (_92(D) - 92 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (serwer_78(D) - 78 )
Partition 72 (_91 - 91 )
Partition 73 (_92(D) - 92 )

step2 (struct serwer_info * serwer)
{
  int D.6709;
  struct player_info * _1;
  char _2;
  int _3;
  char * * _4;
  struct player_info * _5;
  int _6;
  long unsigned int _7;
  long unsigned int _8;
  sizetype _9;
  char * * _10;
  char * _11;
  struct player_info * _12;
  int _13;
  sizetype _14;
  char * _15;
  char _16;
  struct player_info * _17;
  int _18;
  int _19;
  struct player_info * _20;
  char * * _21;
  struct player_info * _22;
  int _23;
  sizetype _24;
  sizetype _25;
  sizetype _26;
  char * * _27;
  char * _28;
  struct player_info * _29;
  int _30;
  sizetype _31;
  char * _32;
  char _33;
  struct player_info * _34;
  int _35;
  int _36;
  struct player_info * _37;
  char * * _38;
  struct player_info * _39;
  int _40;
  long unsigned int _41;
  long unsigned int _42;
  char * * _43;
  char * _44;
  struct player_info * _45;
  int _46;
  sizetype _47;
  sizetype _48;
  char * _49;
  char _50;
  struct player_info * _51;
  int _52;
  int _53;
  struct player_info * _54;
  char * * _55;
  struct player_info * _56;
  int _57;
  long unsigned int _58;
  long unsigned int _59;
  char * * _60;
  char * _61;
  struct player_info * _62;
  int _63;
  sizetype _64;
  sizetype _65;
  char * _66;
  char _67;
  struct player_info * _68;
  int _69;
  int _70;
  struct player_info * _71;
  int _91;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_78(D)->player2;
  _2 = _1->request;
  _3 = (int) _2;
  if (_3 == 100)
    goto <bb 16>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       3
;;                16

;;   basic block 3, loop depth 0
;;    pred:       2
  if (_3 > 100)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  if (_3 == 97)
    goto <bb 13>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                13

;;   basic block 5, loop depth 0
;;    pred:       3
  if (_3 == 115)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       6
;;                10

;;   basic block 6, loop depth 0
;;    pred:       5
  if (_3 == 119)
    goto <bb 7>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       19
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _4 = serwer_78(D)->mapa;
  _5 = serwer_78(D)->player2;
  _6 = _5->y_current;
  _7 = (long unsigned int) _6;
  _8 = _7 * 8;
  _9 = _8 + 18446744073709551608;
  _10 = _4 + _9;
  _11 = *_10;
  _12 = serwer_78(D)->player2;
  _13 = _12->x_current;
  _14 = (sizetype) _13;
  _15 = _11 + _14;
  _16 = *_15;
  if (_16 != 77)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  _17 = serwer_78(D)->player2;
  _18 = _17->y_current;
  _19 = _18 + -1;
  _17->y_current = _19;
  _20 = serwer_78(D)->player2;
  _20->request = 48;
  END = 48;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 10, loop depth 0
;;    pred:       5
  _21 = serwer_78(D)->mapa;
  _22 = serwer_78(D)->player2;
  _23 = _22->y_current;
  _24 = (sizetype) _23;
  _25 = _24 + 1;
  _26 = _25 * 8;
  _27 = _21 + _26;
  _28 = *_27;
  _29 = serwer_78(D)->player2;
  _30 = _29->x_current;
  _31 = (sizetype) _30;
  _32 = _28 + _31;
  _33 = *_32;
  if (_33 != 77)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _34 = serwer_78(D)->player2;
  _35 = _34->y_current;
  _36 = _35 + 1;
  _34->y_current = _36;
  _37 = serwer_78(D)->player2;
  _37->request = 48;
  END = 48;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       10
;;                11
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 13, loop depth 0
;;    pred:       4
  _38 = serwer_78(D)->mapa;
  _39 = serwer_78(D)->player2;
  _40 = _39->y_current;
  _41 = (long unsigned int) _40;
  _42 = _41 * 8;
  _43 = _38 + _42;
  _44 = *_43;
  _45 = serwer_78(D)->player2;
  _46 = _45->x_current;
  _47 = (sizetype) _46;
  _48 = _47 + 18446744073709551615;
  _49 = _44 + _48;
  _50 = *_49;
  if (_50 != 77)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 0
;;    pred:       13
  _51 = serwer_78(D)->player2;
  _52 = _51->x_current;
  _53 = _52 + -1;
  _51->x_current = _53;
  _54 = serwer_78(D)->player2;
  _54->request = 48;
  END = 48;
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       13
;;                14
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 16, loop depth 0
;;    pred:       2
  _55 = serwer_78(D)->mapa;
  _56 = serwer_78(D)->player2;
  _57 = _56->y_current;
  _58 = (long unsigned int) _57;
  _59 = _58 * 8;
  _60 = _55 + _59;
  _61 = *_60;
  _62 = serwer_78(D)->player2;
  _63 = _62->x_current;
  _64 = (sizetype) _63;
  _65 = _64 + 1;
  _66 = _61 + _65;
  _67 = *_66;
  if (_67 != 77)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _68 = serwer_78(D)->player2;
  _69 = _68->x_current;
  _70 = _69 + 1;
  _68->x_current = _70;
  _71 = serwer_78(D)->player2;
  _71->request = 48;
  END = 48;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       6
;;                9
;;                12
;;                15
;;                18
;;                4
  _91 = 0;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       19
<L14>:
  return _91;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = serwer_78(D)->player2;

(insn 6 5 7 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":843 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":843 -1
     (nil))

;; _2 = _1->request;

(insn 8 7 0 (set (reg:QI 88 [ _2 ])
        (mem:QI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 40 [0x28])) [0 _1->request+0 S1 A64])) "function.c":843 -1
     (nil))

;; _3 = (int) _2;

(insn 9 8 0 (set (reg:SI 89 [ _3 ])
        (sign_extend:SI (reg:QI 88 [ _2 ]))) "function.c":843 -1
     (nil))

;; if (_3 == 100)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":843 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":843 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (_3 > 100)

(insn 13 12 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":843 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":843 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; if (_3 == 97)

(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 97 [0x61]))) "function.c":843 -1
     (nil))

(jump_insn 17 16 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":843 -1
     (nil))

(note 20 17 18 22 [bb 22] NOTE_INSN_BASIC_BLOCK)

(jump_insn 18 20 19 22 (set (pc)
        (label_ref 0)) "function.c":843 -1
     (nil))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 21 19 22 118 (nil) [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; if (_3 == 115)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 115 [0x73]))) "function.c":843 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":843 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; if (_3 == 119)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 119 [0x77]))) "function.c":843 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":843 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _4 = serwer_78(D)->mapa;

(insn 29 28 30 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":846 -1
     (nil))

(insn 30 29 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":846 -1
     (nil))

;; _5 = serwer_78(D)->player2;

(insn 31 30 32 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":846 -1
     (nil))

(insn 32 31 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":846 -1
     (nil))

;; _6 = _5->y_current;

(insn 33 32 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":846 -1
     (nil))

;; _7 = (long unsigned int) _6;

(insn 34 33 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 92 [ _6 ]))) "function.c":846 -1
     (nil))

;; _8 = _7 * 8;

(insn 35 34 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (ashift:DI (reg:DI 93 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))

;; _9 = _8 + 18446744073709551608;

(insn 36 35 0 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))

;; _10 = _4 + _9;

(insn 37 36 0 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))

;; _11 = *_10;

(insn 38 37 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 96 [ _10 ]) [10 *_10+0 S8 A64])) "function.c":846 -1
     (nil))

;; _12 = serwer_78(D)->player2;

(insn 39 38 40 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":846 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":846 -1
     (nil))

;; _13 = _12->x_current;

(insn 41 40 0 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 12 [0xc])) [3 _12->x_current+0 S4 A32])) "function.c":846 -1
     (nil))

;; _14 = (sizetype) _13;

(insn 42 41 0 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "function.c":846 -1
     (nil))

;; _15 = _11 + _14;

(insn 43 42 0 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg/f:DI 97 [ _11 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))

;; _16 = *_15;

(insn 44 43 0 (set (reg:QI 102 [ _16 ])
        (mem:QI (reg/f:DI 101 [ _15 ]) [0 *_15+0 S1 A8])) "function.c":846 -1
     (nil))

;; if (_16 != 77)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _16 ])
            (const_int 77 [0x4d]))) "function.c":846 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":846 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _17 = serwer_78(D)->player2;

(insn 48 47 49 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":848 -1
     (nil))

(insn 49 48 0 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":848 -1
     (nil))

;; _18 = _17->y_current;

(insn 50 49 0 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])) "function.c":848 -1
     (nil))

;; _19 = _18 + -1;

(insn 51 50 0 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":848 -1
     (nil))

;; _17->y_current = _19;

(insn 52 51 0 (set (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])
        (reg:SI 105 [ _19 ])) "function.c":848 -1
     (nil))

;; _20 = serwer_78(D)->player2;

(insn 53 52 54 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":849 -1
     (nil))

(insn 54 53 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":849 -1
     (nil))

;; _20->request = 48;

(insn 55 54 0 (set (mem:QI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 40 [0x28])) [0 _20->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":849 -1
     (nil))

;; END = 48;

(insn 56 55 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":850 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 57 56 58 122 (nil) [0 uses])

(note 58 57 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 10

;; 

(code_label 61 60 62 121 (nil) [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = serwer_78(D)->mapa;

(insn 63 62 64 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":854 -1
     (nil))

(insn 64 63 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 166)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":854 -1
     (nil))

;; _22 = serwer_78(D)->player2;

(insn 65 64 66 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":854 -1
     (nil))

(insn 66 65 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":854 -1
     (nil))

;; _23 = _22->y_current;

(insn 67 66 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 16 [0x10])) [3 _22->y_current+0 S4 A64])) "function.c":854 -1
     (nil))

;; _24 = (sizetype) _23;

(insn 68 67 0 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "function.c":854 -1
     (nil))

;; _25 = _24 + 1;

(insn 69 68 0 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))

;; _26 = _25 * 8;

(insn 70 69 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))

;; _27 = _21 + _26;

(insn 71 70 0 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))

;; _28 = *_27;

(insn 72 71 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":854 -1
     (nil))

;; _29 = serwer_78(D)->player2;

(insn 73 72 74 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":854 -1
     (nil))

(insn 74 73 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":854 -1
     (nil))

;; _30 = _29->x_current;

(insn 75 74 0 (set (reg:SI 116 [ _30 ])
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 12 [0xc])) [3 _29->x_current+0 S4 A32])) "function.c":854 -1
     (nil))

;; _31 = (sizetype) _30;

(insn 76 75 0 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 116 [ _30 ]))) "function.c":854 -1
     (nil))

;; _32 = _28 + _31;

(insn 77 76 0 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))

;; _33 = *_32;

(insn 78 77 0 (set (reg:QI 119 [ _33 ])
        (mem:QI (reg/f:DI 118 [ _32 ]) [0 *_32+0 S1 A8])) "function.c":854 -1
     (nil))

;; if (_33 != 77)

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _33 ])
            (const_int 77 [0x4d]))) "function.c":854 -1
     (nil))

(jump_insn 80 79 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":854 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _34 = serwer_78(D)->player2;

(insn 82 81 83 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":856 -1
     (nil))

(insn 83 82 0 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":856 -1
     (nil))

;; _35 = _34->y_current;

(insn 84 83 0 (set (reg:SI 121 [ _35 ])
        (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 16 [0x10])) [3 _34->y_current+0 S4 A64])) "function.c":856 -1
     (nil))

;; _36 = _35 + 1;

(insn 85 84 0 (parallel [
            (set (reg:SI 122 [ _36 ])
                (plus:SI (reg:SI 121 [ _35 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":856 -1
     (nil))

;; _34->y_current = _36;

(insn 86 85 0 (set (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 16 [0x10])) [3 _34->y_current+0 S4 A64])
        (reg:SI 122 [ _36 ])) "function.c":856 -1
     (nil))

;; _37 = serwer_78(D)->player2;

(insn 87 86 88 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":857 -1
     (nil))

(insn 88 87 0 (set (reg/f:DI 123 [ _37 ])
        (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":857 -1
     (nil))

;; _37->request = 48;

(insn 89 88 0 (set (mem:QI (plus:DI (reg/f:DI 123 [ _37 ])
                (const_int 40 [0x28])) [0 _37->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":857 -1
     (nil))

;; END = 48;

(insn 90 89 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":858 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 91 90 92 123 (nil) [0 uses])

(note 92 91 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; 

(code_label 95 94 96 119 (nil) [0 uses])

(note 96 95 0 NOTE_INSN_BASIC_BLOCK)

;; _38 = serwer_78(D)->mapa;

(insn 97 96 98 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":862 -1
     (nil))

(insn 98 97 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":862 -1
     (nil))

;; _39 = serwer_78(D)->player2;

(insn 99 98 100 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":862 -1
     (nil))

(insn 100 99 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 172)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":862 -1
     (nil))

;; _40 = _39->y_current;

(insn 101 100 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 16 [0x10])) [3 _39->y_current+0 S4 A64])) "function.c":862 -1
     (nil))

;; _41 = (long unsigned int) _40;

(insn 102 101 0 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 126 [ _40 ]))) "function.c":862 -1
     (nil))

;; _42 = _41 * 8;

(insn 103 102 0 (parallel [
            (set (reg:DI 128 [ _42 ])
                (ashift:DI (reg:DI 127 [ _41 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))

;; _43 = _38 + _42;

(insn 104 103 0 (parallel [
            (set (reg/f:DI 129 [ _43 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))

;; _44 = *_43;

(insn 105 104 0 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (reg/f:DI 129 [ _43 ]) [10 *_43+0 S8 A64])) "function.c":862 -1
     (nil))

;; _45 = serwer_78(D)->player2;

(insn 106 105 107 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":862 -1
     (nil))

(insn 107 106 0 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":862 -1
     (nil))

;; _46 = _45->x_current;

(insn 108 107 0 (set (reg:SI 132 [ _46 ])
        (mem:SI (plus:DI (reg/f:DI 131 [ _45 ])
                (const_int 12 [0xc])) [3 _45->x_current+0 S4 A32])) "function.c":862 -1
     (nil))

;; _47 = (sizetype) _46;

(insn 109 108 0 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 132 [ _46 ]))) "function.c":862 -1
     (nil))

;; _48 = _47 + 18446744073709551615;

(insn 110 109 0 (parallel [
            (set (reg:DI 134 [ _48 ])
                (plus:DI (reg:DI 133 [ _47 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))

;; _49 = _44 + _48;

(insn 111 110 0 (parallel [
            (set (reg/f:DI 135 [ _49 ])
                (plus:DI (reg/f:DI 130 [ _44 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))

;; _50 = *_49;

(insn 112 111 0 (set (reg:QI 136 [ _50 ])
        (mem:QI (reg/f:DI 135 [ _49 ]) [0 *_49+0 S1 A8])) "function.c":862 -1
     (nil))

;; if (_50 != 77)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ _50 ])
            (const_int 77 [0x4d]))) "function.c":862 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":862 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; _51 = serwer_78(D)->player2;

(insn 116 115 117 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":864 -1
     (nil))

(insn 117 116 0 (set (reg/f:DI 137 [ _51 ])
        (mem/f:DI (plus:DI (reg/f:DI 174)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":864 -1
     (nil))

;; _52 = _51->x_current;

(insn 118 117 0 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 12 [0xc])) [3 _51->x_current+0 S4 A32])) "function.c":864 -1
     (nil))

;; _53 = _52 + -1;

(insn 119 118 0 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":864 -1
     (nil))

;; _51->x_current = _53;

(insn 120 119 0 (set (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 12 [0xc])) [3 _51->x_current+0 S4 A32])
        (reg:SI 139 [ _53 ])) "function.c":864 -1
     (nil))

;; _54 = serwer_78(D)->player2;

(insn 121 120 122 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":865 -1
     (nil))

(insn 122 121 0 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (plus:DI (reg/f:DI 175)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":865 -1
     (nil))

;; _54->request = 48;

(insn 123 122 0 (set (mem:QI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 40 [0x28])) [0 _54->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":865 -1
     (nil))

;; END = 48;

(insn 124 123 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":866 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 125 124 126 124 (nil) [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 16

;; 

(code_label 129 128 130 117 (nil) [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; _55 = serwer_78(D)->mapa;

(insn 131 130 132 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":870 -1
     (nil))

(insn 132 131 0 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (plus:DI (reg/f:DI 176)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":870 -1
     (nil))

;; _56 = serwer_78(D)->player2;

(insn 133 132 134 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":870 -1
     (nil))

(insn 134 133 0 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 177)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":870 -1
     (nil))

;; _57 = _56->y_current;

(insn 135 134 0 (set (reg:SI 143 [ _57 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 16 [0x10])) [3 _56->y_current+0 S4 A64])) "function.c":870 -1
     (nil))

;; _58 = (long unsigned int) _57;

(insn 136 135 0 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 143 [ _57 ]))) "function.c":870 -1
     (nil))

;; _59 = _58 * 8;

(insn 137 136 0 (parallel [
            (set (reg:DI 145 [ _59 ])
                (ashift:DI (reg:DI 144 [ _58 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))

;; _60 = _55 + _59;

(insn 138 137 0 (parallel [
            (set (reg/f:DI 146 [ _60 ])
                (plus:DI (reg/f:DI 141 [ _55 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))

;; _61 = *_60;

(insn 139 138 0 (set (reg/f:DI 147 [ _61 ])
        (mem/f:DI (reg/f:DI 146 [ _60 ]) [10 *_60+0 S8 A64])) "function.c":870 -1
     (nil))

;; _62 = serwer_78(D)->player2;

(insn 140 139 141 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":870 -1
     (nil))

(insn 141 140 0 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":870 -1
     (nil))

;; _63 = _62->x_current;

(insn 142 141 0 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (reg/f:DI 148 [ _62 ])
                (const_int 12 [0xc])) [3 _62->x_current+0 S4 A32])) "function.c":870 -1
     (nil))

;; _64 = (sizetype) _63;

(insn 143 142 0 (set (reg:DI 150 [ _64 ])
        (sign_extend:DI (reg:SI 149 [ _63 ]))) "function.c":870 -1
     (nil))

;; _65 = _64 + 1;

(insn 144 143 0 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))

;; _66 = _61 + _65;

(insn 145 144 0 (parallel [
            (set (reg/f:DI 152 [ _66 ])
                (plus:DI (reg/f:DI 147 [ _61 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))

;; _67 = *_66;

(insn 146 145 0 (set (reg:QI 153 [ _67 ])
        (mem:QI (reg/f:DI 152 [ _66 ]) [0 *_66+0 S1 A8])) "function.c":870 -1
     (nil))

;; if (_67 != 77)

(insn 147 146 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _67 ])
            (const_int 77 [0x4d]))) "function.c":870 -1
     (nil))

(jump_insn 148 147 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":870 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _68 = serwer_78(D)->player2;

(insn 150 149 151 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":872 -1
     (nil))

(insn 151 150 0 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (plus:DI (reg/f:DI 179)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":872 -1
     (nil))

;; _69 = _68->x_current;

(insn 152 151 0 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])) "function.c":872 -1
     (nil))

;; _70 = _69 + 1;

(insn 153 152 0 (parallel [
            (set (reg:SI 156 [ _70 ])
                (plus:SI (reg:SI 155 [ _69 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":872 -1
     (nil))

;; _68->x_current = _70;

(insn 154 153 0 (set (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])
        (reg:SI 156 [ _70 ])) "function.c":872 -1
     (nil))

;; _71 = serwer_78(D)->player2;

(insn 155 154 156 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":873 -1
     (nil))

(insn 156 155 0 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":873 -1
     (nil))

;; _71->request = 48;

(insn 157 156 0 (set (mem:QI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 40 [0x28])) [0 _71->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":873 -1
     (nil))

;; END = 48;

(insn 158 157 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":874 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 159 158 160 125 (nil) [0 uses])

(note 160 159 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 19

;; 

(code_label 161 160 162 120 (nil) [0 uses])

(note 162 161 0 NOTE_INSN_BASIC_BLOCK)

;; _91 = 0;

(insn 163 162 0 (set (reg:SI 158 [ _91 ])
        (const_int 0 [0])) "function.c":878 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; <L14>:

(code_label 164 163 165 126 (nil) [0 uses])

(note 165 164 0 NOTE_INSN_BASIC_BLOCK)

;; return _91;

(insn 166 165 167 (set (reg:SI 159 [ <retval> ])
        (reg:SI 158 [ _91 ])) "function.c":878 -1
     (nil))

(jump_insn 167 166 168 (set (pc)
        (label_ref 0)) "function.c":878 -1
     (nil))

(barrier 168 167 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 21 failed.
Edge 9->11 redirected to 21
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Edge 12->14 redirected to 21
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Edge 15->17 redirected to 21
Merging block 17 into block 16...
Merged blocks 16 and 17.
Merged 16 and 17 without moving.
Edge 18->20 redirected to 21
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Merging block 22 into block 21...
Merged blocks 21 and 22.
Merged 21 and 22 without moving.
Removing jump 167.
Merging block 23 into block 21...
Merged blocks 21 and 23.
Merged 21 and 23 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 21 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":842 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":843 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":843 -1
     (nil))
(insn 8 7 9 2 (set (reg:QI 88 [ _2 ])
        (mem:QI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 40 [0x28])) [0 _1->request+0 S1 A64])) "function.c":843 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 89 [ _3 ])
        (sign_extend:SI (reg:QI 88 [ _2 ]))) "function.c":843 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":843 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "function.c":843 -1
     (nil)
 -> 129)
;;  succ:       4 (FALLTHRU)
;;              18

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 100 [0x64]))) "function.c":843 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "function.c":843 -1
     (nil)
 -> 21)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 97 [0x61]))) "function.c":843 -1
     (nil))
(jump_insn 17 16 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 95)
            (pc))) "function.c":843 -1
     (nil)
 -> 95)
;;  succ:       6 (FALLTHRU)
;;              15

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 20 17 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 20 19 6 (set (pc)
        (label_ref 161)) "function.c":843 -1
     (nil)
 -> 161)
;;  succ:       21 [always] 

(barrier 19 18 21)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 21 19 22 7 118 (nil) [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 115 [0x73]))) "function.c":843 -1
     (nil))
(jump_insn 24 23 25 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "function.c":843 -1
     (nil)
 -> 61)
;;  succ:       8 (FALLTHRU)
;;              12

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 25 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 89 [ _3 ])
            (const_int 119 [0x77]))) "function.c":843 -1
     (nil))
(jump_insn 27 26 28 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 161)
            (pc))) "function.c":843 -1
     (nil)
 -> 161)
;;  succ:       21
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 28 27 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 9 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 30 29 31 9 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 161)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 31 30 32 9 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 32 31 33 9 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 33 32 34 9 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":846 -1
     (nil))
(insn 34 33 35 9 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 92 [ _6 ]))) "function.c":846 -1
     (nil))
(insn 35 34 36 9 (parallel [
            (set (reg:DI 94 [ _8 ])
                (ashift:DI (reg:DI 93 [ _7 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))
(insn 36 35 37 9 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))
(insn 37 36 38 9 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))
(insn 38 37 39 9 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 96 [ _10 ]) [10 *_10+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 39 38 40 9 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 40 39 41 9 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":846 -1
     (nil))
(insn 41 40 42 9 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 12 [0xc])) [3 _12->x_current+0 S4 A32])) "function.c":846 -1
     (nil))
(insn 42 41 43 9 (set (reg:DI 100 [ _14 ])
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "function.c":846 -1
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg/f:DI 101 [ _15 ])
                (plus:DI (reg/f:DI 97 [ _11 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":846 -1
     (nil))
(insn 44 43 45 9 (set (reg:QI 102 [ _16 ])
        (mem:QI (reg/f:DI 101 [ _15 ]) [0 *_15+0 S1 A8])) "function.c":846 -1
     (nil))
(insn 45 44 46 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _16 ])
            (const_int 77 [0x4d]))) "function.c":846 -1
     (nil))
(jump_insn 46 45 47 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":846 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       10 (FALLTHRU)
;;              21

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 47 46 48 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 10 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":848 -1
     (nil))
(insn 49 48 50 10 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":848 -1
     (nil))
(insn 50 49 51 10 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])) "function.c":848 -1
     (nil))
(insn 51 50 52 10 (parallel [
            (set (reg:SI 105 [ _19 ])
                (plus:SI (reg:SI 104 [ _18 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":848 -1
     (nil))
(insn 52 51 53 10 (set (mem:SI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 16 [0x10])) [3 _17->y_current+0 S4 A64])
        (reg:SI 105 [ _19 ])) "function.c":848 -1
     (nil))
(insn 53 52 54 10 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":849 -1
     (nil))
(insn 54 53 55 10 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 165)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":849 -1
     (nil))
(insn 55 54 56 10 (set (mem:QI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 40 [0x28])) [0 _20->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":849 -1
     (nil))
(insn 56 55 59 10 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":850 -1
     (nil))
(jump_insn 59 56 60 10 (set (pc)
        (label_ref 161)) "function.c":852 -1
     (nil)
 -> 161)
;;  succ:       21

(barrier 60 59 61)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 10, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7
(code_label 61 60 62 12 121 (nil) [1 uses])
(note 62 61 63 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 64 12 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 64 63 65 12 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 166)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 65 64 66 12 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 66 65 67 12 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 167)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 67 66 68 12 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 16 [0x10])) [3 _22->y_current+0 S4 A64])) "function.c":854 -1
     (nil))
(insn 68 67 69 12 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 109 [ _23 ]))) "function.c":854 -1
     (nil))
(insn 69 68 70 12 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 110 [ _24 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))
(insn 70 69 71 12 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))
(insn 71 70 72 12 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 73 72 74 12 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 74 73 75 12 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 168)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":854 -1
     (nil))
(insn 75 74 76 12 (set (reg:SI 116 [ _30 ])
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 12 [0xc])) [3 _29->x_current+0 S4 A32])) "function.c":854 -1
     (nil))
(insn 76 75 77 12 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 116 [ _30 ]))) "function.c":854 -1
     (nil))
(insn 77 76 78 12 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":854 -1
     (nil))
(insn 78 77 79 12 (set (reg:QI 119 [ _33 ])
        (mem:QI (reg/f:DI 118 [ _32 ]) [0 *_32+0 S1 A8])) "function.c":854 -1
     (nil))
(insn 79 78 80 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 119 [ _33 ])
            (const_int 77 [0x4d]))) "function.c":854 -1
     (nil))
(jump_insn 80 79 81 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":854 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       13 (FALLTHRU)
;;              21

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 81 80 82 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 13 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":856 -1
     (nil))
(insn 83 82 84 13 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":856 -1
     (nil))
(insn 84 83 85 13 (set (reg:SI 121 [ _35 ])
        (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 16 [0x10])) [3 _34->y_current+0 S4 A64])) "function.c":856 -1
     (nil))
(insn 85 84 86 13 (parallel [
            (set (reg:SI 122 [ _36 ])
                (plus:SI (reg:SI 121 [ _35 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":856 -1
     (nil))
(insn 86 85 87 13 (set (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 16 [0x10])) [3 _34->y_current+0 S4 A64])
        (reg:SI 122 [ _36 ])) "function.c":856 -1
     (nil))
(insn 87 86 88 13 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":857 -1
     (nil))
(insn 88 87 89 13 (set (reg/f:DI 123 [ _37 ])
        (mem/f:DI (plus:DI (reg/f:DI 170)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":857 -1
     (nil))
(insn 89 88 90 13 (set (mem:QI (plus:DI (reg/f:DI 123 [ _37 ])
                (const_int 40 [0x28])) [0 _37->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":857 -1
     (nil))
(insn 90 89 93 13 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":858 -1
     (nil))
(jump_insn 93 90 94 13 (set (pc)
        (label_ref 161)) "function.c":860 -1
     (nil)
 -> 161)
;;  succ:       21

(barrier 94 93 95)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
(code_label 95 94 96 15 119 (nil) [1 uses])
(note 96 95 97 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 15 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 98 97 99 15 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 99 98 100 15 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 100 99 101 15 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 172)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 101 100 102 15 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 16 [0x10])) [3 _39->y_current+0 S4 A64])) "function.c":862 -1
     (nil))
(insn 102 101 103 15 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 126 [ _40 ]))) "function.c":862 -1
     (nil))
(insn 103 102 104 15 (parallel [
            (set (reg:DI 128 [ _42 ])
                (ashift:DI (reg:DI 127 [ _41 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))
(insn 104 103 105 15 (parallel [
            (set (reg/f:DI 129 [ _43 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))
(insn 105 104 106 15 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (reg/f:DI 129 [ _43 ]) [10 *_43+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 106 105 107 15 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 107 106 108 15 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":862 -1
     (nil))
(insn 108 107 109 15 (set (reg:SI 132 [ _46 ])
        (mem:SI (plus:DI (reg/f:DI 131 [ _45 ])
                (const_int 12 [0xc])) [3 _45->x_current+0 S4 A32])) "function.c":862 -1
     (nil))
(insn 109 108 110 15 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 132 [ _46 ]))) "function.c":862 -1
     (nil))
(insn 110 109 111 15 (parallel [
            (set (reg:DI 134 [ _48 ])
                (plus:DI (reg:DI 133 [ _47 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))
(insn 111 110 112 15 (parallel [
            (set (reg/f:DI 135 [ _49 ])
                (plus:DI (reg/f:DI 130 [ _44 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":862 -1
     (nil))
(insn 112 111 113 15 (set (reg:QI 136 [ _50 ])
        (mem:QI (reg/f:DI 135 [ _49 ]) [0 *_49+0 S1 A8])) "function.c":862 -1
     (nil))
(insn 113 112 114 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 136 [ _50 ])
            (const_int 77 [0x4d]))) "function.c":862 -1
     (nil))
(jump_insn 114 113 115 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":862 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       16 (FALLTHRU)
;;              21

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 115 114 116 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 16 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":864 -1
     (nil))
(insn 117 116 118 16 (set (reg/f:DI 137 [ _51 ])
        (mem/f:DI (plus:DI (reg/f:DI 174)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":864 -1
     (nil))
(insn 118 117 119 16 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 12 [0xc])) [3 _51->x_current+0 S4 A32])) "function.c":864 -1
     (nil))
(insn 119 118 120 16 (parallel [
            (set (reg:SI 139 [ _53 ])
                (plus:SI (reg:SI 138 [ _52 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":864 -1
     (nil))
(insn 120 119 121 16 (set (mem:SI (plus:DI (reg/f:DI 137 [ _51 ])
                (const_int 12 [0xc])) [3 _51->x_current+0 S4 A32])
        (reg:SI 139 [ _53 ])) "function.c":864 -1
     (nil))
(insn 121 120 122 16 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":865 -1
     (nil))
(insn 122 121 123 16 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (plus:DI (reg/f:DI 175)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":865 -1
     (nil))
(insn 123 122 124 16 (set (mem:QI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 40 [0x28])) [0 _54->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":865 -1
     (nil))
(insn 124 123 127 16 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":866 -1
     (nil))
(jump_insn 127 124 128 16 (set (pc)
        (label_ref 161)) "function.c":868 -1
     (nil)
 -> 161)
;;  succ:       21

(barrier 128 127 129)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 16, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
(code_label 129 128 130 18 117 (nil) [1 uses])
(note 130 129 131 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 18 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 132 131 133 18 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (plus:DI (reg/f:DI 176)
                (const_int 16 [0x10])) [9 serwer_78(D)->mapa+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 133 132 134 18 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 134 133 135 18 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 177)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 135 134 136 18 (set (reg:SI 143 [ _57 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 16 [0x10])) [3 _56->y_current+0 S4 A64])) "function.c":870 -1
     (nil))
(insn 136 135 137 18 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 143 [ _57 ]))) "function.c":870 -1
     (nil))
(insn 137 136 138 18 (parallel [
            (set (reg:DI 145 [ _59 ])
                (ashift:DI (reg:DI 144 [ _58 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))
(insn 138 137 139 18 (parallel [
            (set (reg/f:DI 146 [ _60 ])
                (plus:DI (reg/f:DI 141 [ _55 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))
(insn 139 138 140 18 (set (reg/f:DI 147 [ _61 ])
        (mem/f:DI (reg/f:DI 146 [ _60 ]) [10 *_60+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 140 139 141 18 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 141 140 142 18 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":870 -1
     (nil))
(insn 142 141 143 18 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (reg/f:DI 148 [ _62 ])
                (const_int 12 [0xc])) [3 _62->x_current+0 S4 A32])) "function.c":870 -1
     (nil))
(insn 143 142 144 18 (set (reg:DI 150 [ _64 ])
        (sign_extend:DI (reg:SI 149 [ _63 ]))) "function.c":870 -1
     (nil))
(insn 144 143 145 18 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))
(insn 145 144 146 18 (parallel [
            (set (reg/f:DI 152 [ _66 ])
                (plus:DI (reg/f:DI 147 [ _61 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":870 -1
     (nil))
(insn 146 145 147 18 (set (reg:QI 153 [ _67 ])
        (mem:QI (reg/f:DI 152 [ _66 ]) [0 *_66+0 S1 A8])) "function.c":870 -1
     (nil))
(insn 147 146 148 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 153 [ _67 ])
            (const_int 77 [0x4d]))) "function.c":870 -1
     (nil))
(jump_insn 148 147 149 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 161)
            (pc))) "function.c":870 682 {*jcc}
     (nil)
 -> 161)
;;  succ:       19 (FALLTHRU)
;;              21

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 149 148 150 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 150 149 151 19 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":872 -1
     (nil))
(insn 151 150 152 19 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (plus:DI (reg/f:DI 179)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":872 -1
     (nil))
(insn 152 151 153 19 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])) "function.c":872 -1
     (nil))
(insn 153 152 154 19 (parallel [
            (set (reg:SI 156 [ _70 ])
                (plus:SI (reg:SI 155 [ _69 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":872 -1
     (nil))
(insn 154 153 155 19 (set (mem:SI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 12 [0xc])) [3 _68->x_current+0 S4 A32])
        (reg:SI 156 [ _70 ])) "function.c":872 -1
     (nil))
(insn 155 154 156 19 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":873 -1
     (nil))
(insn 156 155 157 19 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 40 [0x28])) [14 serwer_78(D)->player2+0 S8 A64])) "function.c":873 -1
     (nil))
(insn 157 156 158 19 (set (mem:QI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 40 [0x28])) [0 _71->request+0 S1 A64])
        (const_int 48 [0x30])) "function.c":873 -1
     (nil))
(insn 158 157 161 19 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":874 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 19, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              10
;;              13
;;              16
;;              19 (FALLTHRU)
;;              6 [always] 
;;              9
;;              12
;;              15
;;              18
(code_label 161 158 162 21 120 (nil) [9 uses])
(note 162 161 163 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 166 21 (set (reg:SI 158 [ _91 ])
        (const_int 0 [0])) "function.c":878 -1
     (nil))
(insn 166 163 170 21 (set (reg:SI 159 [ <retval> ])
        (reg:SI 158 [ _91 ])) "function.c":878 -1
     (nil))
(insn 170 166 171 21 (set (reg/i:SI 0 ax)
        (reg:SI 159 [ <retval> ])) "function.c":879 -1
     (nil))
(insn 171 170 0 21 (use (reg/i:SI 0 ax)) "function.c":879 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function bestia_move_random (bestia_move_random, funcdef_no=19, decl_uid=6242, cgraph_uid=19, symbol_order=22)

bestia_move_random (struct serwer_info * serwer)
{
  int number;
  int upp;
  int low;
  long int _1;
  unsigned int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  char * * _13;
  int _14;
  long unsigned int _15;
  long unsigned int _16;
  char * * _17;
  char * _18;
  int _19;
  sizetype _20;
  char * _21;
  char _22;
  int _23;
  struct player_info * _24;
  int _25;
  int _26;
  struct player_info * _27;
  int _28;
  int _29;
  struct player_info * _30;
  int _31;
  int _32;
  struct player_info * _33;
  int _34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  low_36 = 0;
  upp_37 = 0;
  number_38 = 0;
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                9
  low_42 = 1;
  upp_43 = 29;
  _3 = rand ();
  _4 = upp_43 - low_42;
  _5 = _4 + 1;
  _6 = _3 % _5;
  _7 = low_42 + _6;
  serwer_45(D)->bestia.x = _7;
  low_47 = 1;
  upp_48 = 19;
  _8 = rand ();
  _9 = upp_48 - low_47;
  _10 = _9 + 1;
  _11 = _8 % _10;
  _12 = low_47 + _11;
  serwer_45(D)->bestia.y = _12;
  _13 = serwer_45(D)->mapa;
  _14 = serwer_45(D)->bestia.y;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = _13 + _16;
  _18 = *_17;
  _19 = serwer_45(D)->bestia.x;
  _20 = (sizetype) _19;
  _21 = _18 + _20;
  _22 = *_21;
  if (_22 == 46)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       4
;;                9

;;   basic block 4, loop depth 1
;;    pred:       3
  _23 = serwer_45(D)->bestia.y;
  _24 = serwer_45(D)->player1;
  _25 = _24->y_current;
  if (_23 != _25)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       5
;;                9

;;   basic block 5, loop depth 1
;;    pred:       4
  _26 = serwer_45(D)->bestia.x;
  _27 = serwer_45(D)->player1;
  _28 = _27->x_current;
  if (_26 != _28)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       6
;;                9

;;   basic block 6, loop depth 1
;;    pred:       5
  _29 = serwer_45(D)->bestia.y;
  _30 = serwer_45(D)->player2;
  _31 = _30->y_current;
  if (_29 != _31)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       7
;;                9

;;   basic block 7, loop depth 1
;;    pred:       6
  _32 = serwer_45(D)->bestia.x;
  _33 = serwer_45(D)->player2;
  _34 = _33->x_current;
  if (_32 != _34)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 9, loop depth 1
;;    pred:       3
;;                4
;;                5
;;                6
;;                7
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       8
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L12>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 36 (low_36 - 36 )
Partition 37 (upp_37 - 37 )
Partition 38 (number_38 - 38 )
Partition 42 (low_42 - 42 )
Partition 43 (upp_43 - 43 )
Partition 45 (serwer_45(D) - 45 )
Partition 47 (low_47 - 47 )
Partition 48 (upp_48 - 48 )


Coalescible Partition map 

Partition 0, base 0 (low_36 - 36 42 47 )
Partition 1, base 1 (upp_37 - 37 43 48 )
Partition 4, base 2 (serwer_45(D) - 45 )


Partition map 

Partition 0 (low_36 - 36 )
Partition 1 (upp_37 - 37 )
Partition 2 (low_42 - 42 )
Partition 3 (upp_43 - 43 )
Partition 4 (serwer_45(D) - 45 )
Partition 5 (low_47 - 47 )
Partition 6 (upp_48 - 48 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) low_36 <-> low_42
(2147483646, 0) upp_37 <-> upp_43
(2147483646, 0) low_36 <-> low_47
(2147483646, 0) upp_37 <-> upp_48

Partition map 

Partition 0 (low_36 - 36 )
Partition 1 (upp_37 - 37 )
Partition 2 (low_42 - 42 )
Partition 3 (upp_43 - 43 )
Partition 4 (serwer_45(D) - 45 )
Partition 5 (low_47 - 47 )
Partition 6 (upp_48 - 48 )

Coalesce list: (36)low_36 & (42)low_42 [map: 0, 2] : Success -> 0
Coalesce list: (37)upp_37 & (43)upp_43 [map: 1, 3] : Success -> 1
Coalesce list: (36)low_36 & (47)low_47 [map: 0, 5] : Success -> 0
Coalesce list: (37)upp_37 & (48)upp_48 [map: 1, 6] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (low_36 - 36 42 47 )
Partition 35 (upp_37 - 37 43 48 )
Partition 36 (number_38 - 38 )
Partition 37 (serwer_45(D) - 45 )

bestia_move_random (struct serwer_info * serwer)
{
  int number;
  int upp;
  int low;
  long int _1;
  unsigned int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  char * * _13;
  int _14;
  long unsigned int _15;
  long unsigned int _16;
  char * * _17;
  char * _18;
  int _19;
  sizetype _20;
  char * _21;
  char _22;
  int _23;
  struct player_info * _24;
  int _25;
  int _26;
  struct player_info * _27;
  int _28;
  int _29;
  struct player_info * _30;
  int _31;
  int _32;
  struct player_info * _33;
  int _34;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  low_36 = 0;
  upp_37 = 0;
  number_38 = 0;
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                9
  low_42 = 1;
  upp_43 = 29;
  _3 = rand ();
  _4 = upp_43 - low_42;
  _5 = _4 + 1;
  _6 = _3 % _5;
  _7 = low_42 + _6;
  serwer_45(D)->bestia.x = _7;
  low_47 = 1;
  upp_48 = 19;
  _8 = rand ();
  _9 = upp_48 - low_47;
  _10 = _9 + 1;
  _11 = _8 % _10;
  _12 = low_47 + _11;
  serwer_45(D)->bestia.y = _12;
  _13 = serwer_45(D)->mapa;
  _14 = serwer_45(D)->bestia.y;
  _15 = (long unsigned int) _14;
  _16 = _15 * 8;
  _17 = _13 + _16;
  _18 = *_17;
  _19 = serwer_45(D)->bestia.x;
  _20 = (sizetype) _19;
  _21 = _18 + _20;
  _22 = *_21;
  if (_22 == 46)
    goto <bb 4>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       4
;;                9

;;   basic block 4, loop depth 1
;;    pred:       3
  _23 = serwer_45(D)->bestia.y;
  _24 = serwer_45(D)->player1;
  _25 = _24->y_current;
  if (_23 != _25)
    goto <bb 5>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       5
;;                9

;;   basic block 5, loop depth 1
;;    pred:       4
  _26 = serwer_45(D)->bestia.x;
  _27 = serwer_45(D)->player1;
  _28 = _27->x_current;
  if (_26 != _28)
    goto <bb 6>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       6
;;                9

;;   basic block 6, loop depth 1
;;    pred:       5
  _29 = serwer_45(D)->bestia.y;
  _30 = serwer_45(D)->player2;
  _31 = _30->y_current;
  if (_29 != _31)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       7
;;                9

;;   basic block 7, loop depth 1
;;    pred:       6
  _32 = serwer_45(D)->bestia.x;
  _33 = serwer_45(D)->player2;
  _34 = _33->x_current;
  if (_32 != _34)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 9, loop depth 1
;;    pred:       3
;;                4
;;                5
;;                6
;;                7
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 10, loop depth 0
;;    pred:       8
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       10
<L12>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; low_36 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 0 [0])) "function.c":883 -1
     (nil))

;; upp_37 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 0 [0])) "function.c":884 -1
     (nil))

;; number_38 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 number+0 S4 A32])
        (const_int 0 [0])) "function.c":885 -1
     (nil))

;; _1 = time (0B);

(insn 9 8 10 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":886 -1
     (nil))

(call_insn 10 9 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":886 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 11 10 0 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":886 -1
     (nil))

;; _2 = (unsigned int) _1;

(insn 12 11 0 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":886 -1
     (nil))

;; srand (_2);

(insn 13 12 14 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":886 -1
     (nil))

(call_insn 14 13 0 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":886 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; Generating RTL for gimple basic block 3

;; low_42 = 1;

(insn 16 15 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":890 -1
     (nil))

;; upp_43 = 29;

(insn 17 16 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":890 -1
     (nil))

;; _3 = rand ();

(call_insn 18 17 19 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f7cd0fe1600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "function.c":891 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 19 18 0 (set (reg:SI 89 [ _3 ])
        (reg:SI 0 ax)) "function.c":891 -1
     (nil))

;; _4 = upp_43 - low_42;

(insn 20 19 21 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":891 -1
     (nil))

(insn 21 20 0 (parallel [
            (set (reg:SI 90 [ _4 ])
                (minus:SI (reg:SI 121)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))

;; _5 = _4 + 1;

(insn 22 21 0 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (nil))

;; _6 = _3 % _5;

(insn 23 22 24 (parallel [
            (set (reg:SI 123)
                (div:SI (reg:SI 89 [ _3 ])
                    (reg:SI 91 [ _5 ])))
            (set (reg:SI 122)
                (mod:SI (reg:SI 89 [ _3 ])
                    (reg:SI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (nil))

(insn 24 23 0 (set (reg:SI 92 [ _6 ])
        (reg:SI 122)) "function.c":891 -1
     (nil))

;; _7 = low_42 + _6;

(insn 25 24 26 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":891 -1
     (nil))

(insn 26 25 0 (parallel [
            (set (reg:SI 93 [ _7 ])
                (plus:SI (reg:SI 92 [ _6 ])
                    (reg:SI 124)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 92 [ _6 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))

;; serwer_45(D)->bestia.x = _7;

(insn 27 26 28 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":891 -1
     (nil))

(insn 28 27 0 (set (mem:SI (plus:DI (reg/f:DI 125)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])
        (reg:SI 93 [ _7 ])) "function.c":891 -1
     (nil))

;; low_47 = 1;

(insn 29 28 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":893 -1
     (nil))

;; upp_48 = 19;

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":893 -1
     (nil))

;; _8 = rand ();

(call_insn 31 30 32 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f7cd0fe1600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "function.c":894 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))

(insn 32 31 0 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "function.c":894 -1
     (nil))

;; _9 = upp_48 - low_47;

(insn 33 32 34 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":894 -1
     (nil))

(insn 34 33 0 (parallel [
            (set (reg:SI 95 [ _9 ])
                (minus:SI (reg:SI 126)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))

;; _10 = _9 + 1;

(insn 35 34 0 (parallel [
            (set (reg:SI 96 [ _10 ])
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (nil))

;; _11 = _8 % _10;

(insn 36 35 37 (parallel [
            (set (reg:SI 128)
                (div:SI (reg:SI 94 [ _8 ])
                    (reg:SI 96 [ _10 ])))
            (set (reg:SI 127)
                (mod:SI (reg:SI 94 [ _8 ])
                    (reg:SI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (nil))

(insn 37 36 0 (set (reg:SI 97 [ _11 ])
        (reg:SI 127)) "function.c":894 -1
     (nil))

;; _12 = low_47 + _11;

(insn 38 37 39 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":894 -1
     (nil))

(insn 39 38 0 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (reg:SI 129)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 97 [ _11 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))

;; serwer_45(D)->bestia.y = _12;

(insn 40 39 41 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":894 -1
     (nil))

(insn 41 40 0 (set (mem:SI (plus:DI (reg/f:DI 130)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])
        (reg:SI 98 [ _12 ])) "function.c":894 -1
     (nil))

;; _13 = serwer_45(D)->mapa;

(insn 42 41 43 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 43 42 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 131)
                (const_int 16 [0x10])) [9 serwer_45(D)->mapa+0 S8 A64])) "function.c":896 -1
     (nil))

;; _14 = serwer_45(D)->bestia.y;

(insn 44 43 45 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 45 44 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 132)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])) "function.c":896 -1
     (nil))

;; _15 = (long unsigned int) _14;

(insn 46 45 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 100 [ _14 ]))) "function.c":896 -1
     (nil))

;; _16 = _15 * 8;

(insn 47 46 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":896 -1
     (nil))

;; _17 = _13 + _16;

(insn 48 47 0 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 99 [ _13 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":896 -1
     (nil))

;; _18 = *_17;

(insn 49 48 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 103 [ _17 ]) [10 *_17+0 S8 A64])) "function.c":896 -1
     (nil))

;; _19 = serwer_45(D)->bestia.x;

(insn 50 49 51 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 51 50 0 (set (reg:SI 105 [ _19 ])
        (mem:SI (plus:DI (reg/f:DI 133)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])) "function.c":896 -1
     (nil))

;; _20 = (sizetype) _19;

(insn 52 51 0 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 105 [ _19 ]))) "function.c":896 -1
     (nil))

;; _21 = _18 + _20;

(insn 53 52 0 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg/f:DI 104 [ _18 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":896 -1
     (nil))

;; _22 = *_21;

(insn 54 53 0 (set (reg:QI 108 [ _22 ])
        (mem:QI (reg/f:DI 107 [ _21 ]) [0 *_21+0 S1 A8])) "function.c":896 -1
     (nil))

;; if (_22 == 46)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _22 ])
            (const_int 46 [0x2e]))) "function.c":896 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":896 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _23 = serwer_45(D)->bestia.y;

(insn 58 57 59 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 59 58 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 134)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])) "function.c":896 -1
     (nil))

;; _24 = serwer_45(D)->player1;

(insn 60 59 61 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 61 60 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 135)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":896 -1
     (nil))

;; _25 = _24->y_current;

(insn 62 61 0 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 16 [0x10])) [3 _24->y_current+0 S4 A64])) "function.c":896 -1
     (nil))

;; if (_23 != _25)

(insn 63 62 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ _23 ])
            (reg:SI 111 [ _25 ]))) "function.c":896 -1
     (nil))

(jump_insn 64 63 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":896 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _26 = serwer_45(D)->bestia.x;

(insn 66 65 67 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 67 66 0 (set (reg:SI 112 [ _26 ])
        (mem:SI (plus:DI (reg/f:DI 136)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])) "function.c":896 -1
     (nil))

;; _27 = serwer_45(D)->player1;

(insn 68 67 69 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))

(insn 69 68 0 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 137)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":896 -1
     (nil))

;; _28 = _27->x_current;

(insn 70 69 0 (set (reg:SI 114 [ _28 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 12 [0xc])) [3 _27->x_current+0 S4 A32])) "function.c":896 -1
     (nil))

;; if (_26 != _28)

(insn 71 70 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ _26 ])
            (reg:SI 114 [ _28 ]))) "function.c":896 -1
     (nil))

(jump_insn 72 71 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":896 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _29 = serwer_45(D)->bestia.y;

(insn 74 73 75 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))

(insn 75 74 0 (set (reg:SI 115 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 138)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])) "function.c":897 -1
     (nil))

;; _30 = serwer_45(D)->player2;

(insn 76 75 77 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))

(insn 77 76 0 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 139)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":897 -1
     (nil))

;; _31 = _30->y_current;

(insn 78 77 0 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 16 [0x10])) [3 _30->y_current+0 S4 A64])) "function.c":897 -1
     (nil))

;; if (_29 != _31)

(insn 79 78 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ _29 ])
            (reg:SI 117 [ _31 ]))) "function.c":897 -1
     (nil))

(jump_insn 80 79 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":897 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _32 = serwer_45(D)->bestia.x;

(insn 82 81 83 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))

(insn 83 82 0 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (reg/f:DI 140)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])) "function.c":897 -1
     (nil))

;; _33 = serwer_45(D)->player2;

(insn 84 83 85 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))

(insn 85 84 0 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 141)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":897 -1
     (nil))

;; _34 = _33->x_current;

(insn 86 85 0 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 12 [0xc])) [3 _33->x_current+0 S4 A32])) "function.c":897 -1
     (nil))

;; if (_32 != _34)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ _32 ])
            (reg:SI 120 [ _34 ]))) "function.c":897 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":897 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; Generating RTL for gimple basic block 9

;; 

(code_label 92 91 93 132 (nil) [0 uses])

(note 93 92 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 10

;; 

(code_label 97 96 98 133 (nil) [0 uses])

(note 98 97 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 11

;; <L12>:

(code_label 99 98 100 135 (nil) [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 8->9 to 11 failed.
Merging block 12 into block 11...
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Merging block 13 into block 11...
Merged blocks 11 and 13.
Merged 11 and 13 without moving.


try_optimize_cfg iteration 2

Forwarding edge 8->9 to 11 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":882 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 0 [0])) "function.c":883 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 0 [0])) "function.c":884 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 number+0 S4 A32])
        (const_int 0 [0])) "function.c":885 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":886 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":886 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":886 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":886 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":886 -1
     (nil))
(call_insn 14 13 94 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":886 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              10 (DFS_BACK)
(code_label 94 14 15 4 134 (nil) [1 uses])
(note 15 94 16 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":890 -1
     (nil))
(insn 17 16 18 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":890 -1
     (nil))
(call_insn 18 17 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f7cd0fe1600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "function.c":891 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 19 18 20 4 (set (reg:SI 89 [ _3 ])
        (reg:SI 0 ax)) "function.c":891 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":891 -1
     (nil))
(insn 21 20 22 4 (parallel [
            (set (reg:SI 90 [ _4 ])
                (minus:SI (reg:SI 121)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))
(insn 22 21 23 4 (parallel [
            (set (reg:SI 91 [ _5 ])
                (plus:SI (reg:SI 90 [ _4 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg:SI 123)
                (div:SI (reg:SI 89 [ _3 ])
                    (reg:SI 91 [ _5 ])))
            (set (reg:SI 122)
                (mod:SI (reg:SI 89 [ _3 ])
                    (reg:SI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (nil))
(insn 24 23 25 4 (set (reg:SI 92 [ _6 ])
        (reg:SI 122)) "function.c":891 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 124)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":891 -1
     (nil))
(insn 26 25 27 4 (parallel [
            (set (reg:SI 93 [ _7 ])
                (plus:SI (reg:SI 92 [ _6 ])
                    (reg:SI 124)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":891 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 92 [ _6 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))
(insn 27 26 28 4 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":891 -1
     (nil))
(insn 28 27 29 4 (set (mem:SI (plus:DI (reg/f:DI 125)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])
        (reg:SI 93 [ _7 ])) "function.c":891 -1
     (nil))
(insn 29 28 30 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":893 -1
     (nil))
(insn 30 29 31 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":893 -1
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("rand") [flags 0x41]  <function_decl 0x7f7cd0fe1600 rand>) [0 rand S1 A8])
            (const_int 0 [0]))) "function.c":894 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (nil))
(insn 32 31 33 4 (set (reg:SI 94 [ _8 ])
        (reg:SI 0 ax)) "function.c":894 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 126)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":894 -1
     (nil))
(insn 34 33 35 4 (parallel [
            (set (reg:SI 95 [ _9 ])
                (minus:SI (reg:SI 126)
                    (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))
(insn 35 34 36 4 (parallel [
            (set (reg:SI 96 [ _10 ])
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (nil))
(insn 36 35 37 4 (parallel [
            (set (reg:SI 128)
                (div:SI (reg:SI 94 [ _8 ])
                    (reg:SI 96 [ _10 ])))
            (set (reg:SI 127)
                (mod:SI (reg:SI 94 [ _8 ])
                    (reg:SI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (nil))
(insn 37 36 38 4 (set (reg:SI 97 [ _11 ])
        (reg:SI 127)) "function.c":894 -1
     (nil))
(insn 38 37 39 4 (set (reg:SI 129)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":894 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 97 [ _11 ])
                    (reg:SI 129)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":894 -1
     (expr_list:REG_EQUAL (plus:SI (reg:SI 97 [ _11 ])
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32]))
        (nil)))
(insn 40 39 41 4 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":894 -1
     (nil))
(insn 41 40 42 4 (set (mem:SI (plus:DI (reg/f:DI 130)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])
        (reg:SI 98 [ _12 ])) "function.c":894 -1
     (nil))
(insn 42 41 43 4 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 43 42 44 4 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 131)
                (const_int 16 [0x10])) [9 serwer_45(D)->mapa+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 44 43 45 4 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 45 44 46 4 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 132)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])) "function.c":896 -1
     (nil))
(insn 46 45 47 4 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 100 [ _14 ]))) "function.c":896 -1
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":896 -1
     (nil))
(insn 48 47 49 4 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 99 [ _13 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":896 -1
     (nil))
(insn 49 48 50 4 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 103 [ _17 ]) [10 *_17+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 50 49 51 4 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 51 50 52 4 (set (reg:SI 105 [ _19 ])
        (mem:SI (plus:DI (reg/f:DI 133)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])) "function.c":896 -1
     (nil))
(insn 52 51 53 4 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 105 [ _19 ]))) "function.c":896 -1
     (nil))
(insn 53 52 54 4 (parallel [
            (set (reg/f:DI 107 [ _21 ])
                (plus:DI (reg/f:DI 104 [ _18 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":896 -1
     (nil))
(insn 54 53 55 4 (set (reg:QI 108 [ _22 ])
        (mem:QI (reg/f:DI 107 [ _21 ]) [0 *_21+0 S1 A8])) "function.c":896 -1
     (nil))
(insn 55 54 56 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _22 ])
            (const_int 46 [0x2e]))) "function.c":896 -1
     (nil))
(jump_insn 56 55 57 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "function.c":896 -1
     (nil)
 -> 92)
;;  succ:       5 (FALLTHRU)
;;              10

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 57 56 58 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 5 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 59 58 60 5 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 134)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])) "function.c":896 -1
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 61 60 62 5 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 135)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 62 61 63 5 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 16 [0x10])) [3 _24->y_current+0 S4 A64])) "function.c":896 -1
     (nil))
(insn 63 62 64 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ _23 ])
            (reg:SI 111 [ _25 ]))) "function.c":896 -1
     (nil))
(jump_insn 64 63 65 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "function.c":896 -1
     (nil)
 -> 92)
;;  succ:       6 (FALLTHRU)
;;              10

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 65 64 66 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 6 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 67 66 68 6 (set (reg:SI 112 [ _26 ])
        (mem:SI (plus:DI (reg/f:DI 136)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])) "function.c":896 -1
     (nil))
(insn 68 67 69 6 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 69 68 70 6 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 137)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":896 -1
     (nil))
(insn 70 69 71 6 (set (reg:SI 114 [ _28 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 12 [0xc])) [3 _27->x_current+0 S4 A32])) "function.c":896 -1
     (nil))
(insn 71 70 72 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 112 [ _26 ])
            (reg:SI 114 [ _28 ]))) "function.c":896 -1
     (nil))
(jump_insn 72 71 73 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "function.c":896 -1
     (nil)
 -> 92)
;;  succ:       7 (FALLTHRU)
;;              10

;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 73 72 74 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 74 73 75 7 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))
(insn 75 74 76 7 (set (reg:SI 115 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 138)
                (const_int 36068 [0x8ce4])) [3 serwer_45(D)->bestia.y+0 S4 A32])) "function.c":897 -1
     (nil))
(insn 76 75 77 7 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))
(insn 77 76 78 7 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 139)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":897 -1
     (nil))
(insn 78 77 79 7 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 16 [0x10])) [3 _30->y_current+0 S4 A64])) "function.c":897 -1
     (nil))
(insn 79 78 80 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 115 [ _29 ])
            (reg:SI 117 [ _31 ]))) "function.c":897 -1
     (nil))
(jump_insn 80 79 81 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "function.c":897 -1
     (nil)
 -> 92)
;;  succ:       8 (FALLTHRU)
;;              10

;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 81 80 82 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 8 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))
(insn 83 82 84 8 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (reg/f:DI 140)
                (const_int 36064 [0x8ce0])) [3 serwer_45(D)->bestia.x+0 S4 A64])) "function.c":897 -1
     (nil))
(insn 84 83 85 8 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":897 -1
     (nil))
(insn 85 84 86 8 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 141)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":897 -1
     (nil))
(insn 86 85 87 8 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 12 [0xc])) [3 _33->x_current+0 S4 A32])) "function.c":897 -1
     (nil))
(insn 87 86 88 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 118 [ _32 ])
            (reg:SI 120 [ _34 ]))) "function.c":897 -1
     (nil))
(jump_insn 88 87 89 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 92)
            (pc))) "function.c":897 -1
     (nil)
 -> 92)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 89 88 90 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 90 89 91 9 (set (pc)
        (label_ref 97)) "function.c":899 -1
     (nil)
 -> 97)
;;  succ:       11

(barrier 91 90 92)
;; basic block 10, loop depth 1, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5
;;              6
;;              7
;;              8
(code_label 92 91 93 10 132 (nil) [5 uses])
(note 93 92 95 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 95 93 96 10 (set (pc)
        (label_ref 94)) "function.c":890 -1
     (nil)
 -> 94)
;;  succ:       4 (DFS_BACK)

(barrier 96 95 97)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 97 96 98 11 133 (nil) [1 uses])
(note 98 97 103 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 103 98 0 11 (const_int 0 [0]) "function.c":903 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function wizja1 (wizja1, funcdef_no=20, decl_uid=6244, cgraph_uid=20, symbol_order=23)

wizja1 (struct user_info * user)
{
  int m;
  int j;
  int i;
  int x;
  int y;
  int y_upp;
  int y_low;
  int x_upp;
  int x_low;
  int w;
  int q;
  int D.6756;
  struct serwer_info * _1;
  struct player_info * _2;
  int _3;
  struct serwer_info * _4;
  struct player_info * _5;
  struct serwer_info * _6;
  struct player_info * _7;
  int _8;
  struct serwer_info * _9;
  struct player_info * _10;
  int _11;
  struct serwer_info * _12;
  struct player_info * _13;
  int _14;
  struct serwer_info * _15;
  struct player_info * _16;
  int _17;
  struct serwer_info * _18;
  struct player_info * _19;
  int _20;
  struct serwer_info * _21;
  struct player_info * _22;
  int _23;
  struct serwer_info * _24;
  struct player_info * _25;
  struct serwer_info * _26;
  struct player_info * _27;
  int _28;
  struct serwer_info * _29;
  struct player_info * _30;
  int _31;
  struct serwer_info * _32;
  struct player_info * _33;
  int _34;
  struct serwer_info * _35;
  struct player_info * _36;
  int _37;
  struct serwer_info * _38;
  struct player_info * _39;
  int _40;
  struct serwer_info * _41;
  char * * _42;
  long unsigned int _43;
  long unsigned int _44;
  char * * _45;
  char * _46;
  sizetype _47;
  char * _48;
  struct serwer_info * _49;
  struct player_info * _50;
  char _51;
  struct serwer_info * _52;
  int _53;
  struct serwer_info * _54;
  int _55;
  struct serwer_info * _56;
  struct player_info * _57;
  struct serwer_info * _58;
  int _59;
  struct serwer_info * _60;
  int _61;
  struct serwer_info * _62;
  int _63;
  struct serwer_info * _64;
  struct player_info * _65;
  struct serwer_info * _66;
  int _67;
  struct serwer_info * _68;
  struct player_info * _69;
  int _70;
  struct serwer_info * _71;
  struct player_info * _72;
  int _73;
  struct serwer_info * _74;
  struct player_info * _75;
  struct serwer_info * _76;
  struct player_info * _77;
  int _144;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_100 = 0;
  w_101 = 0;
  x_low_102 = 0;
  x_upp_103 = 0;
  y_low_104 = 0;
  y_upp_105 = 0;
  y_106 = 0;
  x_107 = 0;
  _1 = user_109(D)->serwer;
  _2 = _1->player1;
  _3 = _2->y_current;
  if (_3 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  y_low_110 = 0;
  y_upp_111 = 5;
  _4 = user_109(D)->serwer;
  _5 = _4->player1;
  y_112 = _5->y_current;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  _6 = user_109(D)->serwer;
  _7 = _6->player1;
  _8 = _7->y_current;
  if (_8 > 17)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       5
;;                10

;;   basic block 5, loop depth 0
;;    pred:       4
  y_low_113 = 16;
  y_upp_114 = 20;
  _9 = user_109(D)->serwer;
  _10 = _9->player1;
  _11 = _10->y_current;
  if (_11 == 18)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  y_115 = 2;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # y_85 = PHI <y_106(5), y_115(6)>
  _12 = user_109(D)->serwer;
  _13 = _12->player1;
  _14 = _13->y_current;
  if (_14 == 19)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  y_116 = 3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # y_86 = PHI <y_85(7), y_116(8)>
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       4
  _15 = user_109(D)->serwer;
  _16 = _15->player1;
  _17 = _16->y_current;
  y_low_117 = _17 + -2;
  _18 = user_109(D)->serwer;
  _19 = _18->player1;
  _20 = _19->y_current;
  y_upp_118 = _20 + 2;
  y_119 = 2;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                9
;;                10
  # y_low_83 = PHI <y_low_110(3), y_low_113(9), y_low_117(10)>
  # y_upp_84 = PHI <y_upp_111(3), y_upp_114(9), y_upp_118(10)>
  # y_87 = PHI <y_112(3), y_86(9), y_119(10)>
  _21 = user_109(D)->serwer;
  _22 = _21->player1;
  _23 = _22->x_current;
  if (_23 <= 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  x_low_120 = 0;
  x_upp_121 = 5;
  _24 = user_109(D)->serwer;
  _25 = _24->player1;
  x_122 = _25->x_current;
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 13, loop depth 0
;;    pred:       11
  _26 = user_109(D)->serwer;
  _27 = _26->player1;
  _28 = _27->x_current;
  if (_28 > 27)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       14
;;                19

;;   basic block 14, loop depth 0
;;    pred:       13
  x_low_123 = 26;
  x_upp_124 = 30;
  _29 = user_109(D)->serwer;
  _30 = _29->player1;
  _31 = _30->x_current;
  if (_31 == 28)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  x_125 = 2;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  # x_88 = PHI <x_107(14), x_125(15)>
  _32 = user_109(D)->serwer;
  _33 = _32->player1;
  _34 = _33->x_current;
  if (_34 == 29)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  x_126 = 3;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  # x_89 = PHI <x_88(16), x_126(17)>
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 19, loop depth 0
;;    pred:       13
  _35 = user_109(D)->serwer;
  _36 = _35->player1;
  _37 = _36->x_current;
  x_low_127 = _37 + -2;
  _38 = user_109(D)->serwer;
  _39 = _38->player1;
  _40 = _39->x_current;
  x_upp_128 = _40 + 2;
  x_129 = 2;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       12
;;                18
;;                19
  # x_low_81 = PHI <x_low_120(12), x_low_123(18), x_low_127(19)>
  # x_upp_82 = PHI <x_upp_121(12), x_upp_124(18), x_upp_128(19)>
  # x_90 = PHI <x_122(12), x_89(18), x_129(19)>
  i_130 = y_low_83;
  goto <bb 38>; [INV]
;;    succ:       38

;;   basic block 21, loop depth 1
;;    pred:       38
  j_131 = x_low_81;
  goto <bb 36>; [INV]
;;    succ:       36

;;   basic block 22, loop depth 2
;;    pred:       36
  _41 = user_109(D)->serwer;
  _42 = _41->mapa;
  _43 = (long unsigned int) i_91;
  _44 = _43 * 8;
  _45 = _42 + _44;
  _46 = *_45;
  _47 = (sizetype) j_92;
  _48 = _46 + _47;
  _49 = user_109(D)->serwer;
  _50 = _49->player1;
  _51 = *_48;
  _50->area[q_78][w_79] = _51;
  _52 = user_109(D)->serwer;
  _53 = _52->bestia.y;
  if (i_91 == _53)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       23
;;                25

;;   basic block 23, loop depth 2
;;    pred:       22
  _54 = user_109(D)->serwer;
  _55 = _54->bestia.x;
  if (j_92 == _55)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 2
;;    pred:       23
  _56 = user_109(D)->serwer;
  _57 = _56->player1;
  _57->area[q_78][w_79] = 42;
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       22
;;                23
;;                24
  m_134 = 0;
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 26, loop depth 3
;;    pred:       31
  _58 = user_109(D)->serwer;
  _59 = _58->skarb.value_all_dropped_coin[m_93];
  if (_59 >= 0)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       27
;;                30

;;   basic block 27, loop depth 3
;;    pred:       26
  _60 = user_109(D)->serwer;
  _61 = _60->skarb.dropped_coin[m_93][0];
  if (i_91 == _61)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       28
;;                30

;;   basic block 28, loop depth 3
;;    pred:       27
  _62 = user_109(D)->serwer;
  _63 = _62->skarb.dropped_coin[m_93][1];
  if (j_92 == _63)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 3
;;    pred:       28
  _64 = user_109(D)->serwer;
  _65 = _64->player1;
  _65->area[q_78][w_79] = 68;
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       26
;;                27
;;                28
;;                29
  m_136 = m_93 + 1;
;;    succ:       31

;;   basic block 31, loop depth 3
;;    pred:       25
;;                30
  # m_93 = PHI <m_134(25), m_136(30)>
  _66 = user_109(D)->serwer;
  _67 = _66->skarb.count_drop_coin;
  if (m_93 < _67)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       26
;;                32

;;   basic block 32, loop depth 2
;;    pred:       31
  _68 = user_109(D)->serwer;
  _69 = _68->player1;
  _70 = _69->y_current;
  if (i_91 == _70)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       33
;;                35

;;   basic block 33, loop depth 2
;;    pred:       32
  _71 = user_109(D)->serwer;
  _72 = _71->player1;
  _73 = _72->x_current;
  if (j_92 == _73)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       34
;;                35

;;   basic block 34, loop depth 2
;;    pred:       33
  _74 = user_109(D)->serwer;
  _75 = _74->player1;
  _75->area[q_78][w_79] = 50;
;;    succ:       35

;;   basic block 35, loop depth 2
;;    pred:       32
;;                33
;;                34
  w_138 = w_79 + 1;
  j_139 = j_92 + 1;
;;    succ:       36

;;   basic block 36, loop depth 2
;;    pred:       21
;;                35
  # w_79 = PHI <w_80(21), w_138(35)>
  # j_92 = PHI <j_131(21), j_139(35)>
  if (j_92 <= x_upp_82)
    goto <bb 22>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       22
;;                37

;;   basic block 37, loop depth 1
;;    pred:       36
  q_140 = q_78 + 1;
  w_141 = 0;
  i_142 = i_91 + 1;
;;    succ:       38

;;   basic block 38, loop depth 1
;;    pred:       20
;;                37
  # q_78 = PHI <q_100(20), q_140(37)>
  # w_80 = PHI <w_101(20), w_141(37)>
  # i_91 = PHI <i_130(20), i_142(37)>
  if (i_91 <= y_upp_84)
    goto <bb 21>; [INV]
  else
    goto <bb 39>; [INV]
;;    succ:       21
;;                39

;;   basic block 39, loop depth 0
;;    pred:       38
  _76 = user_109(D)->serwer;
  _77 = _76->player1;
  _77->area[y_87][x_90] = 49;
  _144 = 0;
;;    succ:       40

;;   basic block 40, loop depth 0
;;    pred:       39
<L43>:
  return _144;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (q_78 - 78 )
Partition 79 (w_79 - 79 )
Partition 80 (w_80 - 80 )
Partition 81 (x_low_81 - 81 )
Partition 82 (x_upp_82 - 82 )
Partition 83 (y_low_83 - 83 )
Partition 84 (y_upp_84 - 84 )
Partition 85 (y_85 - 85 )
Partition 86 (y_86 - 86 )
Partition 87 (y_87 - 87 )
Partition 88 (x_88 - 88 )
Partition 89 (x_89 - 89 )
Partition 90 (x_90 - 90 )
Partition 91 (i_91 - 91 )
Partition 92 (j_92 - 92 )
Partition 93 (m_93 - 93 )
Partition 100 (q_100 - 100 )
Partition 101 (w_101 - 101 )
Partition 102 (x_low_102 - 102 )
Partition 103 (x_upp_103 - 103 )
Partition 104 (y_low_104 - 104 )
Partition 105 (y_upp_105 - 105 )
Partition 106 (y_106 - 106 )
Partition 107 (x_107 - 107 )
Partition 109 (user_109(D) - 109 )
Partition 110 (y_low_110 - 110 )
Partition 111 (y_upp_111 - 111 )
Partition 112 (y_112 - 112 )
Partition 113 (y_low_113 - 113 )
Partition 114 (y_upp_114 - 114 )
Partition 115 (y_115 - 115 )
Partition 116 (y_116 - 116 )
Partition 117 (y_low_117 - 117 )
Partition 118 (y_upp_118 - 118 )
Partition 119 (y_119 - 119 )
Partition 120 (x_low_120 - 120 )
Partition 121 (x_upp_121 - 121 )
Partition 122 (x_122 - 122 )
Partition 123 (x_low_123 - 123 )
Partition 124 (x_upp_124 - 124 )
Partition 125 (x_125 - 125 )
Partition 126 (x_126 - 126 )
Partition 127 (x_low_127 - 127 )
Partition 128 (x_upp_128 - 128 )
Partition 129 (x_129 - 129 )
Partition 130 (i_130 - 130 )
Partition 131 (j_131 - 131 )
Partition 134 (m_134 - 134 )
Partition 136 (m_136 - 136 )
Partition 138 (w_138 - 138 )
Partition 139 (j_139 - 139 )
Partition 140 (q_140 - 140 )
Partition 141 (w_141 - 141 )
Partition 142 (i_142 - 142 )
Partition 144 (_144 - 144 )
Partition 145 (_145(D) - 145 )


Coalescible Partition map 

Partition 0, base 0 (q_78 - 78 100 140 )
Partition 1, base 1 (w_79 - 79 80 101 138 141 )
Partition 3, base 2 (x_low_81 - 81 102 120 123 127 )
Partition 4, base 3 (x_upp_82 - 82 103 121 124 128 )
Partition 5, base 4 (y_low_83 - 83 104 110 113 117 )
Partition 6, base 5 (y_upp_84 - 84 105 111 114 118 )
Partition 7, base 6 (y_85 - 85 86 87 106 112 115 116 119 )
Partition 10, base 7 (x_88 - 88 89 90 107 122 125 126 129 )
Partition 13, base 8 (i_91 - 91 130 142 )
Partition 14, base 9 (j_92 - 92 131 139 )
Partition 15, base 10 (m_93 - 93 134 136 )
Partition 24, base 11 (user_109(D) - 109 )
Partition 54, base 12 (_145(D) - 145 )


Partition map 

Partition 0 (q_78 - 78 )
Partition 1 (w_79 - 79 )
Partition 2 (w_80 - 80 )
Partition 3 (x_low_81 - 81 )
Partition 4 (x_upp_82 - 82 )
Partition 5 (y_low_83 - 83 )
Partition 6 (y_upp_84 - 84 )
Partition 7 (y_85 - 85 )
Partition 8 (y_86 - 86 )
Partition 9 (y_87 - 87 )
Partition 10 (x_88 - 88 )
Partition 11 (x_89 - 89 )
Partition 12 (x_90 - 90 )
Partition 13 (i_91 - 91 )
Partition 14 (j_92 - 92 )
Partition 15 (m_93 - 93 )
Partition 16 (q_100 - 100 )
Partition 17 (w_101 - 101 )
Partition 18 (x_low_102 - 102 )
Partition 19 (x_upp_103 - 103 )
Partition 20 (y_low_104 - 104 )
Partition 21 (y_upp_105 - 105 )
Partition 22 (y_106 - 106 )
Partition 23 (x_107 - 107 )
Partition 24 (user_109(D) - 109 )
Partition 25 (y_low_110 - 110 )
Partition 26 (y_upp_111 - 111 )
Partition 27 (y_112 - 112 )
Partition 28 (y_low_113 - 113 )
Partition 29 (y_upp_114 - 114 )
Partition 30 (y_115 - 115 )
Partition 31 (y_116 - 116 )
Partition 32 (y_low_117 - 117 )
Partition 33 (y_upp_118 - 118 )
Partition 34 (y_119 - 119 )
Partition 35 (x_low_120 - 120 )
Partition 36 (x_upp_121 - 121 )
Partition 37 (x_122 - 122 )
Partition 38 (x_low_123 - 123 )
Partition 39 (x_upp_124 - 124 )
Partition 40 (x_125 - 125 )
Partition 41 (x_126 - 126 )
Partition 42 (x_low_127 - 127 )
Partition 43 (x_upp_128 - 128 )
Partition 44 (x_129 - 129 )
Partition 45 (i_130 - 130 )
Partition 46 (j_131 - 131 )
Partition 47 (m_134 - 134 )
Partition 48 (m_136 - 136 )
Partition 49 (w_138 - 138 )
Partition 50 (j_139 - 139 )
Partition 51 (q_140 - 140 )
Partition 52 (w_141 - 141 )
Partition 53 (i_142 - 142 )
Partition 54 (_145(D) - 145 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) y_85 <-> y_106
(2147483646, 0) y_85 <-> y_115
(2147483646, 0) y_85 <-> y_86
(2147483646, 0) y_low_83 <-> y_low_110
(2147483646, 0) y_low_83 <-> y_low_113
(2147483646, 0) y_low_83 <-> y_low_117
(2147483646, 0) y_upp_84 <-> y_upp_111
(2147483646, 0) y_upp_84 <-> y_upp_114
(2147483646, 0) y_upp_84 <-> y_upp_118
(2147483646, 0) x_88 <-> x_107
(2147483646, 0) x_88 <-> x_125
(2147483646, 0) x_88 <-> x_89
(2147483646, 0) x_low_81 <-> x_low_120
(2147483646, 0) x_low_81 <-> x_low_123
(2147483646, 0) x_low_81 <-> x_low_127
(2147483646, 0) x_upp_82 <-> x_upp_121
(2147483646, 0) x_upp_82 <-> x_upp_124
(2147483646, 0) x_upp_82 <-> x_upp_128
(2147483646, 0) m_93 <-> m_134
(2147483646, 0) m_93 <-> m_136
(2147483646, 0) w_79 <-> w_80
(2147483646, 0) w_79 <-> w_138
(2147483646, 0) j_92 <-> j_131
(2147483646, 0) j_92 <-> j_139
(2147483646, 0) q_78 <-> q_100
(2147483646, 0) q_78 <-> q_140
(2147483646, 0) i_91 <-> i_130
(2147483646, 0) i_91 <-> i_142
(2147483646, 0) y_85 <-> y_87
(2147483646, 0) x_88 <-> x_90
(2147483646, 0) w_79 <-> w_101
(2147483646, 0) x_low_81 <-> x_low_102
(2147483646, 0) x_upp_82 <-> x_upp_103
(2147483646, 0) y_low_83 <-> y_low_104
(2147483646, 0) y_upp_84 <-> y_upp_105
(2147483646, 0) y_85 <-> y_112
(2147483646, 0) y_85 <-> y_116
(2147483646, 0) y_85 <-> y_119
(2147483646, 0) x_88 <-> x_122
(2147483646, 0) x_88 <-> x_126
(2147483646, 0) x_88 <-> x_129
(2147483646, 0) w_79 <-> w_141
(10000, 0) y_86 <-> y_116
(10000, 0) y_87 <-> y_112
(10000, 0) y_86 <-> y_87
(10000, 0) y_87 <-> y_119
(10000, 0) x_89 <-> x_126
(10000, 0) x_90 <-> x_122
(10000, 0) x_89 <-> x_90
(10000, 0) x_90 <-> x_129
(10000, 0) w_80 <-> w_101
(10000, 0) w_80 <-> w_141

Partition map 

Partition 0 (q_78 - 78 )
Partition 1 (w_79 - 79 )
Partition 2 (w_80 - 80 )
Partition 3 (x_low_81 - 81 )
Partition 4 (x_upp_82 - 82 )
Partition 5 (y_low_83 - 83 )
Partition 6 (y_upp_84 - 84 )
Partition 7 (y_85 - 85 )
Partition 8 (y_86 - 86 )
Partition 9 (y_87 - 87 )
Partition 10 (x_88 - 88 )
Partition 11 (x_89 - 89 )
Partition 12 (x_90 - 90 )
Partition 13 (i_91 - 91 )
Partition 14 (j_92 - 92 )
Partition 15 (m_93 - 93 )
Partition 16 (q_100 - 100 )
Partition 17 (w_101 - 101 )
Partition 18 (x_low_102 - 102 )
Partition 19 (x_upp_103 - 103 )
Partition 20 (y_low_104 - 104 )
Partition 21 (y_upp_105 - 105 )
Partition 22 (y_106 - 106 )
Partition 23 (x_107 - 107 )
Partition 24 (user_109(D) - 109 )
Partition 25 (y_low_110 - 110 )
Partition 26 (y_upp_111 - 111 )
Partition 27 (y_112 - 112 )
Partition 28 (y_low_113 - 113 )
Partition 29 (y_upp_114 - 114 )
Partition 30 (y_115 - 115 )
Partition 31 (y_116 - 116 )
Partition 32 (y_low_117 - 117 )
Partition 33 (y_upp_118 - 118 )
Partition 34 (y_119 - 119 )
Partition 35 (x_low_120 - 120 )
Partition 36 (x_upp_121 - 121 )
Partition 37 (x_122 - 122 )
Partition 38 (x_low_123 - 123 )
Partition 39 (x_upp_124 - 124 )
Partition 40 (x_125 - 125 )
Partition 41 (x_126 - 126 )
Partition 42 (x_low_127 - 127 )
Partition 43 (x_upp_128 - 128 )
Partition 44 (x_129 - 129 )
Partition 45 (i_130 - 130 )
Partition 46 (j_131 - 131 )
Partition 47 (m_134 - 134 )
Partition 48 (m_136 - 136 )
Partition 49 (w_138 - 138 )
Partition 50 (j_139 - 139 )
Partition 51 (q_140 - 140 )
Partition 52 (w_141 - 141 )
Partition 53 (i_142 - 142 )
Partition 54 (_145(D) - 145 )

Coalesce list: (85)y_85 & (106)y_106 [map: 7, 22] : Success -> 7
Coalesce list: (85)y_85 & (115)y_115 [map: 7, 30] : Success -> 7
Coalesce list: (85)y_85 & (86)y_86 [map: 7, 8] : Success -> 7
Coalesce list: (83)y_low_83 & (110)y_low_110 [map: 5, 25] : Success -> 5
Coalesce list: (83)y_low_83 & (113)y_low_113 [map: 5, 28] : Success -> 5
Coalesce list: (83)y_low_83 & (117)y_low_117 [map: 5, 32] : Success -> 5
Coalesce list: (84)y_upp_84 & (111)y_upp_111 [map: 6, 26] : Success -> 6
Coalesce list: (84)y_upp_84 & (114)y_upp_114 [map: 6, 29] : Success -> 6
Coalesce list: (84)y_upp_84 & (118)y_upp_118 [map: 6, 33] : Success -> 6
Coalesce list: (88)x_88 & (107)x_107 [map: 10, 23] : Success -> 10
Coalesce list: (88)x_88 & (125)x_125 [map: 10, 40] : Success -> 10
Coalesce list: (88)x_88 & (89)x_89 [map: 10, 11] : Success -> 10
Coalesce list: (81)x_low_81 & (120)x_low_120 [map: 3, 35] : Success -> 3
Coalesce list: (81)x_low_81 & (123)x_low_123 [map: 3, 38] : Success -> 3
Coalesce list: (81)x_low_81 & (127)x_low_127 [map: 3, 42] : Success -> 3
Coalesce list: (82)x_upp_82 & (121)x_upp_121 [map: 4, 36] : Success -> 4
Coalesce list: (82)x_upp_82 & (124)x_upp_124 [map: 4, 39] : Success -> 4
Coalesce list: (82)x_upp_82 & (128)x_upp_128 [map: 4, 43] : Success -> 4
Coalesce list: (93)m_93 & (134)m_134 [map: 15, 47] : Success -> 15
Coalesce list: (93)m_93 & (136)m_136 [map: 15, 48] : Success -> 15
Coalesce list: (79)w_79 & (80)w_80 [map: 1, 2] : Success -> 1
Coalesce list: (79)w_79 & (138)w_138 [map: 1, 49] : Success -> 1
Coalesce list: (92)j_92 & (131)j_131 [map: 14, 46] : Success -> 14
Coalesce list: (92)j_92 & (139)j_139 [map: 14, 50] : Success -> 14
Coalesce list: (78)q_78 & (100)q_100 [map: 0, 16] : Success -> 0
Coalesce list: (78)q_78 & (140)q_140 [map: 0, 51] : Success -> 0
Coalesce list: (91)i_91 & (130)i_130 [map: 13, 45] : Success -> 13
Coalesce list: (91)i_91 & (142)i_142 [map: 13, 53] : Success -> 13
Coalesce list: (85)y_85 & (87)y_87 [map: 7, 9] : Success -> 7
Coalesce list: (88)x_88 & (90)x_90 [map: 10, 12] : Success -> 10
Coalesce list: (79)w_79 & (101)w_101 [map: 1, 17] : Success -> 1
Coalesce list: (81)x_low_81 & (102)x_low_102 [map: 3, 18] : Success -> 3
Coalesce list: (82)x_upp_82 & (103)x_upp_103 [map: 4, 19] : Success -> 4
Coalesce list: (83)y_low_83 & (104)y_low_104 [map: 5, 20] : Success -> 5
Coalesce list: (84)y_upp_84 & (105)y_upp_105 [map: 6, 21] : Success -> 6
Coalesce list: (85)y_85 & (112)y_112 [map: 7, 27] : Success -> 7
Coalesce list: (85)y_85 & (116)y_116 [map: 7, 31] : Success -> 7
Coalesce list: (85)y_85 & (119)y_119 [map: 7, 34] : Success -> 7
Coalesce list: (88)x_88 & (122)x_122 [map: 10, 37] : Success -> 10
Coalesce list: (88)x_88 & (126)x_126 [map: 10, 41] : Success -> 10
Coalesce list: (88)x_88 & (129)x_129 [map: 10, 44] : Success -> 10
Coalesce list: (79)w_79 & (141)w_141 [map: 1, 52] : Success -> 1
Coalesce list: (86)y_85 & (116)y_85: Already Coalesced.
Coalesce list: (87)y_85 & (112)y_85: Already Coalesced.
Coalesce list: (86)y_85 & (87)y_85: Already Coalesced.
Coalesce list: (87)y_85 & (119)y_85: Already Coalesced.
Coalesce list: (89)x_88 & (126)x_88: Already Coalesced.
Coalesce list: (90)x_88 & (122)x_88: Already Coalesced.
Coalesce list: (89)x_88 & (90)x_88: Already Coalesced.
Coalesce list: (90)x_88 & (129)x_88: Already Coalesced.
Coalesce list: (80)w_79 & (101)w_79: Already Coalesced.
Coalesce list: (80)w_79 & (141)w_79: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (q_78 - 78 100 140 )
Partition 78 (w_79 - 79 80 101 138 141 )
Partition 79 (x_low_81 - 81 102 120 123 127 )
Partition 80 (x_upp_82 - 82 103 121 124 128 )
Partition 81 (y_low_83 - 83 104 110 113 117 )
Partition 82 (y_upp_84 - 84 105 111 114 118 )
Partition 83 (y_85 - 85 86 87 106 112 115 116 119 )
Partition 84 (x_88 - 88 89 90 107 122 125 126 129 )
Partition 85 (i_91 - 91 130 142 )
Partition 86 (j_92 - 92 131 139 )
Partition 87 (m_93 - 93 134 136 )
Partition 88 (user_109(D) - 109 )
Partition 89 (_144 - 144 )
Partition 90 (_145(D) - 145 )

wizja1 (struct user_info * user)
{
  int m;
  int j;
  int i;
  int x;
  int y;
  int y_upp;
  int y_low;
  int x_upp;
  int x_low;
  int w;
  int q;
  int D.6756;
  struct serwer_info * _1;
  struct player_info * _2;
  int _3;
  struct serwer_info * _4;
  struct player_info * _5;
  struct serwer_info * _6;
  struct player_info * _7;
  int _8;
  struct serwer_info * _9;
  struct player_info * _10;
  int _11;
  struct serwer_info * _12;
  struct player_info * _13;
  int _14;
  struct serwer_info * _15;
  struct player_info * _16;
  int _17;
  struct serwer_info * _18;
  struct player_info * _19;
  int _20;
  struct serwer_info * _21;
  struct player_info * _22;
  int _23;
  struct serwer_info * _24;
  struct player_info * _25;
  struct serwer_info * _26;
  struct player_info * _27;
  int _28;
  struct serwer_info * _29;
  struct player_info * _30;
  int _31;
  struct serwer_info * _32;
  struct player_info * _33;
  int _34;
  struct serwer_info * _35;
  struct player_info * _36;
  int _37;
  struct serwer_info * _38;
  struct player_info * _39;
  int _40;
  struct serwer_info * _41;
  char * * _42;
  long unsigned int _43;
  long unsigned int _44;
  char * * _45;
  char * _46;
  sizetype _47;
  char * _48;
  struct serwer_info * _49;
  struct player_info * _50;
  char _51;
  struct serwer_info * _52;
  int _53;
  struct serwer_info * _54;
  int _55;
  struct serwer_info * _56;
  struct player_info * _57;
  struct serwer_info * _58;
  int _59;
  struct serwer_info * _60;
  int _61;
  struct serwer_info * _62;
  int _63;
  struct serwer_info * _64;
  struct player_info * _65;
  struct serwer_info * _66;
  int _67;
  struct serwer_info * _68;
  struct player_info * _69;
  int _70;
  struct serwer_info * _71;
  struct player_info * _72;
  int _73;
  struct serwer_info * _74;
  struct player_info * _75;
  struct serwer_info * _76;
  struct player_info * _77;
  int _144;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_100 = 0;
  w_101 = 0;
  x_low_102 = 0;
  x_upp_103 = 0;
  y_low_104 = 0;
  y_upp_105 = 0;
  y_106 = 0;
  x_107 = 0;
  _1 = user_109(D)->serwer;
  _2 = _1->player1;
  _3 = _2->y_current;
  if (_3 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  y_low_110 = 0;
  y_upp_111 = 5;
  _4 = user_109(D)->serwer;
  _5 = _4->player1;
  y_112 = _5->y_current;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  _6 = user_109(D)->serwer;
  _7 = _6->player1;
  _8 = _7->y_current;
  if (_8 > 17)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       5
;;                10

;;   basic block 5, loop depth 0
;;    pred:       4
  y_low_113 = 16;
  y_upp_114 = 20;
  _9 = user_109(D)->serwer;
  _10 = _9->player1;
  _11 = _10->y_current;
  if (_11 == 18)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  y_115 = 2;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # y_85 = PHI <y_106(5), y_115(6)>
  _12 = user_109(D)->serwer;
  _13 = _12->player1;
  _14 = _13->y_current;
  if (_14 == 19)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  y_116 = 3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # y_86 = PHI <y_85(7), y_116(8)>
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       4
  _15 = user_109(D)->serwer;
  _16 = _15->player1;
  _17 = _16->y_current;
  y_low_117 = _17 + -2;
  _18 = user_109(D)->serwer;
  _19 = _18->player1;
  _20 = _19->y_current;
  y_upp_118 = _20 + 2;
  y_119 = 2;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                9
;;                10
  # y_low_83 = PHI <y_low_110(3), y_low_113(9), y_low_117(10)>
  # y_upp_84 = PHI <y_upp_111(3), y_upp_114(9), y_upp_118(10)>
  # y_87 = PHI <y_112(3), y_86(9), y_119(10)>
  _21 = user_109(D)->serwer;
  _22 = _21->player1;
  _23 = _22->x_current;
  if (_23 <= 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  x_low_120 = 0;
  x_upp_121 = 5;
  _24 = user_109(D)->serwer;
  _25 = _24->player1;
  x_122 = _25->x_current;
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 13, loop depth 0
;;    pred:       11
  _26 = user_109(D)->serwer;
  _27 = _26->player1;
  _28 = _27->x_current;
  if (_28 > 27)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       14
;;                19

;;   basic block 14, loop depth 0
;;    pred:       13
  x_low_123 = 26;
  x_upp_124 = 30;
  _29 = user_109(D)->serwer;
  _30 = _29->player1;
  _31 = _30->x_current;
  if (_31 == 28)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  x_125 = 2;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  # x_88 = PHI <x_107(14), x_125(15)>
  _32 = user_109(D)->serwer;
  _33 = _32->player1;
  _34 = _33->x_current;
  if (_34 == 29)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  x_126 = 3;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  # x_89 = PHI <x_88(16), x_126(17)>
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 19, loop depth 0
;;    pred:       13
  _35 = user_109(D)->serwer;
  _36 = _35->player1;
  _37 = _36->x_current;
  x_low_127 = _37 + -2;
  _38 = user_109(D)->serwer;
  _39 = _38->player1;
  _40 = _39->x_current;
  x_upp_128 = _40 + 2;
  x_129 = 2;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       12
;;                18
;;                19
  # x_low_81 = PHI <x_low_120(12), x_low_123(18), x_low_127(19)>
  # x_upp_82 = PHI <x_upp_121(12), x_upp_124(18), x_upp_128(19)>
  # x_90 = PHI <x_122(12), x_89(18), x_129(19)>
  i_130 = y_low_83;
  goto <bb 38>; [INV]
;;    succ:       38

;;   basic block 21, loop depth 1
;;    pred:       38
  j_131 = x_low_81;
  goto <bb 36>; [INV]
;;    succ:       36

;;   basic block 22, loop depth 2
;;    pred:       36
  _41 = user_109(D)->serwer;
  _42 = _41->mapa;
  _43 = (long unsigned int) i_91;
  _44 = _43 * 8;
  _45 = _42 + _44;
  _46 = *_45;
  _47 = (sizetype) j_92;
  _48 = _46 + _47;
  _49 = user_109(D)->serwer;
  _50 = _49->player1;
  _51 = *_48;
  _50->area[q_78][w_79] = _51;
  _52 = user_109(D)->serwer;
  _53 = _52->bestia.y;
  if (i_91 == _53)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       23
;;                25

;;   basic block 23, loop depth 2
;;    pred:       22
  _54 = user_109(D)->serwer;
  _55 = _54->bestia.x;
  if (j_92 == _55)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 2
;;    pred:       23
  _56 = user_109(D)->serwer;
  _57 = _56->player1;
  _57->area[q_78][w_79] = 42;
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       22
;;                23
;;                24
  m_134 = 0;
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 26, loop depth 3
;;    pred:       31
  _58 = user_109(D)->serwer;
  _59 = _58->skarb.value_all_dropped_coin[m_93];
  if (_59 >= 0)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       27
;;                30

;;   basic block 27, loop depth 3
;;    pred:       26
  _60 = user_109(D)->serwer;
  _61 = _60->skarb.dropped_coin[m_93][0];
  if (i_91 == _61)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       28
;;                30

;;   basic block 28, loop depth 3
;;    pred:       27
  _62 = user_109(D)->serwer;
  _63 = _62->skarb.dropped_coin[m_93][1];
  if (j_92 == _63)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 3
;;    pred:       28
  _64 = user_109(D)->serwer;
  _65 = _64->player1;
  _65->area[q_78][w_79] = 68;
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       26
;;                27
;;                28
;;                29
  m_136 = m_93 + 1;
;;    succ:       31

;;   basic block 31, loop depth 3
;;    pred:       25
;;                30
  # m_93 = PHI <m_134(25), m_136(30)>
  _66 = user_109(D)->serwer;
  _67 = _66->skarb.count_drop_coin;
  if (m_93 < _67)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       26
;;                32

;;   basic block 32, loop depth 2
;;    pred:       31
  _68 = user_109(D)->serwer;
  _69 = _68->player1;
  _70 = _69->y_current;
  if (i_91 == _70)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       33
;;                35

;;   basic block 33, loop depth 2
;;    pred:       32
  _71 = user_109(D)->serwer;
  _72 = _71->player1;
  _73 = _72->x_current;
  if (j_92 == _73)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       34
;;                35

;;   basic block 34, loop depth 2
;;    pred:       33
  _74 = user_109(D)->serwer;
  _75 = _74->player1;
  _75->area[q_78][w_79] = 50;
;;    succ:       35

;;   basic block 35, loop depth 2
;;    pred:       32
;;                33
;;                34
  w_138 = w_79 + 1;
  j_139 = j_92 + 1;
;;    succ:       36

;;   basic block 36, loop depth 2
;;    pred:       21
;;                35
  # w_79 = PHI <w_80(21), w_138(35)>
  # j_92 = PHI <j_131(21), j_139(35)>
  if (j_92 <= x_upp_82)
    goto <bb 22>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       22
;;                37

;;   basic block 37, loop depth 1
;;    pred:       36
  q_140 = q_78 + 1;
  w_141 = 0;
  i_142 = i_91 + 1;
;;    succ:       38

;;   basic block 38, loop depth 1
;;    pred:       20
;;                37
  # q_78 = PHI <q_100(20), q_140(37)>
  # w_80 = PHI <w_101(20), w_141(37)>
  # i_91 = PHI <i_130(20), i_142(37)>
  if (i_91 <= y_upp_84)
    goto <bb 21>; [INV]
  else
    goto <bb 39>; [INV]
;;    succ:       21
;;                39

;;   basic block 39, loop depth 0
;;    pred:       38
  _76 = user_109(D)->serwer;
  _77 = _76->player1;
  _77->area[y_87][x_90] = 49;
  _144 = 0;
;;    succ:       40

;;   basic block 40, loop depth 0
;;    pred:       39
<L43>:
  return _144;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; q_100 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
        (const_int 0 [0])) "function.c":908 -1
     (nil))

;; w_101 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":909 -1
     (nil))

;; x_low_102 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":910 -1
     (nil))

;; x_upp_103 = 0;

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":911 -1
     (nil))

;; y_low_104 = 0;

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":912 -1
     (nil))

;; y_upp_105 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":913 -1
     (nil))

;; y_106 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":914 -1
     (nil))

;; x_107 = 0;

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":915 -1
     (nil))

;; _1 = user_109(D)->serwer;

(insn 14 13 15 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":917 -1
     (nil))

(insn 15 14 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 166) [12 user_109(D)->serwer+0 S8 A64])) "function.c":917 -1
     (nil))

;; _2 = _1->player1;

(insn 16 15 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 32 [0x20])) [14 _1->player1+0 S8 A64])) "function.c":917 -1
     (nil))

;; _3 = _2->y_current;

(insn 17 16 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":917 -1
     (nil))

;; if (_3 <= 1)

(insn 18 17 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "function.c":917 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":917 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; y_low_110 = 0;

(insn 21 20 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":919 -1
     (nil))

;; y_upp_111 = 5;

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":920 -1
     (nil))

;; _4 = user_109(D)->serwer;

(insn 23 22 24 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":921 -1
     (nil))

(insn 24 23 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 167) [12 user_109(D)->serwer+0 S8 A64])) "function.c":921 -1
     (nil))

;; _5 = _4->player1;

(insn 25 24 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ _4 ])
                (const_int 32 [0x20])) [14 _4->player1+0 S8 A64])) "function.c":921 -1
     (nil))

;; y_112 = _5->y_current;

(insn 26 25 27 (set (reg:SI 168)
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":921 -1
     (nil))

(insn 27 26 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (reg:SI 168)) "function.c":921 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 30 29 31 139 (nil) [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = user_109(D)->serwer;

(insn 32 31 33 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":923 -1
     (nil))

(insn 33 32 0 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 169) [12 user_109(D)->serwer+0 S8 A64])) "function.c":923 -1
     (nil))

;; _7 = _6->player1;

(insn 34 33 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _6 ])
                (const_int 32 [0x20])) [14 _6->player1+0 S8 A64])) "function.c":923 -1
     (nil))

;; _8 = _7->y_current;

(insn 35 34 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 16 [0x10])) [3 _7->y_current+0 S4 A64])) "function.c":923 -1
     (nil))

;; if (_8 > 17)

(insn 36 35 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94 [ _8 ])
            (const_int 17 [0x11]))) "function.c":923 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":923 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; y_low_113 = 16;

(insn 39 38 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 16 [0x10])) "function.c":925 -1
     (nil))

;; y_upp_114 = 20;

(insn 40 39 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 20 [0x14])) "function.c":926 -1
     (nil))

;; _9 = user_109(D)->serwer;

(insn 41 40 42 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":927 -1
     (nil))

(insn 42 41 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 170) [12 user_109(D)->serwer+0 S8 A64])) "function.c":927 -1
     (nil))

;; _10 = _9->player1;

(insn 43 42 0 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 32 [0x20])) [14 _9->player1+0 S8 A64])) "function.c":927 -1
     (nil))

;; _11 = _10->y_current;

(insn 44 43 0 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _10 ])
                (const_int 16 [0x10])) [3 _10->y_current+0 S4 A64])) "function.c":927 -1
     (nil))

;; if (_11 == 18)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 18 [0x12]))) "function.c":927 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":927 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; y_115 = 2;

(insn 48 47 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":929 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 49 48 50 142 (nil) [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = user_109(D)->serwer;

(insn 51 50 52 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":931 -1
     (nil))

(insn 52 51 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 171) [12 user_109(D)->serwer+0 S8 A64])) "function.c":931 -1
     (nil))

;; _13 = _12->player1;

(insn 53 52 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 32 [0x20])) [14 _12->player1+0 S8 A64])) "function.c":931 -1
     (nil))

;; _14 = _13->y_current;

(insn 54 53 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 16 [0x10])) [3 _13->y_current+0 S4 A64])) "function.c":931 -1
     (nil))

;; if (_14 == 19)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 19 [0x13]))) "function.c":931 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":931 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; y_116 = 3;

(insn 58 57 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 3 [0x3])) "function.c":933 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 59 58 60 143 (nil) [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 10

;; 

(code_label 63 62 64 141 (nil) [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = user_109(D)->serwer;

(insn 65 64 66 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":938 -1
     (nil))

(insn 66 65 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (reg/f:DI 172) [12 user_109(D)->serwer+0 S8 A64])) "function.c":938 -1
     (nil))

;; _16 = _15->player1;

(insn 67 66 0 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 32 [0x20])) [14 _15->player1+0 S8 A64])) "function.c":938 -1
     (nil))

;; _17 = _16->y_current;

(insn 68 67 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 102 [ _16 ])
                (const_int 16 [0x10])) [3 _16->y_current+0 S4 A64])) "function.c":938 -1
     (nil))

;; y_low_117 = _17 + -2;

(insn 69 68 70 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 103 [ _17 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":938 -1
     (nil))

(insn 70 69 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (reg:SI 173)) "function.c":938 -1
     (nil))

;; _18 = user_109(D)->serwer;

(insn 71 70 72 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":939 -1
     (nil))

(insn 72 71 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 174) [12 user_109(D)->serwer+0 S8 A64])) "function.c":939 -1
     (nil))

;; _19 = _18->player1;

(insn 73 72 0 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 32 [0x20])) [14 _18->player1+0 S8 A64])) "function.c":939 -1
     (nil))

;; _20 = _19->y_current;

(insn 74 73 0 (set (reg:SI 106 [ _20 ])
        (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 16 [0x10])) [3 _19->y_current+0 S4 A64])) "function.c":939 -1
     (nil))

;; y_upp_118 = _20 + 2;

(insn 75 74 76 (parallel [
            (set (reg:SI 175)
                (plus:SI (reg:SI 106 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":939 -1
     (nil))

(insn 76 75 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (reg:SI 175)) "function.c":939 -1
     (nil))

;; y_119 = 2;

(insn 77 76 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":940 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 78 77 79 140 (nil) [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = user_109(D)->serwer;

(insn 80 79 81 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":943 -1
     (nil))

(insn 81 80 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 176) [12 user_109(D)->serwer+0 S8 A64])) "function.c":943 -1
     (nil))

;; _22 = _21->player1;

(insn 82 81 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 32 [0x20])) [14 _21->player1+0 S8 A64])) "function.c":943 -1
     (nil))

;; _23 = _22->x_current;

(insn 83 82 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 12 [0xc])) [3 _22->x_current+0 S4 A32])) "function.c":943 -1
     (nil))

;; if (_23 <= 1)

(insn 84 83 85 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109 [ _23 ])
            (const_int 1 [0x1]))) "function.c":943 -1
     (nil))

(jump_insn 85 84 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":943 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; x_low_120 = 0;

(insn 87 86 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":945 -1
     (nil))

;; x_upp_121 = 5;

(insn 88 87 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":946 -1
     (nil))

;; _24 = user_109(D)->serwer;

(insn 89 88 90 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":947 -1
     (nil))

(insn 90 89 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (reg/f:DI 177) [12 user_109(D)->serwer+0 S8 A64])) "function.c":947 -1
     (nil))

;; _25 = _24->player1;

(insn 91 90 0 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 32 [0x20])) [14 _24->player1+0 S8 A64])) "function.c":947 -1
     (nil))

;; x_122 = _25->x_current;

(insn 92 91 93 (set (reg:SI 178)
        (mem:SI (plus:DI (reg/f:DI 111 [ _25 ])
                (const_int 12 [0xc])) [3 _25->x_current+0 S4 A32])) "function.c":947 -1
     (nil))

(insn 93 92 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (reg:SI 178)) "function.c":947 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 96 95 97 144 (nil) [0 uses])

(note 97 96 0 NOTE_INSN_BASIC_BLOCK)

;; _26 = user_109(D)->serwer;

(insn 98 97 99 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":949 -1
     (nil))

(insn 99 98 0 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (reg/f:DI 179) [12 user_109(D)->serwer+0 S8 A64])) "function.c":949 -1
     (nil))

;; _27 = _26->player1;

(insn 100 99 0 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 32 [0x20])) [14 _26->player1+0 S8 A64])) "function.c":949 -1
     (nil))

;; _28 = _27->x_current;

(insn 101 100 0 (set (reg:SI 114 [ _28 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 12 [0xc])) [3 _27->x_current+0 S4 A32])) "function.c":949 -1
     (nil))

;; if (_28 > 27)

(insn 102 101 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114 [ _28 ])
            (const_int 27 [0x1b]))) "function.c":949 -1
     (nil))

(jump_insn 103 102 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":949 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; x_low_123 = 26;

(insn 105 104 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 26 [0x1a])) "function.c":951 -1
     (nil))

;; x_upp_124 = 30;

(insn 106 105 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 30 [0x1e])) "function.c":952 -1
     (nil))

;; _29 = user_109(D)->serwer;

(insn 107 106 108 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":953 -1
     (nil))

(insn 108 107 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 180) [12 user_109(D)->serwer+0 S8 A64])) "function.c":953 -1
     (nil))

;; _30 = _29->player1;

(insn 109 108 0 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 32 [0x20])) [14 _29->player1+0 S8 A64])) "function.c":953 -1
     (nil))

;; _31 = _30->x_current;

(insn 110 109 0 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 12 [0xc])) [3 _30->x_current+0 S4 A32])) "function.c":953 -1
     (nil))

;; if (_31 == 28)

(insn 111 110 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ _31 ])
            (const_int 28 [0x1c]))) "function.c":953 -1
     (nil))

(jump_insn 112 111 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":953 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; x_125 = 2;

(insn 114 113 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":955 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 115 114 116 147 (nil) [0 uses])

(note 116 115 0 NOTE_INSN_BASIC_BLOCK)

;; _32 = user_109(D)->serwer;

(insn 117 116 118 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":957 -1
     (nil))

(insn 118 117 0 (set (reg/f:DI 118 [ _32 ])
        (mem/f:DI (reg/f:DI 181) [12 user_109(D)->serwer+0 S8 A64])) "function.c":957 -1
     (nil))

;; _33 = _32->player1;

(insn 119 118 0 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 118 [ _32 ])
                (const_int 32 [0x20])) [14 _32->player1+0 S8 A64])) "function.c":957 -1
     (nil))

;; _34 = _33->x_current;

(insn 120 119 0 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 12 [0xc])) [3 _33->x_current+0 S4 A32])) "function.c":957 -1
     (nil))

;; if (_34 == 29)

(insn 121 120 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ _34 ])
            (const_int 29 [0x1d]))) "function.c":957 -1
     (nil))

(jump_insn 122 121 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":957 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; x_126 = 3;

(insn 124 123 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 3 [0x3])) "function.c":959 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 125 124 126 148 (nil) [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 19

;; 

(code_label 129 128 130 146 (nil) [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; _35 = user_109(D)->serwer;

(insn 131 130 132 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":964 -1
     (nil))

(insn 132 131 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 182) [12 user_109(D)->serwer+0 S8 A64])) "function.c":964 -1
     (nil))

;; _36 = _35->player1;

(insn 133 132 0 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 32 [0x20])) [14 _35->player1+0 S8 A64])) "function.c":964 -1
     (nil))

;; _37 = _36->x_current;

(insn 134 133 0 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 12 [0xc])) [3 _36->x_current+0 S4 A32])) "function.c":964 -1
     (nil))

;; x_low_127 = _37 + -2;

(insn 135 134 136 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":964 -1
     (nil))

(insn 136 135 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (reg:SI 183)) "function.c":964 -1
     (nil))

;; _38 = user_109(D)->serwer;

(insn 137 136 138 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":965 -1
     (nil))

(insn 138 137 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 184) [12 user_109(D)->serwer+0 S8 A64])) "function.c":965 -1
     (nil))

;; _39 = _38->player1;

(insn 139 138 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 32 [0x20])) [14 _38->player1+0 S8 A64])) "function.c":965 -1
     (nil))

;; _40 = _39->x_current;

(insn 140 139 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 12 [0xc])) [3 _39->x_current+0 S4 A32])) "function.c":965 -1
     (nil))

;; x_upp_128 = _40 + 2;

(insn 141 140 142 (parallel [
            (set (reg:SI 185)
                (plus:SI (reg:SI 126 [ _40 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":965 -1
     (nil))

(insn 142 141 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (reg:SI 185)) "function.c":965 -1
     (nil))

;; x_129 = 2;

(insn 143 142 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":966 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 144 143 145 145 (nil) [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; i_130 = y_low_83;

(insn 146 145 147 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])) "function.c":969 -1
     (nil))

(insn 147 146 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
        (reg:SI 186)) "function.c":969 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; j_131 = x_low_81;

(insn 151 150 152 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])) "function.c":971 -1
     (nil))

(insn 152 151 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
        (reg:SI 187)) "function.c":971 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; _41 = user_109(D)->serwer;

(insn 156 155 157 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":973 -1
     (nil))

(insn 157 156 0 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (reg/f:DI 188) [12 user_109(D)->serwer+0 S8 A64])) "function.c":973 -1
     (nil))

;; _42 = _41->mapa;

(insn 158 157 0 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 16 [0x10])) [9 _41->mapa+0 S8 A64])) "function.c":973 -1
     (nil))

;; _43 = (long unsigned int) i_91;

(insn 159 158 160 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":973 -1
     (nil))

(insn 160 159 0 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 189))) "function.c":973 -1
     (nil))

;; _44 = _43 * 8;

(insn 161 160 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (ashift:DI (reg:DI 129 [ _43 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

;; _45 = _42 + _44;

(insn 162 161 0 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

;; _46 = *_45;

(insn 163 162 0 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (reg/f:DI 131 [ _45 ]) [10 *_45+0 S8 A64])) "function.c":973 -1
     (nil))

;; _47 = (sizetype) j_92;

(insn 164 163 165 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":973 -1
     (nil))

(insn 165 164 0 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 190))) "function.c":973 -1
     (nil))

;; _48 = _46 + _47;

(insn 166 165 0 (parallel [
            (set (reg/f:DI 134 [ _48 ])
                (plus:DI (reg/f:DI 132 [ _46 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

;; _49 = user_109(D)->serwer;

(insn 167 166 168 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":973 -1
     (nil))

(insn 168 167 0 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (reg/f:DI 191) [12 user_109(D)->serwer+0 S8 A64])) "function.c":973 -1
     (nil))

;; _50 = _49->player1;

(insn 169 168 0 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (plus:DI (reg/f:DI 135 [ _49 ])
                (const_int 32 [0x20])) [14 _49->player1+0 S8 A64])) "function.c":973 -1
     (nil))

;; _51 = *_48;

(insn 170 169 0 (set (reg:QI 137 [ _51 ])
        (mem:QI (reg/f:DI 134 [ _48 ]) [0 *_48+0 S1 A8])) "function.c":973 -1
     (nil))

;; _50->area[q_78][w_79] = _51;

(insn 171 170 172 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":973 -1
     (nil))

(insn 172 171 173 (set (reg:DI 192)
        (sign_extend:DI (reg:SI 193))) "function.c":973 -1
     (nil))

(insn 173 172 174 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":973 -1
     (nil))

(insn 174 173 175 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 195))) "function.c":973 -1
     (nil))

(insn 175 174 176 (parallel [
            (set (reg:DI 196)
                (mult:DI (reg:DI 194)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

(insn 176 175 177 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 136 [ _50 ])
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

(insn 177 176 178 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg:DI 197)
                    (reg:DI 192)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

(insn 178 177 179 (parallel [
            (set (reg/f:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))

(insn 179 178 0 (set (mem/j:QI (reg/f:DI 199) [0 _50->area S1 A8])
        (reg:QI 137 [ _51 ])) "function.c":973 -1
     (nil))

;; _52 = user_109(D)->serwer;

(insn 180 179 181 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":974 -1
     (nil))

(insn 181 180 0 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (reg/f:DI 200) [12 user_109(D)->serwer+0 S8 A64])) "function.c":974 -1
     (nil))

;; _53 = _52->bestia.y;

(insn 182 181 0 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 138 [ _52 ])
                (const_int 36068 [0x8ce4])) [3 _52->bestia.y+0 S4 A32])) "function.c":974 -1
     (nil))

;; if (i_91 == _53)

(insn 183 182 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 139 [ _53 ]))) "function.c":974 -1
     (nil))

(jump_insn 184 183 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":974 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; _54 = user_109(D)->serwer;

(insn 186 185 187 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":974 -1
     (nil))

(insn 187 186 0 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (reg/f:DI 201) [12 user_109(D)->serwer+0 S8 A64])) "function.c":974 -1
     (nil))

;; _55 = _54->bestia.x;

(insn 188 187 0 (set (reg:SI 141 [ _55 ])
        (mem:SI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 36064 [0x8ce0])) [3 _54->bestia.x+0 S4 A64])) "function.c":974 -1
     (nil))

;; if (j_92 == _55)

(insn 189 188 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 141 [ _55 ]))) "function.c":974 -1
     (nil))

(jump_insn 190 189 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":974 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; _56 = user_109(D)->serwer;

(insn 192 191 193 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":976 -1
     (nil))

(insn 193 192 0 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (reg/f:DI 202) [12 user_109(D)->serwer+0 S8 A64])) "function.c":976 -1
     (nil))

;; _57 = _56->player1;

(insn 194 193 0 (set (reg/f:DI 143 [ _57 ])
        (mem/f:DI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 32 [0x20])) [14 _56->player1+0 S8 A64])) "function.c":976 -1
     (nil))

;; _57->area[q_78][w_79] = 42;

(insn 195 194 196 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":976 -1
     (nil))

(insn 196 195 197 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 204))) "function.c":976 -1
     (nil))

(insn 197 196 198 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":976 -1
     (nil))

(insn 198 197 199 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 206))) "function.c":976 -1
     (nil))

(insn 199 198 200 (parallel [
            (set (reg:DI 207)
                (mult:DI (reg:DI 205)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))

(insn 200 199 201 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 143 [ _57 ])
                    (reg:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))

(insn 201 200 202 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208)
                    (reg:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))

(insn 202 201 203 (parallel [
            (set (reg/f:DI 210)
                (plus:DI (reg:DI 209)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))

(insn 203 202 0 (set (mem/j:QI (reg/f:DI 210) [0 _57->area S1 A8])
        (const_int 42 [0x2a])) "function.c":976 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 204 203 205 151 (nil) [0 uses])

(note 205 204 0 NOTE_INSN_BASIC_BLOCK)

;; m_134 = 0;

(insn 206 205 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
        (const_int 0 [0])) "function.c":979 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; _58 = user_109(D)->serwer;

(insn 210 209 211 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":981 -1
     (nil))

(insn 211 210 0 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 211) [12 user_109(D)->serwer+0 S8 A64])) "function.c":981 -1
     (nil))

;; _59 = _58->skarb.value_all_dropped_coin[m_93];

(insn 212 211 213 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":981 -1
     (nil))

(insn 213 212 214 (set (reg:DI 212)
        (sign_extend:DI (reg:SI 213))) "function.c":981 -1
     (nil))

(insn 214 213 215 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 212)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":981 -1
     (nil))

(insn 215 214 0 (set (reg:SI 145 [ _59 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 214)
                    (const_int 4 [0x4]))
                (reg/f:DI 144 [ _58 ])) [3 _58->skarb.value_all_dropped_coin S4 A32])) "function.c":981 -1
     (nil))

;; if (_59 >= 0)

(insn 216 215 217 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 145 [ _59 ])
            (const_int 0 [0]))) "function.c":981 -1
     (nil))

(jump_insn 217 216 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":981 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; _60 = user_109(D)->serwer;

(insn 219 218 220 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":981 -1
     (nil))

(insn 220 219 0 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (reg/f:DI 215) [12 user_109(D)->serwer+0 S8 A64])) "function.c":981 -1
     (nil))

;; _61 = _60->skarb.dropped_coin[m_93][0];

(insn 221 220 222 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":981 -1
     (nil))

(insn 222 221 223 (set (reg:DI 216)
        (sign_extend:DI (reg:SI 217))) "function.c":981 -1
     (nil))

(insn 223 222 224 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 216)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":981 -1
     (nil))

(insn 224 223 0 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 218)
                    (const_int 8 [0x8]))
                (reg/f:DI 146 [ _60 ])) [3 _60->skarb.dropped_coin S4 A64])) "function.c":981 -1
     (nil))

;; if (i_91 == _61)

(insn 225 224 226 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 147 [ _61 ]))) "function.c":981 -1
     (nil))

(jump_insn 226 225 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":981 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; _62 = user_109(D)->serwer;

(insn 228 227 229 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":981 -1
     (nil))

(insn 229 228 0 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (reg/f:DI 219) [12 user_109(D)->serwer+0 S8 A64])) "function.c":981 -1
     (nil))

;; _63 = _62->skarb.dropped_coin[m_93][1];

(insn 230 229 231 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":981 -1
     (nil))

(insn 231 230 232 (set (reg:DI 220)
        (sign_extend:DI (reg:SI 221))) "function.c":981 -1
     (nil))

(insn 232 231 0 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 220)
                        (const_int 8 [0x8]))
                    (reg/f:DI 148 [ _62 ]))
                (const_int 24068 [0x5e04])) [3 _62->skarb.dropped_coin S4 A32])) "function.c":981 -1
     (nil))

;; if (j_92 == _63)

(insn 233 232 234 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 149 [ _63 ]))) "function.c":981 -1
     (nil))

(jump_insn 234 233 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":981 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; _64 = user_109(D)->serwer;

(insn 236 235 237 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":983 -1
     (nil))

(insn 237 236 0 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 222) [12 user_109(D)->serwer+0 S8 A64])) "function.c":983 -1
     (nil))

;; _65 = _64->player1;

(insn 238 237 0 (set (reg/f:DI 151 [ _65 ])
        (mem/f:DI (plus:DI (reg/f:DI 150 [ _64 ])
                (const_int 32 [0x20])) [14 _64->player1+0 S8 A64])) "function.c":983 -1
     (nil))

;; _65->area[q_78][w_79] = 68;

(insn 239 238 240 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":983 -1
     (nil))

(insn 240 239 241 (set (reg:DI 223)
        (sign_extend:DI (reg:SI 224))) "function.c":983 -1
     (nil))

(insn 241 240 242 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":983 -1
     (nil))

(insn 242 241 243 (set (reg:DI 225)
        (sign_extend:DI (reg:SI 226))) "function.c":983 -1
     (nil))

(insn 243 242 244 (parallel [
            (set (reg:DI 227)
                (mult:DI (reg:DI 225)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))

(insn 244 243 245 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg/f:DI 151 [ _65 ])
                    (reg:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))

(insn 245 244 246 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg:DI 228)
                    (reg:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))

(insn 246 245 247 (parallel [
            (set (reg/f:DI 230)
                (plus:DI (reg:DI 229)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))

(insn 247 246 0 (set (mem/j:QI (reg/f:DI 230) [0 _65->area S1 A8])
        (const_int 68 [0x44])) "function.c":983 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 248 247 249 153 (nil) [0 uses])

(note 249 248 0 NOTE_INSN_BASIC_BLOCK)

;; m_136 = m_93 + 1;

(insn 250 249 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":979 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 251 250 252 152 (nil) [0 uses])

(note 252 251 0 NOTE_INSN_BASIC_BLOCK)

;; _66 = user_109(D)->serwer;

(insn 253 252 254 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":979 -1
     (nil))

(insn 254 253 0 (set (reg/f:DI 152 [ _66 ])
        (mem/f:DI (reg/f:DI 231) [12 user_109(D)->serwer+0 S8 A64])) "function.c":979 -1
     (nil))

;; _67 = _66->skarb.count_drop_coin;

(insn 255 254 0 (set (reg:SI 153 [ _67 ])
        (mem:SI (plus:DI (reg/f:DI 152 [ _66 ])
                (const_int 24060 [0x5dfc])) [3 _66->skarb.count_drop_coin+0 S4 A32])) "function.c":979 -1
     (nil))

;; if (m_93 < _67)

(insn 257 255 258 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
            (reg:SI 153 [ _67 ]))) "function.c":979 -1
     (nil))

(jump_insn 258 257 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) "function.c":979 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; _68 = user_109(D)->serwer;

(insn 260 259 261 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":987 -1
     (nil))

(insn 261 260 0 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (reg/f:DI 232) [12 user_109(D)->serwer+0 S8 A64])) "function.c":987 -1
     (nil))

;; _69 = _68->player1;

(insn 262 261 0 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 32 [0x20])) [14 _68->player1+0 S8 A64])) "function.c":987 -1
     (nil))

;; _70 = _69->y_current;

(insn 263 262 0 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (reg/f:DI 155 [ _69 ])
                (const_int 16 [0x10])) [3 _69->y_current+0 S4 A64])) "function.c":987 -1
     (nil))

;; if (i_91 == _70)

(insn 264 263 265 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 156 [ _70 ]))) "function.c":987 -1
     (nil))

(jump_insn 265 264 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":987 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; _71 = user_109(D)->serwer;

(insn 267 266 268 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":987 -1
     (nil))

(insn 268 267 0 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (reg/f:DI 233) [12 user_109(D)->serwer+0 S8 A64])) "function.c":987 -1
     (nil))

;; _72 = _71->player1;

(insn 269 268 0 (set (reg/f:DI 158 [ _72 ])
        (mem/f:DI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 32 [0x20])) [14 _71->player1+0 S8 A64])) "function.c":987 -1
     (nil))

;; _73 = _72->x_current;

(insn 270 269 0 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (reg/f:DI 158 [ _72 ])
                (const_int 12 [0xc])) [3 _72->x_current+0 S4 A32])) "function.c":987 -1
     (nil))

;; if (j_92 == _73)

(insn 271 270 272 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 159 [ _73 ]))) "function.c":987 -1
     (nil))

(jump_insn 272 271 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":987 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; _74 = user_109(D)->serwer;

(insn 274 273 275 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":989 -1
     (nil))

(insn 275 274 0 (set (reg/f:DI 160 [ _74 ])
        (mem/f:DI (reg/f:DI 234) [12 user_109(D)->serwer+0 S8 A64])) "function.c":989 -1
     (nil))

;; _75 = _74->player1;

(insn 276 275 0 (set (reg/f:DI 161 [ _75 ])
        (mem/f:DI (plus:DI (reg/f:DI 160 [ _74 ])
                (const_int 32 [0x20])) [14 _74->player1+0 S8 A64])) "function.c":989 -1
     (nil))

;; _75->area[q_78][w_79] = 50;

(insn 277 276 278 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":989 -1
     (nil))

(insn 278 277 279 (set (reg:DI 235)
        (sign_extend:DI (reg:SI 236))) "function.c":989 -1
     (nil))

(insn 279 278 280 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":989 -1
     (nil))

(insn 280 279 281 (set (reg:DI 237)
        (sign_extend:DI (reg:SI 238))) "function.c":989 -1
     (nil))

(insn 281 280 282 (parallel [
            (set (reg:DI 239)
                (mult:DI (reg:DI 237)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))

(insn 282 281 283 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 161 [ _75 ])
                    (reg:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))

(insn 283 282 284 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg:DI 240)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))

(insn 284 283 285 (parallel [
            (set (reg/f:DI 242)
                (plus:DI (reg:DI 241)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))

(insn 285 284 0 (set (mem/j:QI (reg/f:DI 242) [0 _75->area S1 A8])
        (const_int 50 [0x32])) "function.c":989 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 286 285 287 155 (nil) [0 uses])

(note 287 286 0 NOTE_INSN_BASIC_BLOCK)

;; w_138 = w_79 + 1;

(insn 288 287 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":992 -1
     (nil))

;; j_139 = j_92 + 1;

(insn 289 288 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":971 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; 

(code_label 290 289 291 150 (nil) [0 uses])

(note 291 290 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_92 <= x_upp_82)

(insn 293 291 294 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":971 -1
     (nil))

(insn 294 293 295 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 243)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32]))) "function.c":971 -1
     (nil))

(jump_insn 295 294 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) "function.c":971 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; q_140 = q_78 + 1;

(insn 297 296 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":994 -1
     (nil))

;; w_141 = 0;

(insn 298 297 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":995 -1
     (nil))

;; i_142 = i_91 + 1;

(insn 299 298 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":969 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 300 299 301 149 (nil) [0 uses])

(note 301 300 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_91 <= y_upp_84)

(insn 303 301 304 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":969 -1
     (nil))

(insn 304 303 305 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 244)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32]))) "function.c":969 -1
     (nil))

(jump_insn 305 304 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "function.c":969 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; _76 = user_109(D)->serwer;

(insn 307 306 308 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":998 -1
     (nil))

(insn 308 307 0 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (reg/f:DI 245) [12 user_109(D)->serwer+0 S8 A64])) "function.c":998 -1
     (nil))

;; _77 = _76->player1;

(insn 309 308 0 (set (reg/f:DI 163 [ _77 ])
        (mem/f:DI (plus:DI (reg/f:DI 162 [ _76 ])
                (const_int 32 [0x20])) [14 _76->player1+0 S8 A64])) "function.c":998 -1
     (nil))

;; _77->area[y_87][x_90] = 49;

(insn 310 309 311 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])) "function.c":998 -1
     (nil))

(insn 311 310 312 (set (reg:DI 246)
        (sign_extend:DI (reg:SI 247))) "function.c":998 -1
     (nil))

(insn 312 311 313 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])) "function.c":998 -1
     (nil))

(insn 313 312 314 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) "function.c":998 -1
     (nil))

(insn 314 313 315 (parallel [
            (set (reg:DI 250)
                (mult:DI (reg:DI 248)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))

(insn 315 314 316 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 163 [ _77 ])
                    (reg:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))

(insn 316 315 317 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg:DI 251)
                    (reg:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))

(insn 317 316 318 (parallel [
            (set (reg/f:DI 253)
                (plus:DI (reg:DI 252)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))

(insn 318 317 0 (set (mem/j:QI (reg/f:DI 253) [0 _77->area S1 A8])
        (const_int 49 [0x31])) "function.c":998 -1
     (nil))

;; _144 = 0;

(insn 319 318 0 (set (reg:SI 164 [ _144 ])
        (const_int 0 [0])) "function.c":1000 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; <L43>:

(code_label 320 319 321 158 (nil) [0 uses])

(note 321 320 0 NOTE_INSN_BASIC_BLOCK)

;; return _144;

(insn 322 321 323 (set (reg:SI 165 [ <retval> ])
        (reg:SI 164 [ _144 ])) "function.c":1000 -1
     (nil))

(jump_insn 323 322 324 (set (pc)
        (label_ref 0)) "function.c":1000 -1
     (nil))

(barrier 324 323 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 8->10 redirected to 12
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Edge 17->19 redirected to 21
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.
Merging block 41 into block 40...
Merged blocks 40 and 41.
Merged 40 and 41 without moving.
Removing jump 323.
Merging block 42 into block 40...
Merged blocks 40 and 42.
Merged 40 and 42 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])
        (reg:DI 5 di [ user ])) "function.c":907 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
        (const_int 0 [0])) "function.c":908 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":909 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":910 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":911 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":912 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":913 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":914 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":915 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":917 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 166) [12 user_109(D)->serwer+0 S8 A64])) "function.c":917 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 32 [0x20])) [14 _1->player1+0 S8 A64])) "function.c":917 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":917 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "function.c":917 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "function.c":917 -1
     (nil)
 -> 30)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":919 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":920 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":921 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 167) [12 user_109(D)->serwer+0 S8 A64])) "function.c":921 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ _4 ])
                (const_int 32 [0x20])) [14 _4->player1+0 S8 A64])) "function.c":921 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 168)
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":921 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (reg:SI 168)) "function.c":921 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
;;  succ:       12

(barrier 29 28 30)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 30 29 31 5 139 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":923 -1
     (nil))
(insn 33 32 34 5 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 169) [12 user_109(D)->serwer+0 S8 A64])) "function.c":923 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _6 ])
                (const_int 32 [0x20])) [14 _6->player1+0 S8 A64])) "function.c":923 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 16 [0x10])) [3 _7->y_current+0 S4 A64])) "function.c":923 -1
     (nil))
(insn 36 35 37 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94 [ _8 ])
            (const_int 17 [0x11]))) "function.c":923 -1
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "function.c":923 -1
     (nil)
 -> 63)
;;  succ:       6 (FALLTHRU)
;;              11

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 16 [0x10])) "function.c":925 -1
     (nil))
(insn 40 39 41 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 20 [0x14])) "function.c":926 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":927 -1
     (nil))
(insn 42 41 43 6 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 170) [12 user_109(D)->serwer+0 S8 A64])) "function.c":927 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 32 [0x20])) [14 _9->player1+0 S8 A64])) "function.c":927 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _10 ])
                (const_int 16 [0x10])) [3 _10->y_current+0 S4 A64])) "function.c":927 -1
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 18 [0x12]))) "function.c":927 -1
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "function.c":927 -1
     (nil)
 -> 49)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":929 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 49 48 50 8 142 (nil) [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":931 -1
     (nil))
(insn 52 51 53 8 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 171) [12 user_109(D)->serwer+0 S8 A64])) "function.c":931 -1
     (nil))
(insn 53 52 54 8 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 32 [0x20])) [14 _12->player1+0 S8 A64])) "function.c":931 -1
     (nil))
(insn 54 53 55 8 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 16 [0x10])) [3 _13->y_current+0 S4 A64])) "function.c":931 -1
     (nil))
(insn 55 54 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 19 [0x13]))) "function.c":931 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) "function.c":931 682 {*jcc}
     (nil)
 -> 78)
;;  succ:       9 (FALLTHRU)
;;              12

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 3 [0x3])) "function.c":933 -1
     (nil))
(jump_insn 61 58 62 9 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
;;  succ:       12

(barrier 62 61 63)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 63 62 64 11 141 (nil) [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":938 -1
     (nil))
(insn 66 65 67 11 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (reg/f:DI 172) [12 user_109(D)->serwer+0 S8 A64])) "function.c":938 -1
     (nil))
(insn 67 66 68 11 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 32 [0x20])) [14 _15->player1+0 S8 A64])) "function.c":938 -1
     (nil))
(insn 68 67 69 11 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 102 [ _16 ])
                (const_int 16 [0x10])) [3 _16->y_current+0 S4 A64])) "function.c":938 -1
     (nil))
(insn 69 68 70 11 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 103 [ _17 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":938 -1
     (nil))
(insn 70 69 71 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (reg:SI 173)) "function.c":938 -1
     (nil))
(insn 71 70 72 11 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":939 -1
     (nil))
(insn 72 71 73 11 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 174) [12 user_109(D)->serwer+0 S8 A64])) "function.c":939 -1
     (nil))
(insn 73 72 74 11 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 32 [0x20])) [14 _18->player1+0 S8 A64])) "function.c":939 -1
     (nil))
(insn 74 73 75 11 (set (reg:SI 106 [ _20 ])
        (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 16 [0x10])) [3 _19->y_current+0 S4 A64])) "function.c":939 -1
     (nil))
(insn 75 74 76 11 (parallel [
            (set (reg:SI 175)
                (plus:SI (reg:SI 106 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":939 -1
     (nil))
(insn 76 75 77 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (reg:SI 175)) "function.c":939 -1
     (nil))
(insn 77 76 78 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":940 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              9
;;              11 (FALLTHRU)
;;              8
(code_label 78 77 79 12 140 (nil) [3 uses])
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":943 -1
     (nil))
(insn 81 80 82 12 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 176) [12 user_109(D)->serwer+0 S8 A64])) "function.c":943 -1
     (nil))
(insn 82 81 83 12 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 32 [0x20])) [14 _21->player1+0 S8 A64])) "function.c":943 -1
     (nil))
(insn 83 82 84 12 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 12 [0xc])) [3 _22->x_current+0 S4 A32])) "function.c":943 -1
     (nil))
(insn 84 83 85 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109 [ _23 ])
            (const_int 1 [0x1]))) "function.c":943 -1
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "function.c":943 -1
     (nil)
 -> 96)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":945 -1
     (nil))
(insn 88 87 89 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":946 -1
     (nil))
(insn 89 88 90 13 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":947 -1
     (nil))
(insn 90 89 91 13 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (reg/f:DI 177) [12 user_109(D)->serwer+0 S8 A64])) "function.c":947 -1
     (nil))
(insn 91 90 92 13 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 32 [0x20])) [14 _24->player1+0 S8 A64])) "function.c":947 -1
     (nil))
(insn 92 91 93 13 (set (reg:SI 178)
        (mem:SI (plus:DI (reg/f:DI 111 [ _25 ])
                (const_int 12 [0xc])) [3 _25->x_current+0 S4 A32])) "function.c":947 -1
     (nil))
(insn 93 92 94 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (reg:SI 178)) "function.c":947 -1
     (nil))
(jump_insn 94 93 95 13 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
;;  succ:       21

(barrier 95 94 96)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 96 95 97 14 144 (nil) [1 uses])
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":949 -1
     (nil))
(insn 99 98 100 14 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (reg/f:DI 179) [12 user_109(D)->serwer+0 S8 A64])) "function.c":949 -1
     (nil))
(insn 100 99 101 14 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 32 [0x20])) [14 _26->player1+0 S8 A64])) "function.c":949 -1
     (nil))
(insn 101 100 102 14 (set (reg:SI 114 [ _28 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 12 [0xc])) [3 _27->x_current+0 S4 A32])) "function.c":949 -1
     (nil))
(insn 102 101 103 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114 [ _28 ])
            (const_int 27 [0x1b]))) "function.c":949 -1
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "function.c":949 -1
     (nil)
 -> 129)
;;  succ:       15 (FALLTHRU)
;;              20

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 26 [0x1a])) "function.c":951 -1
     (nil))
(insn 106 105 107 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 30 [0x1e])) "function.c":952 -1
     (nil))
(insn 107 106 108 15 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":953 -1
     (nil))
(insn 108 107 109 15 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 180) [12 user_109(D)->serwer+0 S8 A64])) "function.c":953 -1
     (nil))
(insn 109 108 110 15 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 32 [0x20])) [14 _29->player1+0 S8 A64])) "function.c":953 -1
     (nil))
(insn 110 109 111 15 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 12 [0xc])) [3 _30->x_current+0 S4 A32])) "function.c":953 -1
     (nil))
(insn 111 110 112 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ _31 ])
            (const_int 28 [0x1c]))) "function.c":953 -1
     (nil))
(jump_insn 112 111 113 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) "function.c":953 -1
     (nil)
 -> 115)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":955 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 115 114 116 17 147 (nil) [1 uses])
(note 116 115 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 17 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":957 -1
     (nil))
(insn 118 117 119 17 (set (reg/f:DI 118 [ _32 ])
        (mem/f:DI (reg/f:DI 181) [12 user_109(D)->serwer+0 S8 A64])) "function.c":957 -1
     (nil))
(insn 119 118 120 17 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 118 [ _32 ])
                (const_int 32 [0x20])) [14 _32->player1+0 S8 A64])) "function.c":957 -1
     (nil))
(insn 120 119 121 17 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 12 [0xc])) [3 _33->x_current+0 S4 A32])) "function.c":957 -1
     (nil))
(insn 121 120 122 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ _34 ])
            (const_int 29 [0x1d]))) "function.c":957 -1
     (nil))
(jump_insn 122 121 123 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 144)
            (pc))) "function.c":957 682 {*jcc}
     (nil)
 -> 144)
;;  succ:       18 (FALLTHRU)
;;              21

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 123 122 124 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 127 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 3 [0x3])) "function.c":959 -1
     (nil))
(jump_insn 127 124 128 18 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
;;  succ:       21

(barrier 128 127 129)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 129 128 130 20 146 (nil) [1 uses])
(note 130 129 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 20 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":964 -1
     (nil))
(insn 132 131 133 20 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 182) [12 user_109(D)->serwer+0 S8 A64])) "function.c":964 -1
     (nil))
(insn 133 132 134 20 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 32 [0x20])) [14 _35->player1+0 S8 A64])) "function.c":964 -1
     (nil))
(insn 134 133 135 20 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 12 [0xc])) [3 _36->x_current+0 S4 A32])) "function.c":964 -1
     (nil))
(insn 135 134 136 20 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":964 -1
     (nil))
(insn 136 135 137 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (reg:SI 183)) "function.c":964 -1
     (nil))
(insn 137 136 138 20 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":965 -1
     (nil))
(insn 138 137 139 20 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 184) [12 user_109(D)->serwer+0 S8 A64])) "function.c":965 -1
     (nil))
(insn 139 138 140 20 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 32 [0x20])) [14 _38->player1+0 S8 A64])) "function.c":965 -1
     (nil))
(insn 140 139 141 20 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 12 [0xc])) [3 _39->x_current+0 S4 A32])) "function.c":965 -1
     (nil))
(insn 141 140 142 20 (parallel [
            (set (reg:SI 185)
                (plus:SI (reg:SI 126 [ _40 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":965 -1
     (nil))
(insn 142 141 143 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (reg:SI 185)) "function.c":965 -1
     (nil))
(insn 143 142 144 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":966 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              18
;;              20 (FALLTHRU)
;;              17
(code_label 144 143 145 21 145 (nil) [3 uses])
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])) "function.c":969 -1
     (nil))
(insn 147 146 148 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
        (reg:SI 186)) "function.c":969 -1
     (nil))
(jump_insn 148 147 149 21 (set (pc)
        (label_ref 300)) "function.c":969 -1
     (nil)
 -> 300)
;;  succ:       39

(barrier 149 148 302)
;; basic block 22, loop depth 1, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
(code_label 302 149 150 22 157 (nil) [1 uses])
(note 150 302 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 22 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])) "function.c":971 -1
     (nil))
(insn 152 151 153 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
        (reg:SI 187)) "function.c":971 -1
     (nil))
(jump_insn 153 152 154 22 (set (pc)
        (label_ref 290)) "function.c":971 -1
     (nil)
 -> 290)
;;  succ:       37

(barrier 154 153 292)
;; basic block 23, loop depth 2, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 292 154 155 23 156 (nil) [1 uses])
(note 155 292 156 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 23 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 157 156 158 23 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (reg/f:DI 188) [12 user_109(D)->serwer+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 158 157 159 23 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 16 [0x10])) [9 _41->mapa+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 159 158 160 23 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":973 -1
     (nil))
(insn 160 159 161 23 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 189))) "function.c":973 -1
     (nil))
(insn 161 160 162 23 (parallel [
            (set (reg:DI 130 [ _44 ])
                (ashift:DI (reg:DI 129 [ _43 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 162 161 163 23 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 163 162 164 23 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (reg/f:DI 131 [ _45 ]) [10 *_45+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 164 163 165 23 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":973 -1
     (nil))
(insn 165 164 166 23 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 190))) "function.c":973 -1
     (nil))
(insn 166 165 167 23 (parallel [
            (set (reg/f:DI 134 [ _48 ])
                (plus:DI (reg/f:DI 132 [ _46 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 167 166 168 23 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 168 167 169 23 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (reg/f:DI 191) [12 user_109(D)->serwer+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 169 168 170 23 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (plus:DI (reg/f:DI 135 [ _49 ])
                (const_int 32 [0x20])) [14 _49->player1+0 S8 A64])) "function.c":973 -1
     (nil))
(insn 170 169 171 23 (set (reg:QI 137 [ _51 ])
        (mem:QI (reg/f:DI 134 [ _48 ]) [0 *_48+0 S1 A8])) "function.c":973 -1
     (nil))
(insn 171 170 172 23 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":973 -1
     (nil))
(insn 172 171 173 23 (set (reg:DI 192)
        (sign_extend:DI (reg:SI 193))) "function.c":973 -1
     (nil))
(insn 173 172 174 23 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":973 -1
     (nil))
(insn 174 173 175 23 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 195))) "function.c":973 -1
     (nil))
(insn 175 174 176 23 (parallel [
            (set (reg:DI 196)
                (mult:DI (reg:DI 194)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 176 175 177 23 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 136 [ _50 ])
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 177 176 178 23 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg:DI 197)
                    (reg:DI 192)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 178 177 179 23 (parallel [
            (set (reg/f:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":973 -1
     (nil))
(insn 179 178 180 23 (set (mem/j:QI (reg/f:DI 199) [0 _50->area S1 A8])
        (reg:QI 137 [ _51 ])) "function.c":973 -1
     (nil))
(insn 180 179 181 23 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":974 -1
     (nil))
(insn 181 180 182 23 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (reg/f:DI 200) [12 user_109(D)->serwer+0 S8 A64])) "function.c":974 -1
     (nil))
(insn 182 181 183 23 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 138 [ _52 ])
                (const_int 36068 [0x8ce4])) [3 _52->bestia.y+0 S4 A32])) "function.c":974 -1
     (nil))
(insn 183 182 184 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 139 [ _53 ]))) "function.c":974 -1
     (nil))
(jump_insn 184 183 185 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "function.c":974 -1
     (nil)
 -> 204)
;;  succ:       24 (FALLTHRU)
;;              26

;; basic block 24, loop depth 2, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 185 184 186 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 24 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":974 -1
     (nil))
(insn 187 186 188 24 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (reg/f:DI 201) [12 user_109(D)->serwer+0 S8 A64])) "function.c":974 -1
     (nil))
(insn 188 187 189 24 (set (reg:SI 141 [ _55 ])
        (mem:SI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 36064 [0x8ce0])) [3 _54->bestia.x+0 S4 A64])) "function.c":974 -1
     (nil))
(insn 189 188 190 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 141 [ _55 ]))) "function.c":974 -1
     (nil))
(jump_insn 190 189 191 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "function.c":974 -1
     (nil)
 -> 204)
;;  succ:       25 (FALLTHRU)
;;              26

;; basic block 25, loop depth 2, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 191 190 192 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 25 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":976 -1
     (nil))
(insn 193 192 194 25 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (reg/f:DI 202) [12 user_109(D)->serwer+0 S8 A64])) "function.c":976 -1
     (nil))
(insn 194 193 195 25 (set (reg/f:DI 143 [ _57 ])
        (mem/f:DI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 32 [0x20])) [14 _56->player1+0 S8 A64])) "function.c":976 -1
     (nil))
(insn 195 194 196 25 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":976 -1
     (nil))
(insn 196 195 197 25 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 204))) "function.c":976 -1
     (nil))
(insn 197 196 198 25 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":976 -1
     (nil))
(insn 198 197 199 25 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 206))) "function.c":976 -1
     (nil))
(insn 199 198 200 25 (parallel [
            (set (reg:DI 207)
                (mult:DI (reg:DI 205)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))
(insn 200 199 201 25 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 143 [ _57 ])
                    (reg:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))
(insn 201 200 202 25 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208)
                    (reg:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))
(insn 202 201 203 25 (parallel [
            (set (reg/f:DI 210)
                (plus:DI (reg:DI 209)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":976 -1
     (nil))
(insn 203 202 204 25 (set (mem/j:QI (reg/f:DI 210) [0 _57->area S1 A8])
        (const_int 42 [0x2a])) "function.c":976 -1
     (nil))
;;  succ:       26 (FALLTHRU)

;; basic block 26, loop depth 2, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
;;              24
;;              25 (FALLTHRU)
(code_label 204 203 205 26 151 (nil) [2 uses])
(note 205 204 206 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
        (const_int 0 [0])) "function.c":979 -1
     (nil))
(jump_insn 207 206 208 26 (set (pc)
        (label_ref 251)) "function.c":979 -1
     (nil)
 -> 251)
;;  succ:       32

(barrier 208 207 256)
;; basic block 27, loop depth 3, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
(code_label 256 208 209 27 154 (nil) [1 uses])
(note 209 256 210 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 27 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":981 -1
     (nil))
(insn 211 210 212 27 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 211) [12 user_109(D)->serwer+0 S8 A64])) "function.c":981 -1
     (nil))
(insn 212 211 213 27 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":981 -1
     (nil))
(insn 213 212 214 27 (set (reg:DI 212)
        (sign_extend:DI (reg:SI 213))) "function.c":981 -1
     (nil))
(insn 214 213 215 27 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 212)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":981 -1
     (nil))
(insn 215 214 216 27 (set (reg:SI 145 [ _59 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 214)
                    (const_int 4 [0x4]))
                (reg/f:DI 144 [ _58 ])) [3 _58->skarb.value_all_dropped_coin S4 A32])) "function.c":981 -1
     (nil))
(insn 216 215 217 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 145 [ _59 ])
            (const_int 0 [0]))) "function.c":981 -1
     (nil))
(jump_insn 217 216 218 27 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "function.c":981 -1
     (nil)
 -> 248)
;;  succ:       28 (FALLTHRU)
;;              31

;; basic block 28, loop depth 3, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 218 217 219 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 28 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":981 -1
     (nil))
(insn 220 219 221 28 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (reg/f:DI 215) [12 user_109(D)->serwer+0 S8 A64])) "function.c":981 -1
     (nil))
(insn 221 220 222 28 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":981 -1
     (nil))
(insn 222 221 223 28 (set (reg:DI 216)
        (sign_extend:DI (reg:SI 217))) "function.c":981 -1
     (nil))
(insn 223 222 224 28 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 216)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":981 -1
     (nil))
(insn 224 223 225 28 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 218)
                    (const_int 8 [0x8]))
                (reg/f:DI 146 [ _60 ])) [3 _60->skarb.dropped_coin S4 A64])) "function.c":981 -1
     (nil))
(insn 225 224 226 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 147 [ _61 ]))) "function.c":981 -1
     (nil))
(jump_insn 226 225 227 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "function.c":981 -1
     (nil)
 -> 248)
;;  succ:       29 (FALLTHRU)
;;              31

;; basic block 29, loop depth 3, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 227 226 228 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 29 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":981 -1
     (nil))
(insn 229 228 230 29 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (reg/f:DI 219) [12 user_109(D)->serwer+0 S8 A64])) "function.c":981 -1
     (nil))
(insn 230 229 231 29 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":981 -1
     (nil))
(insn 231 230 232 29 (set (reg:DI 220)
        (sign_extend:DI (reg:SI 221))) "function.c":981 -1
     (nil))
(insn 232 231 233 29 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 220)
                        (const_int 8 [0x8]))
                    (reg/f:DI 148 [ _62 ]))
                (const_int 24068 [0x5e04])) [3 _62->skarb.dropped_coin S4 A32])) "function.c":981 -1
     (nil))
(insn 233 232 234 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 149 [ _63 ]))) "function.c":981 -1
     (nil))
(jump_insn 234 233 235 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "function.c":981 -1
     (nil)
 -> 248)
;;  succ:       30 (FALLTHRU)
;;              31

;; basic block 30, loop depth 3, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 235 234 236 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 30 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":983 -1
     (nil))
(insn 237 236 238 30 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 222) [12 user_109(D)->serwer+0 S8 A64])) "function.c":983 -1
     (nil))
(insn 238 237 239 30 (set (reg/f:DI 151 [ _65 ])
        (mem/f:DI (plus:DI (reg/f:DI 150 [ _64 ])
                (const_int 32 [0x20])) [14 _64->player1+0 S8 A64])) "function.c":983 -1
     (nil))
(insn 239 238 240 30 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":983 -1
     (nil))
(insn 240 239 241 30 (set (reg:DI 223)
        (sign_extend:DI (reg:SI 224))) "function.c":983 -1
     (nil))
(insn 241 240 242 30 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":983 -1
     (nil))
(insn 242 241 243 30 (set (reg:DI 225)
        (sign_extend:DI (reg:SI 226))) "function.c":983 -1
     (nil))
(insn 243 242 244 30 (parallel [
            (set (reg:DI 227)
                (mult:DI (reg:DI 225)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))
(insn 244 243 245 30 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg/f:DI 151 [ _65 ])
                    (reg:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))
(insn 245 244 246 30 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg:DI 228)
                    (reg:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))
(insn 246 245 247 30 (parallel [
            (set (reg/f:DI 230)
                (plus:DI (reg:DI 229)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":983 -1
     (nil))
(insn 247 246 248 30 (set (mem/j:QI (reg/f:DI 230) [0 _65->area S1 A8])
        (const_int 68 [0x44])) "function.c":983 -1
     (nil))
;;  succ:       31 (FALLTHRU)

;; basic block 31, loop depth 3, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
;;              28
;;              29
;;              30 (FALLTHRU)
(code_label 248 247 249 31 153 (nil) [3 uses])
(note 249 248 250 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":979 -1
     (nil))
;;  succ:       32 (FALLTHRU,DFS_BACK)

;; basic block 32, loop depth 3, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
;;              31 (FALLTHRU,DFS_BACK)
(code_label 251 250 252 32 152 (nil) [1 uses])
(note 252 251 253 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 32 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":979 -1
     (nil))
(insn 254 253 255 32 (set (reg/f:DI 152 [ _66 ])
        (mem/f:DI (reg/f:DI 231) [12 user_109(D)->serwer+0 S8 A64])) "function.c":979 -1
     (nil))
(insn 255 254 257 32 (set (reg:SI 153 [ _67 ])
        (mem:SI (plus:DI (reg/f:DI 152 [ _66 ])
                (const_int 24060 [0x5dfc])) [3 _66->skarb.count_drop_coin+0 S4 A32])) "function.c":979 -1
     (nil))
(insn 257 255 258 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
            (reg:SI 153 [ _67 ]))) "function.c":979 -1
     (nil))
(jump_insn 258 257 259 32 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) "function.c":979 -1
     (nil)
 -> 256)
;;  succ:       27
;;              33 (FALLTHRU)

;; basic block 33, loop depth 2, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 259 258 260 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 33 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":987 -1
     (nil))
(insn 261 260 262 33 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (reg/f:DI 232) [12 user_109(D)->serwer+0 S8 A64])) "function.c":987 -1
     (nil))
(insn 262 261 263 33 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 32 [0x20])) [14 _68->player1+0 S8 A64])) "function.c":987 -1
     (nil))
(insn 263 262 264 33 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (reg/f:DI 155 [ _69 ])
                (const_int 16 [0x10])) [3 _69->y_current+0 S4 A64])) "function.c":987 -1
     (nil))
(insn 264 263 265 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 156 [ _70 ]))) "function.c":987 -1
     (nil))
(jump_insn 265 264 266 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "function.c":987 -1
     (nil)
 -> 286)
;;  succ:       34 (FALLTHRU)
;;              36

;; basic block 34, loop depth 2, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 266 265 267 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 34 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":987 -1
     (nil))
(insn 268 267 269 34 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (reg/f:DI 233) [12 user_109(D)->serwer+0 S8 A64])) "function.c":987 -1
     (nil))
(insn 269 268 270 34 (set (reg/f:DI 158 [ _72 ])
        (mem/f:DI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 32 [0x20])) [14 _71->player1+0 S8 A64])) "function.c":987 -1
     (nil))
(insn 270 269 271 34 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (reg/f:DI 158 [ _72 ])
                (const_int 12 [0xc])) [3 _72->x_current+0 S4 A32])) "function.c":987 -1
     (nil))
(insn 271 270 272 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 159 [ _73 ]))) "function.c":987 -1
     (nil))
(jump_insn 272 271 273 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "function.c":987 -1
     (nil)
 -> 286)
;;  succ:       35 (FALLTHRU)
;;              36

;; basic block 35, loop depth 2, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 (FALLTHRU)
(note 273 272 274 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 35 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":989 -1
     (nil))
(insn 275 274 276 35 (set (reg/f:DI 160 [ _74 ])
        (mem/f:DI (reg/f:DI 234) [12 user_109(D)->serwer+0 S8 A64])) "function.c":989 -1
     (nil))
(insn 276 275 277 35 (set (reg/f:DI 161 [ _75 ])
        (mem/f:DI (plus:DI (reg/f:DI 160 [ _74 ])
                (const_int 32 [0x20])) [14 _74->player1+0 S8 A64])) "function.c":989 -1
     (nil))
(insn 277 276 278 35 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":989 -1
     (nil))
(insn 278 277 279 35 (set (reg:DI 235)
        (sign_extend:DI (reg:SI 236))) "function.c":989 -1
     (nil))
(insn 279 278 280 35 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":989 -1
     (nil))
(insn 280 279 281 35 (set (reg:DI 237)
        (sign_extend:DI (reg:SI 238))) "function.c":989 -1
     (nil))
(insn 281 280 282 35 (parallel [
            (set (reg:DI 239)
                (mult:DI (reg:DI 237)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))
(insn 282 281 283 35 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 161 [ _75 ])
                    (reg:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))
(insn 283 282 284 35 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg:DI 240)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))
(insn 284 283 285 35 (parallel [
            (set (reg/f:DI 242)
                (plus:DI (reg:DI 241)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":989 -1
     (nil))
(insn 285 284 286 35 (set (mem/j:QI (reg/f:DI 242) [0 _75->area S1 A8])
        (const_int 50 [0x32])) "function.c":989 -1
     (nil))
;;  succ:       36 (FALLTHRU)

;; basic block 36, loop depth 2, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
;;              34
;;              35 (FALLTHRU)
(code_label 286 285 287 36 155 (nil) [2 uses])
(note 287 286 288 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":992 -1
     (nil))
(insn 289 288 290 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":971 -1
     (nil))
;;  succ:       37 (FALLTHRU,DFS_BACK)

;; basic block 37, loop depth 2, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              36 (FALLTHRU,DFS_BACK)
(code_label 290 289 291 37 150 (nil) [1 uses])
(note 291 290 293 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 293 291 294 37 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":971 -1
     (nil))
(insn 294 293 295 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 243)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32]))) "function.c":971 -1
     (nil))
(jump_insn 295 294 296 37 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) "function.c":971 -1
     (nil)
 -> 292)
;;  succ:       23
;;              38 (FALLTHRU)

;; basic block 38, loop depth 1, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 (FALLTHRU)
(note 296 295 297 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":994 -1
     (nil))
(insn 298 297 299 38 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":995 -1
     (nil))
(insn 299 298 300 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":969 -1
     (nil))
;;  succ:       39 (FALLTHRU,DFS_BACK)

;; basic block 39, loop depth 1, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
;;              38 (FALLTHRU,DFS_BACK)
(code_label 300 299 301 39 149 (nil) [1 uses])
(note 301 300 303 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 303 301 304 39 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":969 -1
     (nil))
(insn 304 303 305 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 244)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32]))) "function.c":969 -1
     (nil))
(jump_insn 305 304 306 39 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "function.c":969 -1
     (nil)
 -> 302)
;;  succ:       22
;;              40 (FALLTHRU)

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
(note 306 305 307 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 40 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":998 -1
     (nil))
(insn 308 307 309 40 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (reg/f:DI 245) [12 user_109(D)->serwer+0 S8 A64])) "function.c":998 -1
     (nil))
(insn 309 308 310 40 (set (reg/f:DI 163 [ _77 ])
        (mem/f:DI (plus:DI (reg/f:DI 162 [ _76 ])
                (const_int 32 [0x20])) [14 _76->player1+0 S8 A64])) "function.c":998 -1
     (nil))
(insn 310 309 311 40 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])) "function.c":998 -1
     (nil))
(insn 311 310 312 40 (set (reg:DI 246)
        (sign_extend:DI (reg:SI 247))) "function.c":998 -1
     (nil))
(insn 312 311 313 40 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])) "function.c":998 -1
     (nil))
(insn 313 312 314 40 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) "function.c":998 -1
     (nil))
(insn 314 313 315 40 (parallel [
            (set (reg:DI 250)
                (mult:DI (reg:DI 248)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))
(insn 315 314 316 40 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 163 [ _77 ])
                    (reg:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))
(insn 316 315 317 40 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg:DI 251)
                    (reg:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))
(insn 317 316 318 40 (parallel [
            (set (reg/f:DI 253)
                (plus:DI (reg:DI 252)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":998 -1
     (nil))
(insn 318 317 319 40 (set (mem/j:QI (reg/f:DI 253) [0 _77->area S1 A8])
        (const_int 49 [0x31])) "function.c":998 -1
     (nil))
(insn 319 318 322 40 (set (reg:SI 164 [ _144 ])
        (const_int 0 [0])) "function.c":1000 -1
     (nil))
(insn 322 319 326 40 (set (reg:SI 165 [ <retval> ])
        (reg:SI 164 [ _144 ])) "function.c":1000 -1
     (nil))
(insn 326 322 327 40 (set (reg/i:SI 0 ax)
        (reg:SI 165 [ <retval> ])) "function.c":1001 -1
     (nil))
(insn 327 326 0 40 (use (reg/i:SI 0 ax)) "function.c":1001 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function wizja2 (wizja2, funcdef_no=21, decl_uid=6246, cgraph_uid=21, symbol_order=24)

wizja2 (struct user_info * user)
{
  int m;
  int j;
  int i;
  int x;
  int y;
  int y_upp;
  int y_low;
  int x_upp;
  int x_low;
  int w;
  int q;
  int D.6792;
  struct serwer_info * _1;
  struct player_info * _2;
  int _3;
  struct serwer_info * _4;
  struct player_info * _5;
  struct serwer_info * _6;
  struct player_info * _7;
  int _8;
  struct serwer_info * _9;
  struct player_info * _10;
  int _11;
  struct serwer_info * _12;
  struct player_info * _13;
  int _14;
  struct serwer_info * _15;
  struct player_info * _16;
  int _17;
  struct serwer_info * _18;
  struct player_info * _19;
  int _20;
  struct serwer_info * _21;
  struct player_info * _22;
  int _23;
  struct serwer_info * _24;
  struct player_info * _25;
  struct serwer_info * _26;
  struct player_info * _27;
  int _28;
  struct serwer_info * _29;
  struct player_info * _30;
  int _31;
  struct serwer_info * _32;
  struct player_info * _33;
  int _34;
  struct serwer_info * _35;
  struct player_info * _36;
  int _37;
  struct serwer_info * _38;
  struct player_info * _39;
  int _40;
  struct serwer_info * _41;
  char * * _42;
  long unsigned int _43;
  long unsigned int _44;
  char * * _45;
  char * _46;
  sizetype _47;
  char * _48;
  struct serwer_info * _49;
  struct player_info * _50;
  char _51;
  struct serwer_info * _52;
  int _53;
  struct serwer_info * _54;
  int _55;
  struct serwer_info * _56;
  struct player_info * _57;
  struct serwer_info * _58;
  int _59;
  struct serwer_info * _60;
  int _61;
  struct serwer_info * _62;
  int _63;
  struct serwer_info * _64;
  struct player_info * _65;
  struct serwer_info * _66;
  int _67;
  struct serwer_info * _68;
  struct player_info * _69;
  int _70;
  struct serwer_info * _71;
  struct player_info * _72;
  int _73;
  struct serwer_info * _74;
  struct player_info * _75;
  struct serwer_info * _76;
  struct player_info * _77;
  int _144;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_100 = 0;
  w_101 = 0;
  x_low_102 = 0;
  x_upp_103 = 0;
  y_low_104 = 0;
  y_upp_105 = 0;
  y_106 = 0;
  x_107 = 0;
  _1 = user_109(D)->serwer;
  _2 = _1->player2;
  _3 = _2->y_current;
  if (_3 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  y_low_110 = 0;
  y_upp_111 = 5;
  _4 = user_109(D)->serwer;
  _5 = _4->player2;
  y_112 = _5->y_current;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  _6 = user_109(D)->serwer;
  _7 = _6->player2;
  _8 = _7->y_current;
  if (_8 > 17)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       5
;;                10

;;   basic block 5, loop depth 0
;;    pred:       4
  y_low_113 = 16;
  y_upp_114 = 20;
  _9 = user_109(D)->serwer;
  _10 = _9->player2;
  _11 = _10->y_current;
  if (_11 == 18)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  y_115 = 2;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # y_85 = PHI <y_106(5), y_115(6)>
  _12 = user_109(D)->serwer;
  _13 = _12->player2;
  _14 = _13->y_current;
  if (_14 == 19)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  y_116 = 3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # y_86 = PHI <y_85(7), y_116(8)>
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       4
  _15 = user_109(D)->serwer;
  _16 = _15->player2;
  _17 = _16->y_current;
  y_low_117 = _17 + -2;
  _18 = user_109(D)->serwer;
  _19 = _18->player2;
  _20 = _19->y_current;
  y_upp_118 = _20 + 2;
  y_119 = 2;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                9
;;                10
  # y_low_83 = PHI <y_low_110(3), y_low_113(9), y_low_117(10)>
  # y_upp_84 = PHI <y_upp_111(3), y_upp_114(9), y_upp_118(10)>
  # y_87 = PHI <y_112(3), y_86(9), y_119(10)>
  _21 = user_109(D)->serwer;
  _22 = _21->player2;
  _23 = _22->x_current;
  if (_23 <= 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  x_low_120 = 0;
  x_upp_121 = 5;
  _24 = user_109(D)->serwer;
  _25 = _24->player2;
  x_122 = _25->x_current;
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 13, loop depth 0
;;    pred:       11
  _26 = user_109(D)->serwer;
  _27 = _26->player2;
  _28 = _27->x_current;
  if (_28 > 27)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       14
;;                19

;;   basic block 14, loop depth 0
;;    pred:       13
  x_low_123 = 26;
  x_upp_124 = 30;
  _29 = user_109(D)->serwer;
  _30 = _29->player2;
  _31 = _30->x_current;
  if (_31 == 28)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  x_125 = 2;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  # x_88 = PHI <x_107(14), x_125(15)>
  _32 = user_109(D)->serwer;
  _33 = _32->player2;
  _34 = _33->x_current;
  if (_34 == 29)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  x_126 = 3;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  # x_89 = PHI <x_88(16), x_126(17)>
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 19, loop depth 0
;;    pred:       13
  _35 = user_109(D)->serwer;
  _36 = _35->player2;
  _37 = _36->x_current;
  x_low_127 = _37 + -2;
  _38 = user_109(D)->serwer;
  _39 = _38->player2;
  _40 = _39->x_current;
  x_upp_128 = _40 + 2;
  x_129 = 2;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       12
;;                18
;;                19
  # x_low_81 = PHI <x_low_120(12), x_low_123(18), x_low_127(19)>
  # x_upp_82 = PHI <x_upp_121(12), x_upp_124(18), x_upp_128(19)>
  # x_90 = PHI <x_122(12), x_89(18), x_129(19)>
  i_130 = y_low_83;
  goto <bb 38>; [INV]
;;    succ:       38

;;   basic block 21, loop depth 1
;;    pred:       38
  j_131 = x_low_81;
  goto <bb 36>; [INV]
;;    succ:       36

;;   basic block 22, loop depth 2
;;    pred:       36
  _41 = user_109(D)->serwer;
  _42 = _41->mapa;
  _43 = (long unsigned int) i_91;
  _44 = _43 * 8;
  _45 = _42 + _44;
  _46 = *_45;
  _47 = (sizetype) j_92;
  _48 = _46 + _47;
  _49 = user_109(D)->serwer;
  _50 = _49->player2;
  _51 = *_48;
  _50->area[q_78][w_79] = _51;
  _52 = user_109(D)->serwer;
  _53 = _52->bestia.y;
  if (i_91 == _53)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       23
;;                25

;;   basic block 23, loop depth 2
;;    pred:       22
  _54 = user_109(D)->serwer;
  _55 = _54->bestia.x;
  if (j_92 == _55)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 2
;;    pred:       23
  _56 = user_109(D)->serwer;
  _57 = _56->player2;
  _57->area[q_78][w_79] = 42;
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       22
;;                23
;;                24
  m_134 = 0;
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 26, loop depth 3
;;    pred:       31
  _58 = user_109(D)->serwer;
  _59 = _58->skarb.value_all_dropped_coin[m_93];
  if (_59 >= 0)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       27
;;                30

;;   basic block 27, loop depth 3
;;    pred:       26
  _60 = user_109(D)->serwer;
  _61 = _60->skarb.dropped_coin[m_93][0];
  if (i_91 == _61)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       28
;;                30

;;   basic block 28, loop depth 3
;;    pred:       27
  _62 = user_109(D)->serwer;
  _63 = _62->skarb.dropped_coin[m_93][1];
  if (j_92 == _63)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 3
;;    pred:       28
  _64 = user_109(D)->serwer;
  _65 = _64->player2;
  _65->area[q_78][w_79] = 68;
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       26
;;                27
;;                28
;;                29
  m_136 = m_93 + 1;
;;    succ:       31

;;   basic block 31, loop depth 3
;;    pred:       25
;;                30
  # m_93 = PHI <m_134(25), m_136(30)>
  _66 = user_109(D)->serwer;
  _67 = _66->skarb.count_drop_coin;
  if (m_93 < _67)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       26
;;                32

;;   basic block 32, loop depth 2
;;    pred:       31
  _68 = user_109(D)->serwer;
  _69 = _68->player1;
  _70 = _69->y_current;
  if (i_91 == _70)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       33
;;                35

;;   basic block 33, loop depth 2
;;    pred:       32
  _71 = user_109(D)->serwer;
  _72 = _71->player1;
  _73 = _72->x_current;
  if (j_92 == _73)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       34
;;                35

;;   basic block 34, loop depth 2
;;    pred:       33
  _74 = user_109(D)->serwer;
  _75 = _74->player2;
  _75->area[q_78][w_79] = 49;
;;    succ:       35

;;   basic block 35, loop depth 2
;;    pred:       32
;;                33
;;                34
  w_138 = w_79 + 1;
  j_139 = j_92 + 1;
;;    succ:       36

;;   basic block 36, loop depth 2
;;    pred:       21
;;                35
  # w_79 = PHI <w_80(21), w_138(35)>
  # j_92 = PHI <j_131(21), j_139(35)>
  if (j_92 <= x_upp_82)
    goto <bb 22>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       22
;;                37

;;   basic block 37, loop depth 1
;;    pred:       36
  q_140 = q_78 + 1;
  w_141 = 0;
  i_142 = i_91 + 1;
;;    succ:       38

;;   basic block 38, loop depth 1
;;    pred:       20
;;                37
  # q_78 = PHI <q_100(20), q_140(37)>
  # w_80 = PHI <w_101(20), w_141(37)>
  # i_91 = PHI <i_130(20), i_142(37)>
  if (i_91 <= y_upp_84)
    goto <bb 21>; [INV]
  else
    goto <bb 39>; [INV]
;;    succ:       21
;;                39

;;   basic block 39, loop depth 0
;;    pred:       38
  _76 = user_109(D)->serwer;
  _77 = _76->player2;
  _77->area[y_87][x_90] = 50;
  _144 = 0;
;;    succ:       40

;;   basic block 40, loop depth 0
;;    pred:       39
<L43>:
  return _144;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (q_78 - 78 )
Partition 79 (w_79 - 79 )
Partition 80 (w_80 - 80 )
Partition 81 (x_low_81 - 81 )
Partition 82 (x_upp_82 - 82 )
Partition 83 (y_low_83 - 83 )
Partition 84 (y_upp_84 - 84 )
Partition 85 (y_85 - 85 )
Partition 86 (y_86 - 86 )
Partition 87 (y_87 - 87 )
Partition 88 (x_88 - 88 )
Partition 89 (x_89 - 89 )
Partition 90 (x_90 - 90 )
Partition 91 (i_91 - 91 )
Partition 92 (j_92 - 92 )
Partition 93 (m_93 - 93 )
Partition 100 (q_100 - 100 )
Partition 101 (w_101 - 101 )
Partition 102 (x_low_102 - 102 )
Partition 103 (x_upp_103 - 103 )
Partition 104 (y_low_104 - 104 )
Partition 105 (y_upp_105 - 105 )
Partition 106 (y_106 - 106 )
Partition 107 (x_107 - 107 )
Partition 109 (user_109(D) - 109 )
Partition 110 (y_low_110 - 110 )
Partition 111 (y_upp_111 - 111 )
Partition 112 (y_112 - 112 )
Partition 113 (y_low_113 - 113 )
Partition 114 (y_upp_114 - 114 )
Partition 115 (y_115 - 115 )
Partition 116 (y_116 - 116 )
Partition 117 (y_low_117 - 117 )
Partition 118 (y_upp_118 - 118 )
Partition 119 (y_119 - 119 )
Partition 120 (x_low_120 - 120 )
Partition 121 (x_upp_121 - 121 )
Partition 122 (x_122 - 122 )
Partition 123 (x_low_123 - 123 )
Partition 124 (x_upp_124 - 124 )
Partition 125 (x_125 - 125 )
Partition 126 (x_126 - 126 )
Partition 127 (x_low_127 - 127 )
Partition 128 (x_upp_128 - 128 )
Partition 129 (x_129 - 129 )
Partition 130 (i_130 - 130 )
Partition 131 (j_131 - 131 )
Partition 134 (m_134 - 134 )
Partition 136 (m_136 - 136 )
Partition 138 (w_138 - 138 )
Partition 139 (j_139 - 139 )
Partition 140 (q_140 - 140 )
Partition 141 (w_141 - 141 )
Partition 142 (i_142 - 142 )
Partition 144 (_144 - 144 )
Partition 145 (_145(D) - 145 )


Coalescible Partition map 

Partition 0, base 0 (q_78 - 78 100 140 )
Partition 1, base 1 (w_79 - 79 80 101 138 141 )
Partition 3, base 2 (x_low_81 - 81 102 120 123 127 )
Partition 4, base 3 (x_upp_82 - 82 103 121 124 128 )
Partition 5, base 4 (y_low_83 - 83 104 110 113 117 )
Partition 6, base 5 (y_upp_84 - 84 105 111 114 118 )
Partition 7, base 6 (y_85 - 85 86 87 106 112 115 116 119 )
Partition 10, base 7 (x_88 - 88 89 90 107 122 125 126 129 )
Partition 13, base 8 (i_91 - 91 130 142 )
Partition 14, base 9 (j_92 - 92 131 139 )
Partition 15, base 10 (m_93 - 93 134 136 )
Partition 24, base 11 (user_109(D) - 109 )
Partition 54, base 12 (_145(D) - 145 )


Partition map 

Partition 0 (q_78 - 78 )
Partition 1 (w_79 - 79 )
Partition 2 (w_80 - 80 )
Partition 3 (x_low_81 - 81 )
Partition 4 (x_upp_82 - 82 )
Partition 5 (y_low_83 - 83 )
Partition 6 (y_upp_84 - 84 )
Partition 7 (y_85 - 85 )
Partition 8 (y_86 - 86 )
Partition 9 (y_87 - 87 )
Partition 10 (x_88 - 88 )
Partition 11 (x_89 - 89 )
Partition 12 (x_90 - 90 )
Partition 13 (i_91 - 91 )
Partition 14 (j_92 - 92 )
Partition 15 (m_93 - 93 )
Partition 16 (q_100 - 100 )
Partition 17 (w_101 - 101 )
Partition 18 (x_low_102 - 102 )
Partition 19 (x_upp_103 - 103 )
Partition 20 (y_low_104 - 104 )
Partition 21 (y_upp_105 - 105 )
Partition 22 (y_106 - 106 )
Partition 23 (x_107 - 107 )
Partition 24 (user_109(D) - 109 )
Partition 25 (y_low_110 - 110 )
Partition 26 (y_upp_111 - 111 )
Partition 27 (y_112 - 112 )
Partition 28 (y_low_113 - 113 )
Partition 29 (y_upp_114 - 114 )
Partition 30 (y_115 - 115 )
Partition 31 (y_116 - 116 )
Partition 32 (y_low_117 - 117 )
Partition 33 (y_upp_118 - 118 )
Partition 34 (y_119 - 119 )
Partition 35 (x_low_120 - 120 )
Partition 36 (x_upp_121 - 121 )
Partition 37 (x_122 - 122 )
Partition 38 (x_low_123 - 123 )
Partition 39 (x_upp_124 - 124 )
Partition 40 (x_125 - 125 )
Partition 41 (x_126 - 126 )
Partition 42 (x_low_127 - 127 )
Partition 43 (x_upp_128 - 128 )
Partition 44 (x_129 - 129 )
Partition 45 (i_130 - 130 )
Partition 46 (j_131 - 131 )
Partition 47 (m_134 - 134 )
Partition 48 (m_136 - 136 )
Partition 49 (w_138 - 138 )
Partition 50 (j_139 - 139 )
Partition 51 (q_140 - 140 )
Partition 52 (w_141 - 141 )
Partition 53 (i_142 - 142 )
Partition 54 (_145(D) - 145 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) y_85 <-> y_106
(2147483646, 0) y_85 <-> y_115
(2147483646, 0) y_85 <-> y_86
(2147483646, 0) y_low_83 <-> y_low_110
(2147483646, 0) y_low_83 <-> y_low_113
(2147483646, 0) y_low_83 <-> y_low_117
(2147483646, 0) y_upp_84 <-> y_upp_111
(2147483646, 0) y_upp_84 <-> y_upp_114
(2147483646, 0) y_upp_84 <-> y_upp_118
(2147483646, 0) x_88 <-> x_107
(2147483646, 0) x_88 <-> x_125
(2147483646, 0) x_88 <-> x_89
(2147483646, 0) x_low_81 <-> x_low_120
(2147483646, 0) x_low_81 <-> x_low_123
(2147483646, 0) x_low_81 <-> x_low_127
(2147483646, 0) x_upp_82 <-> x_upp_121
(2147483646, 0) x_upp_82 <-> x_upp_124
(2147483646, 0) x_upp_82 <-> x_upp_128
(2147483646, 0) m_93 <-> m_134
(2147483646, 0) m_93 <-> m_136
(2147483646, 0) w_79 <-> w_80
(2147483646, 0) w_79 <-> w_138
(2147483646, 0) j_92 <-> j_131
(2147483646, 0) j_92 <-> j_139
(2147483646, 0) q_78 <-> q_100
(2147483646, 0) q_78 <-> q_140
(2147483646, 0) i_91 <-> i_130
(2147483646, 0) i_91 <-> i_142
(2147483646, 0) y_85 <-> y_87
(2147483646, 0) x_88 <-> x_90
(2147483646, 0) w_79 <-> w_101
(2147483646, 0) x_low_81 <-> x_low_102
(2147483646, 0) x_upp_82 <-> x_upp_103
(2147483646, 0) y_low_83 <-> y_low_104
(2147483646, 0) y_upp_84 <-> y_upp_105
(2147483646, 0) y_85 <-> y_112
(2147483646, 0) y_85 <-> y_116
(2147483646, 0) y_85 <-> y_119
(2147483646, 0) x_88 <-> x_122
(2147483646, 0) x_88 <-> x_126
(2147483646, 0) x_88 <-> x_129
(2147483646, 0) w_79 <-> w_141
(10000, 0) y_86 <-> y_116
(10000, 0) y_87 <-> y_112
(10000, 0) y_86 <-> y_87
(10000, 0) y_87 <-> y_119
(10000, 0) x_89 <-> x_126
(10000, 0) x_90 <-> x_122
(10000, 0) x_89 <-> x_90
(10000, 0) x_90 <-> x_129
(10000, 0) w_80 <-> w_101
(10000, 0) w_80 <-> w_141

Partition map 

Partition 0 (q_78 - 78 )
Partition 1 (w_79 - 79 )
Partition 2 (w_80 - 80 )
Partition 3 (x_low_81 - 81 )
Partition 4 (x_upp_82 - 82 )
Partition 5 (y_low_83 - 83 )
Partition 6 (y_upp_84 - 84 )
Partition 7 (y_85 - 85 )
Partition 8 (y_86 - 86 )
Partition 9 (y_87 - 87 )
Partition 10 (x_88 - 88 )
Partition 11 (x_89 - 89 )
Partition 12 (x_90 - 90 )
Partition 13 (i_91 - 91 )
Partition 14 (j_92 - 92 )
Partition 15 (m_93 - 93 )
Partition 16 (q_100 - 100 )
Partition 17 (w_101 - 101 )
Partition 18 (x_low_102 - 102 )
Partition 19 (x_upp_103 - 103 )
Partition 20 (y_low_104 - 104 )
Partition 21 (y_upp_105 - 105 )
Partition 22 (y_106 - 106 )
Partition 23 (x_107 - 107 )
Partition 24 (user_109(D) - 109 )
Partition 25 (y_low_110 - 110 )
Partition 26 (y_upp_111 - 111 )
Partition 27 (y_112 - 112 )
Partition 28 (y_low_113 - 113 )
Partition 29 (y_upp_114 - 114 )
Partition 30 (y_115 - 115 )
Partition 31 (y_116 - 116 )
Partition 32 (y_low_117 - 117 )
Partition 33 (y_upp_118 - 118 )
Partition 34 (y_119 - 119 )
Partition 35 (x_low_120 - 120 )
Partition 36 (x_upp_121 - 121 )
Partition 37 (x_122 - 122 )
Partition 38 (x_low_123 - 123 )
Partition 39 (x_upp_124 - 124 )
Partition 40 (x_125 - 125 )
Partition 41 (x_126 - 126 )
Partition 42 (x_low_127 - 127 )
Partition 43 (x_upp_128 - 128 )
Partition 44 (x_129 - 129 )
Partition 45 (i_130 - 130 )
Partition 46 (j_131 - 131 )
Partition 47 (m_134 - 134 )
Partition 48 (m_136 - 136 )
Partition 49 (w_138 - 138 )
Partition 50 (j_139 - 139 )
Partition 51 (q_140 - 140 )
Partition 52 (w_141 - 141 )
Partition 53 (i_142 - 142 )
Partition 54 (_145(D) - 145 )

Coalesce list: (85)y_85 & (106)y_106 [map: 7, 22] : Success -> 7
Coalesce list: (85)y_85 & (115)y_115 [map: 7, 30] : Success -> 7
Coalesce list: (85)y_85 & (86)y_86 [map: 7, 8] : Success -> 7
Coalesce list: (83)y_low_83 & (110)y_low_110 [map: 5, 25] : Success -> 5
Coalesce list: (83)y_low_83 & (113)y_low_113 [map: 5, 28] : Success -> 5
Coalesce list: (83)y_low_83 & (117)y_low_117 [map: 5, 32] : Success -> 5
Coalesce list: (84)y_upp_84 & (111)y_upp_111 [map: 6, 26] : Success -> 6
Coalesce list: (84)y_upp_84 & (114)y_upp_114 [map: 6, 29] : Success -> 6
Coalesce list: (84)y_upp_84 & (118)y_upp_118 [map: 6, 33] : Success -> 6
Coalesce list: (88)x_88 & (107)x_107 [map: 10, 23] : Success -> 10
Coalesce list: (88)x_88 & (125)x_125 [map: 10, 40] : Success -> 10
Coalesce list: (88)x_88 & (89)x_89 [map: 10, 11] : Success -> 10
Coalesce list: (81)x_low_81 & (120)x_low_120 [map: 3, 35] : Success -> 3
Coalesce list: (81)x_low_81 & (123)x_low_123 [map: 3, 38] : Success -> 3
Coalesce list: (81)x_low_81 & (127)x_low_127 [map: 3, 42] : Success -> 3
Coalesce list: (82)x_upp_82 & (121)x_upp_121 [map: 4, 36] : Success -> 4
Coalesce list: (82)x_upp_82 & (124)x_upp_124 [map: 4, 39] : Success -> 4
Coalesce list: (82)x_upp_82 & (128)x_upp_128 [map: 4, 43] : Success -> 4
Coalesce list: (93)m_93 & (134)m_134 [map: 15, 47] : Success -> 15
Coalesce list: (93)m_93 & (136)m_136 [map: 15, 48] : Success -> 15
Coalesce list: (79)w_79 & (80)w_80 [map: 1, 2] : Success -> 1
Coalesce list: (79)w_79 & (138)w_138 [map: 1, 49] : Success -> 1
Coalesce list: (92)j_92 & (131)j_131 [map: 14, 46] : Success -> 14
Coalesce list: (92)j_92 & (139)j_139 [map: 14, 50] : Success -> 14
Coalesce list: (78)q_78 & (100)q_100 [map: 0, 16] : Success -> 0
Coalesce list: (78)q_78 & (140)q_140 [map: 0, 51] : Success -> 0
Coalesce list: (91)i_91 & (130)i_130 [map: 13, 45] : Success -> 13
Coalesce list: (91)i_91 & (142)i_142 [map: 13, 53] : Success -> 13
Coalesce list: (85)y_85 & (87)y_87 [map: 7, 9] : Success -> 7
Coalesce list: (88)x_88 & (90)x_90 [map: 10, 12] : Success -> 10
Coalesce list: (79)w_79 & (101)w_101 [map: 1, 17] : Success -> 1
Coalesce list: (81)x_low_81 & (102)x_low_102 [map: 3, 18] : Success -> 3
Coalesce list: (82)x_upp_82 & (103)x_upp_103 [map: 4, 19] : Success -> 4
Coalesce list: (83)y_low_83 & (104)y_low_104 [map: 5, 20] : Success -> 5
Coalesce list: (84)y_upp_84 & (105)y_upp_105 [map: 6, 21] : Success -> 6
Coalesce list: (85)y_85 & (112)y_112 [map: 7, 27] : Success -> 7
Coalesce list: (85)y_85 & (116)y_116 [map: 7, 31] : Success -> 7
Coalesce list: (85)y_85 & (119)y_119 [map: 7, 34] : Success -> 7
Coalesce list: (88)x_88 & (122)x_122 [map: 10, 37] : Success -> 10
Coalesce list: (88)x_88 & (126)x_126 [map: 10, 41] : Success -> 10
Coalesce list: (88)x_88 & (129)x_129 [map: 10, 44] : Success -> 10
Coalesce list: (79)w_79 & (141)w_141 [map: 1, 52] : Success -> 1
Coalesce list: (86)y_85 & (116)y_85: Already Coalesced.
Coalesce list: (87)y_85 & (112)y_85: Already Coalesced.
Coalesce list: (86)y_85 & (87)y_85: Already Coalesced.
Coalesce list: (87)y_85 & (119)y_85: Already Coalesced.
Coalesce list: (89)x_88 & (126)x_88: Already Coalesced.
Coalesce list: (90)x_88 & (122)x_88: Already Coalesced.
Coalesce list: (89)x_88 & (90)x_88: Already Coalesced.
Coalesce list: (90)x_88 & (129)x_88: Already Coalesced.
Coalesce list: (80)w_79 & (101)w_79: Already Coalesced.
Coalesce list: (80)w_79 & (141)w_79: Already Coalesced.
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (q_78 - 78 100 140 )
Partition 78 (w_79 - 79 80 101 138 141 )
Partition 79 (x_low_81 - 81 102 120 123 127 )
Partition 80 (x_upp_82 - 82 103 121 124 128 )
Partition 81 (y_low_83 - 83 104 110 113 117 )
Partition 82 (y_upp_84 - 84 105 111 114 118 )
Partition 83 (y_85 - 85 86 87 106 112 115 116 119 )
Partition 84 (x_88 - 88 89 90 107 122 125 126 129 )
Partition 85 (i_91 - 91 130 142 )
Partition 86 (j_92 - 92 131 139 )
Partition 87 (m_93 - 93 134 136 )
Partition 88 (user_109(D) - 109 )
Partition 89 (_144 - 144 )
Partition 90 (_145(D) - 145 )

wizja2 (struct user_info * user)
{
  int m;
  int j;
  int i;
  int x;
  int y;
  int y_upp;
  int y_low;
  int x_upp;
  int x_low;
  int w;
  int q;
  int D.6792;
  struct serwer_info * _1;
  struct player_info * _2;
  int _3;
  struct serwer_info * _4;
  struct player_info * _5;
  struct serwer_info * _6;
  struct player_info * _7;
  int _8;
  struct serwer_info * _9;
  struct player_info * _10;
  int _11;
  struct serwer_info * _12;
  struct player_info * _13;
  int _14;
  struct serwer_info * _15;
  struct player_info * _16;
  int _17;
  struct serwer_info * _18;
  struct player_info * _19;
  int _20;
  struct serwer_info * _21;
  struct player_info * _22;
  int _23;
  struct serwer_info * _24;
  struct player_info * _25;
  struct serwer_info * _26;
  struct player_info * _27;
  int _28;
  struct serwer_info * _29;
  struct player_info * _30;
  int _31;
  struct serwer_info * _32;
  struct player_info * _33;
  int _34;
  struct serwer_info * _35;
  struct player_info * _36;
  int _37;
  struct serwer_info * _38;
  struct player_info * _39;
  int _40;
  struct serwer_info * _41;
  char * * _42;
  long unsigned int _43;
  long unsigned int _44;
  char * * _45;
  char * _46;
  sizetype _47;
  char * _48;
  struct serwer_info * _49;
  struct player_info * _50;
  char _51;
  struct serwer_info * _52;
  int _53;
  struct serwer_info * _54;
  int _55;
  struct serwer_info * _56;
  struct player_info * _57;
  struct serwer_info * _58;
  int _59;
  struct serwer_info * _60;
  int _61;
  struct serwer_info * _62;
  int _63;
  struct serwer_info * _64;
  struct player_info * _65;
  struct serwer_info * _66;
  int _67;
  struct serwer_info * _68;
  struct player_info * _69;
  int _70;
  struct serwer_info * _71;
  struct player_info * _72;
  int _73;
  struct serwer_info * _74;
  struct player_info * _75;
  struct serwer_info * _76;
  struct player_info * _77;
  int _144;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  q_100 = 0;
  w_101 = 0;
  x_low_102 = 0;
  x_upp_103 = 0;
  y_low_104 = 0;
  y_upp_105 = 0;
  y_106 = 0;
  x_107 = 0;
  _1 = user_109(D)->serwer;
  _2 = _1->player2;
  _3 = _2->y_current;
  if (_3 <= 1)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       3
;;                4

;;   basic block 3, loop depth 0
;;    pred:       2
  y_low_110 = 0;
  y_upp_111 = 5;
  _4 = user_109(D)->serwer;
  _5 = _4->player2;
  y_112 = _5->y_current;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 4, loop depth 0
;;    pred:       2
  _6 = user_109(D)->serwer;
  _7 = _6->player2;
  _8 = _7->y_current;
  if (_8 > 17)
    goto <bb 5>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       5
;;                10

;;   basic block 5, loop depth 0
;;    pred:       4
  y_low_113 = 16;
  y_upp_114 = 20;
  _9 = user_109(D)->serwer;
  _10 = _9->player2;
  _11 = _10->y_current;
  if (_11 == 18)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  y_115 = 2;
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       5
;;                6
  # y_85 = PHI <y_106(5), y_115(6)>
  _12 = user_109(D)->serwer;
  _13 = _12->player2;
  _14 = _13->y_current;
  if (_14 == 19)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 0
;;    pred:       7
  y_116 = 3;
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       7
;;                8
  # y_86 = PHI <y_85(7), y_116(8)>
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       4
  _15 = user_109(D)->serwer;
  _16 = _15->player2;
  _17 = _16->y_current;
  y_low_117 = _17 + -2;
  _18 = user_109(D)->serwer;
  _19 = _18->player2;
  _20 = _19->y_current;
  y_upp_118 = _20 + 2;
  y_119 = 2;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       3
;;                9
;;                10
  # y_low_83 = PHI <y_low_110(3), y_low_113(9), y_low_117(10)>
  # y_upp_84 = PHI <y_upp_111(3), y_upp_114(9), y_upp_118(10)>
  # y_87 = PHI <y_112(3), y_86(9), y_119(10)>
  _21 = user_109(D)->serwer;
  _22 = _21->player2;
  _23 = _22->x_current;
  if (_23 <= 1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 0
;;    pred:       11
  x_low_120 = 0;
  x_upp_121 = 5;
  _24 = user_109(D)->serwer;
  _25 = _24->player2;
  x_122 = _25->x_current;
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 13, loop depth 0
;;    pred:       11
  _26 = user_109(D)->serwer;
  _27 = _26->player2;
  _28 = _27->x_current;
  if (_28 > 27)
    goto <bb 14>; [INV]
  else
    goto <bb 19>; [INV]
;;    succ:       14
;;                19

;;   basic block 14, loop depth 0
;;    pred:       13
  x_low_123 = 26;
  x_upp_124 = 30;
  _29 = user_109(D)->serwer;
  _30 = _29->player2;
  _31 = _30->x_current;
  if (_31 == 28)
    goto <bb 15>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       15
;;                16

;;   basic block 15, loop depth 0
;;    pred:       14
  x_125 = 2;
;;    succ:       16

;;   basic block 16, loop depth 0
;;    pred:       14
;;                15
  # x_88 = PHI <x_107(14), x_125(15)>
  _32 = user_109(D)->serwer;
  _33 = _32->player2;
  _34 = _33->x_current;
  if (_34 == 29)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  x_126 = 3;
;;    succ:       18

;;   basic block 18, loop depth 0
;;    pred:       16
;;                17
  # x_89 = PHI <x_88(16), x_126(17)>
  goto <bb 20>; [INV]
;;    succ:       20

;;   basic block 19, loop depth 0
;;    pred:       13
  _35 = user_109(D)->serwer;
  _36 = _35->player2;
  _37 = _36->x_current;
  x_low_127 = _37 + -2;
  _38 = user_109(D)->serwer;
  _39 = _38->player2;
  _40 = _39->x_current;
  x_upp_128 = _40 + 2;
  x_129 = 2;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       12
;;                18
;;                19
  # x_low_81 = PHI <x_low_120(12), x_low_123(18), x_low_127(19)>
  # x_upp_82 = PHI <x_upp_121(12), x_upp_124(18), x_upp_128(19)>
  # x_90 = PHI <x_122(12), x_89(18), x_129(19)>
  i_130 = y_low_83;
  goto <bb 38>; [INV]
;;    succ:       38

;;   basic block 21, loop depth 1
;;    pred:       38
  j_131 = x_low_81;
  goto <bb 36>; [INV]
;;    succ:       36

;;   basic block 22, loop depth 2
;;    pred:       36
  _41 = user_109(D)->serwer;
  _42 = _41->mapa;
  _43 = (long unsigned int) i_91;
  _44 = _43 * 8;
  _45 = _42 + _44;
  _46 = *_45;
  _47 = (sizetype) j_92;
  _48 = _46 + _47;
  _49 = user_109(D)->serwer;
  _50 = _49->player2;
  _51 = *_48;
  _50->area[q_78][w_79] = _51;
  _52 = user_109(D)->serwer;
  _53 = _52->bestia.y;
  if (i_91 == _53)
    goto <bb 23>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       23
;;                25

;;   basic block 23, loop depth 2
;;    pred:       22
  _54 = user_109(D)->serwer;
  _55 = _54->bestia.x;
  if (j_92 == _55)
    goto <bb 24>; [INV]
  else
    goto <bb 25>; [INV]
;;    succ:       24
;;                25

;;   basic block 24, loop depth 2
;;    pred:       23
  _56 = user_109(D)->serwer;
  _57 = _56->player2;
  _57->area[q_78][w_79] = 42;
;;    succ:       25

;;   basic block 25, loop depth 2
;;    pred:       22
;;                23
;;                24
  m_134 = 0;
  goto <bb 31>; [INV]
;;    succ:       31

;;   basic block 26, loop depth 3
;;    pred:       31
  _58 = user_109(D)->serwer;
  _59 = _58->skarb.value_all_dropped_coin[m_93];
  if (_59 >= 0)
    goto <bb 27>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       27
;;                30

;;   basic block 27, loop depth 3
;;    pred:       26
  _60 = user_109(D)->serwer;
  _61 = _60->skarb.dropped_coin[m_93][0];
  if (i_91 == _61)
    goto <bb 28>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       28
;;                30

;;   basic block 28, loop depth 3
;;    pred:       27
  _62 = user_109(D)->serwer;
  _63 = _62->skarb.dropped_coin[m_93][1];
  if (j_92 == _63)
    goto <bb 29>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       29
;;                30

;;   basic block 29, loop depth 3
;;    pred:       28
  _64 = user_109(D)->serwer;
  _65 = _64->player2;
  _65->area[q_78][w_79] = 68;
;;    succ:       30

;;   basic block 30, loop depth 3
;;    pred:       26
;;                27
;;                28
;;                29
  m_136 = m_93 + 1;
;;    succ:       31

;;   basic block 31, loop depth 3
;;    pred:       25
;;                30
  # m_93 = PHI <m_134(25), m_136(30)>
  _66 = user_109(D)->serwer;
  _67 = _66->skarb.count_drop_coin;
  if (m_93 < _67)
    goto <bb 26>; [INV]
  else
    goto <bb 32>; [INV]
;;    succ:       26
;;                32

;;   basic block 32, loop depth 2
;;    pred:       31
  _68 = user_109(D)->serwer;
  _69 = _68->player1;
  _70 = _69->y_current;
  if (i_91 == _70)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       33
;;                35

;;   basic block 33, loop depth 2
;;    pred:       32
  _71 = user_109(D)->serwer;
  _72 = _71->player1;
  _73 = _72->x_current;
  if (j_92 == _73)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       34
;;                35

;;   basic block 34, loop depth 2
;;    pred:       33
  _74 = user_109(D)->serwer;
  _75 = _74->player2;
  _75->area[q_78][w_79] = 49;
;;    succ:       35

;;   basic block 35, loop depth 2
;;    pred:       32
;;                33
;;                34
  w_138 = w_79 + 1;
  j_139 = j_92 + 1;
;;    succ:       36

;;   basic block 36, loop depth 2
;;    pred:       21
;;                35
  # w_79 = PHI <w_80(21), w_138(35)>
  # j_92 = PHI <j_131(21), j_139(35)>
  if (j_92 <= x_upp_82)
    goto <bb 22>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       22
;;                37

;;   basic block 37, loop depth 1
;;    pred:       36
  q_140 = q_78 + 1;
  w_141 = 0;
  i_142 = i_91 + 1;
;;    succ:       38

;;   basic block 38, loop depth 1
;;    pred:       20
;;                37
  # q_78 = PHI <q_100(20), q_140(37)>
  # w_80 = PHI <w_101(20), w_141(37)>
  # i_91 = PHI <i_130(20), i_142(37)>
  if (i_91 <= y_upp_84)
    goto <bb 21>; [INV]
  else
    goto <bb 39>; [INV]
;;    succ:       21
;;                39

;;   basic block 39, loop depth 0
;;    pred:       38
  _76 = user_109(D)->serwer;
  _77 = _76->player2;
  _77->area[y_87][x_90] = 50;
  _144 = 0;
;;    succ:       40

;;   basic block 40, loop depth 0
;;    pred:       39
<L43>:
  return _144;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; q_100 = 0;

(insn 6 5 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
        (const_int 0 [0])) "function.c":1005 -1
     (nil))

;; w_101 = 0;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":1006 -1
     (nil))

;; x_low_102 = 0;

(insn 8 7 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1007 -1
     (nil))

;; x_upp_103 = 0;

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1008 -1
     (nil))

;; y_low_104 = 0;

(insn 10 9 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1009 -1
     (nil))

;; y_upp_105 = 0;

(insn 11 10 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1010 -1
     (nil))

;; y_106 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":1011 -1
     (nil))

;; x_107 = 0;

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":1012 -1
     (nil))

;; _1 = user_109(D)->serwer;

(insn 14 13 15 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1014 -1
     (nil))

(insn 15 14 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 166) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1014 -1
     (nil))

;; _2 = _1->player2;

(insn 16 15 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 40 [0x28])) [14 _1->player2+0 S8 A64])) "function.c":1014 -1
     (nil))

;; _3 = _2->y_current;

(insn 17 16 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":1014 -1
     (nil))

;; if (_3 <= 1)

(insn 18 17 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "function.c":1014 -1
     (nil))

(jump_insn 19 18 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1014 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; y_low_110 = 0;

(insn 21 20 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1016 -1
     (nil))

;; y_upp_111 = 5;

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":1017 -1
     (nil))

;; _4 = user_109(D)->serwer;

(insn 23 22 24 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1018 -1
     (nil))

(insn 24 23 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 167) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1018 -1
     (nil))

;; _5 = _4->player2;

(insn 25 24 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ _4 ])
                (const_int 40 [0x28])) [14 _4->player2+0 S8 A64])) "function.c":1018 -1
     (nil))

;; y_112 = _5->y_current;

(insn 26 25 27 (set (reg:SI 168)
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1018 -1
     (nil))

(insn 27 26 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (reg:SI 168)) "function.c":1018 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; 

(code_label 30 29 31 160 (nil) [0 uses])

(note 31 30 0 NOTE_INSN_BASIC_BLOCK)

;; _6 = user_109(D)->serwer;

(insn 32 31 33 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1020 -1
     (nil))

(insn 33 32 0 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 169) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1020 -1
     (nil))

;; _7 = _6->player2;

(insn 34 33 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _6 ])
                (const_int 40 [0x28])) [14 _6->player2+0 S8 A64])) "function.c":1020 -1
     (nil))

;; _8 = _7->y_current;

(insn 35 34 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 16 [0x10])) [3 _7->y_current+0 S4 A64])) "function.c":1020 -1
     (nil))

;; if (_8 > 17)

(insn 36 35 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94 [ _8 ])
            (const_int 17 [0x11]))) "function.c":1020 -1
     (nil))

(jump_insn 37 36 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1020 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; y_low_113 = 16;

(insn 39 38 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 16 [0x10])) "function.c":1022 -1
     (nil))

;; y_upp_114 = 20;

(insn 40 39 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 20 [0x14])) "function.c":1023 -1
     (nil))

;; _9 = user_109(D)->serwer;

(insn 41 40 42 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1024 -1
     (nil))

(insn 42 41 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 170) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1024 -1
     (nil))

;; _10 = _9->player2;

(insn 43 42 0 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 40 [0x28])) [14 _9->player2+0 S8 A64])) "function.c":1024 -1
     (nil))

;; _11 = _10->y_current;

(insn 44 43 0 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _10 ])
                (const_int 16 [0x10])) [3 _10->y_current+0 S4 A64])) "function.c":1024 -1
     (nil))

;; if (_11 == 18)

(insn 45 44 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 18 [0x12]))) "function.c":1024 -1
     (nil))

(jump_insn 46 45 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1024 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; y_115 = 2;

(insn 48 47 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1026 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 49 48 50 163 (nil) [0 uses])

(note 50 49 0 NOTE_INSN_BASIC_BLOCK)

;; _12 = user_109(D)->serwer;

(insn 51 50 52 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1028 -1
     (nil))

(insn 52 51 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 171) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1028 -1
     (nil))

;; _13 = _12->player2;

(insn 53 52 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 40 [0x28])) [14 _12->player2+0 S8 A64])) "function.c":1028 -1
     (nil))

;; _14 = _13->y_current;

(insn 54 53 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 16 [0x10])) [3 _13->y_current+0 S4 A64])) "function.c":1028 -1
     (nil))

;; if (_14 == 19)

(insn 55 54 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 19 [0x13]))) "function.c":1028 -1
     (nil))

(jump_insn 56 55 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1028 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; y_116 = 3;

(insn 58 57 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 3 [0x3])) "function.c":1030 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 59 58 60 164 (nil) [0 uses])

(note 60 59 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 10

;; 

(code_label 63 62 64 162 (nil) [0 uses])

(note 64 63 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = user_109(D)->serwer;

(insn 65 64 66 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1035 -1
     (nil))

(insn 66 65 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (reg/f:DI 172) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1035 -1
     (nil))

;; _16 = _15->player2;

(insn 67 66 0 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 40 [0x28])) [14 _15->player2+0 S8 A64])) "function.c":1035 -1
     (nil))

;; _17 = _16->y_current;

(insn 68 67 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 102 [ _16 ])
                (const_int 16 [0x10])) [3 _16->y_current+0 S4 A64])) "function.c":1035 -1
     (nil))

;; y_low_117 = _17 + -2;

(insn 69 68 70 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 103 [ _17 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1035 -1
     (nil))

(insn 70 69 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (reg:SI 173)) "function.c":1035 -1
     (nil))

;; _18 = user_109(D)->serwer;

(insn 71 70 72 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1036 -1
     (nil))

(insn 72 71 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 174) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1036 -1
     (nil))

;; _19 = _18->player2;

(insn 73 72 0 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 40 [0x28])) [14 _18->player2+0 S8 A64])) "function.c":1036 -1
     (nil))

;; _20 = _19->y_current;

(insn 74 73 0 (set (reg:SI 106 [ _20 ])
        (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 16 [0x10])) [3 _19->y_current+0 S4 A64])) "function.c":1036 -1
     (nil))

;; y_upp_118 = _20 + 2;

(insn 75 74 76 (parallel [
            (set (reg:SI 175)
                (plus:SI (reg:SI 106 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1036 -1
     (nil))

(insn 76 75 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (reg:SI 175)) "function.c":1036 -1
     (nil))

;; y_119 = 2;

(insn 77 76 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1037 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 78 77 79 161 (nil) [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = user_109(D)->serwer;

(insn 80 79 81 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1040 -1
     (nil))

(insn 81 80 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 176) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1040 -1
     (nil))

;; _22 = _21->player2;

(insn 82 81 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 40 [0x28])) [14 _21->player2+0 S8 A64])) "function.c":1040 -1
     (nil))

;; _23 = _22->x_current;

(insn 83 82 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 12 [0xc])) [3 _22->x_current+0 S4 A32])) "function.c":1040 -1
     (nil))

;; if (_23 <= 1)

(insn 84 83 85 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109 [ _23 ])
            (const_int 1 [0x1]))) "function.c":1040 -1
     (nil))

(jump_insn 85 84 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1040 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; x_low_120 = 0;

(insn 87 86 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1042 -1
     (nil))

;; x_upp_121 = 5;

(insn 88 87 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":1043 -1
     (nil))

;; _24 = user_109(D)->serwer;

(insn 89 88 90 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1044 -1
     (nil))

(insn 90 89 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (reg/f:DI 177) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1044 -1
     (nil))

;; _25 = _24->player2;

(insn 91 90 0 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 40 [0x28])) [14 _24->player2+0 S8 A64])) "function.c":1044 -1
     (nil))

;; x_122 = _25->x_current;

(insn 92 91 93 (set (reg:SI 178)
        (mem:SI (plus:DI (reg/f:DI 111 [ _25 ])
                (const_int 12 [0xc])) [3 _25->x_current+0 S4 A32])) "function.c":1044 -1
     (nil))

(insn 93 92 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (reg:SI 178)) "function.c":1044 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 96 95 97 165 (nil) [0 uses])

(note 97 96 0 NOTE_INSN_BASIC_BLOCK)

;; _26 = user_109(D)->serwer;

(insn 98 97 99 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1046 -1
     (nil))

(insn 99 98 0 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (reg/f:DI 179) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1046 -1
     (nil))

;; _27 = _26->player2;

(insn 100 99 0 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 40 [0x28])) [14 _26->player2+0 S8 A64])) "function.c":1046 -1
     (nil))

;; _28 = _27->x_current;

(insn 101 100 0 (set (reg:SI 114 [ _28 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 12 [0xc])) [3 _27->x_current+0 S4 A32])) "function.c":1046 -1
     (nil))

;; if (_28 > 27)

(insn 102 101 103 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114 [ _28 ])
            (const_int 27 [0x1b]))) "function.c":1046 -1
     (nil))

(jump_insn 103 102 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1046 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; x_low_123 = 26;

(insn 105 104 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 26 [0x1a])) "function.c":1048 -1
     (nil))

;; x_upp_124 = 30;

(insn 106 105 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 30 [0x1e])) "function.c":1049 -1
     (nil))

;; _29 = user_109(D)->serwer;

(insn 107 106 108 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1050 -1
     (nil))

(insn 108 107 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 180) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1050 -1
     (nil))

;; _30 = _29->player2;

(insn 109 108 0 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 40 [0x28])) [14 _29->player2+0 S8 A64])) "function.c":1050 -1
     (nil))

;; _31 = _30->x_current;

(insn 110 109 0 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 12 [0xc])) [3 _30->x_current+0 S4 A32])) "function.c":1050 -1
     (nil))

;; if (_31 == 28)

(insn 111 110 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ _31 ])
            (const_int 28 [0x1c]))) "function.c":1050 -1
     (nil))

(jump_insn 112 111 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1050 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; x_125 = 2;

(insn 114 113 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1052 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 115 114 116 168 (nil) [0 uses])

(note 116 115 0 NOTE_INSN_BASIC_BLOCK)

;; _32 = user_109(D)->serwer;

(insn 117 116 118 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1054 -1
     (nil))

(insn 118 117 0 (set (reg/f:DI 118 [ _32 ])
        (mem/f:DI (reg/f:DI 181) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1054 -1
     (nil))

;; _33 = _32->player2;

(insn 119 118 0 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 118 [ _32 ])
                (const_int 40 [0x28])) [14 _32->player2+0 S8 A64])) "function.c":1054 -1
     (nil))

;; _34 = _33->x_current;

(insn 120 119 0 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 12 [0xc])) [3 _33->x_current+0 S4 A32])) "function.c":1054 -1
     (nil))

;; if (_34 == 29)

(insn 121 120 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ _34 ])
            (const_int 29 [0x1d]))) "function.c":1054 -1
     (nil))

(jump_insn 122 121 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1054 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; x_126 = 3;

(insn 124 123 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 3 [0x3])) "function.c":1056 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 125 124 126 169 (nil) [0 uses])

(note 126 125 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 19

;; 

(code_label 129 128 130 167 (nil) [0 uses])

(note 130 129 0 NOTE_INSN_BASIC_BLOCK)

;; _35 = user_109(D)->serwer;

(insn 131 130 132 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1061 -1
     (nil))

(insn 132 131 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 182) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1061 -1
     (nil))

;; _36 = _35->player2;

(insn 133 132 0 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 40 [0x28])) [14 _35->player2+0 S8 A64])) "function.c":1061 -1
     (nil))

;; _37 = _36->x_current;

(insn 134 133 0 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 12 [0xc])) [3 _36->x_current+0 S4 A32])) "function.c":1061 -1
     (nil))

;; x_low_127 = _37 + -2;

(insn 135 134 136 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1061 -1
     (nil))

(insn 136 135 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (reg:SI 183)) "function.c":1061 -1
     (nil))

;; _38 = user_109(D)->serwer;

(insn 137 136 138 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1062 -1
     (nil))

(insn 138 137 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 184) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1062 -1
     (nil))

;; _39 = _38->player2;

(insn 139 138 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 40 [0x28])) [14 _38->player2+0 S8 A64])) "function.c":1062 -1
     (nil))

;; _40 = _39->x_current;

(insn 140 139 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 12 [0xc])) [3 _39->x_current+0 S4 A32])) "function.c":1062 -1
     (nil))

;; x_upp_128 = _40 + 2;

(insn 141 140 142 (parallel [
            (set (reg:SI 185)
                (plus:SI (reg:SI 126 [ _40 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1062 -1
     (nil))

(insn 142 141 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (reg:SI 185)) "function.c":1062 -1
     (nil))

;; x_129 = 2;

(insn 143 142 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1063 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 144 143 145 166 (nil) [0 uses])

(note 145 144 0 NOTE_INSN_BASIC_BLOCK)

;; i_130 = y_low_83;

(insn 146 145 147 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])) "function.c":1066 -1
     (nil))

(insn 147 146 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
        (reg:SI 186)) "function.c":1066 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; j_131 = x_low_81;

(insn 151 150 152 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])) "function.c":1068 -1
     (nil))

(insn 152 151 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
        (reg:SI 187)) "function.c":1068 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; _41 = user_109(D)->serwer;

(insn 156 155 157 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1070 -1
     (nil))

(insn 157 156 0 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (reg/f:DI 188) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1070 -1
     (nil))

;; _42 = _41->mapa;

(insn 158 157 0 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 16 [0x10])) [9 _41->mapa+0 S8 A64])) "function.c":1070 -1
     (nil))

;; _43 = (long unsigned int) i_91;

(insn 159 158 160 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":1070 -1
     (nil))

(insn 160 159 0 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 189))) "function.c":1070 -1
     (nil))

;; _44 = _43 * 8;

(insn 161 160 0 (parallel [
            (set (reg:DI 130 [ _44 ])
                (ashift:DI (reg:DI 129 [ _43 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

;; _45 = _42 + _44;

(insn 162 161 0 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

;; _46 = *_45;

(insn 163 162 0 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (reg/f:DI 131 [ _45 ]) [10 *_45+0 S8 A64])) "function.c":1070 -1
     (nil))

;; _47 = (sizetype) j_92;

(insn 164 163 165 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":1070 -1
     (nil))

(insn 165 164 0 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 190))) "function.c":1070 -1
     (nil))

;; _48 = _46 + _47;

(insn 166 165 0 (parallel [
            (set (reg/f:DI 134 [ _48 ])
                (plus:DI (reg/f:DI 132 [ _46 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

;; _49 = user_109(D)->serwer;

(insn 167 166 168 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1070 -1
     (nil))

(insn 168 167 0 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (reg/f:DI 191) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1070 -1
     (nil))

;; _50 = _49->player2;

(insn 169 168 0 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (plus:DI (reg/f:DI 135 [ _49 ])
                (const_int 40 [0x28])) [14 _49->player2+0 S8 A64])) "function.c":1070 -1
     (nil))

;; _51 = *_48;

(insn 170 169 0 (set (reg:QI 137 [ _51 ])
        (mem:QI (reg/f:DI 134 [ _48 ]) [0 *_48+0 S1 A8])) "function.c":1070 -1
     (nil))

;; _50->area[q_78][w_79] = _51;

(insn 171 170 172 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1070 -1
     (nil))

(insn 172 171 173 (set (reg:DI 192)
        (sign_extend:DI (reg:SI 193))) "function.c":1070 -1
     (nil))

(insn 173 172 174 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1070 -1
     (nil))

(insn 174 173 175 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 195))) "function.c":1070 -1
     (nil))

(insn 175 174 176 (parallel [
            (set (reg:DI 196)
                (mult:DI (reg:DI 194)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

(insn 176 175 177 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 136 [ _50 ])
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

(insn 177 176 178 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg:DI 197)
                    (reg:DI 192)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

(insn 178 177 179 (parallel [
            (set (reg/f:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))

(insn 179 178 0 (set (mem/j:QI (reg/f:DI 199) [0 _50->area S1 A8])
        (reg:QI 137 [ _51 ])) "function.c":1070 -1
     (nil))

;; _52 = user_109(D)->serwer;

(insn 180 179 181 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1071 -1
     (nil))

(insn 181 180 0 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (reg/f:DI 200) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1071 -1
     (nil))

;; _53 = _52->bestia.y;

(insn 182 181 0 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 138 [ _52 ])
                (const_int 36068 [0x8ce4])) [3 _52->bestia.y+0 S4 A32])) "function.c":1071 -1
     (nil))

;; if (i_91 == _53)

(insn 183 182 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 139 [ _53 ]))) "function.c":1071 -1
     (nil))

(jump_insn 184 183 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1071 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; _54 = user_109(D)->serwer;

(insn 186 185 187 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1071 -1
     (nil))

(insn 187 186 0 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (reg/f:DI 201) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1071 -1
     (nil))

;; _55 = _54->bestia.x;

(insn 188 187 0 (set (reg:SI 141 [ _55 ])
        (mem:SI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 36064 [0x8ce0])) [3 _54->bestia.x+0 S4 A64])) "function.c":1071 -1
     (nil))

;; if (j_92 == _55)

(insn 189 188 190 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 141 [ _55 ]))) "function.c":1071 -1
     (nil))

(jump_insn 190 189 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1071 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; _56 = user_109(D)->serwer;

(insn 192 191 193 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1073 -1
     (nil))

(insn 193 192 0 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (reg/f:DI 202) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1073 -1
     (nil))

;; _57 = _56->player2;

(insn 194 193 0 (set (reg/f:DI 143 [ _57 ])
        (mem/f:DI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 40 [0x28])) [14 _56->player2+0 S8 A64])) "function.c":1073 -1
     (nil))

;; _57->area[q_78][w_79] = 42;

(insn 195 194 196 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1073 -1
     (nil))

(insn 196 195 197 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 204))) "function.c":1073 -1
     (nil))

(insn 197 196 198 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1073 -1
     (nil))

(insn 198 197 199 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 206))) "function.c":1073 -1
     (nil))

(insn 199 198 200 (parallel [
            (set (reg:DI 207)
                (mult:DI (reg:DI 205)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))

(insn 200 199 201 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 143 [ _57 ])
                    (reg:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))

(insn 201 200 202 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208)
                    (reg:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))

(insn 202 201 203 (parallel [
            (set (reg/f:DI 210)
                (plus:DI (reg:DI 209)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))

(insn 203 202 0 (set (mem/j:QI (reg/f:DI 210) [0 _57->area S1 A8])
        (const_int 42 [0x2a])) "function.c":1073 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; 

(code_label 204 203 205 172 (nil) [0 uses])

(note 205 204 0 NOTE_INSN_BASIC_BLOCK)

;; m_134 = 0;

(insn 206 205 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
        (const_int 0 [0])) "function.c":1076 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; _58 = user_109(D)->serwer;

(insn 210 209 211 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1078 -1
     (nil))

(insn 211 210 0 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 211) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1078 -1
     (nil))

;; _59 = _58->skarb.value_all_dropped_coin[m_93];

(insn 212 211 213 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":1078 -1
     (nil))

(insn 213 212 214 (set (reg:DI 212)
        (sign_extend:DI (reg:SI 213))) "function.c":1078 -1
     (nil))

(insn 214 213 215 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 212)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1078 -1
     (nil))

(insn 215 214 0 (set (reg:SI 145 [ _59 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 214)
                    (const_int 4 [0x4]))
                (reg/f:DI 144 [ _58 ])) [3 _58->skarb.value_all_dropped_coin S4 A32])) "function.c":1078 -1
     (nil))

;; if (_59 >= 0)

(insn 216 215 217 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 145 [ _59 ])
            (const_int 0 [0]))) "function.c":1078 -1
     (nil))

(jump_insn 217 216 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1078 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; _60 = user_109(D)->serwer;

(insn 219 218 220 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1078 -1
     (nil))

(insn 220 219 0 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (reg/f:DI 215) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1078 -1
     (nil))

;; _61 = _60->skarb.dropped_coin[m_93][0];

(insn 221 220 222 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":1078 -1
     (nil))

(insn 222 221 223 (set (reg:DI 216)
        (sign_extend:DI (reg:SI 217))) "function.c":1078 -1
     (nil))

(insn 223 222 224 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 216)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1078 -1
     (nil))

(insn 224 223 0 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 218)
                    (const_int 8 [0x8]))
                (reg/f:DI 146 [ _60 ])) [3 _60->skarb.dropped_coin S4 A64])) "function.c":1078 -1
     (nil))

;; if (i_91 == _61)

(insn 225 224 226 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 147 [ _61 ]))) "function.c":1078 -1
     (nil))

(jump_insn 226 225 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1078 -1
     (nil))

;; Generating RTL for gimple basic block 28

;; _62 = user_109(D)->serwer;

(insn 228 227 229 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1078 -1
     (nil))

(insn 229 228 0 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (reg/f:DI 219) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1078 -1
     (nil))

;; _63 = _62->skarb.dropped_coin[m_93][1];

(insn 230 229 231 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":1078 -1
     (nil))

(insn 231 230 232 (set (reg:DI 220)
        (sign_extend:DI (reg:SI 221))) "function.c":1078 -1
     (nil))

(insn 232 231 0 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 220)
                        (const_int 8 [0x8]))
                    (reg/f:DI 148 [ _62 ]))
                (const_int 24068 [0x5e04])) [3 _62->skarb.dropped_coin S4 A32])) "function.c":1078 -1
     (nil))

;; if (j_92 == _63)

(insn 233 232 234 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 149 [ _63 ]))) "function.c":1078 -1
     (nil))

(jump_insn 234 233 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1078 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; _64 = user_109(D)->serwer;

(insn 236 235 237 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1080 -1
     (nil))

(insn 237 236 0 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 222) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1080 -1
     (nil))

;; _65 = _64->player2;

(insn 238 237 0 (set (reg/f:DI 151 [ _65 ])
        (mem/f:DI (plus:DI (reg/f:DI 150 [ _64 ])
                (const_int 40 [0x28])) [14 _64->player2+0 S8 A64])) "function.c":1080 -1
     (nil))

;; _65->area[q_78][w_79] = 68;

(insn 239 238 240 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1080 -1
     (nil))

(insn 240 239 241 (set (reg:DI 223)
        (sign_extend:DI (reg:SI 224))) "function.c":1080 -1
     (nil))

(insn 241 240 242 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1080 -1
     (nil))

(insn 242 241 243 (set (reg:DI 225)
        (sign_extend:DI (reg:SI 226))) "function.c":1080 -1
     (nil))

(insn 243 242 244 (parallel [
            (set (reg:DI 227)
                (mult:DI (reg:DI 225)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))

(insn 244 243 245 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg/f:DI 151 [ _65 ])
                    (reg:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))

(insn 245 244 246 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg:DI 228)
                    (reg:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))

(insn 246 245 247 (parallel [
            (set (reg/f:DI 230)
                (plus:DI (reg:DI 229)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))

(insn 247 246 0 (set (mem/j:QI (reg/f:DI 230) [0 _65->area S1 A8])
        (const_int 68 [0x44])) "function.c":1080 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; 

(code_label 248 247 249 174 (nil) [0 uses])

(note 249 248 0 NOTE_INSN_BASIC_BLOCK)

;; m_136 = m_93 + 1;

(insn 250 249 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1076 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; 

(code_label 251 250 252 173 (nil) [0 uses])

(note 252 251 0 NOTE_INSN_BASIC_BLOCK)

;; _66 = user_109(D)->serwer;

(insn 253 252 254 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1076 -1
     (nil))

(insn 254 253 0 (set (reg/f:DI 152 [ _66 ])
        (mem/f:DI (reg/f:DI 231) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1076 -1
     (nil))

;; _67 = _66->skarb.count_drop_coin;

(insn 255 254 0 (set (reg:SI 153 [ _67 ])
        (mem:SI (plus:DI (reg/f:DI 152 [ _66 ])
                (const_int 24060 [0x5dfc])) [3 _66->skarb.count_drop_coin+0 S4 A32])) "function.c":1076 -1
     (nil))

;; if (m_93 < _67)

(insn 257 255 258 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
            (reg:SI 153 [ _67 ]))) "function.c":1076 -1
     (nil))

(jump_insn 258 257 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) "function.c":1076 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; _68 = user_109(D)->serwer;

(insn 260 259 261 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1084 -1
     (nil))

(insn 261 260 0 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (reg/f:DI 232) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1084 -1
     (nil))

;; _69 = _68->player1;

(insn 262 261 0 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 32 [0x20])) [14 _68->player1+0 S8 A64])) "function.c":1084 -1
     (nil))

;; _70 = _69->y_current;

(insn 263 262 0 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (reg/f:DI 155 [ _69 ])
                (const_int 16 [0x10])) [3 _69->y_current+0 S4 A64])) "function.c":1084 -1
     (nil))

;; if (i_91 == _70)

(insn 264 263 265 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 156 [ _70 ]))) "function.c":1084 -1
     (nil))

(jump_insn 265 264 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1084 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; _71 = user_109(D)->serwer;

(insn 267 266 268 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1084 -1
     (nil))

(insn 268 267 0 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (reg/f:DI 233) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1084 -1
     (nil))

;; _72 = _71->player1;

(insn 269 268 0 (set (reg/f:DI 158 [ _72 ])
        (mem/f:DI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 32 [0x20])) [14 _71->player1+0 S8 A64])) "function.c":1084 -1
     (nil))

;; _73 = _72->x_current;

(insn 270 269 0 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (reg/f:DI 158 [ _72 ])
                (const_int 12 [0xc])) [3 _72->x_current+0 S4 A32])) "function.c":1084 -1
     (nil))

;; if (j_92 == _73)

(insn 271 270 272 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 159 [ _73 ]))) "function.c":1084 -1
     (nil))

(jump_insn 272 271 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1084 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; _74 = user_109(D)->serwer;

(insn 274 273 275 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1086 -1
     (nil))

(insn 275 274 0 (set (reg/f:DI 160 [ _74 ])
        (mem/f:DI (reg/f:DI 234) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1086 -1
     (nil))

;; _75 = _74->player2;

(insn 276 275 0 (set (reg/f:DI 161 [ _75 ])
        (mem/f:DI (plus:DI (reg/f:DI 160 [ _74 ])
                (const_int 40 [0x28])) [14 _74->player2+0 S8 A64])) "function.c":1086 -1
     (nil))

;; _75->area[q_78][w_79] = 49;

(insn 277 276 278 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1086 -1
     (nil))

(insn 278 277 279 (set (reg:DI 235)
        (sign_extend:DI (reg:SI 236))) "function.c":1086 -1
     (nil))

(insn 279 278 280 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1086 -1
     (nil))

(insn 280 279 281 (set (reg:DI 237)
        (sign_extend:DI (reg:SI 238))) "function.c":1086 -1
     (nil))

(insn 281 280 282 (parallel [
            (set (reg:DI 239)
                (mult:DI (reg:DI 237)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))

(insn 282 281 283 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 161 [ _75 ])
                    (reg:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))

(insn 283 282 284 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg:DI 240)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))

(insn 284 283 285 (parallel [
            (set (reg/f:DI 242)
                (plus:DI (reg:DI 241)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))

(insn 285 284 0 (set (mem/j:QI (reg/f:DI 242) [0 _75->area S1 A8])
        (const_int 49 [0x31])) "function.c":1086 -1
     (nil))

;; Generating RTL for gimple basic block 35

;; 

(code_label 286 285 287 176 (nil) [0 uses])

(note 287 286 0 NOTE_INSN_BASIC_BLOCK)

;; w_138 = w_79 + 1;

(insn 288 287 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1089 -1
     (nil))

;; j_139 = j_92 + 1;

(insn 289 288 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1068 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; 

(code_label 290 289 291 171 (nil) [0 uses])

(note 291 290 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_92 <= x_upp_82)

(insn 293 291 294 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":1068 -1
     (nil))

(insn 294 293 295 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 243)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32]))) "function.c":1068 -1
     (nil))

(jump_insn 295 294 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) "function.c":1068 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; q_140 = q_78 + 1;

(insn 297 296 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1091 -1
     (nil))

;; w_141 = 0;

(insn 298 297 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":1092 -1
     (nil))

;; i_142 = i_91 + 1;

(insn 299 298 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1066 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; 

(code_label 300 299 301 170 (nil) [0 uses])

(note 301 300 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_91 <= y_upp_84)

(insn 303 301 304 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":1066 -1
     (nil))

(insn 304 303 305 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 244)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32]))) "function.c":1066 -1
     (nil))

(jump_insn 305 304 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "function.c":1066 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; _76 = user_109(D)->serwer;

(insn 307 306 308 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1095 -1
     (nil))

(insn 308 307 0 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (reg/f:DI 245) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1095 -1
     (nil))

;; _77 = _76->player2;

(insn 309 308 0 (set (reg/f:DI 163 [ _77 ])
        (mem/f:DI (plus:DI (reg/f:DI 162 [ _76 ])
                (const_int 40 [0x28])) [14 _76->player2+0 S8 A64])) "function.c":1095 -1
     (nil))

;; _77->area[y_87][x_90] = 50;

(insn 310 309 311 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])) "function.c":1095 -1
     (nil))

(insn 311 310 312 (set (reg:DI 246)
        (sign_extend:DI (reg:SI 247))) "function.c":1095 -1
     (nil))

(insn 312 311 313 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])) "function.c":1095 -1
     (nil))

(insn 313 312 314 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) "function.c":1095 -1
     (nil))

(insn 314 313 315 (parallel [
            (set (reg:DI 250)
                (mult:DI (reg:DI 248)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))

(insn 315 314 316 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 163 [ _77 ])
                    (reg:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))

(insn 316 315 317 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg:DI 251)
                    (reg:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))

(insn 317 316 318 (parallel [
            (set (reg/f:DI 253)
                (plus:DI (reg:DI 252)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))

(insn 318 317 0 (set (mem/j:QI (reg/f:DI 253) [0 _77->area S1 A8])
        (const_int 50 [0x32])) "function.c":1095 -1
     (nil))

;; _144 = 0;

(insn 319 318 0 (set (reg:SI 164 [ _144 ])
        (const_int 0 [0])) "function.c":1097 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; <L43>:

(code_label 320 319 321 179 (nil) [0 uses])

(note 321 320 0 NOTE_INSN_BASIC_BLOCK)

;; return _144;

(insn 322 321 323 (set (reg:SI 165 [ <retval> ])
        (reg:SI 164 [ _144 ])) "function.c":1097 -1
     (nil))

(jump_insn 323 322 324 (set (pc)
        (label_ref 0)) "function.c":1097 -1
     (nil))

(barrier 324 323 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 8->10 redirected to 12
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Edge 17->19 redirected to 21
Merging block 19 into block 18...
Merged blocks 18 and 19.
Merged 18 and 19 without moving.
Merging block 41 into block 40...
Merged blocks 40 and 41.
Merged 40 and 41 without moving.
Removing jump 323.
Merging block 42 into block 40...
Merged blocks 40 and 42.
Merged 40 and 42 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])
        (reg:DI 5 di [ user ])) "function.c":1004 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
        (const_int 0 [0])) "function.c":1005 -1
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":1006 -1
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1007 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1008 -1
     (nil))
(insn 10 9 11 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1009 -1
     (nil))
(insn 11 10 12 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1010 -1
     (nil))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":1011 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":1012 -1
     (nil))
(insn 14 13 15 2 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1014 -1
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (reg/f:DI 166) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1014 -1
     (nil))
(insn 16 15 17 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 40 [0x28])) [14 _1->player2+0 S8 A64])) "function.c":1014 -1
     (nil))
(insn 17 16 18 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 16 [0x10])) [3 _2->y_current+0 S4 A64])) "function.c":1014 -1
     (nil))
(insn 18 17 19 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 89 [ _3 ])
            (const_int 1 [0x1]))) "function.c":1014 -1
     (nil))
(jump_insn 19 18 20 2 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 30)
            (pc))) "function.c":1014 -1
     (nil)
 -> 30)
;;  succ:       4 (FALLTHRU)
;;              5

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1016 -1
     (nil))
(insn 22 21 23 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":1017 -1
     (nil))
(insn 23 22 24 4 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1018 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (reg/f:DI 167) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1018 -1
     (nil))
(insn 25 24 26 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 90 [ _4 ])
                (const_int 40 [0x28])) [14 _4->player2+0 S8 A64])) "function.c":1018 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 168)
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1018 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (reg:SI 168)) "function.c":1018 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
;;  succ:       12

(barrier 29 28 30)
;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 30 29 31 5 160 (nil) [1 uses])
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1020 -1
     (nil))
(insn 33 32 34 5 (set (reg/f:DI 92 [ _6 ])
        (mem/f:DI (reg/f:DI 169) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1020 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 92 [ _6 ])
                (const_int 40 [0x28])) [14 _6->player2+0 S8 A64])) "function.c":1020 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 16 [0x10])) [3 _7->y_current+0 S4 A64])) "function.c":1020 -1
     (nil))
(insn 36 35 37 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 94 [ _8 ])
            (const_int 17 [0x11]))) "function.c":1020 -1
     (nil))
(jump_insn 37 36 38 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "function.c":1020 -1
     (nil)
 -> 63)
;;  succ:       6 (FALLTHRU)
;;              11

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 38 37 39 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 39 38 40 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (const_int 16 [0x10])) "function.c":1022 -1
     (nil))
(insn 40 39 41 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (const_int 20 [0x14])) "function.c":1023 -1
     (nil))
(insn 41 40 42 6 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1024 -1
     (nil))
(insn 42 41 43 6 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (reg/f:DI 170) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1024 -1
     (nil))
(insn 43 42 44 6 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 40 [0x28])) [14 _9->player2+0 S8 A64])) "function.c":1024 -1
     (nil))
(insn 44 43 45 6 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _10 ])
                (const_int 16 [0x10])) [3 _10->y_current+0 S4 A64])) "function.c":1024 -1
     (nil))
(insn 45 44 46 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 97 [ _11 ])
            (const_int 18 [0x12]))) "function.c":1024 -1
     (nil))
(jump_insn 46 45 47 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 49)
            (pc))) "function.c":1024 -1
     (nil)
 -> 49)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 47 46 48 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1026 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
(code_label 49 48 50 8 163 (nil) [1 uses])
(note 50 49 51 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 8 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1028 -1
     (nil))
(insn 52 51 53 8 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (reg/f:DI 171) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1028 -1
     (nil))
(insn 53 52 54 8 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 40 [0x28])) [14 _12->player2+0 S8 A64])) "function.c":1028 -1
     (nil))
(insn 54 53 55 8 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 16 [0x10])) [3 _13->y_current+0 S4 A64])) "function.c":1028 -1
     (nil))
(insn 55 54 56 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 19 [0x13]))) "function.c":1028 -1
     (nil))
(jump_insn 56 55 57 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 78)
            (pc))) "function.c":1028 682 {*jcc}
     (nil)
 -> 78)
;;  succ:       9 (FALLTHRU)
;;              12

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 57 56 58 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 61 9 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 3 [0x3])) "function.c":1030 -1
     (nil))
(jump_insn 61 58 62 9 (set (pc)
        (label_ref 78)) -1
     (nil)
 -> 78)
;;  succ:       12

(barrier 62 61 63)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 63 62 64 11 162 (nil) [1 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1035 -1
     (nil))
(insn 66 65 67 11 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (reg/f:DI 172) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1035 -1
     (nil))
(insn 67 66 68 11 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 40 [0x28])) [14 _15->player2+0 S8 A64])) "function.c":1035 -1
     (nil))
(insn 68 67 69 11 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 102 [ _16 ])
                (const_int 16 [0x10])) [3 _16->y_current+0 S4 A64])) "function.c":1035 -1
     (nil))
(insn 69 68 70 11 (parallel [
            (set (reg:SI 173)
                (plus:SI (reg:SI 103 [ _17 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1035 -1
     (nil))
(insn 70 69 71 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])
        (reg:SI 173)) "function.c":1035 -1
     (nil))
(insn 71 70 72 11 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1036 -1
     (nil))
(insn 72 71 73 11 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 174) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1036 -1
     (nil))
(insn 73 72 74 11 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 40 [0x28])) [14 _18->player2+0 S8 A64])) "function.c":1036 -1
     (nil))
(insn 74 73 75 11 (set (reg:SI 106 [ _20 ])
        (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 16 [0x10])) [3 _19->y_current+0 S4 A64])) "function.c":1036 -1
     (nil))
(insn 75 74 76 11 (parallel [
            (set (reg:SI 175)
                (plus:SI (reg:SI 106 [ _20 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1036 -1
     (nil))
(insn 76 75 77 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32])
        (reg:SI 175)) "function.c":1036 -1
     (nil))
(insn 77 76 78 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1037 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              9
;;              11 (FALLTHRU)
;;              8
(code_label 78 77 79 12 161 (nil) [3 uses])
(note 79 78 80 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 12 (set (reg/f:DI 176)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1040 -1
     (nil))
(insn 81 80 82 12 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (reg/f:DI 176) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1040 -1
     (nil))
(insn 82 81 83 12 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 40 [0x28])) [14 _21->player2+0 S8 A64])) "function.c":1040 -1
     (nil))
(insn 83 82 84 12 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 12 [0xc])) [3 _22->x_current+0 S4 A32])) "function.c":1040 -1
     (nil))
(insn 84 83 85 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 109 [ _23 ])
            (const_int 1 [0x1]))) "function.c":1040 -1
     (nil))
(jump_insn 85 84 86 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 96)
            (pc))) "function.c":1040 -1
     (nil)
 -> 96)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 86 85 87 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 0 [0])) "function.c":1042 -1
     (nil))
(insn 88 87 89 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 5 [0x5])) "function.c":1043 -1
     (nil))
(insn 89 88 90 13 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1044 -1
     (nil))
(insn 90 89 91 13 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (reg/f:DI 177) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1044 -1
     (nil))
(insn 91 90 92 13 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 40 [0x28])) [14 _24->player2+0 S8 A64])) "function.c":1044 -1
     (nil))
(insn 92 91 93 13 (set (reg:SI 178)
        (mem:SI (plus:DI (reg/f:DI 111 [ _25 ])
                (const_int 12 [0xc])) [3 _25->x_current+0 S4 A32])) "function.c":1044 -1
     (nil))
(insn 93 92 94 13 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (reg:SI 178)) "function.c":1044 -1
     (nil))
(jump_insn 94 93 95 13 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
;;  succ:       21

(barrier 95 94 96)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 96 95 97 14 165 (nil) [1 uses])
(note 97 96 98 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 14 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1046 -1
     (nil))
(insn 99 98 100 14 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (reg/f:DI 179) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1046 -1
     (nil))
(insn 100 99 101 14 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 40 [0x28])) [14 _26->player2+0 S8 A64])) "function.c":1046 -1
     (nil))
(insn 101 100 102 14 (set (reg:SI 114 [ _28 ])
        (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 12 [0xc])) [3 _27->x_current+0 S4 A32])) "function.c":1046 -1
     (nil))
(insn 102 101 103 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 114 [ _28 ])
            (const_int 27 [0x1b]))) "function.c":1046 -1
     (nil))
(jump_insn 103 102 104 14 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 129)
            (pc))) "function.c":1046 -1
     (nil)
 -> 129)
;;  succ:       15 (FALLTHRU)
;;              20

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
(note 104 103 105 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (const_int 26 [0x1a])) "function.c":1048 -1
     (nil))
(insn 106 105 107 15 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (const_int 30 [0x1e])) "function.c":1049 -1
     (nil))
(insn 107 106 108 15 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1050 -1
     (nil))
(insn 108 107 109 15 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 180) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1050 -1
     (nil))
(insn 109 108 110 15 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 40 [0x28])) [14 _29->player2+0 S8 A64])) "function.c":1050 -1
     (nil))
(insn 110 109 111 15 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 12 [0xc])) [3 _30->x_current+0 S4 A32])) "function.c":1050 -1
     (nil))
(insn 111 110 112 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 117 [ _31 ])
            (const_int 28 [0x1c]))) "function.c":1050 -1
     (nil))
(jump_insn 112 111 113 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 115)
            (pc))) "function.c":1050 -1
     (nil)
 -> 115)
;;  succ:       16 (FALLTHRU)
;;              17

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 113 112 114 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 16 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1052 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16 (FALLTHRU)
(code_label 115 114 116 17 168 (nil) [1 uses])
(note 116 115 117 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 17 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1054 -1
     (nil))
(insn 118 117 119 17 (set (reg/f:DI 118 [ _32 ])
        (mem/f:DI (reg/f:DI 181) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1054 -1
     (nil))
(insn 119 118 120 17 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 118 [ _32 ])
                (const_int 40 [0x28])) [14 _32->player2+0 S8 A64])) "function.c":1054 -1
     (nil))
(insn 120 119 121 17 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 12 [0xc])) [3 _33->x_current+0 S4 A32])) "function.c":1054 -1
     (nil))
(insn 121 120 122 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 120 [ _34 ])
            (const_int 29 [0x1d]))) "function.c":1054 -1
     (nil))
(jump_insn 122 121 123 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 144)
            (pc))) "function.c":1054 682 {*jcc}
     (nil)
 -> 144)
;;  succ:       18 (FALLTHRU)
;;              21

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 123 122 124 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 127 18 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 3 [0x3])) "function.c":1056 -1
     (nil))
(jump_insn 127 124 128 18 (set (pc)
        (label_ref 144)) -1
     (nil)
 -> 144)
;;  succ:       21

(barrier 128 127 129)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 18, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 129 128 130 20 167 (nil) [1 uses])
(note 130 129 131 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 132 20 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1061 -1
     (nil))
(insn 132 131 133 20 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 182) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1061 -1
     (nil))
(insn 133 132 134 20 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 40 [0x28])) [14 _35->player2+0 S8 A64])) "function.c":1061 -1
     (nil))
(insn 134 133 135 20 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 12 [0xc])) [3 _36->x_current+0 S4 A32])) "function.c":1061 -1
     (nil))
(insn 135 134 136 20 (parallel [
            (set (reg:SI 183)
                (plus:SI (reg:SI 123 [ _37 ])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1061 -1
     (nil))
(insn 136 135 137 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])
        (reg:SI 183)) "function.c":1061 -1
     (nil))
(insn 137 136 138 20 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1062 -1
     (nil))
(insn 138 137 139 20 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 184) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1062 -1
     (nil))
(insn 139 138 140 20 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 40 [0x28])) [14 _38->player2+0 S8 A64])) "function.c":1062 -1
     (nil))
(insn 140 139 141 20 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 12 [0xc])) [3 _39->x_current+0 S4 A32])) "function.c":1062 -1
     (nil))
(insn 141 140 142 20 (parallel [
            (set (reg:SI 185)
                (plus:SI (reg:SI 126 [ _40 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1062 -1
     (nil))
(insn 142 141 143 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32])
        (reg:SI 185)) "function.c":1062 -1
     (nil))
(insn 143 142 144 20 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])
        (const_int 2 [0x2])) "function.c":1063 -1
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              18
;;              20 (FALLTHRU)
;;              17
(code_label 144 143 145 21 166 (nil) [3 uses])
(note 145 144 146 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 21 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 y_low+0 S4 A32])) "function.c":1066 -1
     (nil))
(insn 147 146 148 21 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
        (reg:SI 186)) "function.c":1066 -1
     (nil))
(jump_insn 148 147 149 21 (set (pc)
        (label_ref 300)) "function.c":1066 -1
     (nil)
 -> 300)
;;  succ:       39

(barrier 149 148 302)
;; basic block 22, loop depth 1, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
(code_label 302 149 150 22 178 (nil) [1 uses])
(note 150 302 151 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 22 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x_low+0 S4 A32])) "function.c":1068 -1
     (nil))
(insn 152 151 153 22 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
        (reg:SI 187)) "function.c":1068 -1
     (nil))
(jump_insn 153 152 154 22 (set (pc)
        (label_ref 290)) "function.c":1068 -1
     (nil)
 -> 290)
;;  succ:       37

(barrier 154 153 292)
;; basic block 23, loop depth 2, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 292 154 155 23 177 (nil) [1 uses])
(note 155 292 156 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 23 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 157 156 158 23 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (reg/f:DI 188) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 158 157 159 23 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 16 [0x10])) [9 _41->mapa+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 159 158 160 23 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":1070 -1
     (nil))
(insn 160 159 161 23 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 189))) "function.c":1070 -1
     (nil))
(insn 161 160 162 23 (parallel [
            (set (reg:DI 130 [ _44 ])
                (ashift:DI (reg:DI 129 [ _43 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 162 161 163 23 (parallel [
            (set (reg/f:DI 131 [ _45 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 130 [ _44 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 163 162 164 23 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (reg/f:DI 131 [ _45 ]) [10 *_45+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 164 163 165 23 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":1070 -1
     (nil))
(insn 165 164 166 23 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 190))) "function.c":1070 -1
     (nil))
(insn 166 165 167 23 (parallel [
            (set (reg/f:DI 134 [ _48 ])
                (plus:DI (reg/f:DI 132 [ _46 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 167 166 168 23 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 168 167 169 23 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (reg/f:DI 191) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 169 168 170 23 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (plus:DI (reg/f:DI 135 [ _49 ])
                (const_int 40 [0x28])) [14 _49->player2+0 S8 A64])) "function.c":1070 -1
     (nil))
(insn 170 169 171 23 (set (reg:QI 137 [ _51 ])
        (mem:QI (reg/f:DI 134 [ _48 ]) [0 *_48+0 S1 A8])) "function.c":1070 -1
     (nil))
(insn 171 170 172 23 (set (reg:SI 193)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1070 -1
     (nil))
(insn 172 171 173 23 (set (reg:DI 192)
        (sign_extend:DI (reg:SI 193))) "function.c":1070 -1
     (nil))
(insn 173 172 174 23 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1070 -1
     (nil))
(insn 174 173 175 23 (set (reg:DI 194)
        (sign_extend:DI (reg:SI 195))) "function.c":1070 -1
     (nil))
(insn 175 174 176 23 (parallel [
            (set (reg:DI 196)
                (mult:DI (reg:DI 194)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 176 175 177 23 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg/f:DI 136 [ _50 ])
                    (reg:DI 196)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 177 176 178 23 (parallel [
            (set (reg:DI 198)
                (plus:DI (reg:DI 197)
                    (reg:DI 192)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 178 177 179 23 (parallel [
            (set (reg/f:DI 199)
                (plus:DI (reg:DI 198)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1070 -1
     (nil))
(insn 179 178 180 23 (set (mem/j:QI (reg/f:DI 199) [0 _50->area S1 A8])
        (reg:QI 137 [ _51 ])) "function.c":1070 -1
     (nil))
(insn 180 179 181 23 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1071 -1
     (nil))
(insn 181 180 182 23 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (reg/f:DI 200) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1071 -1
     (nil))
(insn 182 181 183 23 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 138 [ _52 ])
                (const_int 36068 [0x8ce4])) [3 _52->bestia.y+0 S4 A32])) "function.c":1071 -1
     (nil))
(insn 183 182 184 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 139 [ _53 ]))) "function.c":1071 -1
     (nil))
(jump_insn 184 183 185 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "function.c":1071 -1
     (nil)
 -> 204)
;;  succ:       24 (FALLTHRU)
;;              26

;; basic block 24, loop depth 2, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 185 184 186 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 24 (set (reg/f:DI 201)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1071 -1
     (nil))
(insn 187 186 188 24 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (reg/f:DI 201) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1071 -1
     (nil))
(insn 188 187 189 24 (set (reg:SI 141 [ _55 ])
        (mem:SI (plus:DI (reg/f:DI 140 [ _54 ])
                (const_int 36064 [0x8ce0])) [3 _54->bestia.x+0 S4 A64])) "function.c":1071 -1
     (nil))
(insn 189 188 190 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 141 [ _55 ]))) "function.c":1071 -1
     (nil))
(jump_insn 190 189 191 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "function.c":1071 -1
     (nil)
 -> 204)
;;  succ:       25 (FALLTHRU)
;;              26

;; basic block 25, loop depth 2, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
(note 191 190 192 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 25 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1073 -1
     (nil))
(insn 193 192 194 25 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (reg/f:DI 202) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1073 -1
     (nil))
(insn 194 193 195 25 (set (reg/f:DI 143 [ _57 ])
        (mem/f:DI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 40 [0x28])) [14 _56->player2+0 S8 A64])) "function.c":1073 -1
     (nil))
(insn 195 194 196 25 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1073 -1
     (nil))
(insn 196 195 197 25 (set (reg:DI 203)
        (sign_extend:DI (reg:SI 204))) "function.c":1073 -1
     (nil))
(insn 197 196 198 25 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1073 -1
     (nil))
(insn 198 197 199 25 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 206))) "function.c":1073 -1
     (nil))
(insn 199 198 200 25 (parallel [
            (set (reg:DI 207)
                (mult:DI (reg:DI 205)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))
(insn 200 199 201 25 (parallel [
            (set (reg:DI 208)
                (plus:DI (reg/f:DI 143 [ _57 ])
                    (reg:DI 207)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))
(insn 201 200 202 25 (parallel [
            (set (reg:DI 209)
                (plus:DI (reg:DI 208)
                    (reg:DI 203)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))
(insn 202 201 203 25 (parallel [
            (set (reg/f:DI 210)
                (plus:DI (reg:DI 209)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1073 -1
     (nil))
(insn 203 202 204 25 (set (mem/j:QI (reg/f:DI 210) [0 _57->area S1 A8])
        (const_int 42 [0x2a])) "function.c":1073 -1
     (nil))
;;  succ:       26 (FALLTHRU)

;; basic block 26, loop depth 2, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
;;              24
;;              25 (FALLTHRU)
(code_label 204 203 205 26 172 (nil) [2 uses])
(note 205 204 206 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 26 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
        (const_int 0 [0])) "function.c":1076 -1
     (nil))
(jump_insn 207 206 208 26 (set (pc)
        (label_ref 251)) "function.c":1076 -1
     (nil)
 -> 251)
;;  succ:       32

(barrier 208 207 256)
;; basic block 27, loop depth 3, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
(code_label 256 208 209 27 175 (nil) [1 uses])
(note 209 256 210 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 27 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1078 -1
     (nil))
(insn 211 210 212 27 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 211) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1078 -1
     (nil))
(insn 212 211 213 27 (set (reg:SI 213)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":1078 -1
     (nil))
(insn 213 212 214 27 (set (reg:DI 212)
        (sign_extend:DI (reg:SI 213))) "function.c":1078 -1
     (nil))
(insn 214 213 215 27 (parallel [
            (set (reg:DI 214)
                (plus:DI (reg:DI 212)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1078 -1
     (nil))
(insn 215 214 216 27 (set (reg:SI 145 [ _59 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 214)
                    (const_int 4 [0x4]))
                (reg/f:DI 144 [ _58 ])) [3 _58->skarb.value_all_dropped_coin S4 A32])) "function.c":1078 -1
     (nil))
(insn 216 215 217 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 145 [ _59 ])
            (const_int 0 [0]))) "function.c":1078 -1
     (nil))
(jump_insn 217 216 218 27 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "function.c":1078 -1
     (nil)
 -> 248)
;;  succ:       28 (FALLTHRU)
;;              31

;; basic block 28, loop depth 3, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 218 217 219 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 28 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1078 -1
     (nil))
(insn 220 219 221 28 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (reg/f:DI 215) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1078 -1
     (nil))
(insn 221 220 222 28 (set (reg:SI 217)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":1078 -1
     (nil))
(insn 222 221 223 28 (set (reg:DI 216)
        (sign_extend:DI (reg:SI 217))) "function.c":1078 -1
     (nil))
(insn 223 222 224 28 (parallel [
            (set (reg:DI 218)
                (plus:DI (reg:DI 216)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1078 -1
     (nil))
(insn 224 223 225 28 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 218)
                    (const_int 8 [0x8]))
                (reg/f:DI 146 [ _60 ])) [3 _60->skarb.dropped_coin S4 A64])) "function.c":1078 -1
     (nil))
(insn 225 224 226 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 147 [ _61 ]))) "function.c":1078 -1
     (nil))
(jump_insn 226 225 227 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "function.c":1078 -1
     (nil)
 -> 248)
;;  succ:       29 (FALLTHRU)
;;              31

;; basic block 29, loop depth 3, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
(note 227 226 228 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 228 227 229 29 (set (reg/f:DI 219)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1078 -1
     (nil))
(insn 229 228 230 29 (set (reg/f:DI 148 [ _62 ])
        (mem/f:DI (reg/f:DI 219) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1078 -1
     (nil))
(insn 230 229 231 29 (set (reg:SI 221)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])) "function.c":1078 -1
     (nil))
(insn 231 230 232 29 (set (reg:DI 220)
        (sign_extend:DI (reg:SI 221))) "function.c":1078 -1
     (nil))
(insn 232 231 233 29 (set (reg:SI 149 [ _63 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 220)
                        (const_int 8 [0x8]))
                    (reg/f:DI 148 [ _62 ]))
                (const_int 24068 [0x5e04])) [3 _62->skarb.dropped_coin S4 A32])) "function.c":1078 -1
     (nil))
(insn 233 232 234 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 149 [ _63 ]))) "function.c":1078 -1
     (nil))
(jump_insn 234 233 235 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 248)
            (pc))) "function.c":1078 -1
     (nil)
 -> 248)
;;  succ:       30 (FALLTHRU)
;;              31

;; basic block 30, loop depth 3, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 235 234 236 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 236 235 237 30 (set (reg/f:DI 222)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1080 -1
     (nil))
(insn 237 236 238 30 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 222) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1080 -1
     (nil))
(insn 238 237 239 30 (set (reg/f:DI 151 [ _65 ])
        (mem/f:DI (plus:DI (reg/f:DI 150 [ _64 ])
                (const_int 40 [0x28])) [14 _64->player2+0 S8 A64])) "function.c":1080 -1
     (nil))
(insn 239 238 240 30 (set (reg:SI 224)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1080 -1
     (nil))
(insn 240 239 241 30 (set (reg:DI 223)
        (sign_extend:DI (reg:SI 224))) "function.c":1080 -1
     (nil))
(insn 241 240 242 30 (set (reg:SI 226)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1080 -1
     (nil))
(insn 242 241 243 30 (set (reg:DI 225)
        (sign_extend:DI (reg:SI 226))) "function.c":1080 -1
     (nil))
(insn 243 242 244 30 (parallel [
            (set (reg:DI 227)
                (mult:DI (reg:DI 225)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))
(insn 244 243 245 30 (parallel [
            (set (reg:DI 228)
                (plus:DI (reg/f:DI 151 [ _65 ])
                    (reg:DI 227)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))
(insn 245 244 246 30 (parallel [
            (set (reg:DI 229)
                (plus:DI (reg:DI 228)
                    (reg:DI 223)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))
(insn 246 245 247 30 (parallel [
            (set (reg/f:DI 230)
                (plus:DI (reg:DI 229)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1080 -1
     (nil))
(insn 247 246 248 30 (set (mem/j:QI (reg/f:DI 230) [0 _65->area S1 A8])
        (const_int 68 [0x44])) "function.c":1080 -1
     (nil))
;;  succ:       31 (FALLTHRU)

;; basic block 31, loop depth 3, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
;;              28
;;              29
;;              30 (FALLTHRU)
(code_label 248 247 249 31 174 (nil) [3 uses])
(note 249 248 250 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1076 -1
     (nil))
;;  succ:       32 (FALLTHRU,DFS_BACK)

;; basic block 32, loop depth 3, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       26
;;              31 (FALLTHRU,DFS_BACK)
(code_label 251 250 252 32 173 (nil) [1 uses])
(note 252 251 253 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 32 (set (reg/f:DI 231)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1076 -1
     (nil))
(insn 254 253 255 32 (set (reg/f:DI 152 [ _66 ])
        (mem/f:DI (reg/f:DI 231) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1076 -1
     (nil))
(insn 255 254 257 32 (set (reg:SI 153 [ _67 ])
        (mem:SI (plus:DI (reg/f:DI 152 [ _66 ])
                (const_int 24060 [0x5dfc])) [3 _66->skarb.count_drop_coin+0 S4 A32])) "function.c":1076 -1
     (nil))
(insn 257 255 258 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -44 [0xffffffffffffffd4])) [3 m+0 S4 A32])
            (reg:SI 153 [ _67 ]))) "function.c":1076 -1
     (nil))
(jump_insn 258 257 259 32 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 256)
            (pc))) "function.c":1076 -1
     (nil)
 -> 256)
;;  succ:       27
;;              33 (FALLTHRU)

;; basic block 33, loop depth 2, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 259 258 260 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 33 (set (reg/f:DI 232)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1084 -1
     (nil))
(insn 261 260 262 33 (set (reg/f:DI 154 [ _68 ])
        (mem/f:DI (reg/f:DI 232) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1084 -1
     (nil))
(insn 262 261 263 33 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (plus:DI (reg/f:DI 154 [ _68 ])
                (const_int 32 [0x20])) [14 _68->player1+0 S8 A64])) "function.c":1084 -1
     (nil))
(insn 263 262 264 33 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (reg/f:DI 155 [ _69 ])
                (const_int 16 [0x10])) [3 _69->y_current+0 S4 A64])) "function.c":1084 -1
     (nil))
(insn 264 263 265 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
            (reg:SI 156 [ _70 ]))) "function.c":1084 -1
     (nil))
(jump_insn 265 264 266 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "function.c":1084 -1
     (nil)
 -> 286)
;;  succ:       34 (FALLTHRU)
;;              36

;; basic block 34, loop depth 2, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 266 265 267 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 34 (set (reg/f:DI 233)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1084 -1
     (nil))
(insn 268 267 269 34 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (reg/f:DI 233) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1084 -1
     (nil))
(insn 269 268 270 34 (set (reg/f:DI 158 [ _72 ])
        (mem/f:DI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 32 [0x20])) [14 _71->player1+0 S8 A64])) "function.c":1084 -1
     (nil))
(insn 270 269 271 34 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (reg/f:DI 158 [ _72 ])
                (const_int 12 [0xc])) [3 _72->x_current+0 S4 A32])) "function.c":1084 -1
     (nil))
(insn 271 270 272 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
            (reg:SI 159 [ _73 ]))) "function.c":1084 -1
     (nil))
(jump_insn 272 271 273 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 286)
            (pc))) "function.c":1084 -1
     (nil)
 -> 286)
;;  succ:       35 (FALLTHRU)
;;              36

;; basic block 35, loop depth 2, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 (FALLTHRU)
(note 273 272 274 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 35 (set (reg/f:DI 234)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1086 -1
     (nil))
(insn 275 274 276 35 (set (reg/f:DI 160 [ _74 ])
        (mem/f:DI (reg/f:DI 234) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1086 -1
     (nil))
(insn 276 275 277 35 (set (reg/f:DI 161 [ _75 ])
        (mem/f:DI (plus:DI (reg/f:DI 160 [ _74 ])
                (const_int 40 [0x28])) [14 _74->player2+0 S8 A64])) "function.c":1086 -1
     (nil))
(insn 277 276 278 35 (set (reg:SI 236)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])) "function.c":1086 -1
     (nil))
(insn 278 277 279 35 (set (reg:DI 235)
        (sign_extend:DI (reg:SI 236))) "function.c":1086 -1
     (nil))
(insn 279 278 280 35 (set (reg:SI 238)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])) "function.c":1086 -1
     (nil))
(insn 280 279 281 35 (set (reg:DI 237)
        (sign_extend:DI (reg:SI 238))) "function.c":1086 -1
     (nil))
(insn 281 280 282 35 (parallel [
            (set (reg:DI 239)
                (mult:DI (reg:DI 237)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))
(insn 282 281 283 35 (parallel [
            (set (reg:DI 240)
                (plus:DI (reg/f:DI 161 [ _75 ])
                    (reg:DI 239)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))
(insn 283 282 284 35 (parallel [
            (set (reg:DI 241)
                (plus:DI (reg:DI 240)
                    (reg:DI 235)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))
(insn 284 283 285 35 (parallel [
            (set (reg/f:DI 242)
                (plus:DI (reg:DI 241)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1086 -1
     (nil))
(insn 285 284 286 35 (set (mem/j:QI (reg/f:DI 242) [0 _75->area S1 A8])
        (const_int 49 [0x31])) "function.c":1086 -1
     (nil))
;;  succ:       36 (FALLTHRU)

;; basic block 36, loop depth 2, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
;;              34
;;              35 (FALLTHRU)
(code_label 286 285 287 36 176 (nil) [2 uses])
(note 287 286 288 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1089 -1
     (nil))
(insn 289 288 290 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1068 -1
     (nil))
;;  succ:       37 (FALLTHRU,DFS_BACK)

;; basic block 37, loop depth 2, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       22
;;              36 (FALLTHRU,DFS_BACK)
(code_label 290 289 291 37 171 (nil) [1 uses])
(note 291 290 293 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 293 291 294 37 (set (reg:SI 243)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 j+0 S4 A32])) "function.c":1068 -1
     (nil))
(insn 294 293 295 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 243)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 x_upp+0 S4 A32]))) "function.c":1068 -1
     (nil))
(jump_insn 295 294 296 37 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 292)
            (pc))) "function.c":1068 -1
     (nil)
 -> 292)
;;  succ:       23
;;              38 (FALLTHRU)

;; basic block 38, loop depth 1, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 (FALLTHRU)
(note 296 295 297 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 297 296 298 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 q+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1091 -1
     (nil))
(insn 298 297 299 38 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 w+0 S4 A32])
        (const_int 0 [0])) "function.c":1092 -1
     (nil))
(insn 299 298 300 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1066 -1
     (nil))
;;  succ:       39 (FALLTHRU,DFS_BACK)

;; basic block 39, loop depth 1, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
;;              38 (FALLTHRU,DFS_BACK)
(code_label 300 299 301 39 170 (nil) [1 uses])
(note 301 300 303 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 303 301 304 39 (set (reg:SI 244)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 i+0 S4 A32])) "function.c":1066 -1
     (nil))
(insn 304 303 305 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 244)
            (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 y_upp+0 S4 A32]))) "function.c":1066 -1
     (nil))
(jump_insn 305 304 306 39 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "function.c":1066 -1
     (nil)
 -> 302)
;;  succ:       22
;;              40 (FALLTHRU)

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
(note 306 305 307 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 307 306 308 40 (set (reg/f:DI 245)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [23 user+0 S8 A64])) "function.c":1095 -1
     (nil))
(insn 308 307 309 40 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (reg/f:DI 245) [12 user_109(D)->serwer+0 S8 A64])) "function.c":1095 -1
     (nil))
(insn 309 308 310 40 (set (reg/f:DI 163 [ _77 ])
        (mem/f:DI (plus:DI (reg/f:DI 162 [ _76 ])
                (const_int 40 [0x28])) [14 _76->player2+0 S8 A64])) "function.c":1095 -1
     (nil))
(insn 310 309 311 40 (set (reg:SI 247)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 x+0 S4 A32])) "function.c":1095 -1
     (nil))
(insn 311 310 312 40 (set (reg:DI 246)
        (sign_extend:DI (reg:SI 247))) "function.c":1095 -1
     (nil))
(insn 312 311 313 40 (set (reg:SI 249)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 y+0 S4 A32])) "function.c":1095 -1
     (nil))
(insn 313 312 314 40 (set (reg:DI 248)
        (sign_extend:DI (reg:SI 249))) "function.c":1095 -1
     (nil))
(insn 314 313 315 40 (parallel [
            (set (reg:DI 250)
                (mult:DI (reg:DI 248)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))
(insn 315 314 316 40 (parallel [
            (set (reg:DI 251)
                (plus:DI (reg/f:DI 163 [ _77 ])
                    (reg:DI 250)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))
(insn 316 315 317 40 (parallel [
            (set (reg:DI 252)
                (plus:DI (reg:DI 251)
                    (reg:DI 246)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))
(insn 317 316 318 40 (parallel [
            (set (reg/f:DI 253)
                (plus:DI (reg:DI 252)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1095 -1
     (nil))
(insn 318 317 319 40 (set (mem/j:QI (reg/f:DI 253) [0 _77->area S1 A8])
        (const_int 50 [0x32])) "function.c":1095 -1
     (nil))
(insn 319 318 322 40 (set (reg:SI 164 [ _144 ])
        (const_int 0 [0])) "function.c":1097 -1
     (nil))
(insn 322 319 326 40 (set (reg:SI 165 [ <retval> ])
        (reg:SI 164 [ _144 ])) "function.c":1097 -1
     (nil))
(insn 326 322 327 40 (set (reg/i:SI 0 ax)
        (reg:SI 165 [ <retval> ])) "function.c":1098 -1
     (nil))
(insn 327 326 0 40 (use (reg/i:SI 0 ax)) "function.c":1098 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function druk_wizja (druk_wizja, funcdef_no=22, decl_uid=6248, cgraph_uid=22, symbol_order=25)

druk_wizja (struct user_info * user)
{
  int j;
  int i;
  int D.6806;
  int _1;
  struct WINDOW * stdscr.128_2;
  struct serwer_info * _3;
  struct player_info * _4;
  char _5;
  struct WINDOW * stdscr.129_6;
  struct WINDOW * stdscr.130_7;
  struct serwer_info * _8;
  struct player_info * _9;
  char _10;
  struct serwer_info * _11;
  struct player_info * _12;
  char _13;
  struct serwer_info * _14;
  struct player_info * _15;
  char _16;
  struct serwer_info * _17;
  struct player_info * _18;
  char _19;
  struct serwer_info * _20;
  struct player_info * _21;
  char _22;
  struct WINDOW * stdscr.131_23;
  struct serwer_info * _24;
  struct player_info * _25;
  char _26;
  int _27;
  struct WINDOW * stdscr.132_28;
  struct serwer_info * _29;
  struct player_info * _30;
  char _31;
  int _32;
  int _55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init_pair (1, 7, 7);
  init_pair (3, 0, 3);
  i_41 = 0;
  goto <bb 17>; [INV]
;;    succ:       17

;;   basic block 3, loop depth 1
;;    pred:       17
  j_42 = 0;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 4, loop depth 2
;;    pred:       15
  _1 = j_34 + 100;
  stdscr.128_2 = stdscr;
  wmove (stdscr.128_2, i_33, _1);
  _3 = user_44(D)->serwer;
  _4 = _3->player1;
  _5 = _4->area[i_33][j_34];
  if (_5 == 77)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 2
;;    pred:       4
  stdscr.129_6 = stdscr;
  wattr_on (stdscr.129_6, 256, 0B);
  printw (" ");
  stdscr.130_7 = stdscr;
  wattr_off (stdscr.130_7, 256, 0B);
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 6, loop depth 2
;;    pred:       4
  _8 = user_44(D)->serwer;
  _9 = _8->player1;
  _10 = _9->area[i_33][j_34];
  if (_10 == 46)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 2
;;    pred:       6
  printw (".");
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 8, loop depth 2
;;    pred:       6
  _11 = user_44(D)->serwer;
  _12 = _11->player1;
  _13 = _12->area[i_33][j_34];
  if (_13 == 99)
    goto <bb 12>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       12
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _14 = user_44(D)->serwer;
  _15 = _14->player1;
  _16 = _15->area[i_33][j_34];
  if (_16 == 68)
    goto <bb 12>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       12
;;                10

;;   basic block 10, loop depth 2
;;    pred:       9
  _17 = user_44(D)->serwer;
  _18 = _17->player1;
  _19 = _18->area[i_33][j_34];
  if (_19 == 116)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 2
;;    pred:       10
  _20 = user_44(D)->serwer;
  _21 = _20->player1;
  _22 = _21->area[i_33][j_34];
  if (_22 == 84)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 2
;;    pred:       8
;;                9
;;                10
;;                11
  stdscr.131_23 = stdscr;
  wattr_on (stdscr.131_23, 768, 0B);
  _24 = user_44(D)->serwer;
  _25 = _24->player1;
  _26 = _25->area[i_33][j_34];
  _27 = (int) _26;
  printw ("%c", _27);
  stdscr.132_28 = stdscr;
  wattr_off (stdscr.132_28, 768, 0B);
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 13, loop depth 2
;;    pred:       11
  _29 = user_44(D)->serwer;
  _30 = _29->player1;
  _31 = _30->area[i_33][j_34];
  _32 = (int) _31;
  printw ("%c", _32);
;;    succ:       14

;;   basic block 14, loop depth 2
;;    pred:       5
;;                7
;;                12
;;                13
  j_53 = j_34 + 1;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       3
;;                14
  # j_34 = PHI <j_42(3), j_53(14)>
  if (j_34 <= 4)
    goto <bb 4>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       4
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  i_54 = i_33 + 1;
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       2
;;                16
  # i_33 = PHI <i_41(2), i_54(16)>
  if (i_33 <= 4)
    goto <bb 3>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       3
;;                18

;;   basic block 18, loop depth 0
;;    pred:       17
  _55 = 0;
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       18
<L18>:
  return _55;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (stdscr.128_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (stdscr.129_6 - 6 )
Partition 7 (stdscr.130_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (stdscr.131_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (stdscr.132_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (i_33 - 33 )
Partition 34 (j_34 - 34 )
Partition 41 (i_41 - 41 )
Partition 42 (j_42 - 42 )
Partition 44 (user_44(D) - 44 )
Partition 53 (j_53 - 53 )
Partition 54 (i_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56(D) - 56 )


Coalescible Partition map 

Partition 0, base 0 (i_33 - 33 41 54 )
Partition 1, base 1 (j_34 - 34 42 53 )
Partition 4, base 2 (user_44(D) - 44 )
Partition 7, base 3 (_56(D) - 56 )


Partition map 

Partition 0 (i_33 - 33 )
Partition 1 (j_34 - 34 )
Partition 2 (i_41 - 41 )
Partition 3 (j_42 - 42 )
Partition 4 (user_44(D) - 44 )
Partition 5 (j_53 - 53 )
Partition 6 (i_54 - 54 )
Partition 7 (_56(D) - 56 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_34 <-> j_42
(2147483646, 0) j_34 <-> j_53
(2147483646, 0) i_33 <-> i_41
(2147483646, 0) i_33 <-> i_54

Partition map 

Partition 0 (i_33 - 33 )
Partition 1 (j_34 - 34 )
Partition 2 (i_41 - 41 )
Partition 3 (j_42 - 42 )
Partition 4 (user_44(D) - 44 )
Partition 5 (j_53 - 53 )
Partition 6 (i_54 - 54 )
Partition 7 (_56(D) - 56 )

Coalesce list: (34)j_34 & (42)j_42 [map: 1, 3] : Success -> 1
Coalesce list: (34)j_34 & (53)j_53 [map: 1, 5] : Success -> 1
Coalesce list: (33)i_33 & (41)i_41 [map: 0, 2] : Success -> 0
Coalesce list: (33)i_33 & (54)i_54 [map: 0, 6] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (stdscr.128_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (stdscr.129_6 - 6 )
Partition 6 (stdscr.130_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (stdscr.131_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (stdscr.132_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (i_33 - 33 41 54 )
Partition 33 (j_34 - 34 42 53 )
Partition 34 (user_44(D) - 44 )
Partition 35 (_55 - 55 )
Partition 36 (_56(D) - 56 )

druk_wizja (struct user_info * user)
{
  int j;
  int i;
  int D.6806;
  int _1;
  struct WINDOW * stdscr.128_2;
  struct serwer_info * _3;
  struct player_info * _4;
  char _5;
  struct WINDOW * stdscr.129_6;
  struct WINDOW * stdscr.130_7;
  struct serwer_info * _8;
  struct player_info * _9;
  char _10;
  struct serwer_info * _11;
  struct player_info * _12;
  char _13;
  struct serwer_info * _14;
  struct player_info * _15;
  char _16;
  struct serwer_info * _17;
  struct player_info * _18;
  char _19;
  struct serwer_info * _20;
  struct player_info * _21;
  char _22;
  struct WINDOW * stdscr.131_23;
  struct serwer_info * _24;
  struct player_info * _25;
  char _26;
  int _27;
  struct WINDOW * stdscr.132_28;
  struct serwer_info * _29;
  struct player_info * _30;
  char _31;
  int _32;
  int _55;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  init_pair (1, 7, 7);
  init_pair (3, 0, 3);
  i_41 = 0;
  goto <bb 17>; [INV]
;;    succ:       17

;;   basic block 3, loop depth 1
;;    pred:       17
  j_42 = 0;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 4, loop depth 2
;;    pred:       15
  _1 = j_34 + 100;
  stdscr.128_2 = stdscr;
  wmove (stdscr.128_2, i_33, _1);
  _3 = user_44(D)->serwer;
  _4 = _3->player1;
  _5 = _4->area[i_33][j_34];
  if (_5 == 77)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 2
;;    pred:       4
  stdscr.129_6 = stdscr;
  wattr_on (stdscr.129_6, 256, 0B);
  printw (" ");
  stdscr.130_7 = stdscr;
  wattr_off (stdscr.130_7, 256, 0B);
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 6, loop depth 2
;;    pred:       4
  _8 = user_44(D)->serwer;
  _9 = _8->player1;
  _10 = _9->area[i_33][j_34];
  if (_10 == 46)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 2
;;    pred:       6
  printw (".");
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 8, loop depth 2
;;    pred:       6
  _11 = user_44(D)->serwer;
  _12 = _11->player1;
  _13 = _12->area[i_33][j_34];
  if (_13 == 99)
    goto <bb 12>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       12
;;                9

;;   basic block 9, loop depth 2
;;    pred:       8
  _14 = user_44(D)->serwer;
  _15 = _14->player1;
  _16 = _15->area[i_33][j_34];
  if (_16 == 68)
    goto <bb 12>; [INV]
  else
    goto <bb 10>; [INV]
;;    succ:       12
;;                10

;;   basic block 10, loop depth 2
;;    pred:       9
  _17 = user_44(D)->serwer;
  _18 = _17->player1;
  _19 = _18->area[i_33][j_34];
  if (_19 == 116)
    goto <bb 12>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       12
;;                11

;;   basic block 11, loop depth 2
;;    pred:       10
  _20 = user_44(D)->serwer;
  _21 = _20->player1;
  _22 = _21->area[i_33][j_34];
  if (_22 == 84)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 2
;;    pred:       8
;;                9
;;                10
;;                11
  stdscr.131_23 = stdscr;
  wattr_on (stdscr.131_23, 768, 0B);
  _24 = user_44(D)->serwer;
  _25 = _24->player1;
  _26 = _25->area[i_33][j_34];
  _27 = (int) _26;
  printw ("%c", _27);
  stdscr.132_28 = stdscr;
  wattr_off (stdscr.132_28, 768, 0B);
  goto <bb 14>; [INV]
;;    succ:       14

;;   basic block 13, loop depth 2
;;    pred:       11
  _29 = user_44(D)->serwer;
  _30 = _29->player1;
  _31 = _30->area[i_33][j_34];
  _32 = (int) _31;
  printw ("%c", _32);
;;    succ:       14

;;   basic block 14, loop depth 2
;;    pred:       5
;;                7
;;                12
;;                13
  j_53 = j_34 + 1;
;;    succ:       15

;;   basic block 15, loop depth 2
;;    pred:       3
;;                14
  # j_34 = PHI <j_42(3), j_53(14)>
  if (j_34 <= 4)
    goto <bb 4>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       4
;;                16

;;   basic block 16, loop depth 1
;;    pred:       15
  i_54 = i_33 + 1;
;;    succ:       17

;;   basic block 17, loop depth 1
;;    pred:       2
;;                16
  # i_33 = PHI <i_41(2), i_54(16)>
  if (i_33 <= 4)
    goto <bb 3>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       3
;;                18

;;   basic block 18, loop depth 0
;;    pred:       17
  _55 = 0;
;;    succ:       19

;;   basic block 19, loop depth 0
;;    pred:       18
<L18>:
  return _55;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; init_pair (1, 7, 7);

(insn 6 5 7 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":1102 -1
     (nil))

(insn 7 6 8 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":1102 -1
     (nil))

(insn 8 7 9 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1102 -1
     (nil))

(call_insn 9 8 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":1102 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; init_pair (3, 0, 3);

(insn 10 9 11 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":1103 -1
     (nil))

(insn 11 10 12 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":1103 -1
     (nil))

(insn 12 11 13 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":1103 -1
     (nil))

(call_insn 13 12 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":1103 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; i_41 = 0;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1105 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; j_42 = 0;

(insn 18 17 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":1107 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _1 = j_34 + 100;

(insn 22 21 23 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1109 -1
     (nil))

(insn 23 22 0 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 121)
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1109 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 100 [0x64]))
        (nil)))

;; stdscr.128_2 = stdscr;

(insn 24 23 0 (set (reg/f:DI 88 [ stdscr.128_2 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1109 -1
     (nil))

;; wmove (stdscr.128_2, i_33, _1);

(insn 25 24 26 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1109 -1
     (nil))

(insn 26 25 27 (set (reg:SI 1 dx)
        (reg:SI 87 [ _1 ])) "function.c":1109 -1
     (nil))

(insn 27 26 28 (set (reg:SI 4 si)
        (reg:SI 122)) "function.c":1109 -1
     (nil))

(insn 28 27 29 (set (reg:DI 5 di)
        (reg/f:DI 88 [ stdscr.128_2 ])) "function.c":1109 -1
     (nil))

(call_insn 29 28 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":1109 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))

;; _3 = user_44(D)->serwer;

(insn 30 29 31 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1110 -1
     (nil))

(insn 31 30 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 123) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1110 -1
     (nil))

;; _4 = _3->player1;

(insn 32 31 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 32 [0x20])) [14 _3->player1+0 S8 A64])) "function.c":1110 -1
     (nil))

;; _5 = _4->area[i_33][j_34];

(insn 33 32 34 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1110 -1
     (nil))

(insn 34 33 35 (set (reg:DI 124)
        (sign_extend:DI (reg:SI 125))) "function.c":1110 -1
     (nil))

(insn 35 34 36 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1110 -1
     (nil))

(insn 36 35 37 (set (reg:DI 126)
        (sign_extend:DI (reg:SI 127))) "function.c":1110 -1
     (nil))

(insn 37 36 38 (parallel [
            (set (reg:DI 128)
                (mult:DI (reg:DI 126)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))

(insn 38 37 39 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))

(insn 39 38 40 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg:DI 129)
                    (reg:DI 124)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))

(insn 40 39 41 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg:DI 130)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))

(insn 41 40 0 (set (reg:QI 91 [ _5 ])
        (mem/j:QI (reg/f:DI 131) [0 _4->area S1 A8])) "function.c":1110 -1
     (nil))

;; if (_5 == 77)

(insn 42 41 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ _5 ])
            (const_int 77 [0x4d]))) "function.c":1110 -1
     (nil))

(jump_insn 43 42 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1110 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; stdscr.129_6 = stdscr;

(insn 45 44 0 (set (reg/f:DI 92 [ stdscr.129_6 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1112 -1
     (nil))

;; wattr_on (stdscr.129_6, 256, 0B);

(insn 46 45 47 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1112 -1
     (nil))

(insn 47 46 48 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":1112 -1
     (nil))

(insn 48 47 49 (set (reg:DI 5 di)
        (reg/f:DI 92 [ stdscr.129_6 ])) "function.c":1112 -1
     (nil))

(call_insn 49 48 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":1112 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; printw (" ");

(insn 50 49 51 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":1113 -1
     (nil))

(insn 51 50 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1113 -1
     (nil))

(call_insn 52 51 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1113 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; stdscr.130_7 = stdscr;

(insn 53 52 0 (set (reg/f:DI 93 [ stdscr.130_7 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1114 -1
     (nil))

;; wattr_off (stdscr.130_7, 256, 0B);

(insn 54 53 55 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1114 -1
     (nil))

(insn 55 54 56 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":1114 -1
     (nil))

(insn 56 55 57 (set (reg:DI 5 di)
        (reg/f:DI 93 [ stdscr.130_7 ])) "function.c":1114 -1
     (nil))

(call_insn 57 56 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":1114 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 6

;; 

(code_label 60 59 61 183 (nil) [0 uses])

(note 61 60 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = user_44(D)->serwer;

(insn 62 61 63 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1116 -1
     (nil))

(insn 63 62 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 132) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1116 -1
     (nil))

;; _9 = _8->player1;

(insn 64 63 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 32 [0x20])) [14 _8->player1+0 S8 A64])) "function.c":1116 -1
     (nil))

;; _10 = _9->area[i_33][j_34];

(insn 65 64 66 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1116 -1
     (nil))

(insn 66 65 67 (set (reg:DI 133)
        (sign_extend:DI (reg:SI 134))) "function.c":1116 -1
     (nil))

(insn 67 66 68 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1116 -1
     (nil))

(insn 68 67 69 (set (reg:DI 135)
        (sign_extend:DI (reg:SI 136))) "function.c":1116 -1
     (nil))

(insn 69 68 70 (parallel [
            (set (reg:DI 137)
                (mult:DI (reg:DI 135)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))

(insn 70 69 71 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 95 [ _9 ])
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))

(insn 71 70 72 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg:DI 138)
                    (reg:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))

(insn 72 71 73 (parallel [
            (set (reg/f:DI 140)
                (plus:DI (reg:DI 139)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))

(insn 73 72 0 (set (reg:QI 96 [ _10 ])
        (mem/j:QI (reg/f:DI 140) [0 _9->area S1 A8])) "function.c":1116 -1
     (nil))

;; if (_10 == 46)

(insn 74 73 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ _10 ])
            (const_int 46 [0x2e]))) "function.c":1116 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1116 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; printw (".");

(insn 77 76 78 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":1118 -1
     (nil))

(insn 78 77 79 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1118 -1
     (nil))

(call_insn 79 78 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1118 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))

;; Generating RTL for gimple basic block 8

;; 

(code_label 82 81 83 185 (nil) [0 uses])

(note 83 82 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = user_44(D)->serwer;

(insn 84 83 85 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))

(insn 85 84 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 141) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _12 = _11->player1;

(insn 86 85 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 32 [0x20])) [14 _11->player1+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _13 = _12->area[i_33][j_34];

(insn 87 86 88 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 88 87 89 (set (reg:DI 142)
        (sign_extend:DI (reg:SI 143))) "function.c":1120 -1
     (nil))

(insn 89 88 90 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 90 89 91 (set (reg:DI 144)
        (sign_extend:DI (reg:SI 145))) "function.c":1120 -1
     (nil))

(insn 91 90 92 (parallel [
            (set (reg:DI 146)
                (mult:DI (reg:DI 144)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 92 91 93 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 98 [ _12 ])
                    (reg:DI 146)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 93 92 94 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 147)
                    (reg:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 94 93 95 (parallel [
            (set (reg/f:DI 149)
                (plus:DI (reg:DI 148)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 95 94 0 (set (reg:QI 99 [ _13 ])
        (mem/j:QI (reg/f:DI 149) [0 _12->area S1 A8])) "function.c":1120 -1
     (nil))

;; if (_13 == 99)

(insn 96 95 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _13 ])
            (const_int 99 [0x63]))) "function.c":1120 -1
     (nil))

(jump_insn 97 96 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1120 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; _14 = user_44(D)->serwer;

(insn 99 98 100 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))

(insn 100 99 0 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 150) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _15 = _14->player1;

(insn 101 100 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ _14 ])
                (const_int 32 [0x20])) [14 _14->player1+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _16 = _15->area[i_33][j_34];

(insn 102 101 103 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 103 102 104 (set (reg:DI 151)
        (sign_extend:DI (reg:SI 152))) "function.c":1120 -1
     (nil))

(insn 104 103 105 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 105 104 106 (set (reg:DI 153)
        (sign_extend:DI (reg:SI 154))) "function.c":1120 -1
     (nil))

(insn 106 105 107 (parallel [
            (set (reg:DI 155)
                (mult:DI (reg:DI 153)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 107 106 108 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg/f:DI 101 [ _15 ])
                    (reg:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 108 107 109 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 156)
                    (reg:DI 151)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 109 108 110 (parallel [
            (set (reg/f:DI 158)
                (plus:DI (reg:DI 157)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 110 109 0 (set (reg:QI 102 [ _16 ])
        (mem/j:QI (reg/f:DI 158) [0 _15->area S1 A8])) "function.c":1120 -1
     (nil))

;; if (_16 == 68)

(insn 111 110 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _16 ])
            (const_int 68 [0x44]))) "function.c":1120 -1
     (nil))

(jump_insn 112 111 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1120 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _17 = user_44(D)->serwer;

(insn 114 113 115 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))

(insn 115 114 0 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (reg/f:DI 159) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _18 = _17->player1;

(insn 116 115 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 32 [0x20])) [14 _17->player1+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _19 = _18->area[i_33][j_34];

(insn 117 116 118 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 118 117 119 (set (reg:DI 160)
        (sign_extend:DI (reg:SI 161))) "function.c":1120 -1
     (nil))

(insn 119 118 120 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 120 119 121 (set (reg:DI 162)
        (sign_extend:DI (reg:SI 163))) "function.c":1120 -1
     (nil))

(insn 121 120 122 (parallel [
            (set (reg:DI 164)
                (mult:DI (reg:DI 162)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 122 121 123 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 104 [ _18 ])
                    (reg:DI 164)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 123 122 124 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg:DI 165)
                    (reg:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 124 123 125 (parallel [
            (set (reg/f:DI 167)
                (plus:DI (reg:DI 166)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 125 124 0 (set (reg:QI 105 [ _19 ])
        (mem/j:QI (reg/f:DI 167) [0 _18->area S1 A8])) "function.c":1120 -1
     (nil))

;; if (_19 == 116)

(insn 126 125 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ _19 ])
            (const_int 116 [0x74]))) "function.c":1120 -1
     (nil))

(jump_insn 127 126 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1120 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _20 = user_44(D)->serwer;

(insn 129 128 130 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))

(insn 130 129 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (reg/f:DI 168) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _21 = _20->player1;

(insn 131 130 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 32 [0x20])) [14 _20->player1+0 S8 A64])) "function.c":1120 -1
     (nil))

;; _22 = _21->area[i_33][j_34];

(insn 132 131 133 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 133 132 134 (set (reg:DI 169)
        (sign_extend:DI (reg:SI 170))) "function.c":1120 -1
     (nil))

(insn 134 133 135 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))

(insn 135 134 136 (set (reg:DI 171)
        (sign_extend:DI (reg:SI 172))) "function.c":1120 -1
     (nil))

(insn 136 135 137 (parallel [
            (set (reg:DI 173)
                (mult:DI (reg:DI 171)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 137 136 138 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 138 137 139 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg:DI 174)
                    (reg:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 139 138 140 (parallel [
            (set (reg/f:DI 176)
                (plus:DI (reg:DI 175)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))

(insn 140 139 0 (set (reg:QI 108 [ _22 ])
        (mem/j:QI (reg/f:DI 176) [0 _21->area S1 A8])) "function.c":1120 -1
     (nil))

;; if (_22 == 84)

(insn 141 140 142 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _22 ])
            (const_int 84 [0x54]))) "function.c":1120 -1
     (nil))

(jump_insn 142 141 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1120 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 143 142 144 186 (nil) [0 uses])

(note 144 143 0 NOTE_INSN_BASIC_BLOCK)

;; stdscr.131_23 = stdscr;

(insn 145 144 0 (set (reg/f:DI 109 [ stdscr.131_23 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1122 -1
     (nil))

;; wattr_on (stdscr.131_23, 768, 0B);

(insn 146 145 147 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1122 -1
     (nil))

(insn 147 146 148 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":1122 -1
     (nil))

(insn 148 147 149 (set (reg:DI 5 di)
        (reg/f:DI 109 [ stdscr.131_23 ])) "function.c":1122 -1
     (nil))

(call_insn 149 148 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":1122 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; _24 = user_44(D)->serwer;

(insn 150 149 151 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1123 -1
     (nil))

(insn 151 150 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (reg/f:DI 177) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1123 -1
     (nil))

;; _25 = _24->player1;

(insn 152 151 0 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 32 [0x20])) [14 _24->player1+0 S8 A64])) "function.c":1123 -1
     (nil))

;; _26 = _25->area[i_33][j_34];

(insn 153 152 154 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1123 -1
     (nil))

(insn 154 153 155 (set (reg:DI 178)
        (sign_extend:DI (reg:SI 179))) "function.c":1123 -1
     (nil))

(insn 155 154 156 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1123 -1
     (nil))

(insn 156 155 157 (set (reg:DI 180)
        (sign_extend:DI (reg:SI 181))) "function.c":1123 -1
     (nil))

(insn 157 156 158 (parallel [
            (set (reg:DI 182)
                (mult:DI (reg:DI 180)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))

(insn 158 157 159 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 111 [ _25 ])
                    (reg:DI 182)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))

(insn 159 158 160 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg:DI 183)
                    (reg:DI 178)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))

(insn 160 159 161 (parallel [
            (set (reg/f:DI 185)
                (plus:DI (reg:DI 184)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))

(insn 161 160 0 (set (reg:QI 112 [ _26 ])
        (mem/j:QI (reg/f:DI 185) [0 _25->area S1 A8])) "function.c":1123 -1
     (nil))

;; _27 = (int) _26;

(insn 162 161 0 (set (reg:SI 113 [ _27 ])
        (sign_extend:SI (reg:QI 112 [ _26 ]))) "function.c":1123 -1
     (nil))

;; printw ("%c", _27);

(insn 163 162 164 (set (reg:SI 4 si)
        (reg:SI 113 [ _27 ])) "function.c":1123 -1
     (nil))

(insn 164 163 165 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":1123 -1
     (nil))

(insn 165 164 166 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1123 -1
     (nil))

(call_insn 166 165 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1123 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; stdscr.132_28 = stdscr;

(insn 167 166 0 (set (reg/f:DI 114 [ stdscr.132_28 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1124 -1
     (nil))

;; wattr_off (stdscr.132_28, 768, 0B);

(insn 168 167 169 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1124 -1
     (nil))

(insn 169 168 170 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":1124 -1
     (nil))

(insn 170 169 171 (set (reg:DI 5 di)
        (reg/f:DI 114 [ stdscr.132_28 ])) "function.c":1124 -1
     (nil))

(call_insn 171 170 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":1124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

;; Generating RTL for gimple basic block 13

;; 

(code_label 174 173 175 187 (nil) [0 uses])

(note 175 174 0 NOTE_INSN_BASIC_BLOCK)

;; _29 = user_44(D)->serwer;

(insn 176 175 177 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1128 -1
     (nil))

(insn 177 176 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 186) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1128 -1
     (nil))

;; _30 = _29->player1;

(insn 178 177 0 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 32 [0x20])) [14 _29->player1+0 S8 A64])) "function.c":1128 -1
     (nil))

;; _31 = _30->area[i_33][j_34];

(insn 179 178 180 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1128 -1
     (nil))

(insn 180 179 181 (set (reg:DI 187)
        (sign_extend:DI (reg:SI 188))) "function.c":1128 -1
     (nil))

(insn 181 180 182 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1128 -1
     (nil))

(insn 182 181 183 (set (reg:DI 189)
        (sign_extend:DI (reg:SI 190))) "function.c":1128 -1
     (nil))

(insn 183 182 184 (parallel [
            (set (reg:DI 191)
                (mult:DI (reg:DI 189)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))

(insn 184 183 185 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 116 [ _30 ])
                    (reg:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))

(insn 185 184 186 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg:DI 192)
                    (reg:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))

(insn 186 185 187 (parallel [
            (set (reg/f:DI 194)
                (plus:DI (reg:DI 193)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))

(insn 187 186 0 (set (reg:QI 117 [ _31 ])
        (mem/j:QI (reg/f:DI 194) [0 _30->area S1 A8])) "function.c":1128 -1
     (nil))

;; _32 = (int) _31;

(insn 188 187 0 (set (reg:SI 118 [ _32 ])
        (sign_extend:SI (reg:QI 117 [ _31 ]))) "function.c":1128 -1
     (nil))

;; printw ("%c", _32);

(insn 189 188 190 (set (reg:SI 4 si)
        (reg:SI 118 [ _32 ])) "function.c":1128 -1
     (nil))

(insn 190 189 191 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":1128 -1
     (nil))

(insn 191 190 192 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1128 -1
     (nil))

(call_insn 192 191 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1128 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))

;; Generating RTL for gimple basic block 14

;; 

(code_label 193 192 194 184 (nil) [0 uses])

(note 194 193 0 NOTE_INSN_BASIC_BLOCK)

;; j_53 = j_34 + 1;

(insn 195 194 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1107 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 196 195 197 182 (nil) [0 uses])

(note 197 196 0 NOTE_INSN_BASIC_BLOCK)

;; if (j_34 <= 4)

(insn 199 197 200 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":1107 -1
     (nil))

(jump_insn 200 199 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "function.c":1107 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; i_54 = i_33 + 1;

(insn 202 201 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1105 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; 

(code_label 203 202 204 181 (nil) [0 uses])

(note 204 203 0 NOTE_INSN_BASIC_BLOCK)

;; if (i_33 <= 4)

(insn 206 204 207 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":1105 -1
     (nil))

(jump_insn 207 206 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "function.c":1105 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; _55 = 0;

(insn 209 208 0 (set (reg:SI 119 [ _55 ])
        (const_int 0 [0])) "function.c":1132 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; <L18>:

(code_label 210 209 211 190 (nil) [0 uses])

(note 211 210 0 NOTE_INSN_BASIC_BLOCK)

;; return _55;

(insn 212 211 213 (set (reg:SI 120 [ <retval> ])
        (reg:SI 119 [ _55 ])) "function.c":1132 -1
     (nil))

(jump_insn 213 212 214 (set (pc)
        (label_ref 0)) "function.c":1132 -1
     (nil))

(barrier 214 213 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 20 into block 19...
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Removing jump 213.
Merging block 21 into block 19...
Merged blocks 19 and 21.
Merged 19 and 21 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])
        (reg:DI 5 di [ user ])) "function.c":1101 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 1 dx)
        (const_int 7 [0x7])) "function.c":1102 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 4 si)
        (const_int 7 [0x7])) "function.c":1102 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1102 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":1102 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 10 9 11 2 (set (reg:SI 1 dx)
        (const_int 3 [0x3])) "function.c":1103 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "function.c":1103 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (const_int 3 [0x3])) "function.c":1103 -1
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("init_pair") [flags 0x41]  <function_decl 0x7f7cd1099700 init_pair>) [0 init_pair S1 A8])
            (const_int 0 [0]))) "function.c":1103 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1105 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (label_ref 203)) "function.c":1105 -1
     (nil)
 -> 203)
;;  succ:       18

(barrier 16 15 205)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 205 16 17 4 189 (nil) [1 uses])
(note 17 205 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
        (const_int 0 [0])) "function.c":1107 -1
     (nil))
(jump_insn 19 18 20 4 (set (pc)
        (label_ref 196)) "function.c":1107 -1
     (nil)
 -> 196)
;;  succ:       16

(barrier 20 19 198)
;; basic block 5, loop depth 2, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 198 20 21 5 188 (nil) [1 uses])
(note 21 198 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:SI 121)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1109 -1
     (nil))
(insn 23 22 24 5 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 121)
                    (const_int 100 [0x64])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1109 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 100 [0x64]))
        (nil)))
(insn 24 23 25 5 (set (reg/f:DI 88 [ stdscr.128_2 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1109 -1
     (nil))
(insn 25 24 26 5 (set (reg:SI 122)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1109 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 1 dx)
        (reg:SI 87 [ _1 ])) "function.c":1109 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 4 si)
        (reg:SI 122)) "function.c":1109 -1
     (nil))
(insn 28 27 29 5 (set (reg:DI 5 di)
        (reg/f:DI 88 [ stdscr.128_2 ])) "function.c":1109 -1
     (nil))
(call_insn 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wmove") [flags 0x41]  <function_decl 0x7f7cd10c9f00 wmove>) [0 wmove S1 A8])
            (const_int 0 [0]))) "function.c":1109 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 30 29 31 5 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1110 -1
     (nil))
(insn 31 30 32 5 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (reg/f:DI 123) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1110 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 32 [0x20])) [14 _3->player1+0 S8 A64])) "function.c":1110 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 125)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1110 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 124)
        (sign_extend:DI (reg:SI 125))) "function.c":1110 -1
     (nil))
(insn 35 34 36 5 (set (reg:SI 127)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1110 -1
     (nil))
(insn 36 35 37 5 (set (reg:DI 126)
        (sign_extend:DI (reg:SI 127))) "function.c":1110 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg:DI 128)
                (mult:DI (reg:DI 126)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))
(insn 38 37 39 5 (parallel [
            (set (reg:DI 129)
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 128)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))
(insn 39 38 40 5 (parallel [
            (set (reg:DI 130)
                (plus:DI (reg:DI 129)
                    (reg:DI 124)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))
(insn 40 39 41 5 (parallel [
            (set (reg/f:DI 131)
                (plus:DI (reg:DI 130)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1110 -1
     (nil))
(insn 41 40 42 5 (set (reg:QI 91 [ _5 ])
        (mem/j:QI (reg/f:DI 131) [0 _4->area S1 A8])) "function.c":1110 -1
     (nil))
(insn 42 41 43 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 91 [ _5 ])
            (const_int 77 [0x4d]))) "function.c":1110 -1
     (nil))
(jump_insn 43 42 44 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 60)
            (pc))) "function.c":1110 -1
     (nil)
 -> 60)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 44 43 45 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 6 (set (reg/f:DI 92 [ stdscr.129_6 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1112 -1
     (nil))
(insn 46 45 47 6 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1112 -1
     (nil))
(insn 47 46 48 6 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":1112 -1
     (nil))
(insn 48 47 49 6 (set (reg:DI 5 di)
        (reg/f:DI 92 [ stdscr.129_6 ])) "function.c":1112 -1
     (nil))
(call_insn 49 48 50 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":1112 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 50 49 51 6 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f7cd0ed46c0 *.LC2>)) "function.c":1113 -1
     (nil))
(insn 51 50 52 6 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1113 -1
     (nil))
(call_insn 52 51 53 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1113 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 53 52 54 6 (set (reg/f:DI 93 [ stdscr.130_7 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1114 -1
     (nil))
(insn 54 53 55 6 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1114 -1
     (nil))
(insn 55 54 56 6 (set (reg:SI 4 si)
        (const_int 256 [0x100])) "function.c":1114 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 5 di)
        (reg/f:DI 93 [ stdscr.130_7 ])) "function.c":1114 -1
     (nil))
(call_insn 57 56 58 6 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":1114 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 58 57 59 6 (set (pc)
        (label_ref 193)) -1
     (nil)
 -> 193)
;;  succ:       15

(barrier 59 58 60)
;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 60 59 61 7 183 (nil) [1 uses])
(note 61 60 62 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 62 61 63 7 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1116 -1
     (nil))
(insn 63 62 64 7 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 132) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1116 -1
     (nil))
(insn 64 63 65 7 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 32 [0x20])) [14 _8->player1+0 S8 A64])) "function.c":1116 -1
     (nil))
(insn 65 64 66 7 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1116 -1
     (nil))
(insn 66 65 67 7 (set (reg:DI 133)
        (sign_extend:DI (reg:SI 134))) "function.c":1116 -1
     (nil))
(insn 67 66 68 7 (set (reg:SI 136)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1116 -1
     (nil))
(insn 68 67 69 7 (set (reg:DI 135)
        (sign_extend:DI (reg:SI 136))) "function.c":1116 -1
     (nil))
(insn 69 68 70 7 (parallel [
            (set (reg:DI 137)
                (mult:DI (reg:DI 135)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))
(insn 70 69 71 7 (parallel [
            (set (reg:DI 138)
                (plus:DI (reg/f:DI 95 [ _9 ])
                    (reg:DI 137)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))
(insn 71 70 72 7 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg:DI 138)
                    (reg:DI 133)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))
(insn 72 71 73 7 (parallel [
            (set (reg/f:DI 140)
                (plus:DI (reg:DI 139)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1116 -1
     (nil))
(insn 73 72 74 7 (set (reg:QI 96 [ _10 ])
        (mem/j:QI (reg/f:DI 140) [0 _9->area S1 A8])) "function.c":1116 -1
     (nil))
(insn 74 73 75 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ _10 ])
            (const_int 46 [0x2e]))) "function.c":1116 -1
     (nil))
(jump_insn 75 74 76 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 82)
            (pc))) "function.c":1116 -1
     (nil)
 -> 82)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 76 75 77 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f7cd0ed47e0 *.LC4>)) "function.c":1118 -1
     (nil))
(insn 78 77 79 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1118 -1
     (nil))
(call_insn 79 78 80 8 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1118 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(jump_insn 80 79 81 8 (set (pc)
        (label_ref 193)) -1
     (nil)
 -> 193)
;;  succ:       15

(barrier 81 80 82)
;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 82 81 83 9 185 (nil) [1 uses])
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 9 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 85 84 86 9 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (reg/f:DI 141) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 86 85 87 9 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 32 [0x20])) [14 _11->player1+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 87 86 88 9 (set (reg:SI 143)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 88 87 89 9 (set (reg:DI 142)
        (sign_extend:DI (reg:SI 143))) "function.c":1120 -1
     (nil))
(insn 89 88 90 9 (set (reg:SI 145)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 90 89 91 9 (set (reg:DI 144)
        (sign_extend:DI (reg:SI 145))) "function.c":1120 -1
     (nil))
(insn 91 90 92 9 (parallel [
            (set (reg:DI 146)
                (mult:DI (reg:DI 144)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 92 91 93 9 (parallel [
            (set (reg:DI 147)
                (plus:DI (reg/f:DI 98 [ _12 ])
                    (reg:DI 146)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 93 92 94 9 (parallel [
            (set (reg:DI 148)
                (plus:DI (reg:DI 147)
                    (reg:DI 142)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 94 93 95 9 (parallel [
            (set (reg/f:DI 149)
                (plus:DI (reg:DI 148)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 95 94 96 9 (set (reg:QI 99 [ _13 ])
        (mem/j:QI (reg/f:DI 149) [0 _12->area S1 A8])) "function.c":1120 -1
     (nil))
(insn 96 95 97 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 99 [ _13 ])
            (const_int 99 [0x63]))) "function.c":1120 -1
     (nil))
(jump_insn 97 96 98 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "function.c":1120 -1
     (nil)
 -> 143)
;;  succ:       13
;;              10 (FALLTHRU)

;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 98 97 99 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 100 10 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 100 99 101 10 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (reg/f:DI 150) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 101 100 102 10 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 100 [ _14 ])
                (const_int 32 [0x20])) [14 _14->player1+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 102 101 103 10 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 103 102 104 10 (set (reg:DI 151)
        (sign_extend:DI (reg:SI 152))) "function.c":1120 -1
     (nil))
(insn 104 103 105 10 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 105 104 106 10 (set (reg:DI 153)
        (sign_extend:DI (reg:SI 154))) "function.c":1120 -1
     (nil))
(insn 106 105 107 10 (parallel [
            (set (reg:DI 155)
                (mult:DI (reg:DI 153)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 107 106 108 10 (parallel [
            (set (reg:DI 156)
                (plus:DI (reg/f:DI 101 [ _15 ])
                    (reg:DI 155)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 108 107 109 10 (parallel [
            (set (reg:DI 157)
                (plus:DI (reg:DI 156)
                    (reg:DI 151)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 109 108 110 10 (parallel [
            (set (reg/f:DI 158)
                (plus:DI (reg:DI 157)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 110 109 111 10 (set (reg:QI 102 [ _16 ])
        (mem/j:QI (reg/f:DI 158) [0 _15->area S1 A8])) "function.c":1120 -1
     (nil))
(insn 111 110 112 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 102 [ _16 ])
            (const_int 68 [0x44]))) "function.c":1120 -1
     (nil))
(jump_insn 112 111 113 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "function.c":1120 -1
     (nil)
 -> 143)
;;  succ:       13
;;              11 (FALLTHRU)

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
(note 113 112 114 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 115 11 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 115 114 116 11 (set (reg/f:DI 103 [ _17 ])
        (mem/f:DI (reg/f:DI 159) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 116 115 117 11 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 103 [ _17 ])
                (const_int 32 [0x20])) [14 _17->player1+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 117 116 118 11 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 118 117 119 11 (set (reg:DI 160)
        (sign_extend:DI (reg:SI 161))) "function.c":1120 -1
     (nil))
(insn 119 118 120 11 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 120 119 121 11 (set (reg:DI 162)
        (sign_extend:DI (reg:SI 163))) "function.c":1120 -1
     (nil))
(insn 121 120 122 11 (parallel [
            (set (reg:DI 164)
                (mult:DI (reg:DI 162)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 122 121 123 11 (parallel [
            (set (reg:DI 165)
                (plus:DI (reg/f:DI 104 [ _18 ])
                    (reg:DI 164)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 123 122 124 11 (parallel [
            (set (reg:DI 166)
                (plus:DI (reg:DI 165)
                    (reg:DI 160)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 124 123 125 11 (parallel [
            (set (reg/f:DI 167)
                (plus:DI (reg:DI 166)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 125 124 126 11 (set (reg:QI 105 [ _19 ])
        (mem/j:QI (reg/f:DI 167) [0 _18->area S1 A8])) "function.c":1120 -1
     (nil))
(insn 126 125 127 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 105 [ _19 ])
            (const_int 116 [0x74]))) "function.c":1120 -1
     (nil))
(jump_insn 127 126 128 11 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 143)
            (pc))) "function.c":1120 -1
     (nil)
 -> 143)
;;  succ:       13
;;              12 (FALLTHRU)

;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 128 127 129 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 12 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 130 129 131 12 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (reg/f:DI 168) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 131 130 132 12 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 32 [0x20])) [14 _20->player1+0 S8 A64])) "function.c":1120 -1
     (nil))
(insn 132 131 133 12 (set (reg:SI 170)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 133 132 134 12 (set (reg:DI 169)
        (sign_extend:DI (reg:SI 170))) "function.c":1120 -1
     (nil))
(insn 134 133 135 12 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1120 -1
     (nil))
(insn 135 134 136 12 (set (reg:DI 171)
        (sign_extend:DI (reg:SI 172))) "function.c":1120 -1
     (nil))
(insn 136 135 137 12 (parallel [
            (set (reg:DI 173)
                (mult:DI (reg:DI 171)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 137 136 138 12 (parallel [
            (set (reg:DI 174)
                (plus:DI (reg/f:DI 107 [ _21 ])
                    (reg:DI 173)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 138 137 139 12 (parallel [
            (set (reg:DI 175)
                (plus:DI (reg:DI 174)
                    (reg:DI 169)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 139 138 140 12 (parallel [
            (set (reg/f:DI 176)
                (plus:DI (reg:DI 175)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1120 -1
     (nil))
(insn 140 139 141 12 (set (reg:QI 108 [ _22 ])
        (mem/j:QI (reg/f:DI 176) [0 _21->area S1 A8])) "function.c":1120 -1
     (nil))
(insn 141 140 142 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 108 [ _22 ])
            (const_int 84 [0x54]))) "function.c":1120 -1
     (nil))
(jump_insn 142 141 143 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 174)
            (pc))) "function.c":1120 -1
     (nil)
 -> 174)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 2, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
;;              10
;;              11
;;              12 (FALLTHRU)
(code_label 143 142 144 13 186 (nil) [3 uses])
(note 144 143 145 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 13 (set (reg/f:DI 109 [ stdscr.131_23 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1122 -1
     (nil))
(insn 146 145 147 13 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1122 -1
     (nil))
(insn 147 146 148 13 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":1122 -1
     (nil))
(insn 148 147 149 13 (set (reg:DI 5 di)
        (reg/f:DI 109 [ stdscr.131_23 ])) "function.c":1122 -1
     (nil))
(call_insn 149 148 150 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_on") [flags 0x41]  <function_decl 0x7f7cd10c4100 wattr_on>) [0 wattr_on S1 A8])
            (const_int 0 [0]))) "function.c":1122 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 150 149 151 13 (set (reg/f:DI 177)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1123 -1
     (nil))
(insn 151 150 152 13 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (reg/f:DI 177) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1123 -1
     (nil))
(insn 152 151 153 13 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 32 [0x20])) [14 _24->player1+0 S8 A64])) "function.c":1123 -1
     (nil))
(insn 153 152 154 13 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1123 -1
     (nil))
(insn 154 153 155 13 (set (reg:DI 178)
        (sign_extend:DI (reg:SI 179))) "function.c":1123 -1
     (nil))
(insn 155 154 156 13 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1123 -1
     (nil))
(insn 156 155 157 13 (set (reg:DI 180)
        (sign_extend:DI (reg:SI 181))) "function.c":1123 -1
     (nil))
(insn 157 156 158 13 (parallel [
            (set (reg:DI 182)
                (mult:DI (reg:DI 180)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))
(insn 158 157 159 13 (parallel [
            (set (reg:DI 183)
                (plus:DI (reg/f:DI 111 [ _25 ])
                    (reg:DI 182)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))
(insn 159 158 160 13 (parallel [
            (set (reg:DI 184)
                (plus:DI (reg:DI 183)
                    (reg:DI 178)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))
(insn 160 159 161 13 (parallel [
            (set (reg/f:DI 185)
                (plus:DI (reg:DI 184)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1123 -1
     (nil))
(insn 161 160 162 13 (set (reg:QI 112 [ _26 ])
        (mem/j:QI (reg/f:DI 185) [0 _25->area S1 A8])) "function.c":1123 -1
     (nil))
(insn 162 161 163 13 (set (reg:SI 113 [ _27 ])
        (sign_extend:SI (reg:QI 112 [ _26 ]))) "function.c":1123 -1
     (nil))
(insn 163 162 164 13 (set (reg:SI 4 si)
        (reg:SI 113 [ _27 ])) "function.c":1123 -1
     (nil))
(insn 164 163 165 13 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":1123 -1
     (nil))
(insn 165 164 166 13 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1123 -1
     (nil))
(call_insn 166 165 167 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1123 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 167 166 168 13 (set (reg/f:DI 114 [ stdscr.132_28 ])
        (mem/f/c:DI (symbol_ref:DI ("stdscr") [flags 0x40]  <var_decl 0x7f7cd108ac60 stdscr>) [11 stdscr+0 S8 A64])) "function.c":1124 -1
     (nil))
(insn 168 167 169 13 (set (reg:DI 1 dx)
        (const_int 0 [0])) "function.c":1124 -1
     (nil))
(insn 169 168 170 13 (set (reg:SI 4 si)
        (const_int 768 [0x300])) "function.c":1124 -1
     (nil))
(insn 170 169 171 13 (set (reg:DI 5 di)
        (reg/f:DI 114 [ stdscr.132_28 ])) "function.c":1124 -1
     (nil))
(call_insn 171 170 172 13 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("wattr_off") [flags 0x41]  <function_decl 0x7f7cd10c4200 wattr_off>) [0 wattr_off S1 A8])
            (const_int 0 [0]))) "function.c":1124 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 172 171 173 13 (set (pc)
        (label_ref 193)) "function.c":1124 -1
     (nil)
 -> 193)
;;  succ:       15

(barrier 173 172 174)
;; basic block 14, loop depth 2, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 174 173 175 14 187 (nil) [1 uses])
(note 175 174 176 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 176 175 177 14 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [23 user+0 S8 A64])) "function.c":1128 -1
     (nil))
(insn 177 176 178 14 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (reg/f:DI 186) [12 user_44(D)->serwer+0 S8 A64])) "function.c":1128 -1
     (nil))
(insn 178 177 179 14 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 32 [0x20])) [14 _29->player1+0 S8 A64])) "function.c":1128 -1
     (nil))
(insn 179 178 180 14 (set (reg:SI 188)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])) "function.c":1128 -1
     (nil))
(insn 180 179 181 14 (set (reg:DI 187)
        (sign_extend:DI (reg:SI 188))) "function.c":1128 -1
     (nil))
(insn 181 180 182 14 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1128 -1
     (nil))
(insn 182 181 183 14 (set (reg:DI 189)
        (sign_extend:DI (reg:SI 190))) "function.c":1128 -1
     (nil))
(insn 183 182 184 14 (parallel [
            (set (reg:DI 191)
                (mult:DI (reg:DI 189)
                    (const_int 150 [0x96])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))
(insn 184 183 185 14 (parallel [
            (set (reg:DI 192)
                (plus:DI (reg/f:DI 116 [ _30 ])
                    (reg:DI 191)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))
(insn 185 184 186 14 (parallel [
            (set (reg:DI 193)
                (plus:DI (reg:DI 192)
                    (reg:DI 187)))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))
(insn 186 185 187 14 (parallel [
            (set (reg/f:DI 194)
                (plus:DI (reg:DI 193)
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1128 -1
     (nil))
(insn 187 186 188 14 (set (reg:QI 117 [ _31 ])
        (mem/j:QI (reg/f:DI 194) [0 _30->area S1 A8])) "function.c":1128 -1
     (nil))
(insn 188 187 189 14 (set (reg:SI 118 [ _32 ])
        (sign_extend:SI (reg:QI 117 [ _31 ]))) "function.c":1128 -1
     (nil))
(insn 189 188 190 14 (set (reg:SI 4 si)
        (reg:SI 118 [ _32 ])) "function.c":1128 -1
     (nil))
(insn 190 189 191 14 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f7cd0ed4750 *.LC3>)) "function.c":1128 -1
     (nil))
(insn 191 190 192 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "function.c":1128 -1
     (nil))
(call_insn 192 191 193 14 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printw") [flags 0x41]  <function_decl 0x7f7cd10b4c00 printw>) [0 printw S1 A8])
            (const_int 0 [0]))) "function.c":1128 -1
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 2, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
;;              8
;;              13
;;              14 (FALLTHRU)
(code_label 193 192 194 15 184 (nil) [3 uses])
(note 194 193 195 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 195 194 196 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1107 -1
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 2, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              15 (FALLTHRU,DFS_BACK)
(code_label 196 195 197 16 182 (nil) [1 uses])
(note 197 196 199 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 199 197 200 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 j+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":1107 -1
     (nil))
(jump_insn 200 199 201 16 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 198)
            (pc))) "function.c":1107 -1
     (nil)
 -> 198)
;;  succ:       5
;;              17 (FALLTHRU)

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 201 200 202 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1105 -1
     (nil))
;;  succ:       18 (FALLTHRU,DFS_BACK)

;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              17 (FALLTHRU,DFS_BACK)
(code_label 203 202 204 18 181 (nil) [1 uses])
(note 204 203 206 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 206 204 207 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (const_int 4 [0x4]))) "function.c":1105 -1
     (nil))
(jump_insn 207 206 208 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 205)
            (pc))) "function.c":1105 -1
     (nil)
 -> 205)
;;  succ:       4
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 208 207 209 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 209 208 212 19 (set (reg:SI 119 [ _55 ])
        (const_int 0 [0])) "function.c":1132 -1
     (nil))
(insn 212 209 216 19 (set (reg:SI 120 [ <retval> ])
        (reg:SI 119 [ _55 ])) "function.c":1132 -1
     (nil))
(insn 216 212 217 19 (set (reg/i:SI 0 ax)
        (reg:SI 120 [ <retval> ])) "function.c":1133 -1
     (nil))
(insn 217 216 0 19 (use (reg/i:SI 0 ax)) "function.c":1133 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function bestia_move (bestia_move, funcdef_no=23, decl_uid=6253, cgraph_uid=23, symbol_order=26)

bestia_move (struct serwer_info * serwer, char direction)
{
  void * D.6809;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  void * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (int) direction_15(D);
  if (_1 == 100)
    goto <bb 10>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       3
;;                10

;;   basic block 3, loop depth 0
;;    pred:       2
  if (_1 > 100)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  if (_1 == 97)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       11
;;                8

;;   basic block 5, loop depth 0
;;    pred:       3
  if (_1 == 115)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       6
;;                9

;;   basic block 6, loop depth 0
;;    pred:       5
  if (_1 == 119)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _2 = serwer_17(D)->bestia.y;
  serwer_17(D)->bestia.y_ostatnie = _2;
  _3 = serwer_17(D)->bestia.y;
  _4 = _3 + -1;
  serwer_17(D)->bestia.y = _4;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 8, loop depth 0
;;    pred:       4
  _5 = serwer_17(D)->bestia.x;
  serwer_17(D)->bestia.x_ostatnie = _5;
  _6 = serwer_17(D)->bestia.x;
  _7 = _6 + -1;
  serwer_17(D)->bestia.x = _7;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 9, loop depth 0
;;    pred:       5
  _8 = serwer_17(D)->bestia.y;
  serwer_17(D)->bestia.y_ostatnie = _8;
  _9 = serwer_17(D)->bestia.y;
  _10 = _9 + 1;
  serwer_17(D)->bestia.y = _10;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       2
  _11 = serwer_17(D)->bestia.x;
  serwer_17(D)->bestia.x_ostatnie = _11;
  _12 = serwer_17(D)->bestia.x;
  _13 = _12 + 1;
  serwer_17(D)->bestia.x = _13;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       6
;;                7
;;                8
;;                9
;;                10
;;                4
  _26 = 0B;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L6>:
  return _26;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 15 (direction_15(D) - 15 )
Partition 17 (serwer_17(D) - 17 )
Partition 26 (_26 - 26 )
Partition 27 (_27(D) - 27 )


Coalescible Partition map 

Partition 0, base 0 (direction_15(D) - 15 )
Partition 1, base 1 (serwer_17(D) - 17 )
Partition 2, base 2 (_27(D) - 27 )


Partition map 

Partition 0 (direction_15(D) - 15 )
Partition 1 (serwer_17(D) - 17 )
Partition 2 (_27(D) - 27 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (direction_15(D) - 15 )
Partition 1 (serwer_17(D) - 17 )
Partition 2 (_27(D) - 27 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (direction_15(D) - 15 )
Partition 14 (serwer_17(D) - 17 )
Partition 15 (_26 - 26 )
Partition 16 (_27(D) - 27 )

bestia_move (struct serwer_info * serwer, char direction)
{
  void * D.6809;
  int _1;
  int _2;
  int _3;
  int _4;
  int _5;
  int _6;
  int _7;
  int _8;
  int _9;
  int _10;
  int _11;
  int _12;
  int _13;
  void * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = (int) direction_15(D);
  if (_1 == 100)
    goto <bb 10>; [INV]
  else
    goto <bb 3>; [INV]
;;    succ:       3
;;                10

;;   basic block 3, loop depth 0
;;    pred:       2
  if (_1 > 100)
    goto <bb 5>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  if (_1 == 97)
    goto <bb 8>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       11
;;                8

;;   basic block 5, loop depth 0
;;    pred:       3
  if (_1 == 115)
    goto <bb 9>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       6
;;                9

;;   basic block 6, loop depth 0
;;    pred:       5
  if (_1 == 119)
    goto <bb 7>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       11
;;                7

;;   basic block 7, loop depth 0
;;    pred:       6
  _2 = serwer_17(D)->bestia.y;
  serwer_17(D)->bestia.y_ostatnie = _2;
  _3 = serwer_17(D)->bestia.y;
  _4 = _3 + -1;
  serwer_17(D)->bestia.y = _4;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 8, loop depth 0
;;    pred:       4
  _5 = serwer_17(D)->bestia.x;
  serwer_17(D)->bestia.x_ostatnie = _5;
  _6 = serwer_17(D)->bestia.x;
  _7 = _6 + -1;
  serwer_17(D)->bestia.x = _7;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 9, loop depth 0
;;    pred:       5
  _8 = serwer_17(D)->bestia.y;
  serwer_17(D)->bestia.y_ostatnie = _8;
  _9 = serwer_17(D)->bestia.y;
  _10 = _9 + 1;
  serwer_17(D)->bestia.y = _10;
  goto <bb 11>; [INV]
;;    succ:       11

;;   basic block 10, loop depth 0
;;    pred:       2
  _11 = serwer_17(D)->bestia.x;
  serwer_17(D)->bestia.x_ostatnie = _11;
  _12 = serwer_17(D)->bestia.x;
  _13 = _12 + 1;
  serwer_17(D)->bestia.x = _13;
;;    succ:       11

;;   basic block 11, loop depth 0
;;    pred:       6
;;                7
;;                8
;;                9
;;                10
;;                4
  _26 = 0B;
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L6>:
  return _26;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = (int) direction_15(D);

(insn 9 8 0 (set (reg:SI 87 [ _1 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 direction+0 S1 A32]))) "function.c":1139 -1
     (nil))

;; if (_1 == 100)

(insn 10 9 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 100 [0x64]))) "function.c":1139 -1
     (nil))

(jump_insn 11 10 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1139 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; if (_1 > 100)

(insn 13 12 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ _1 ])
            (const_int 100 [0x64]))) "function.c":1139 -1
     (nil))

(jump_insn 14 13 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1139 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; if (_1 == 97)

(insn 16 15 17 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 97 [0x61]))) "function.c":1139 -1
     (nil))

(jump_insn 17 16 20 4 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1139 -1
     (nil))

(note 20 17 18 14 [bb 14] NOTE_INSN_BASIC_BLOCK)

(jump_insn 18 20 19 14 (set (pc)
        (label_ref 0)) "function.c":1139 -1
     (nil))

(barrier 19 18 0)

;; Generating RTL for gimple basic block 5

;; 

(code_label 21 19 22 193 (nil) [0 uses])

(note 22 21 0 NOTE_INSN_BASIC_BLOCK)

;; if (_1 == 115)

(insn 23 22 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 115 [0x73]))) "function.c":1139 -1
     (nil))

(jump_insn 24 23 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1139 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; if (_1 == 119)

(insn 26 25 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 119 [0x77]))) "function.c":1139 -1
     (nil))

(jump_insn 27 26 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1139 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _2 = serwer_17(D)->bestia.y;

(insn 29 28 30 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1142 -1
     (nil))

(insn 30 29 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 104)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1142 -1
     (nil))

;; serwer_17(D)->bestia.y_ostatnie = _2;

(insn 31 30 32 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1142 -1
     (nil))

(insn 32 31 0 (set (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 36076 [0x8cec])) [3 serwer_17(D)->bestia.y_ostatnie+0 S4 A32])
        (reg:SI 88 [ _2 ])) "function.c":1142 -1
     (nil))

;; _3 = serwer_17(D)->bestia.y;

(insn 33 32 34 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1143 -1
     (nil))

(insn 34 33 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 106)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1143 -1
     (nil))

;; _4 = _3 + -1;

(insn 35 34 0 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1143 -1
     (nil))

;; serwer_17(D)->bestia.y = _4;

(insn 36 35 37 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1143 -1
     (nil))

(insn 37 36 0 (set (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])
        (reg:SI 90 [ _4 ])) "function.c":1143 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 40 39 41 194 (nil) [0 uses])

(note 41 40 0 NOTE_INSN_BASIC_BLOCK)

;; _5 = serwer_17(D)->bestia.x;

(insn 42 41 43 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1146 -1
     (nil))

(insn 43 42 0 (set (reg:SI 91 [ _5 ])
        (mem:SI (plus:DI (reg/f:DI 108)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1146 -1
     (nil))

;; serwer_17(D)->bestia.x_ostatnie = _5;

(insn 44 43 45 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1146 -1
     (nil))

(insn 45 44 0 (set (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 36072 [0x8ce8])) [3 serwer_17(D)->bestia.x_ostatnie+0 S4 A64])
        (reg:SI 91 [ _5 ])) "function.c":1146 -1
     (nil))

;; _6 = serwer_17(D)->bestia.x;

(insn 46 45 47 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1147 -1
     (nil))

(insn 47 46 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 110)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1147 -1
     (nil))

;; _7 = _6 + -1;

(insn 48 47 0 (parallel [
            (set (reg:SI 93 [ _7 ])
                (plus:SI (reg:SI 92 [ _6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1147 -1
     (nil))

;; serwer_17(D)->bestia.x = _7;

(insn 49 48 50 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1147 -1
     (nil))

(insn 50 49 0 (set (mem:SI (plus:DI (reg/f:DI 111)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])
        (reg:SI 93 [ _7 ])) "function.c":1147 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 53 52 54 196 (nil) [0 uses])

(note 54 53 0 NOTE_INSN_BASIC_BLOCK)

;; _8 = serwer_17(D)->bestia.y;

(insn 55 54 56 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1150 -1
     (nil))

(insn 56 55 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 112)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1150 -1
     (nil))

;; serwer_17(D)->bestia.y_ostatnie = _8;

(insn 57 56 58 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1150 -1
     (nil))

(insn 58 57 0 (set (mem:SI (plus:DI (reg/f:DI 113)
                (const_int 36076 [0x8cec])) [3 serwer_17(D)->bestia.y_ostatnie+0 S4 A32])
        (reg:SI 94 [ _8 ])) "function.c":1150 -1
     (nil))

;; _9 = serwer_17(D)->bestia.y;

(insn 59 58 60 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1151 -1
     (nil))

(insn 60 59 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 114)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1151 -1
     (nil))

;; _10 = _9 + 1;

(insn 61 60 0 (parallel [
            (set (reg:SI 96 [ _10 ])
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1151 -1
     (nil))

;; serwer_17(D)->bestia.y = _10;

(insn 62 61 63 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1151 -1
     (nil))

(insn 63 62 0 (set (mem:SI (plus:DI (reg/f:DI 115)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])
        (reg:SI 96 [ _10 ])) "function.c":1151 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 66 65 67 192 (nil) [0 uses])

(note 67 66 0 NOTE_INSN_BASIC_BLOCK)

;; _11 = serwer_17(D)->bestia.x;

(insn 68 67 69 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1154 -1
     (nil))

(insn 69 68 0 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1154 -1
     (nil))

;; serwer_17(D)->bestia.x_ostatnie = _11;

(insn 70 69 71 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1154 -1
     (nil))

(insn 71 70 0 (set (mem:SI (plus:DI (reg/f:DI 117)
                (const_int 36072 [0x8ce8])) [3 serwer_17(D)->bestia.x_ostatnie+0 S4 A64])
        (reg:SI 97 [ _11 ])) "function.c":1154 -1
     (nil))

;; _12 = serwer_17(D)->bestia.x;

(insn 72 71 73 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1155 -1
     (nil))

(insn 73 72 0 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 118)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1155 -1
     (nil))

;; _13 = _12 + 1;

(insn 74 73 0 (parallel [
            (set (reg:SI 99 [ _13 ])
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1155 -1
     (nil))

;; serwer_17(D)->bestia.x = _13;

(insn 75 74 76 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1155 -1
     (nil))

(insn 76 75 0 (set (mem:SI (plus:DI (reg/f:DI 119)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])
        (reg:SI 99 [ _13 ])) "function.c":1155 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 77 76 78 195 (nil) [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; _26 = 0B;

(insn 79 78 0 (set (reg/f:DI 100 [ _26 ])
        (const_int 0 [0])) "function.c":1159 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; <L6>:

(code_label 80 79 81 197 (nil) [0 uses])

(note 81 80 0 NOTE_INSN_BASIC_BLOCK)

;; return _26;

(insn 82 81 83 (set (reg/f:DI 101 [ <retval> ])
        (reg/f:DI 100 [ _26 ])) "function.c":1159 -1
     (nil))

(jump_insn 83 82 84 (set (pc)
        (label_ref 0)) "function.c":1159 -1
     (nil))

(barrier 84 83 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Forwarding edge 5->6 to 13 failed.
Merging block 14 into block 13...
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Removing jump 83.
Merging block 15 into block 13...
Merged blocks 13 and 15.
Merged 13 and 15 without moving.


try_optimize_cfg iteration 2

Forwarding edge 5->6 to 13 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1138 -1
     (nil))
(insn 3 2 4 2 (set (reg:SI 102)
        (reg:SI 4 si [ direction ])) "function.c":1138 -1
     (nil))
(insn 4 3 5 2 (set (reg:QI 103)
        (subreg:QI (reg:SI 102) 0)) "function.c":1138 -1
     (nil))
(insn 5 4 6 2 (set (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [0 direction+0 S1 A32])
        (reg:QI 103)) "function.c":1138 -1
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg:SI 87 [ _1 ])
        (sign_extend:SI (mem/c:QI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [0 direction+0 S1 A32]))) "function.c":1139 -1
     (nil))
(insn 10 9 11 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 100 [0x64]))) "function.c":1139 -1
     (nil))
(jump_insn 11 10 12 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "function.c":1139 -1
     (nil)
 -> 66)
;;  succ:       4 (FALLTHRU)
;;              12

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 87 [ _1 ])
            (const_int 100 [0x64]))) "function.c":1139 -1
     (nil))
(jump_insn 14 13 15 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 21)
            (pc))) "function.c":1139 -1
     (nil)
 -> 21)
;;  succ:       5 (FALLTHRU)
;;              7

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 15 14 16 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 97 [0x61]))) "function.c":1139 -1
     (nil))
(jump_insn 17 16 20 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 40)
            (pc))) "function.c":1139 -1
     (nil)
 -> 40)
;;  succ:       6 (FALLTHRU)
;;              10

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 20 17 18 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 18 20 19 6 (set (pc)
        (label_ref 77)) "function.c":1139 -1
     (nil)
 -> 77)
;;  succ:       13 [always] 

(barrier 19 18 21)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 21 19 22 7 193 (nil) [1 uses])
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 115 [0x73]))) "function.c":1139 -1
     (nil))
(jump_insn 24 23 25 7 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "function.c":1139 -1
     (nil)
 -> 53)
;;  succ:       8 (FALLTHRU)
;;              11

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 25 24 26 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 119 [0x77]))) "function.c":1139 -1
     (nil))
(jump_insn 27 26 28 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 77)
            (pc))) "function.c":1139 -1
     (nil)
 -> 77)
;;  succ:       13
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 28 27 29 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 9 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1142 -1
     (nil))
(insn 30 29 31 9 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 104)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1142 -1
     (nil))
(insn 31 30 32 9 (set (reg/f:DI 105)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1142 -1
     (nil))
(insn 32 31 33 9 (set (mem:SI (plus:DI (reg/f:DI 105)
                (const_int 36076 [0x8cec])) [3 serwer_17(D)->bestia.y_ostatnie+0 S4 A32])
        (reg:SI 88 [ _2 ])) "function.c":1142 -1
     (nil))
(insn 33 32 34 9 (set (reg/f:DI 106)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1143 -1
     (nil))
(insn 34 33 35 9 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 106)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1143 -1
     (nil))
(insn 35 34 36 9 (parallel [
            (set (reg:SI 90 [ _4 ])
                (plus:SI (reg:SI 89 [ _3 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1143 -1
     (nil))
(insn 36 35 37 9 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1143 -1
     (nil))
(insn 37 36 38 9 (set (mem:SI (plus:DI (reg/f:DI 107)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])
        (reg:SI 90 [ _4 ])) "function.c":1143 -1
     (nil))
(jump_insn 38 37 39 9 (set (pc)
        (label_ref 77)) "function.c":1144 -1
     (nil)
 -> 77)
;;  succ:       13

(barrier 39 38 40)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 40 39 41 10 194 (nil) [1 uses])
(note 41 40 42 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 10 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1146 -1
     (nil))
(insn 43 42 44 10 (set (reg:SI 91 [ _5 ])
        (mem:SI (plus:DI (reg/f:DI 108)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1146 -1
     (nil))
(insn 44 43 45 10 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1146 -1
     (nil))
(insn 45 44 46 10 (set (mem:SI (plus:DI (reg/f:DI 109)
                (const_int 36072 [0x8ce8])) [3 serwer_17(D)->bestia.x_ostatnie+0 S4 A64])
        (reg:SI 91 [ _5 ])) "function.c":1146 -1
     (nil))
(insn 46 45 47 10 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1147 -1
     (nil))
(insn 47 46 48 10 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 110)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1147 -1
     (nil))
(insn 48 47 49 10 (parallel [
            (set (reg:SI 93 [ _7 ])
                (plus:SI (reg:SI 92 [ _6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1147 -1
     (nil))
(insn 49 48 50 10 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1147 -1
     (nil))
(insn 50 49 51 10 (set (mem:SI (plus:DI (reg/f:DI 111)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])
        (reg:SI 93 [ _7 ])) "function.c":1147 -1
     (nil))
(jump_insn 51 50 52 10 (set (pc)
        (label_ref 77)) "function.c":1148 -1
     (nil)
 -> 77)
;;  succ:       13

(barrier 52 51 53)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 53 52 54 11 196 (nil) [1 uses])
(note 54 53 55 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 11 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1150 -1
     (nil))
(insn 56 55 57 11 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 112)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1150 -1
     (nil))
(insn 57 56 58 11 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1150 -1
     (nil))
(insn 58 57 59 11 (set (mem:SI (plus:DI (reg/f:DI 113)
                (const_int 36076 [0x8cec])) [3 serwer_17(D)->bestia.y_ostatnie+0 S4 A32])
        (reg:SI 94 [ _8 ])) "function.c":1150 -1
     (nil))
(insn 59 58 60 11 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1151 -1
     (nil))
(insn 60 59 61 11 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 114)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])) "function.c":1151 -1
     (nil))
(insn 61 60 62 11 (parallel [
            (set (reg:SI 96 [ _10 ])
                (plus:SI (reg:SI 95 [ _9 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1151 -1
     (nil))
(insn 62 61 63 11 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1151 -1
     (nil))
(insn 63 62 64 11 (set (mem:SI (plus:DI (reg/f:DI 115)
                (const_int 36068 [0x8ce4])) [3 serwer_17(D)->bestia.y+0 S4 A32])
        (reg:SI 96 [ _10 ])) "function.c":1151 -1
     (nil))
(jump_insn 64 63 65 11 (set (pc)
        (label_ref 77)) "function.c":1152 -1
     (nil)
 -> 77)
;;  succ:       13

(barrier 65 64 66)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
(code_label 66 65 67 12 192 (nil) [1 uses])
(note 67 66 68 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 12 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1154 -1
     (nil))
(insn 69 68 70 12 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1154 -1
     (nil))
(insn 70 69 71 12 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1154 -1
     (nil))
(insn 71 70 72 12 (set (mem:SI (plus:DI (reg/f:DI 117)
                (const_int 36072 [0x8ce8])) [3 serwer_17(D)->bestia.x_ostatnie+0 S4 A64])
        (reg:SI 97 [ _11 ])) "function.c":1154 -1
     (nil))
(insn 72 71 73 12 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1155 -1
     (nil))
(insn 73 72 74 12 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 118)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])) "function.c":1155 -1
     (nil))
(insn 74 73 75 12 (parallel [
            (set (reg:SI 99 [ _13 ])
                (plus:SI (reg:SI 98 [ _12 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1155 -1
     (nil))
(insn 75 74 76 12 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1155 -1
     (nil))
(insn 76 75 77 12 (set (mem:SI (plus:DI (reg/f:DI 119)
                (const_int 36064 [0x8ce0])) [3 serwer_17(D)->bestia.x+0 S4 A64])
        (reg:SI 99 [ _13 ])) "function.c":1155 -1
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9
;;              10
;;              11
;;              12 (FALLTHRU)
;;              6 [always] 
(code_label 77 76 78 13 195 (nil) [5 uses])
(note 78 77 79 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 82 13 (set (reg/f:DI 100 [ _26 ])
        (const_int 0 [0])) "function.c":1159 -1
     (nil))
(insn 82 79 86 13 (set (reg/f:DI 101 [ <retval> ])
        (reg/f:DI 100 [ _26 ])) "function.c":1159 -1
     (nil))
(insn 86 82 87 13 (set (reg/i:DI 0 ax)
        (reg/f:DI 101 [ <retval> ])) "function.c":1160 -1
     (nil))
(insn 87 86 0 13 (use (reg/i:DI 0 ax)) "function.c":1160 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function collect_skarb (collect_skarb, funcdef_no=24, decl_uid=6255, cgraph_uid=24, symbol_order=27)

collect_skarb (struct serwer_info * serwer)
{
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int x;
  int y;
  void * D.6817;
  struct player_info * _1;
  struct player_info * _2;
  char * * _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  sizetype _8;
  char * _9;
  char _10;
  int _11;
  int _12;
  struct player_info * _13;
  int _14;
  int _15;
  char * * _16;
  long unsigned int _17;
  long unsigned int _18;
  char * * _19;
  char * _20;
  sizetype _21;
  char * _22;
  int _23;
  char * * _24;
  long unsigned int _25;
  long unsigned int _26;
  char * * _27;
  char * _28;
  sizetype _29;
  char * _30;
  char _31;
  int _32;
  int _33;
  struct player_info * _34;
  int _35;
  struct player_info * _36;
  int _37;
  char * * _38;
  long unsigned int _39;
  long unsigned int _40;
  char * * _41;
  char * _42;
  sizetype _43;
  char * _44;
  int _45;
  char * * _46;
  long unsigned int _47;
  long unsigned int _48;
  char * * _49;
  char * _50;
  sizetype _51;
  char * _52;
  char _53;
  int _54;
  int _55;
  struct player_info * _56;
  int _57;
  struct player_info * _58;
  int _59;
  char * * _60;
  long unsigned int _61;
  long unsigned int _62;
  char * * _63;
  char * _64;
  sizetype _65;
  char * _66;
  int _67;
  int _68;
  int _69;
  int _70;
  struct player_info * _71;
  int _72;
  int _73;
  struct player_info * _74;
  int _75;
  char * * _76;
  long unsigned int _77;
  long unsigned int _78;
  char * * _79;
  char * _80;
  sizetype _81;
  char * _82;
  int _83;
  struct player_info * _84;
  struct player_info * _85;
  char * * _86;
  long unsigned int _87;
  long unsigned int _88;
  char * * _89;
  char * _90;
  sizetype _91;
  char * _92;
  char _93;
  int _94;
  int _95;
  struct player_info * _96;
  int _97;
  int _98;
  char * * _99;
  long unsigned int _100;
  long unsigned int _101;
  char * * _102;
  char * _103;
  sizetype _104;
  char * _105;
  int _106;
  char * * _107;
  long unsigned int _108;
  long unsigned int _109;
  char * * _110;
  char * _111;
  sizetype _112;
  char * _113;
  char _114;
  int _115;
  int _116;
  struct player_info * _117;
  int _118;
  struct player_info * _119;
  int _120;
  char * * _121;
  long unsigned int _122;
  long unsigned int _123;
  char * * _124;
  char * _125;
  sizetype _126;
  char * _127;
  int _128;
  char * * _129;
  long unsigned int _130;
  long unsigned int _131;
  char * * _132;
  char * _133;
  sizetype _134;
  char * _135;
  char _136;
  int _137;
  int _138;
  struct player_info * _139;
  int _140;
  struct player_info * _141;
  int _142;
  char * * _143;
  long unsigned int _144;
  long unsigned int _145;
  char * * _146;
  char * _147;
  sizetype _148;
  char * _149;
  int _150;
  int _151;
  int _152;
  int _153;
  struct player_info * _154;
  int _155;
  int _156;
  struct player_info * _157;
  int _158;
  char * * _159;
  long unsigned int _160;
  long unsigned int _161;
  char * * _162;
  char * _163;
  sizetype _164;
  char * _165;
  int _166;
  void * _175;
  void * _184;
  void * _189;
  void * _194;
  void * _200;
  void * _207;
  void * _212;
  void * _217;
  void * _223;
  void * _225;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_178(D)->player1;
  y_179 = _1->y_current;
  _2 = serwer_178(D)->player1;
  x_180 = _2->x_current;
  i_181 = 0;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _3 = serwer_178(D)->mapa;
  _4 = (long unsigned int) y_179;
  _5 = _4 * 8;
  _6 = _3 + _5;
  _7 = *_6;
  _8 = (sizetype) x_180;
  _9 = _7 + _8;
  _10 = *_9;
  if (_10 == 99)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       4
;;                7

;;   basic block 4, loop depth 1
;;    pred:       3
  _11 = serwer_178(D)->skarb.one_coin[i_167][0];
  if (y_179 == _11)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       5
;;                7

;;   basic block 5, loop depth 1
;;    pred:       4
  _12 = serwer_178(D)->skarb.one_coin[i_167][1];
  if (x_180 == _12)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _13 = serwer_178(D)->player1;
  _14 = _13->coins_carried;
  _15 = _14 + 1;
  _13->coins_carried = _15;
  _16 = serwer_178(D)->mapa;
  _17 = (long unsigned int) y_179;
  _18 = _17 * 8;
  _19 = _16 + _18;
  _20 = *_19;
  _21 = (sizetype) x_180;
  _22 = _20 + _21;
  *_22 = 46;
  _184 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 7, loop depth 1
;;    pred:       3
;;                4
;;                5
  i_185 = i_167 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # i_167 = PHI <i_181(2), i_185(7)>
  _23 = serwer_178(D)->skarb.count_one_coin;
  if (i_167 < _23)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  i_186 = 0;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 10, loop depth 1
;;    pred:       15
  _24 = serwer_178(D)->mapa;
  _25 = (long unsigned int) y_179;
  _26 = _25 * 8;
  _27 = _24 + _26;
  _28 = *_27;
  _29 = (sizetype) x_180;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 == 116)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       11
;;                14

;;   basic block 11, loop depth 1
;;    pred:       10
  _32 = serwer_178(D)->skarb.treasure_coin[i_168][0];
  if (y_179 == _32)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       12
;;                14

;;   basic block 12, loop depth 1
;;    pred:       11
  _33 = serwer_178(D)->skarb.treasure_coin[i_168][1];
  if (x_180 == _33)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  _34 = serwer_178(D)->player1;
  _35 = _34->coins_carried;
  _36 = serwer_178(D)->player1;
  _37 = _35 + 10;
  _36->coins_carried = _37;
  _38 = serwer_178(D)->mapa;
  _39 = (long unsigned int) y_179;
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = *_41;
  _43 = (sizetype) x_180;
  _44 = _42 + _43;
  *_44 = 46;
  _189 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 14, loop depth 1
;;    pred:       10
;;                11
;;                12
  i_190 = i_168 + 1;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       9
;;                14
  # i_168 = PHI <i_186(9), i_190(14)>
  _45 = serwer_178(D)->skarb.count_treasure_coin;
  if (i_168 < _45)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       10
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  i_191 = 0;
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       22
  _46 = serwer_178(D)->mapa;
  _47 = (long unsigned int) y_179;
  _48 = _47 * 8;
  _49 = _46 + _48;
  _50 = *_49;
  _51 = (sizetype) x_180;
  _52 = _50 + _51;
  _53 = *_52;
  if (_53 == 84)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       18
;;                21

;;   basic block 18, loop depth 1
;;    pred:       17
  _54 = serwer_178(D)->skarb.large_treasure_coin[i_169][0];
  if (y_179 == _54)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       19
;;                21

;;   basic block 19, loop depth 1
;;    pred:       18
  _55 = serwer_178(D)->skarb.large_treasure_coin[i_169][1];
  if (x_180 == _55)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 0
;;    pred:       19
  _56 = serwer_178(D)->player1;
  _57 = _56->coins_carried;
  _58 = serwer_178(D)->player1;
  _59 = _57 + 50;
  _58->coins_carried = _59;
  _60 = serwer_178(D)->mapa;
  _61 = (long unsigned int) y_179;
  _62 = _61 * 8;
  _63 = _60 + _62;
  _64 = *_63;
  _65 = (sizetype) x_180;
  _66 = _64 + _65;
  *_66 = 46;
  _194 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 21, loop depth 1
;;    pred:       17
;;                18
;;                19
  i_195 = i_169 + 1;
;;    succ:       22

;;   basic block 22, loop depth 1
;;    pred:       16
;;                21
  # i_169 = PHI <i_191(16), i_195(21)>
  _67 = serwer_178(D)->skarb.count_large_treasure_coin;
  if (i_169 < _67)
    goto <bb 17>; [INV]
  else
    goto <bb 23>; [INV]
;;    succ:       17
;;                23

;;   basic block 23, loop depth 0
;;    pred:       22
  i_196 = 0;
  goto <bb 29>; [INV]
;;    succ:       29

;;   basic block 24, loop depth 1
;;    pred:       29
  _68 = serwer_178(D)->skarb.value_all_dropped_coin[i_170];
  if (_68 >= 0)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       25
;;                28

;;   basic block 25, loop depth 1
;;    pred:       24
  _69 = serwer_178(D)->skarb.dropped_coin[i_170][0];
  if (y_179 == _69)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       26
;;                28

;;   basic block 26, loop depth 1
;;    pred:       25
  _70 = serwer_178(D)->skarb.dropped_coin[i_170][1];
  if (x_180 == _70)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
  _71 = serwer_178(D)->player1;
  _72 = _71->coins_carried;
  _73 = serwer_178(D)->skarb.value_all_dropped_coin[i_170];
  _74 = serwer_178(D)->player1;
  _75 = _72 + _73;
  _74->coins_carried = _75;
  serwer_178(D)->skarb.value_all_dropped_coin[i_170] = -1;
  _76 = serwer_178(D)->mapa;
  _77 = (long unsigned int) y_179;
  _78 = _77 * 8;
  _79 = _76 + _78;
  _80 = *_79;
  _81 = (sizetype) x_180;
  _82 = _80 + _81;
  *_82 = 46;
  _200 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 28, loop depth 1
;;    pred:       24
;;                25
;;                26
  i_201 = i_170 + 1;
;;    succ:       29

;;   basic block 29, loop depth 1
;;    pred:       23
;;                28
  # i_170 = PHI <i_196(23), i_201(28)>
  _83 = serwer_178(D)->skarb.count_drop_coin;
  if (i_170 < _83)
    goto <bb 24>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       24
;;                30

;;   basic block 30, loop depth 0
;;    pred:       29
  _84 = serwer_178(D)->player2;
  y_202 = _84->y_current;
  _85 = serwer_178(D)->player2;
  x_203 = _85->x_current;
  i_204 = 0;
  goto <bb 36>; [INV]
;;    succ:       36

;;   basic block 31, loop depth 1
;;    pred:       36
  _86 = serwer_178(D)->mapa;
  _87 = (long unsigned int) y_202;
  _88 = _87 * 8;
  _89 = _86 + _88;
  _90 = *_89;
  _91 = (sizetype) x_203;
  _92 = _90 + _91;
  _93 = *_92;
  if (_93 == 99)
    goto <bb 32>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       32
;;                35

;;   basic block 32, loop depth 1
;;    pred:       31
  _94 = serwer_178(D)->skarb.one_coin[i_171][0];
  if (y_202 == _94)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       33
;;                35

;;   basic block 33, loop depth 1
;;    pred:       32
  _95 = serwer_178(D)->skarb.one_coin[i_171][1];
  if (x_203 == _95)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       34
;;                35

;;   basic block 34, loop depth 0
;;    pred:       33
  _96 = serwer_178(D)->player2;
  _97 = _96->coins_carried;
  _98 = _97 + 1;
  _96->coins_carried = _98;
  _99 = serwer_178(D)->mapa;
  _100 = (long unsigned int) y_202;
  _101 = _100 * 8;
  _102 = _99 + _101;
  _103 = *_102;
  _104 = (sizetype) x_203;
  _105 = _103 + _104;
  *_105 = 46;
  _207 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 35, loop depth 1
;;    pred:       31
;;                32
;;                33
  i_208 = i_171 + 1;
;;    succ:       36

;;   basic block 36, loop depth 1
;;    pred:       30
;;                35
  # i_171 = PHI <i_204(30), i_208(35)>
  _106 = serwer_178(D)->skarb.count_one_coin;
  if (i_171 < _106)
    goto <bb 31>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       31
;;                37

;;   basic block 37, loop depth 0
;;    pred:       36
  i_209 = 0;
  goto <bb 43>; [INV]
;;    succ:       43

;;   basic block 38, loop depth 1
;;    pred:       43
  _107 = serwer_178(D)->mapa;
  _108 = (long unsigned int) y_202;
  _109 = _108 * 8;
  _110 = _107 + _109;
  _111 = *_110;
  _112 = (sizetype) x_203;
  _113 = _111 + _112;
  _114 = *_113;
  if (_114 == 116)
    goto <bb 39>; [INV]
  else
    goto <bb 42>; [INV]
;;    succ:       39
;;                42

;;   basic block 39, loop depth 1
;;    pred:       38
  _115 = serwer_178(D)->skarb.treasure_coin[i_172][0];
  if (y_202 == _115)
    goto <bb 40>; [INV]
  else
    goto <bb 42>; [INV]
;;    succ:       40
;;                42

;;   basic block 40, loop depth 1
;;    pred:       39
  _116 = serwer_178(D)->skarb.treasure_coin[i_172][1];
  if (x_203 == _116)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  _117 = serwer_178(D)->player1;
  _118 = _117->coins_carried;
  _119 = serwer_178(D)->player2;
  _120 = _118 + 10;
  _119->coins_carried = _120;
  _121 = serwer_178(D)->mapa;
  _122 = (long unsigned int) y_202;
  _123 = _122 * 8;
  _124 = _121 + _123;
  _125 = *_124;
  _126 = (sizetype) x_203;
  _127 = _125 + _126;
  *_127 = 46;
  _212 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 42, loop depth 1
;;    pred:       38
;;                39
;;                40
  i_213 = i_172 + 1;
;;    succ:       43

;;   basic block 43, loop depth 1
;;    pred:       37
;;                42
  # i_172 = PHI <i_209(37), i_213(42)>
  _128 = serwer_178(D)->skarb.count_treasure_coin;
  if (i_172 < _128)
    goto <bb 38>; [INV]
  else
    goto <bb 44>; [INV]
;;    succ:       38
;;                44

;;   basic block 44, loop depth 0
;;    pred:       43
  i_214 = 0;
  goto <bb 50>; [INV]
;;    succ:       50

;;   basic block 45, loop depth 1
;;    pred:       50
  _129 = serwer_178(D)->mapa;
  _130 = (long unsigned int) y_202;
  _131 = _130 * 8;
  _132 = _129 + _131;
  _133 = *_132;
  _134 = (sizetype) x_203;
  _135 = _133 + _134;
  _136 = *_135;
  if (_136 == 84)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]
;;    succ:       46
;;                49

;;   basic block 46, loop depth 1
;;    pred:       45
  _137 = serwer_178(D)->skarb.large_treasure_coin[i_173][0];
  if (y_202 == _137)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]
;;    succ:       47
;;                49

;;   basic block 47, loop depth 1
;;    pred:       46
  _138 = serwer_178(D)->skarb.large_treasure_coin[i_173][1];
  if (x_203 == _138)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]
;;    succ:       48
;;                49

;;   basic block 48, loop depth 0
;;    pred:       47
  _139 = serwer_178(D)->player2;
  _140 = _139->coins_carried;
  _141 = serwer_178(D)->player2;
  _142 = _140 + 50;
  _141->coins_carried = _142;
  _143 = serwer_178(D)->mapa;
  _144 = (long unsigned int) y_202;
  _145 = _144 * 8;
  _146 = _143 + _145;
  _147 = *_146;
  _148 = (sizetype) x_203;
  _149 = _147 + _148;
  *_149 = 46;
  _217 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 49, loop depth 1
;;    pred:       45
;;                46
;;                47
  i_218 = i_173 + 1;
;;    succ:       50

;;   basic block 50, loop depth 1
;;    pred:       44
;;                49
  # i_173 = PHI <i_214(44), i_218(49)>
  _150 = serwer_178(D)->skarb.count_large_treasure_coin;
  if (i_173 < _150)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]
;;    succ:       45
;;                51

;;   basic block 51, loop depth 0
;;    pred:       50
  i_219 = 0;
  goto <bb 57>; [INV]
;;    succ:       57

;;   basic block 52, loop depth 1
;;    pred:       57
  _151 = serwer_178(D)->skarb.value_all_dropped_coin[i_174];
  if (_151 >= 0)
    goto <bb 53>; [INV]
  else
    goto <bb 56>; [INV]
;;    succ:       53
;;                56

;;   basic block 53, loop depth 1
;;    pred:       52
  _152 = serwer_178(D)->skarb.dropped_coin[i_174][0];
  if (y_202 == _152)
    goto <bb 54>; [INV]
  else
    goto <bb 56>; [INV]
;;    succ:       54
;;                56

;;   basic block 54, loop depth 1
;;    pred:       53
  _153 = serwer_178(D)->skarb.dropped_coin[i_174][1];
  if (x_203 == _153)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]
;;    succ:       55
;;                56

;;   basic block 55, loop depth 0
;;    pred:       54
  _154 = serwer_178(D)->player1;
  _155 = _154->coins_carried;
  _156 = serwer_178(D)->skarb.value_all_dropped_coin[i_174];
  _157 = serwer_178(D)->player2;
  _158 = _155 + _156;
  _157->coins_carried = _158;
  serwer_178(D)->skarb.value_all_dropped_coin[i_174] = -1;
  _159 = serwer_178(D)->mapa;
  _160 = (long unsigned int) y_202;
  _161 = _160 * 8;
  _162 = _159 + _161;
  _163 = *_162;
  _164 = (sizetype) x_203;
  _165 = _163 + _164;
  *_165 = 46;
  _223 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 56, loop depth 1
;;    pred:       52
;;                53
;;                54
  i_224 = i_174 + 1;
;;    succ:       57

;;   basic block 57, loop depth 1
;;    pred:       51
;;                56
  # i_174 = PHI <i_219(51), i_224(56)>
  _166 = serwer_178(D)->skarb.count_drop_coin;
  if (i_174 < _166)
    goto <bb 52>; [INV]
  else
    goto <bb 58>; [INV]
;;    succ:       52
;;                58

;;   basic block 58, loop depth 0
;;    pred:       57
  _225 = 0B;
;;    succ:       59

;;   basic block 59, loop depth 0
;;    pred:       6
;;                13
;;                20
;;                27
;;                34
;;                41
;;                48
;;                55
;;                58
  # _175 = PHI <_184(6), _189(13), _194(20), _200(27), _207(34), _212(41), _217(48), _223(55), _225(58)>
<L72>:
  return _175;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 73 (_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (_81 - 81 )
Partition 82 (_82 - 82 )
Partition 83 (_83 - 83 )
Partition 84 (_84 - 84 )
Partition 85 (_85 - 85 )
Partition 86 (_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (_88 - 88 )
Partition 89 (_89 - 89 )
Partition 90 (_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (_95 - 95 )
Partition 96 (_96 - 96 )
Partition 97 (_97 - 97 )
Partition 98 (_98 - 98 )
Partition 99 (_99 - 99 )
Partition 100 (_100 - 100 )
Partition 101 (_101 - 101 )
Partition 102 (_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (_104 - 104 )
Partition 105 (_105 - 105 )
Partition 106 (_106 - 106 )
Partition 107 (_107 - 107 )
Partition 108 (_108 - 108 )
Partition 109 (_109 - 109 )
Partition 110 (_110 - 110 )
Partition 111 (_111 - 111 )
Partition 112 (_112 - 112 )
Partition 113 (_113 - 113 )
Partition 114 (_114 - 114 )
Partition 115 (_115 - 115 )
Partition 116 (_116 - 116 )
Partition 117 (_117 - 117 )
Partition 118 (_118 - 118 )
Partition 119 (_119 - 119 )
Partition 120 (_120 - 120 )
Partition 121 (_121 - 121 )
Partition 122 (_122 - 122 )
Partition 123 (_123 - 123 )
Partition 124 (_124 - 124 )
Partition 125 (_125 - 125 )
Partition 126 (_126 - 126 )
Partition 127 (_127 - 127 )
Partition 128 (_128 - 128 )
Partition 129 (_129 - 129 )
Partition 130 (_130 - 130 )
Partition 131 (_131 - 131 )
Partition 132 (_132 - 132 )
Partition 133 (_133 - 133 )
Partition 134 (_134 - 134 )
Partition 135 (_135 - 135 )
Partition 136 (_136 - 136 )
Partition 137 (_137 - 137 )
Partition 138 (_138 - 138 )
Partition 139 (_139 - 139 )
Partition 140 (_140 - 140 )
Partition 141 (_141 - 141 )
Partition 142 (_142 - 142 )
Partition 143 (_143 - 143 )
Partition 144 (_144 - 144 )
Partition 145 (_145 - 145 )
Partition 146 (_146 - 146 )
Partition 147 (_147 - 147 )
Partition 148 (_148 - 148 )
Partition 149 (_149 - 149 )
Partition 150 (_150 - 150 )
Partition 151 (_151 - 151 )
Partition 152 (_152 - 152 )
Partition 153 (_153 - 153 )
Partition 154 (_154 - 154 )
Partition 155 (_155 - 155 )
Partition 156 (_156 - 156 )
Partition 157 (_157 - 157 )
Partition 158 (_158 - 158 )
Partition 159 (_159 - 159 )
Partition 160 (_160 - 160 )
Partition 161 (_161 - 161 )
Partition 162 (_162 - 162 )
Partition 163 (_163 - 163 )
Partition 164 (_164 - 164 )
Partition 165 (_165 - 165 )
Partition 166 (_166 - 166 )
Partition 167 (i_167 - 167 )
Partition 168 (i_168 - 168 )
Partition 169 (i_169 - 169 )
Partition 170 (i_170 - 170 )
Partition 171 (i_171 - 171 )
Partition 172 (i_172 - 172 )
Partition 173 (i_173 - 173 )
Partition 174 (i_174 - 174 )
Partition 175 (_175 - 175 )
Partition 178 (serwer_178(D) - 178 )
Partition 179 (y_179 - 179 )
Partition 180 (x_180 - 180 )
Partition 181 (i_181 - 181 )
Partition 184 (_184 - 184 )
Partition 185 (i_185 - 185 )
Partition 186 (i_186 - 186 )
Partition 189 (_189 - 189 )
Partition 190 (i_190 - 190 )
Partition 191 (i_191 - 191 )
Partition 194 (_194 - 194 )
Partition 195 (i_195 - 195 )
Partition 196 (i_196 - 196 )
Partition 200 (_200 - 200 )
Partition 201 (i_201 - 201 )
Partition 202 (y_202 - 202 )
Partition 203 (x_203 - 203 )
Partition 204 (i_204 - 204 )
Partition 207 (_207 - 207 )
Partition 208 (i_208 - 208 )
Partition 209 (i_209 - 209 )
Partition 212 (_212 - 212 )
Partition 213 (i_213 - 213 )
Partition 214 (i_214 - 214 )
Partition 217 (_217 - 217 )
Partition 218 (i_218 - 218 )
Partition 219 (i_219 - 219 )
Partition 223 (_223 - 223 )
Partition 224 (i_224 - 224 )
Partition 225 (_225 - 225 )
Partition 226 (_226(D) - 226 )


Coalescible Partition map 

Partition 0, base 0 (i_167 - 167 181 185 )
Partition 1, base 1 (i_168 - 168 186 190 )
Partition 2, base 2 (i_169 - 169 191 195 )
Partition 3, base 3 (i_170 - 170 196 201 )
Partition 4, base 4 (i_171 - 171 204 208 )
Partition 5, base 5 (i_172 - 172 209 213 )
Partition 6, base 6 (i_173 - 173 214 218 )
Partition 7, base 7 (i_174 - 174 219 224 )
Partition 8, base 8 (_175 - 175 184 189 194 200 207 212 217 223 225 )
Partition 9, base 9 (serwer_178(D) - 178 )
Partition 10, base 10 (y_179 - 179 202 )
Partition 11, base 11 (x_180 - 180 203 )
Partition 39, base 12 (_226(D) - 226 )


Partition map 

Partition 0 (i_167 - 167 )
Partition 1 (i_168 - 168 )
Partition 2 (i_169 - 169 )
Partition 3 (i_170 - 170 )
Partition 4 (i_171 - 171 )
Partition 5 (i_172 - 172 )
Partition 6 (i_173 - 173 )
Partition 7 (i_174 - 174 )
Partition 8 (_175 - 175 )
Partition 9 (serwer_178(D) - 178 )
Partition 10 (y_179 - 179 )
Partition 11 (x_180 - 180 )
Partition 12 (i_181 - 181 )
Partition 13 (_184 - 184 )
Partition 14 (i_185 - 185 )
Partition 15 (i_186 - 186 )
Partition 16 (_189 - 189 )
Partition 17 (i_190 - 190 )
Partition 18 (i_191 - 191 )
Partition 19 (_194 - 194 )
Partition 20 (i_195 - 195 )
Partition 21 (i_196 - 196 )
Partition 22 (_200 - 200 )
Partition 23 (i_201 - 201 )
Partition 24 (y_202 - 202 )
Partition 25 (x_203 - 203 )
Partition 26 (i_204 - 204 )
Partition 27 (_207 - 207 )
Partition 28 (i_208 - 208 )
Partition 29 (i_209 - 209 )
Partition 30 (_212 - 212 )
Partition 31 (i_213 - 213 )
Partition 32 (i_214 - 214 )
Partition 33 (_217 - 217 )
Partition 34 (i_218 - 218 )
Partition 35 (i_219 - 219 )
Partition 36 (_223 - 223 )
Partition 37 (i_224 - 224 )
Partition 38 (_225 - 225 )
Partition 39 (_226(D) - 226 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) i_167 <-> i_181
(2147483646, 0) i_167 <-> i_185
(2147483646, 0) i_168 <-> i_186
(2147483646, 0) i_168 <-> i_190
(2147483646, 0) i_169 <-> i_191
(2147483646, 0) i_169 <-> i_195
(2147483646, 0) i_170 <-> i_196
(2147483646, 0) i_170 <-> i_201
(2147483646, 0) i_171 <-> i_204
(2147483646, 0) i_171 <-> i_208
(2147483646, 0) i_172 <-> i_209
(2147483646, 0) i_172 <-> i_213
(2147483646, 0) i_173 <-> i_214
(2147483646, 0) i_173 <-> i_218
(2147483646, 0) i_174 <-> i_219
(2147483646, 0) i_174 <-> i_224
(2147483646, 0) y_179 <-> y_202
(2147483646, 0) x_180 <-> x_203
(10000, 0) _175 <-> _184
(10000, 0) _175 <-> _189
(10000, 0) _175 <-> _194
(10000, 0) _175 <-> _200
(10000, 0) _175 <-> _207
(10000, 0) _175 <-> _212
(10000, 0) _175 <-> _217
(10000, 0) _175 <-> _223
(10000, 0) _175 <-> _225

Partition map 

Partition 0 (i_167 - 167 )
Partition 1 (i_168 - 168 )
Partition 2 (i_169 - 169 )
Partition 3 (i_170 - 170 )
Partition 4 (i_171 - 171 )
Partition 5 (i_172 - 172 )
Partition 6 (i_173 - 173 )
Partition 7 (i_174 - 174 )
Partition 8 (_175 - 175 )
Partition 9 (serwer_178(D) - 178 )
Partition 10 (y_179 - 179 )
Partition 11 (x_180 - 180 )
Partition 12 (i_181 - 181 )
Partition 13 (_184 - 184 )
Partition 14 (i_185 - 185 )
Partition 15 (i_186 - 186 )
Partition 16 (_189 - 189 )
Partition 17 (i_190 - 190 )
Partition 18 (i_191 - 191 )
Partition 19 (_194 - 194 )
Partition 20 (i_195 - 195 )
Partition 21 (i_196 - 196 )
Partition 22 (_200 - 200 )
Partition 23 (i_201 - 201 )
Partition 24 (y_202 - 202 )
Partition 25 (x_203 - 203 )
Partition 26 (i_204 - 204 )
Partition 27 (_207 - 207 )
Partition 28 (i_208 - 208 )
Partition 29 (i_209 - 209 )
Partition 30 (_212 - 212 )
Partition 31 (i_213 - 213 )
Partition 32 (i_214 - 214 )
Partition 33 (_217 - 217 )
Partition 34 (i_218 - 218 )
Partition 35 (i_219 - 219 )
Partition 36 (_223 - 223 )
Partition 37 (i_224 - 224 )
Partition 38 (_225 - 225 )
Partition 39 (_226(D) - 226 )

Coalesce list: (167)i_167 & (181)i_181 [map: 0, 12] : Success -> 0
Coalesce list: (167)i_167 & (185)i_185 [map: 0, 14] : Success -> 0
Coalesce list: (168)i_168 & (186)i_186 [map: 1, 15] : Success -> 1
Coalesce list: (168)i_168 & (190)i_190 [map: 1, 17] : Success -> 1
Coalesce list: (169)i_169 & (191)i_191 [map: 2, 18] : Success -> 2
Coalesce list: (169)i_169 & (195)i_195 [map: 2, 20] : Success -> 2
Coalesce list: (170)i_170 & (196)i_196 [map: 3, 21] : Success -> 3
Coalesce list: (170)i_170 & (201)i_201 [map: 3, 23] : Success -> 3
Coalesce list: (171)i_171 & (204)i_204 [map: 4, 26] : Success -> 4
Coalesce list: (171)i_171 & (208)i_208 [map: 4, 28] : Success -> 4
Coalesce list: (172)i_172 & (209)i_209 [map: 5, 29] : Success -> 5
Coalesce list: (172)i_172 & (213)i_213 [map: 5, 31] : Success -> 5
Coalesce list: (173)i_173 & (214)i_214 [map: 6, 32] : Success -> 6
Coalesce list: (173)i_173 & (218)i_218 [map: 6, 34] : Success -> 6
Coalesce list: (174)i_174 & (219)i_219 [map: 7, 35] : Success -> 7
Coalesce list: (174)i_174 & (224)i_224 [map: 7, 37] : Success -> 7
Coalesce list: (179)y_179 & (202)y_202 [map: 10, 24] : Success -> 10
Coalesce list: (180)x_180 & (203)x_203 [map: 11, 25] : Success -> 11
Coalesce list: (175)_175 & (184)_184 [map: 8, 13] : Success -> 8
Coalesce list: (175)_175 & (189)_189 [map: 8, 16] : Success -> 8
Coalesce list: (175)_175 & (194)_194 [map: 8, 19] : Success -> 8
Coalesce list: (175)_175 & (200)_200 [map: 8, 22] : Success -> 8
Coalesce list: (175)_175 & (207)_207 [map: 8, 27] : Success -> 8
Coalesce list: (175)_175 & (212)_212 [map: 8, 30] : Success -> 8
Coalesce list: (175)_175 & (217)_217 [map: 8, 33] : Success -> 8
Coalesce list: (175)_175 & (223)_223 [map: 8, 36] : Success -> 8
Coalesce list: (175)_175 & (225)_225 [map: 8, 38] : Success -> 8
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (_73 - 73 )
Partition 73 (_74 - 74 )
Partition 74 (_75 - 75 )
Partition 75 (_76 - 76 )
Partition 76 (_77 - 77 )
Partition 77 (_78 - 78 )
Partition 78 (_79 - 79 )
Partition 79 (_80 - 80 )
Partition 80 (_81 - 81 )
Partition 81 (_82 - 82 )
Partition 82 (_83 - 83 )
Partition 83 (_84 - 84 )
Partition 84 (_85 - 85 )
Partition 85 (_86 - 86 )
Partition 86 (_87 - 87 )
Partition 87 (_88 - 88 )
Partition 88 (_89 - 89 )
Partition 89 (_90 - 90 )
Partition 90 (_91 - 91 )
Partition 91 (_92 - 92 )
Partition 92 (_93 - 93 )
Partition 93 (_94 - 94 )
Partition 94 (_95 - 95 )
Partition 95 (_96 - 96 )
Partition 96 (_97 - 97 )
Partition 97 (_98 - 98 )
Partition 98 (_99 - 99 )
Partition 99 (_100 - 100 )
Partition 100 (_101 - 101 )
Partition 101 (_102 - 102 )
Partition 102 (_103 - 103 )
Partition 103 (_104 - 104 )
Partition 104 (_105 - 105 )
Partition 105 (_106 - 106 )
Partition 106 (_107 - 107 )
Partition 107 (_108 - 108 )
Partition 108 (_109 - 109 )
Partition 109 (_110 - 110 )
Partition 110 (_111 - 111 )
Partition 111 (_112 - 112 )
Partition 112 (_113 - 113 )
Partition 113 (_114 - 114 )
Partition 114 (_115 - 115 )
Partition 115 (_116 - 116 )
Partition 116 (_117 - 117 )
Partition 117 (_118 - 118 )
Partition 118 (_119 - 119 )
Partition 119 (_120 - 120 )
Partition 120 (_121 - 121 )
Partition 121 (_122 - 122 )
Partition 122 (_123 - 123 )
Partition 123 (_124 - 124 )
Partition 124 (_125 - 125 )
Partition 125 (_126 - 126 )
Partition 126 (_127 - 127 )
Partition 127 (_128 - 128 )
Partition 128 (_129 - 129 )
Partition 129 (_130 - 130 )
Partition 130 (_131 - 131 )
Partition 131 (_132 - 132 )
Partition 132 (_133 - 133 )
Partition 133 (_134 - 134 )
Partition 134 (_135 - 135 )
Partition 135 (_136 - 136 )
Partition 136 (_137 - 137 )
Partition 137 (_138 - 138 )
Partition 138 (_139 - 139 )
Partition 139 (_140 - 140 )
Partition 140 (_141 - 141 )
Partition 141 (_142 - 142 )
Partition 142 (_143 - 143 )
Partition 143 (_144 - 144 )
Partition 144 (_145 - 145 )
Partition 145 (_146 - 146 )
Partition 146 (_147 - 147 )
Partition 147 (_148 - 148 )
Partition 148 (_149 - 149 )
Partition 149 (_150 - 150 )
Partition 150 (_151 - 151 )
Partition 151 (_152 - 152 )
Partition 152 (_153 - 153 )
Partition 153 (_154 - 154 )
Partition 154 (_155 - 155 )
Partition 155 (_156 - 156 )
Partition 156 (_157 - 157 )
Partition 157 (_158 - 158 )
Partition 158 (_159 - 159 )
Partition 159 (_160 - 160 )
Partition 160 (_161 - 161 )
Partition 161 (_162 - 162 )
Partition 162 (_163 - 163 )
Partition 163 (_164 - 164 )
Partition 164 (_165 - 165 )
Partition 165 (_166 - 166 )
Partition 166 (i_167 - 167 181 185 )
Partition 167 (i_168 - 168 186 190 )
Partition 168 (i_169 - 169 191 195 )
Partition 169 (i_170 - 170 196 201 )
Partition 170 (i_171 - 171 204 208 )
Partition 171 (i_172 - 172 209 213 )
Partition 172 (i_173 - 173 214 218 )
Partition 173 (i_174 - 174 219 224 )
Partition 174 (_175 - 175 184 189 194 200 207 212 217 223 225 )
Partition 175 (serwer_178(D) - 178 )
Partition 176 (y_179 - 179 202 )
Partition 177 (x_180 - 180 203 )
Partition 178 (_226(D) - 226 )

collect_skarb (struct serwer_info * serwer)
{
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int i;
  int x;
  int y;
  void * D.6817;
  struct player_info * _1;
  struct player_info * _2;
  char * * _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  sizetype _8;
  char * _9;
  char _10;
  int _11;
  int _12;
  struct player_info * _13;
  int _14;
  int _15;
  char * * _16;
  long unsigned int _17;
  long unsigned int _18;
  char * * _19;
  char * _20;
  sizetype _21;
  char * _22;
  int _23;
  char * * _24;
  long unsigned int _25;
  long unsigned int _26;
  char * * _27;
  char * _28;
  sizetype _29;
  char * _30;
  char _31;
  int _32;
  int _33;
  struct player_info * _34;
  int _35;
  struct player_info * _36;
  int _37;
  char * * _38;
  long unsigned int _39;
  long unsigned int _40;
  char * * _41;
  char * _42;
  sizetype _43;
  char * _44;
  int _45;
  char * * _46;
  long unsigned int _47;
  long unsigned int _48;
  char * * _49;
  char * _50;
  sizetype _51;
  char * _52;
  char _53;
  int _54;
  int _55;
  struct player_info * _56;
  int _57;
  struct player_info * _58;
  int _59;
  char * * _60;
  long unsigned int _61;
  long unsigned int _62;
  char * * _63;
  char * _64;
  sizetype _65;
  char * _66;
  int _67;
  int _68;
  int _69;
  int _70;
  struct player_info * _71;
  int _72;
  int _73;
  struct player_info * _74;
  int _75;
  char * * _76;
  long unsigned int _77;
  long unsigned int _78;
  char * * _79;
  char * _80;
  sizetype _81;
  char * _82;
  int _83;
  struct player_info * _84;
  struct player_info * _85;
  char * * _86;
  long unsigned int _87;
  long unsigned int _88;
  char * * _89;
  char * _90;
  sizetype _91;
  char * _92;
  char _93;
  int _94;
  int _95;
  struct player_info * _96;
  int _97;
  int _98;
  char * * _99;
  long unsigned int _100;
  long unsigned int _101;
  char * * _102;
  char * _103;
  sizetype _104;
  char * _105;
  int _106;
  char * * _107;
  long unsigned int _108;
  long unsigned int _109;
  char * * _110;
  char * _111;
  sizetype _112;
  char * _113;
  char _114;
  int _115;
  int _116;
  struct player_info * _117;
  int _118;
  struct player_info * _119;
  int _120;
  char * * _121;
  long unsigned int _122;
  long unsigned int _123;
  char * * _124;
  char * _125;
  sizetype _126;
  char * _127;
  int _128;
  char * * _129;
  long unsigned int _130;
  long unsigned int _131;
  char * * _132;
  char * _133;
  sizetype _134;
  char * _135;
  char _136;
  int _137;
  int _138;
  struct player_info * _139;
  int _140;
  struct player_info * _141;
  int _142;
  char * * _143;
  long unsigned int _144;
  long unsigned int _145;
  char * * _146;
  char * _147;
  sizetype _148;
  char * _149;
  int _150;
  int _151;
  int _152;
  int _153;
  struct player_info * _154;
  int _155;
  int _156;
  struct player_info * _157;
  int _158;
  char * * _159;
  long unsigned int _160;
  long unsigned int _161;
  char * * _162;
  char * _163;
  sizetype _164;
  char * _165;
  int _166;
  void * _175;
  void * _184;
  void * _189;
  void * _194;
  void * _200;
  void * _207;
  void * _212;
  void * _217;
  void * _223;
  void * _225;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_178(D)->player1;
  y_179 = _1->y_current;
  _2 = serwer_178(D)->player1;
  x_180 = _2->x_current;
  i_181 = 0;
  goto <bb 8>; [INV]
;;    succ:       8

;;   basic block 3, loop depth 1
;;    pred:       8
  _3 = serwer_178(D)->mapa;
  _4 = (long unsigned int) y_179;
  _5 = _4 * 8;
  _6 = _3 + _5;
  _7 = *_6;
  _8 = (sizetype) x_180;
  _9 = _7 + _8;
  _10 = *_9;
  if (_10 == 99)
    goto <bb 4>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       4
;;                7

;;   basic block 4, loop depth 1
;;    pred:       3
  _11 = serwer_178(D)->skarb.one_coin[i_167][0];
  if (y_179 == _11)
    goto <bb 5>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       5
;;                7

;;   basic block 5, loop depth 1
;;    pred:       4
  _12 = serwer_178(D)->skarb.one_coin[i_167][1];
  if (x_180 == _12)
    goto <bb 6>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       6
;;                7

;;   basic block 6, loop depth 0
;;    pred:       5
  _13 = serwer_178(D)->player1;
  _14 = _13->coins_carried;
  _15 = _14 + 1;
  _13->coins_carried = _15;
  _16 = serwer_178(D)->mapa;
  _17 = (long unsigned int) y_179;
  _18 = _17 * 8;
  _19 = _16 + _18;
  _20 = *_19;
  _21 = (sizetype) x_180;
  _22 = _20 + _21;
  *_22 = 46;
  _184 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 7, loop depth 1
;;    pred:       3
;;                4
;;                5
  i_185 = i_167 + 1;
;;    succ:       8

;;   basic block 8, loop depth 1
;;    pred:       2
;;                7
  # i_167 = PHI <i_181(2), i_185(7)>
  _23 = serwer_178(D)->skarb.count_one_coin;
  if (i_167 < _23)
    goto <bb 3>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       3
;;                9

;;   basic block 9, loop depth 0
;;    pred:       8
  i_186 = 0;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 10, loop depth 1
;;    pred:       15
  _24 = serwer_178(D)->mapa;
  _25 = (long unsigned int) y_179;
  _26 = _25 * 8;
  _27 = _24 + _26;
  _28 = *_27;
  _29 = (sizetype) x_180;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 == 116)
    goto <bb 11>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       11
;;                14

;;   basic block 11, loop depth 1
;;    pred:       10
  _32 = serwer_178(D)->skarb.treasure_coin[i_168][0];
  if (y_179 == _32)
    goto <bb 12>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       12
;;                14

;;   basic block 12, loop depth 1
;;    pred:       11
  _33 = serwer_178(D)->skarb.treasure_coin[i_168][1];
  if (x_180 == _33)
    goto <bb 13>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       13
;;                14

;;   basic block 13, loop depth 0
;;    pred:       12
  _34 = serwer_178(D)->player1;
  _35 = _34->coins_carried;
  _36 = serwer_178(D)->player1;
  _37 = _35 + 10;
  _36->coins_carried = _37;
  _38 = serwer_178(D)->mapa;
  _39 = (long unsigned int) y_179;
  _40 = _39 * 8;
  _41 = _38 + _40;
  _42 = *_41;
  _43 = (sizetype) x_180;
  _44 = _42 + _43;
  *_44 = 46;
  _189 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 14, loop depth 1
;;    pred:       10
;;                11
;;                12
  i_190 = i_168 + 1;
;;    succ:       15

;;   basic block 15, loop depth 1
;;    pred:       9
;;                14
  # i_168 = PHI <i_186(9), i_190(14)>
  _45 = serwer_178(D)->skarb.count_treasure_coin;
  if (i_168 < _45)
    goto <bb 10>; [INV]
  else
    goto <bb 16>; [INV]
;;    succ:       10
;;                16

;;   basic block 16, loop depth 0
;;    pred:       15
  i_191 = 0;
  goto <bb 22>; [INV]
;;    succ:       22

;;   basic block 17, loop depth 1
;;    pred:       22
  _46 = serwer_178(D)->mapa;
  _47 = (long unsigned int) y_179;
  _48 = _47 * 8;
  _49 = _46 + _48;
  _50 = *_49;
  _51 = (sizetype) x_180;
  _52 = _50 + _51;
  _53 = *_52;
  if (_53 == 84)
    goto <bb 18>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       18
;;                21

;;   basic block 18, loop depth 1
;;    pred:       17
  _54 = serwer_178(D)->skarb.large_treasure_coin[i_169][0];
  if (y_179 == _54)
    goto <bb 19>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       19
;;                21

;;   basic block 19, loop depth 1
;;    pred:       18
  _55 = serwer_178(D)->skarb.large_treasure_coin[i_169][1];
  if (x_180 == _55)
    goto <bb 20>; [INV]
  else
    goto <bb 21>; [INV]
;;    succ:       20
;;                21

;;   basic block 20, loop depth 0
;;    pred:       19
  _56 = serwer_178(D)->player1;
  _57 = _56->coins_carried;
  _58 = serwer_178(D)->player1;
  _59 = _57 + 50;
  _58->coins_carried = _59;
  _60 = serwer_178(D)->mapa;
  _61 = (long unsigned int) y_179;
  _62 = _61 * 8;
  _63 = _60 + _62;
  _64 = *_63;
  _65 = (sizetype) x_180;
  _66 = _64 + _65;
  *_66 = 46;
  _194 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 21, loop depth 1
;;    pred:       17
;;                18
;;                19
  i_195 = i_169 + 1;
;;    succ:       22

;;   basic block 22, loop depth 1
;;    pred:       16
;;                21
  # i_169 = PHI <i_191(16), i_195(21)>
  _67 = serwer_178(D)->skarb.count_large_treasure_coin;
  if (i_169 < _67)
    goto <bb 17>; [INV]
  else
    goto <bb 23>; [INV]
;;    succ:       17
;;                23

;;   basic block 23, loop depth 0
;;    pred:       22
  i_196 = 0;
  goto <bb 29>; [INV]
;;    succ:       29

;;   basic block 24, loop depth 1
;;    pred:       29
  _68 = serwer_178(D)->skarb.value_all_dropped_coin[i_170];
  if (_68 >= 0)
    goto <bb 25>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       25
;;                28

;;   basic block 25, loop depth 1
;;    pred:       24
  _69 = serwer_178(D)->skarb.dropped_coin[i_170][0];
  if (y_179 == _69)
    goto <bb 26>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       26
;;                28

;;   basic block 26, loop depth 1
;;    pred:       25
  _70 = serwer_178(D)->skarb.dropped_coin[i_170][1];
  if (x_180 == _70)
    goto <bb 27>; [INV]
  else
    goto <bb 28>; [INV]
;;    succ:       27
;;                28

;;   basic block 27, loop depth 0
;;    pred:       26
  _71 = serwer_178(D)->player1;
  _72 = _71->coins_carried;
  _73 = serwer_178(D)->skarb.value_all_dropped_coin[i_170];
  _74 = serwer_178(D)->player1;
  _75 = _72 + _73;
  _74->coins_carried = _75;
  serwer_178(D)->skarb.value_all_dropped_coin[i_170] = -1;
  _76 = serwer_178(D)->mapa;
  _77 = (long unsigned int) y_179;
  _78 = _77 * 8;
  _79 = _76 + _78;
  _80 = *_79;
  _81 = (sizetype) x_180;
  _82 = _80 + _81;
  *_82 = 46;
  _200 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 28, loop depth 1
;;    pred:       24
;;                25
;;                26
  i_201 = i_170 + 1;
;;    succ:       29

;;   basic block 29, loop depth 1
;;    pred:       23
;;                28
  # i_170 = PHI <i_196(23), i_201(28)>
  _83 = serwer_178(D)->skarb.count_drop_coin;
  if (i_170 < _83)
    goto <bb 24>; [INV]
  else
    goto <bb 30>; [INV]
;;    succ:       24
;;                30

;;   basic block 30, loop depth 0
;;    pred:       29
  _84 = serwer_178(D)->player2;
  y_202 = _84->y_current;
  _85 = serwer_178(D)->player2;
  x_203 = _85->x_current;
  i_204 = 0;
  goto <bb 36>; [INV]
;;    succ:       36

;;   basic block 31, loop depth 1
;;    pred:       36
  _86 = serwer_178(D)->mapa;
  _87 = (long unsigned int) y_202;
  _88 = _87 * 8;
  _89 = _86 + _88;
  _90 = *_89;
  _91 = (sizetype) x_203;
  _92 = _90 + _91;
  _93 = *_92;
  if (_93 == 99)
    goto <bb 32>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       32
;;                35

;;   basic block 32, loop depth 1
;;    pred:       31
  _94 = serwer_178(D)->skarb.one_coin[i_171][0];
  if (y_202 == _94)
    goto <bb 33>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       33
;;                35

;;   basic block 33, loop depth 1
;;    pred:       32
  _95 = serwer_178(D)->skarb.one_coin[i_171][1];
  if (x_203 == _95)
    goto <bb 34>; [INV]
  else
    goto <bb 35>; [INV]
;;    succ:       34
;;                35

;;   basic block 34, loop depth 0
;;    pred:       33
  _96 = serwer_178(D)->player2;
  _97 = _96->coins_carried;
  _98 = _97 + 1;
  _96->coins_carried = _98;
  _99 = serwer_178(D)->mapa;
  _100 = (long unsigned int) y_202;
  _101 = _100 * 8;
  _102 = _99 + _101;
  _103 = *_102;
  _104 = (sizetype) x_203;
  _105 = _103 + _104;
  *_105 = 46;
  _207 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 35, loop depth 1
;;    pred:       31
;;                32
;;                33
  i_208 = i_171 + 1;
;;    succ:       36

;;   basic block 36, loop depth 1
;;    pred:       30
;;                35
  # i_171 = PHI <i_204(30), i_208(35)>
  _106 = serwer_178(D)->skarb.count_one_coin;
  if (i_171 < _106)
    goto <bb 31>; [INV]
  else
    goto <bb 37>; [INV]
;;    succ:       31
;;                37

;;   basic block 37, loop depth 0
;;    pred:       36
  i_209 = 0;
  goto <bb 43>; [INV]
;;    succ:       43

;;   basic block 38, loop depth 1
;;    pred:       43
  _107 = serwer_178(D)->mapa;
  _108 = (long unsigned int) y_202;
  _109 = _108 * 8;
  _110 = _107 + _109;
  _111 = *_110;
  _112 = (sizetype) x_203;
  _113 = _111 + _112;
  _114 = *_113;
  if (_114 == 116)
    goto <bb 39>; [INV]
  else
    goto <bb 42>; [INV]
;;    succ:       39
;;                42

;;   basic block 39, loop depth 1
;;    pred:       38
  _115 = serwer_178(D)->skarb.treasure_coin[i_172][0];
  if (y_202 == _115)
    goto <bb 40>; [INV]
  else
    goto <bb 42>; [INV]
;;    succ:       40
;;                42

;;   basic block 40, loop depth 1
;;    pred:       39
  _116 = serwer_178(D)->skarb.treasure_coin[i_172][1];
  if (x_203 == _116)
    goto <bb 41>; [INV]
  else
    goto <bb 42>; [INV]
;;    succ:       41
;;                42

;;   basic block 41, loop depth 0
;;    pred:       40
  _117 = serwer_178(D)->player1;
  _118 = _117->coins_carried;
  _119 = serwer_178(D)->player2;
  _120 = _118 + 10;
  _119->coins_carried = _120;
  _121 = serwer_178(D)->mapa;
  _122 = (long unsigned int) y_202;
  _123 = _122 * 8;
  _124 = _121 + _123;
  _125 = *_124;
  _126 = (sizetype) x_203;
  _127 = _125 + _126;
  *_127 = 46;
  _212 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 42, loop depth 1
;;    pred:       38
;;                39
;;                40
  i_213 = i_172 + 1;
;;    succ:       43

;;   basic block 43, loop depth 1
;;    pred:       37
;;                42
  # i_172 = PHI <i_209(37), i_213(42)>
  _128 = serwer_178(D)->skarb.count_treasure_coin;
  if (i_172 < _128)
    goto <bb 38>; [INV]
  else
    goto <bb 44>; [INV]
;;    succ:       38
;;                44

;;   basic block 44, loop depth 0
;;    pred:       43
  i_214 = 0;
  goto <bb 50>; [INV]
;;    succ:       50

;;   basic block 45, loop depth 1
;;    pred:       50
  _129 = serwer_178(D)->mapa;
  _130 = (long unsigned int) y_202;
  _131 = _130 * 8;
  _132 = _129 + _131;
  _133 = *_132;
  _134 = (sizetype) x_203;
  _135 = _133 + _134;
  _136 = *_135;
  if (_136 == 84)
    goto <bb 46>; [INV]
  else
    goto <bb 49>; [INV]
;;    succ:       46
;;                49

;;   basic block 46, loop depth 1
;;    pred:       45
  _137 = serwer_178(D)->skarb.large_treasure_coin[i_173][0];
  if (y_202 == _137)
    goto <bb 47>; [INV]
  else
    goto <bb 49>; [INV]
;;    succ:       47
;;                49

;;   basic block 47, loop depth 1
;;    pred:       46
  _138 = serwer_178(D)->skarb.large_treasure_coin[i_173][1];
  if (x_203 == _138)
    goto <bb 48>; [INV]
  else
    goto <bb 49>; [INV]
;;    succ:       48
;;                49

;;   basic block 48, loop depth 0
;;    pred:       47
  _139 = serwer_178(D)->player2;
  _140 = _139->coins_carried;
  _141 = serwer_178(D)->player2;
  _142 = _140 + 50;
  _141->coins_carried = _142;
  _143 = serwer_178(D)->mapa;
  _144 = (long unsigned int) y_202;
  _145 = _144 * 8;
  _146 = _143 + _145;
  _147 = *_146;
  _148 = (sizetype) x_203;
  _149 = _147 + _148;
  *_149 = 46;
  _217 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 49, loop depth 1
;;    pred:       45
;;                46
;;                47
  i_218 = i_173 + 1;
;;    succ:       50

;;   basic block 50, loop depth 1
;;    pred:       44
;;                49
  # i_173 = PHI <i_214(44), i_218(49)>
  _150 = serwer_178(D)->skarb.count_large_treasure_coin;
  if (i_173 < _150)
    goto <bb 45>; [INV]
  else
    goto <bb 51>; [INV]
;;    succ:       45
;;                51

;;   basic block 51, loop depth 0
;;    pred:       50
  i_219 = 0;
  goto <bb 57>; [INV]
;;    succ:       57

;;   basic block 52, loop depth 1
;;    pred:       57
  _151 = serwer_178(D)->skarb.value_all_dropped_coin[i_174];
  if (_151 >= 0)
    goto <bb 53>; [INV]
  else
    goto <bb 56>; [INV]
;;    succ:       53
;;                56

;;   basic block 53, loop depth 1
;;    pred:       52
  _152 = serwer_178(D)->skarb.dropped_coin[i_174][0];
  if (y_202 == _152)
    goto <bb 54>; [INV]
  else
    goto <bb 56>; [INV]
;;    succ:       54
;;                56

;;   basic block 54, loop depth 1
;;    pred:       53
  _153 = serwer_178(D)->skarb.dropped_coin[i_174][1];
  if (x_203 == _153)
    goto <bb 55>; [INV]
  else
    goto <bb 56>; [INV]
;;    succ:       55
;;                56

;;   basic block 55, loop depth 0
;;    pred:       54
  _154 = serwer_178(D)->player1;
  _155 = _154->coins_carried;
  _156 = serwer_178(D)->skarb.value_all_dropped_coin[i_174];
  _157 = serwer_178(D)->player2;
  _158 = _155 + _156;
  _157->coins_carried = _158;
  serwer_178(D)->skarb.value_all_dropped_coin[i_174] = -1;
  _159 = serwer_178(D)->mapa;
  _160 = (long unsigned int) y_202;
  _161 = _160 * 8;
  _162 = _159 + _161;
  _163 = *_162;
  _164 = (sizetype) x_203;
  _165 = _163 + _164;
  *_165 = 46;
  _223 = 0B;
  // predicted unlikely by early return (on trees) predictor.
  goto <bb 59>; [INV]
;;    succ:       59

;;   basic block 56, loop depth 1
;;    pred:       52
;;                53
;;                54
  i_224 = i_174 + 1;
;;    succ:       57

;;   basic block 57, loop depth 1
;;    pred:       51
;;                56
  # i_174 = PHI <i_219(51), i_224(56)>
  _166 = serwer_178(D)->skarb.count_drop_coin;
  if (i_174 < _166)
    goto <bb 52>; [INV]
  else
    goto <bb 58>; [INV]
;;    succ:       52
;;                58

;;   basic block 58, loop depth 0
;;    pred:       57
  _225 = 0B;
;;    succ:       59

;;   basic block 59, loop depth 0
;;    pred:       6
;;                13
;;                20
;;                27
;;                34
;;                41
;;                48
;;                55
;;                58
  # _175 = PHI <_184(6), _189(13), _194(20), _200(27), _207(34), _212(41), _217(48), _223(55), _225(58)>
<L72>:
  return _175;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = serwer_178(D)->player1;

(insn 6 5 7 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1164 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 255)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1164 -1
     (nil))

;; y_179 = _1->y_current;

(insn 8 7 9 (set (reg:SI 256)
        (mem:SI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 16 [0x10])) [3 _1->y_current+0 S4 A64])) "function.c":1164 -1
     (nil))

(insn 9 8 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
        (reg:SI 256)) "function.c":1164 -1
     (nil))

;; _2 = serwer_178(D)->player1;

(insn 10 9 11 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1165 -1
     (nil))

(insn 11 10 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 257)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1165 -1
     (nil))

;; x_180 = _2->x_current;

(insn 12 11 13 (set (reg:SI 258)
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":1165 -1
     (nil))

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
        (reg:SI 258)) "function.c":1165 -1
     (nil))

;; i_181 = 0;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1167 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _3 = serwer_178(D)->mapa;

(insn 18 17 19 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1169 -1
     (nil))

(insn 19 18 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 259)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1169 -1
     (nil))

;; _4 = (long unsigned int) y_179;

(insn 20 19 21 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1169 -1
     (nil))

(insn 21 20 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 260))) "function.c":1169 -1
     (nil))

;; _5 = _4 * 8;

(insn 22 21 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))

;; _6 = _3 + _5;

(insn 23 22 0 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 89 [ _3 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))

;; _7 = *_6;

(insn 24 23 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":1169 -1
     (nil))

;; _8 = (sizetype) x_180;

(insn 25 24 26 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1169 -1
     (nil))

(insn 26 25 0 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 261))) "function.c":1169 -1
     (nil))

;; _9 = _7 + _8;

(insn 27 26 0 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))

;; _10 = *_9;

(insn 28 27 0 (set (reg:QI 96 [ _10 ])
        (mem:QI (reg/f:DI 95 [ _9 ]) [0 *_9+0 S1 A8])) "function.c":1169 -1
     (nil))

;; if (_10 == 99)

(insn 29 28 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ _10 ])
            (const_int 99 [0x63]))) "function.c":1169 -1
     (nil))

(jump_insn 30 29 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1169 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _11 = serwer_178(D)->skarb.one_coin[i_167][0];

(insn 32 31 33 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1169 -1
     (nil))

(insn 33 32 34 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1169 -1
     (nil))

(insn 34 33 35 (set (reg:DI 263)
        (sign_extend:DI (reg:SI 264))) "function.c":1169 -1
     (nil))

(insn 35 34 36 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg:DI 263)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))

(insn 36 35 0 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 265)
                    (const_int 8 [0x8]))
                (reg/f:DI 262)) [3 serwer_178(D)->skarb.one_coin S4 A64])) "function.c":1169 -1
     (nil))

;; if (y_179 == _11)

(insn 37 36 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 97 [ _11 ]))) "function.c":1169 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1169 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _12 = serwer_178(D)->skarb.one_coin[i_167][1];

(insn 40 39 41 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1169 -1
     (nil))

(insn 41 40 42 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1169 -1
     (nil))

(insn 42 41 43 (set (reg:DI 267)
        (sign_extend:DI (reg:SI 268))) "function.c":1169 -1
     (nil))

(insn 43 42 0 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 267)
                        (const_int 8 [0x8]))
                    (reg/f:DI 266))
                (const_int 52 [0x34])) [3 serwer_178(D)->skarb.one_coin S4 A32])) "function.c":1169 -1
     (nil))

;; if (x_180 == _12)

(insn 44 43 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 98 [ _12 ]))) "function.c":1169 -1
     (nil))

(jump_insn 45 44 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1169 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _13 = serwer_178(D)->player1;

(insn 47 46 48 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1171 -1
     (nil))

(insn 48 47 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 269)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1171 -1
     (nil))

;; _14 = _13->coins_carried;

(insn 49 48 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 32 [0x20])) [3 _13->coins_carried+0 S4 A64])) "function.c":1171 -1
     (nil))

;; _15 = _14 + 1;

(insn 50 49 0 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1171 -1
     (nil))

;; _13->coins_carried = _15;

(insn 51 50 0 (set (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 32 [0x20])) [3 _13->coins_carried+0 S4 A64])
        (reg:SI 101 [ _15 ])) "function.c":1171 -1
     (nil))

;; _16 = serwer_178(D)->mapa;

(insn 52 51 53 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1172 -1
     (nil))

(insn 53 52 0 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 270)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1172 -1
     (nil))

;; _17 = (long unsigned int) y_179;

(insn 54 53 55 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1172 -1
     (nil))

(insn 55 54 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 271))) "function.c":1172 -1
     (nil))

;; _18 = _17 * 8;

(insn 56 55 0 (parallel [
            (set (reg:DI 104 [ _18 ])
                (ashift:DI (reg:DI 103 [ _17 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1172 -1
     (nil))

;; _19 = _16 + _18;

(insn 57 56 0 (parallel [
            (set (reg/f:DI 105 [ _19 ])
                (plus:DI (reg/f:DI 102 [ _16 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1172 -1
     (nil))

;; _20 = *_19;

(insn 58 57 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (reg/f:DI 105 [ _19 ]) [10 *_19+0 S8 A64])) "function.c":1172 -1
     (nil))

;; _21 = (sizetype) x_180;

(insn 59 58 60 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1172 -1
     (nil))

(insn 60 59 0 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 272))) "function.c":1172 -1
     (nil))

;; _22 = _20 + _21;

(insn 61 60 0 (parallel [
            (set (reg/f:DI 108 [ _22 ])
                (plus:DI (reg/f:DI 106 [ _20 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1172 -1
     (nil))

;; *_22 = 46;

(insn 62 61 0 (set (mem:QI (reg/f:DI 108 [ _22 ]) [0 *_22+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1172 -1
     (nil))

;; _184 = 0B;

(insn 63 62 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1173 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 7

;; 

(code_label 66 65 67 200 (nil) [0 uses])

(note 67 66 0 NOTE_INSN_BASIC_BLOCK)

;; i_185 = i_167 + 1;

(insn 68 67 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1167 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 69 68 70 199 (nil) [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)

;; _23 = serwer_178(D)->skarb.count_one_coin;

(insn 71 70 72 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1167 -1
     (nil))

(insn 72 71 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 273)
                (const_int 8048 [0x1f70])) [3 serwer_178(D)->skarb.count_one_coin+0 S4 A64])) "function.c":1167 -1
     (nil))

;; if (i_167 < _23)

(insn 74 72 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (reg:SI 109 [ _23 ]))) "function.c":1167 -1
     (nil))

(jump_insn 75 74 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "function.c":1167 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; i_186 = 0;

(insn 77 76 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1177 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; _24 = serwer_178(D)->mapa;

(insn 81 80 82 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1179 -1
     (nil))

(insn 82 81 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 274)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1179 -1
     (nil))

;; _25 = (long unsigned int) y_179;

(insn 83 82 84 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1179 -1
     (nil))

(insn 84 83 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 275))) "function.c":1179 -1
     (nil))

;; _26 = _25 * 8;

(insn 85 84 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))

;; _27 = _24 + _26;

(insn 86 85 0 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 110 [ _24 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))

;; _28 = *_27;

(insn 87 86 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":1179 -1
     (nil))

;; _29 = (sizetype) x_180;

(insn 88 87 89 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1179 -1
     (nil))

(insn 89 88 0 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 276))) "function.c":1179 -1
     (nil))

;; _30 = _28 + _29;

(insn 90 89 0 (parallel [
            (set (reg/f:DI 116 [ _30 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))

;; _31 = *_30;

(insn 91 90 0 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 116 [ _30 ]) [0 *_30+0 S1 A8])) "function.c":1179 -1
     (nil))

;; if (_31 == 116)

(insn 92 91 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 116 [0x74]))) "function.c":1179 -1
     (nil))

(jump_insn 93 92 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1179 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _32 = serwer_178(D)->skarb.treasure_coin[i_168][0];

(insn 95 94 96 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1179 -1
     (nil))

(insn 96 95 97 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])) "function.c":1179 -1
     (nil))

(insn 97 96 98 (set (reg:DI 278)
        (sign_extend:DI (reg:SI 279))) "function.c":1179 -1
     (nil))

(insn 98 97 99 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg:DI 278)
                    (const_int 1006 [0x3ee])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))

(insn 99 98 0 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 280)
                        (const_int 8 [0x8]))
                    (reg/f:DI 277))
                (const_int 4 [0x4])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1179 -1
     (nil))

;; if (y_179 == _32)

(insn 100 99 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 118 [ _32 ]))) "function.c":1179 -1
     (nil))

(jump_insn 101 100 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1179 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; _33 = serwer_178(D)->skarb.treasure_coin[i_168][1];

(insn 103 102 104 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1179 -1
     (nil))

(insn 104 103 105 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])) "function.c":1179 -1
     (nil))

(insn 105 104 106 (set (reg:DI 282)
        (sign_extend:DI (reg:SI 283))) "function.c":1179 -1
     (nil))

(insn 106 105 0 (set (reg:SI 119 [ _33 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 282)
                        (const_int 8 [0x8]))
                    (reg/f:DI 281))
                (const_int 8056 [0x1f78])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1179 -1
     (nil))

;; if (x_180 == _33)

(insn 107 106 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 119 [ _33 ]))) "function.c":1179 -1
     (nil))

(jump_insn 108 107 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1179 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; _34 = serwer_178(D)->player1;

(insn 110 109 111 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1181 -1
     (nil))

(insn 111 110 0 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 284)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1181 -1
     (nil))

;; _35 = _34->coins_carried;

(insn 112 111 0 (set (reg:SI 121 [ _35 ])
        (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 32 [0x20])) [3 _34->coins_carried+0 S4 A64])) "function.c":1181 -1
     (nil))

;; _36 = serwer_178(D)->player1;

(insn 113 112 114 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1181 -1
     (nil))

(insn 114 113 0 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 285)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1181 -1
     (nil))

;; _37 = _35 + 10;

(insn 115 114 0 (parallel [
            (set (reg:SI 123 [ _37 ])
                (plus:SI (reg:SI 121 [ _35 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1181 -1
     (nil))

;; _36->coins_carried = _37;

(insn 116 115 0 (set (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 32 [0x20])) [3 _36->coins_carried+0 S4 A64])
        (reg:SI 123 [ _37 ])) "function.c":1181 -1
     (nil))

;; _38 = serwer_178(D)->mapa;

(insn 117 116 118 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1182 -1
     (nil))

(insn 118 117 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 286)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1182 -1
     (nil))

;; _39 = (long unsigned int) y_179;

(insn 119 118 120 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1182 -1
     (nil))

(insn 120 119 0 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 287))) "function.c":1182 -1
     (nil))

;; _40 = _39 * 8;

(insn 121 120 0 (parallel [
            (set (reg:DI 126 [ _40 ])
                (ashift:DI (reg:DI 125 [ _39 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1182 -1
     (nil))

;; _41 = _38 + _40;

(insn 122 121 0 (parallel [
            (set (reg/f:DI 127 [ _41 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 126 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1182 -1
     (nil))

;; _42 = *_41;

(insn 123 122 0 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (reg/f:DI 127 [ _41 ]) [10 *_41+0 S8 A64])) "function.c":1182 -1
     (nil))

;; _43 = (sizetype) x_180;

(insn 124 123 125 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1182 -1
     (nil))

(insn 125 124 0 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 288))) "function.c":1182 -1
     (nil))

;; _44 = _42 + _43;

(insn 126 125 0 (parallel [
            (set (reg/f:DI 130 [ _44 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1182 -1
     (nil))

;; *_44 = 46;

(insn 127 126 0 (set (mem:QI (reg/f:DI 130 [ _44 ]) [0 *_44+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1182 -1
     (nil))

;; _189 = 0B;

(insn 128 127 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1183 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 14

;; 

(code_label 131 130 132 204 (nil) [0 uses])

(note 132 131 0 NOTE_INSN_BASIC_BLOCK)

;; i_190 = i_168 + 1;

(insn 133 132 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1177 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; 

(code_label 134 133 135 203 (nil) [0 uses])

(note 135 134 0 NOTE_INSN_BASIC_BLOCK)

;; _45 = serwer_178(D)->skarb.count_treasure_coin;

(insn 136 135 137 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1177 -1
     (nil))

(insn 137 136 0 (set (reg:SI 131 [ _45 ])
        (mem:SI (plus:DI (reg/f:DI 289)
                (const_int 16052 [0x3eb4])) [3 serwer_178(D)->skarb.count_treasure_coin+0 S4 A32])) "function.c":1177 -1
     (nil))

;; if (i_168 < _45)

(insn 139 137 140 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
            (reg:SI 131 [ _45 ]))) "function.c":1177 -1
     (nil))

(jump_insn 140 139 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "function.c":1177 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; i_191 = 0;

(insn 142 141 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1187 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _46 = serwer_178(D)->mapa;

(insn 146 145 147 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1189 -1
     (nil))

(insn 147 146 0 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (plus:DI (reg/f:DI 290)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1189 -1
     (nil))

;; _47 = (long unsigned int) y_179;

(insn 148 147 149 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1189 -1
     (nil))

(insn 149 148 0 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 291))) "function.c":1189 -1
     (nil))

;; _48 = _47 * 8;

(insn 150 149 0 (parallel [
            (set (reg:DI 134 [ _48 ])
                (ashift:DI (reg:DI 133 [ _47 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))

;; _49 = _46 + _48;

(insn 151 150 0 (parallel [
            (set (reg/f:DI 135 [ _49 ])
                (plus:DI (reg/f:DI 132 [ _46 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))

;; _50 = *_49;

(insn 152 151 0 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (reg/f:DI 135 [ _49 ]) [10 *_49+0 S8 A64])) "function.c":1189 -1
     (nil))

;; _51 = (sizetype) x_180;

(insn 153 152 154 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1189 -1
     (nil))

(insn 154 153 0 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 292))) "function.c":1189 -1
     (nil))

;; _52 = _50 + _51;

(insn 155 154 0 (parallel [
            (set (reg/f:DI 138 [ _52 ])
                (plus:DI (reg/f:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))

;; _53 = *_52;

(insn 156 155 0 (set (reg:QI 139 [ _53 ])
        (mem:QI (reg/f:DI 138 [ _52 ]) [0 *_52+0 S1 A8])) "function.c":1189 -1
     (nil))

;; if (_53 == 84)

(insn 157 156 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 139 [ _53 ])
            (const_int 84 [0x54]))) "function.c":1189 -1
     (nil))

(jump_insn 158 157 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1189 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; _54 = serwer_178(D)->skarb.large_treasure_coin[i_169][0];

(insn 160 159 161 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1189 -1
     (nil))

(insn 161 160 162 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "function.c":1189 -1
     (nil))

(insn 162 161 163 (set (reg:DI 294)
        (sign_extend:DI (reg:SI 295))) "function.c":1189 -1
     (nil))

(insn 163 162 164 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 294)
                    (const_int 2006 [0x7d6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))

(insn 164 163 0 (set (reg:SI 140 [ _54 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 296)
                        (const_int 8 [0x8]))
                    (reg/f:DI 293))
                (const_int 8 [0x8])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A64])) "function.c":1189 -1
     (nil))

;; if (y_179 == _54)

(insn 165 164 166 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 140 [ _54 ]))) "function.c":1189 -1
     (nil))

(jump_insn 166 165 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1189 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; _55 = serwer_178(D)->skarb.large_treasure_coin[i_169][1];

(insn 168 167 169 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1189 -1
     (nil))

(insn 169 168 170 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "function.c":1189 -1
     (nil))

(insn 170 169 171 (set (reg:DI 298)
        (sign_extend:DI (reg:SI 299))) "function.c":1189 -1
     (nil))

(insn 171 170 0 (set (reg:SI 141 [ _55 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 298)
                        (const_int 8 [0x8]))
                    (reg/f:DI 297))
                (const_int 16060 [0x3ebc])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A32])) "function.c":1189 -1
     (nil))

;; if (x_180 == _55)

(insn 172 171 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 141 [ _55 ]))) "function.c":1189 -1
     (nil))

(jump_insn 173 172 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1189 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; _56 = serwer_178(D)->player1;

(insn 175 174 176 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1191 -1
     (nil))

(insn 176 175 0 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 300)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1191 -1
     (nil))

;; _57 = _56->coins_carried;

(insn 177 176 0 (set (reg:SI 143 [ _57 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 32 [0x20])) [3 _56->coins_carried+0 S4 A64])) "function.c":1191 -1
     (nil))

;; _58 = serwer_178(D)->player1;

(insn 178 177 179 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1191 -1
     (nil))

(insn 179 178 0 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (plus:DI (reg/f:DI 301)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1191 -1
     (nil))

;; _59 = _57 + 50;

(insn 180 179 0 (parallel [
            (set (reg:SI 145 [ _59 ])
                (plus:SI (reg:SI 143 [ _57 ])
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1191 -1
     (nil))

;; _58->coins_carried = _59;

(insn 181 180 0 (set (mem:SI (plus:DI (reg/f:DI 144 [ _58 ])
                (const_int 32 [0x20])) [3 _58->coins_carried+0 S4 A64])
        (reg:SI 145 [ _59 ])) "function.c":1191 -1
     (nil))

;; _60 = serwer_178(D)->mapa;

(insn 182 181 183 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1192 -1
     (nil))

(insn 183 182 0 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (plus:DI (reg/f:DI 302)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1192 -1
     (nil))

;; _61 = (long unsigned int) y_179;

(insn 184 183 185 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1192 -1
     (nil))

(insn 185 184 0 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 303))) "function.c":1192 -1
     (nil))

;; _62 = _61 * 8;

(insn 186 185 0 (parallel [
            (set (reg:DI 148 [ _62 ])
                (ashift:DI (reg:DI 147 [ _61 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1192 -1
     (nil))

;; _63 = _60 + _62;

(insn 187 186 0 (parallel [
            (set (reg/f:DI 149 [ _63 ])
                (plus:DI (reg/f:DI 146 [ _60 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1192 -1
     (nil))

;; _64 = *_63;

(insn 188 187 0 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 149 [ _63 ]) [10 *_63+0 S8 A64])) "function.c":1192 -1
     (nil))

;; _65 = (sizetype) x_180;

(insn 189 188 190 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1192 -1
     (nil))

(insn 190 189 0 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 304))) "function.c":1192 -1
     (nil))

;; _66 = _64 + _65;

(insn 191 190 0 (parallel [
            (set (reg/f:DI 152 [ _66 ])
                (plus:DI (reg/f:DI 150 [ _64 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1192 -1
     (nil))

;; *_66 = 46;

(insn 192 191 0 (set (mem:QI (reg/f:DI 152 [ _66 ]) [0 *_66+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1192 -1
     (nil))

;; _194 = 0B;

(insn 193 192 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1193 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 21

;; 

(code_label 196 195 197 207 (nil) [0 uses])

(note 197 196 0 NOTE_INSN_BASIC_BLOCK)

;; i_195 = i_169 + 1;

(insn 198 197 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1187 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 199 198 200 206 (nil) [0 uses])

(note 200 199 0 NOTE_INSN_BASIC_BLOCK)

;; _67 = serwer_178(D)->skarb.count_large_treasure_coin;

(insn 201 200 202 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1187 -1
     (nil))

(insn 202 201 0 (set (reg:SI 153 [ _67 ])
        (mem:SI (plus:DI (reg/f:DI 305)
                (const_int 24056 [0x5df8])) [3 serwer_178(D)->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1187 -1
     (nil))

;; if (i_169 < _67)

(insn 204 202 205 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
            (reg:SI 153 [ _67 ]))) "function.c":1187 -1
     (nil))

(jump_insn 205 204 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) "function.c":1187 -1
     (nil))

;; Generating RTL for gimple basic block 23

;; i_196 = 0;

(insn 207 206 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1197 -1
     (nil))

;; Generating RTL for gimple basic block 24

;; _68 = serwer_178(D)->skarb.value_all_dropped_coin[i_170];

(insn 211 210 212 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1199 -1
     (nil))

(insn 212 211 213 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1199 -1
     (nil))

(insn 213 212 214 (set (reg:DI 307)
        (sign_extend:DI (reg:SI 308))) "function.c":1199 -1
     (nil))

(insn 214 213 215 (parallel [
            (set (reg:DI 309)
                (plus:DI (reg:DI 307)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1199 -1
     (nil))

(insn 215 214 0 (set (reg:SI 154 [ _68 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 309)
                    (const_int 4 [0x4]))
                (reg/f:DI 306)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1199 -1
     (nil))

;; if (_68 >= 0)

(insn 216 215 217 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 154 [ _68 ])
            (const_int 0 [0]))) "function.c":1199 -1
     (nil))

(jump_insn 217 216 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1199 -1
     (nil))

;; Generating RTL for gimple basic block 25

;; _69 = serwer_178(D)->skarb.dropped_coin[i_170][0];

(insn 219 218 220 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1199 -1
     (nil))

(insn 220 219 221 (set (reg:SI 312)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1199 -1
     (nil))

(insn 221 220 222 (set (reg:DI 311)
        (sign_extend:DI (reg:SI 312))) "function.c":1199 -1
     (nil))

(insn 222 221 223 (parallel [
            (set (reg:DI 313)
                (plus:DI (reg:DI 311)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1199 -1
     (nil))

(insn 223 222 0 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 313)
                    (const_int 8 [0x8]))
                (reg/f:DI 310)) [3 serwer_178(D)->skarb.dropped_coin S4 A64])) "function.c":1199 -1
     (nil))

;; if (y_179 == _69)

(insn 224 223 225 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 155 [ _69 ]))) "function.c":1199 -1
     (nil))

(jump_insn 225 224 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1199 -1
     (nil))

;; Generating RTL for gimple basic block 26

;; _70 = serwer_178(D)->skarb.dropped_coin[i_170][1];

(insn 227 226 228 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1199 -1
     (nil))

(insn 228 227 229 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1199 -1
     (nil))

(insn 229 228 230 (set (reg:DI 315)
        (sign_extend:DI (reg:SI 316))) "function.c":1199 -1
     (nil))

(insn 230 229 0 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 315)
                        (const_int 8 [0x8]))
                    (reg/f:DI 314))
                (const_int 24068 [0x5e04])) [3 serwer_178(D)->skarb.dropped_coin S4 A32])) "function.c":1199 -1
     (nil))

;; if (x_180 == _70)

(insn 231 230 232 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 156 [ _70 ]))) "function.c":1199 -1
     (nil))

(jump_insn 232 231 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1199 -1
     (nil))

;; Generating RTL for gimple basic block 27

;; _71 = serwer_178(D)->player1;

(insn 234 233 235 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1201 -1
     (nil))

(insn 235 234 0 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (plus:DI (reg/f:DI 317)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1201 -1
     (nil))

;; _72 = _71->coins_carried;

(insn 236 235 0 (set (reg:SI 158 [ _72 ])
        (mem:SI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 32 [0x20])) [3 _71->coins_carried+0 S4 A64])) "function.c":1201 -1
     (nil))

;; _73 = serwer_178(D)->skarb.value_all_dropped_coin[i_170];

(insn 237 236 238 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1201 -1
     (nil))

(insn 238 237 239 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1201 -1
     (nil))

(insn 239 238 240 (set (reg:DI 319)
        (sign_extend:DI (reg:SI 320))) "function.c":1201 -1
     (nil))

(insn 240 239 241 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg:DI 319)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1201 -1
     (nil))

(insn 241 240 0 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 321)
                    (const_int 4 [0x4]))
                (reg/f:DI 318)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1201 -1
     (nil))

;; _74 = serwer_178(D)->player1;

(insn 242 241 243 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1201 -1
     (nil))

(insn 243 242 0 (set (reg/f:DI 160 [ _74 ])
        (mem/f:DI (plus:DI (reg/f:DI 322)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1201 -1
     (nil))

;; _75 = _72 + _73;

(insn 244 243 0 (parallel [
            (set (reg:SI 161 [ _75 ])
                (plus:SI (reg:SI 158 [ _72 ])
                    (reg:SI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1201 -1
     (nil))

;; _74->coins_carried = _75;

(insn 245 244 0 (set (mem:SI (plus:DI (reg/f:DI 160 [ _74 ])
                (const_int 32 [0x20])) [3 _74->coins_carried+0 S4 A64])
        (reg:SI 161 [ _75 ])) "function.c":1201 -1
     (nil))

;; serwer_178(D)->skarb.value_all_dropped_coin[i_170] = -1;

(insn 246 245 247 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1202 -1
     (nil))

(insn 247 246 248 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1202 -1
     (nil))

(insn 248 247 249 (set (reg:DI 324)
        (sign_extend:DI (reg:SI 325))) "function.c":1202 -1
     (nil))

(insn 249 248 250 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg:DI 324)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1202 -1
     (nil))

(insn 250 249 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 326)
                    (const_int 4 [0x4]))
                (reg/f:DI 323)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])
        (const_int -1 [0xffffffffffffffff])) "function.c":1202 -1
     (nil))

;; _76 = serwer_178(D)->mapa;

(insn 251 250 252 (set (reg/f:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1203 -1
     (nil))

(insn 252 251 0 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (plus:DI (reg/f:DI 327)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1203 -1
     (nil))

;; _77 = (long unsigned int) y_179;

(insn 253 252 254 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1203 -1
     (nil))

(insn 254 253 0 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 328))) "function.c":1203 -1
     (nil))

;; _78 = _77 * 8;

(insn 255 254 0 (parallel [
            (set (reg:DI 164 [ _78 ])
                (ashift:DI (reg:DI 163 [ _77 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1203 -1
     (nil))

;; _79 = _76 + _78;

(insn 256 255 0 (parallel [
            (set (reg/f:DI 165 [ _79 ])
                (plus:DI (reg/f:DI 162 [ _76 ])
                    (reg:DI 164 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1203 -1
     (nil))

;; _80 = *_79;

(insn 257 256 0 (set (reg/f:DI 166 [ _80 ])
        (mem/f:DI (reg/f:DI 165 [ _79 ]) [10 *_79+0 S8 A64])) "function.c":1203 -1
     (nil))

;; _81 = (sizetype) x_180;

(insn 258 257 259 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1203 -1
     (nil))

(insn 259 258 0 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 329))) "function.c":1203 -1
     (nil))

;; _82 = _80 + _81;

(insn 260 259 0 (parallel [
            (set (reg/f:DI 168 [ _82 ])
                (plus:DI (reg/f:DI 166 [ _80 ])
                    (reg:DI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1203 -1
     (nil))

;; *_82 = 46;

(insn 261 260 0 (set (mem:QI (reg/f:DI 168 [ _82 ]) [0 *_82+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1203 -1
     (nil))

;; _200 = 0B;

(insn 262 261 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1204 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 28

;; 

(code_label 265 264 266 210 (nil) [0 uses])

(note 266 265 0 NOTE_INSN_BASIC_BLOCK)

;; i_201 = i_170 + 1;

(insn 267 266 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1197 -1
     (nil))

;; Generating RTL for gimple basic block 29

;; 

(code_label 268 267 269 209 (nil) [0 uses])

(note 269 268 0 NOTE_INSN_BASIC_BLOCK)

;; _83 = serwer_178(D)->skarb.count_drop_coin;

(insn 270 269 271 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1197 -1
     (nil))

(insn 271 270 0 (set (reg:SI 169 [ _83 ])
        (mem:SI (plus:DI (reg/f:DI 330)
                (const_int 24060 [0x5dfc])) [3 serwer_178(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1197 -1
     (nil))

;; if (i_170 < _83)

(insn 273 271 274 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
            (reg:SI 169 [ _83 ]))) "function.c":1197 -1
     (nil))

(jump_insn 274 273 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) "function.c":1197 -1
     (nil))

;; Generating RTL for gimple basic block 30

;; _84 = serwer_178(D)->player2;

(insn 276 275 277 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1208 -1
     (nil))

(insn 277 276 0 (set (reg/f:DI 170 [ _84 ])
        (mem/f:DI (plus:DI (reg/f:DI 331)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1208 -1
     (nil))

;; y_202 = _84->y_current;

(insn 278 277 279 (set (reg:SI 332)
        (mem:SI (plus:DI (reg/f:DI 170 [ _84 ])
                (const_int 16 [0x10])) [3 _84->y_current+0 S4 A64])) "function.c":1208 -1
     (nil))

(insn 279 278 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
        (reg:SI 332)) "function.c":1208 -1
     (nil))

;; _85 = serwer_178(D)->player2;

(insn 280 279 281 (set (reg/f:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1209 -1
     (nil))

(insn 281 280 0 (set (reg/f:DI 171 [ _85 ])
        (mem/f:DI (plus:DI (reg/f:DI 333)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1209 -1
     (nil))

;; x_203 = _85->x_current;

(insn 282 281 283 (set (reg:SI 334)
        (mem:SI (plus:DI (reg/f:DI 171 [ _85 ])
                (const_int 12 [0xc])) [3 _85->x_current+0 S4 A32])) "function.c":1209 -1
     (nil))

(insn 283 282 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
        (reg:SI 334)) "function.c":1209 -1
     (nil))

;; i_204 = 0;

(insn 284 283 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1211 -1
     (nil))

;; Generating RTL for gimple basic block 31

;; _86 = serwer_178(D)->mapa;

(insn 288 287 289 (set (reg/f:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1213 -1
     (nil))

(insn 289 288 0 (set (reg/f:DI 172 [ _86 ])
        (mem/f:DI (plus:DI (reg/f:DI 335)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1213 -1
     (nil))

;; _87 = (long unsigned int) y_202;

(insn 290 289 291 (set (reg:SI 336)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1213 -1
     (nil))

(insn 291 290 0 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 336))) "function.c":1213 -1
     (nil))

;; _88 = _87 * 8;

(insn 292 291 0 (parallel [
            (set (reg:DI 174 [ _88 ])
                (ashift:DI (reg:DI 173 [ _87 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))

;; _89 = _86 + _88;

(insn 293 292 0 (parallel [
            (set (reg/f:DI 175 [ _89 ])
                (plus:DI (reg/f:DI 172 [ _86 ])
                    (reg:DI 174 [ _88 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))

;; _90 = *_89;

(insn 294 293 0 (set (reg/f:DI 176 [ _90 ])
        (mem/f:DI (reg/f:DI 175 [ _89 ]) [10 *_89+0 S8 A64])) "function.c":1213 -1
     (nil))

;; _91 = (sizetype) x_203;

(insn 295 294 296 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1213 -1
     (nil))

(insn 296 295 0 (set (reg:DI 177 [ _91 ])
        (sign_extend:DI (reg:SI 337))) "function.c":1213 -1
     (nil))

;; _92 = _90 + _91;

(insn 297 296 0 (parallel [
            (set (reg/f:DI 178 [ _92 ])
                (plus:DI (reg/f:DI 176 [ _90 ])
                    (reg:DI 177 [ _91 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))

;; _93 = *_92;

(insn 298 297 0 (set (reg:QI 179 [ _93 ])
        (mem:QI (reg/f:DI 178 [ _92 ]) [0 *_92+0 S1 A8])) "function.c":1213 -1
     (nil))

;; if (_93 == 99)

(insn 299 298 300 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 179 [ _93 ])
            (const_int 99 [0x63]))) "function.c":1213 -1
     (nil))

(jump_insn 300 299 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1213 -1
     (nil))

;; Generating RTL for gimple basic block 32

;; _94 = serwer_178(D)->skarb.one_coin[i_171][0];

(insn 302 301 303 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1213 -1
     (nil))

(insn 303 302 304 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])) "function.c":1213 -1
     (nil))

(insn 304 303 305 (set (reg:DI 339)
        (sign_extend:DI (reg:SI 340))) "function.c":1213 -1
     (nil))

(insn 305 304 306 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg:DI 339)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))

(insn 306 305 0 (set (reg:SI 180 [ _94 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 341)
                    (const_int 8 [0x8]))
                (reg/f:DI 338)) [3 serwer_178(D)->skarb.one_coin S4 A64])) "function.c":1213 -1
     (nil))

;; if (y_202 == _94)

(insn 307 306 308 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 180 [ _94 ]))) "function.c":1213 -1
     (nil))

(jump_insn 308 307 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1213 -1
     (nil))

;; Generating RTL for gimple basic block 33

;; _95 = serwer_178(D)->skarb.one_coin[i_171][1];

(insn 310 309 311 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1213 -1
     (nil))

(insn 311 310 312 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])) "function.c":1213 -1
     (nil))

(insn 312 311 313 (set (reg:DI 343)
        (sign_extend:DI (reg:SI 344))) "function.c":1213 -1
     (nil))

(insn 313 312 0 (set (reg:SI 181 [ _95 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 343)
                        (const_int 8 [0x8]))
                    (reg/f:DI 342))
                (const_int 52 [0x34])) [3 serwer_178(D)->skarb.one_coin S4 A32])) "function.c":1213 -1
     (nil))

;; if (x_203 == _95)

(insn 314 313 315 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 181 [ _95 ]))) "function.c":1213 -1
     (nil))

(jump_insn 315 314 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1213 -1
     (nil))

;; Generating RTL for gimple basic block 34

;; _96 = serwer_178(D)->player2;

(insn 317 316 318 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1215 -1
     (nil))

(insn 318 317 0 (set (reg/f:DI 182 [ _96 ])
        (mem/f:DI (plus:DI (reg/f:DI 345)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1215 -1
     (nil))

;; _97 = _96->coins_carried;

(insn 319 318 0 (set (reg:SI 183 [ _97 ])
        (mem:SI (plus:DI (reg/f:DI 182 [ _96 ])
                (const_int 32 [0x20])) [3 _96->coins_carried+0 S4 A64])) "function.c":1215 -1
     (nil))

;; _98 = _97 + 1;

(insn 320 319 0 (parallel [
            (set (reg:SI 184 [ _98 ])
                (plus:SI (reg:SI 183 [ _97 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1215 -1
     (nil))

;; _96->coins_carried = _98;

(insn 321 320 0 (set (mem:SI (plus:DI (reg/f:DI 182 [ _96 ])
                (const_int 32 [0x20])) [3 _96->coins_carried+0 S4 A64])
        (reg:SI 184 [ _98 ])) "function.c":1215 -1
     (nil))

;; _99 = serwer_178(D)->mapa;

(insn 322 321 323 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1216 -1
     (nil))

(insn 323 322 0 (set (reg/f:DI 185 [ _99 ])
        (mem/f:DI (plus:DI (reg/f:DI 346)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1216 -1
     (nil))

;; _100 = (long unsigned int) y_202;

(insn 324 323 325 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1216 -1
     (nil))

(insn 325 324 0 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 347))) "function.c":1216 -1
     (nil))

;; _101 = _100 * 8;

(insn 326 325 0 (parallel [
            (set (reg:DI 187 [ _101 ])
                (ashift:DI (reg:DI 186 [ _100 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1216 -1
     (nil))

;; _102 = _99 + _101;

(insn 327 326 0 (parallel [
            (set (reg/f:DI 188 [ _102 ])
                (plus:DI (reg/f:DI 185 [ _99 ])
                    (reg:DI 187 [ _101 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1216 -1
     (nil))

;; _103 = *_102;

(insn 328 327 0 (set (reg/f:DI 189 [ _103 ])
        (mem/f:DI (reg/f:DI 188 [ _102 ]) [10 *_102+0 S8 A64])) "function.c":1216 -1
     (nil))

;; _104 = (sizetype) x_203;

(insn 329 328 330 (set (reg:SI 348)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1216 -1
     (nil))

(insn 330 329 0 (set (reg:DI 190 [ _104 ])
        (sign_extend:DI (reg:SI 348))) "function.c":1216 -1
     (nil))

;; _105 = _103 + _104;

(insn 331 330 0 (parallel [
            (set (reg/f:DI 191 [ _105 ])
                (plus:DI (reg/f:DI 189 [ _103 ])
                    (reg:DI 190 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1216 -1
     (nil))

;; *_105 = 46;

(insn 332 331 0 (set (mem:QI (reg/f:DI 191 [ _105 ]) [0 *_105+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1216 -1
     (nil))

;; _207 = 0B;

(insn 333 332 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1217 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 35

;; 

(code_label 336 335 337 213 (nil) [0 uses])

(note 337 336 0 NOTE_INSN_BASIC_BLOCK)

;; i_208 = i_171 + 1;

(insn 338 337 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1211 -1
     (nil))

;; Generating RTL for gimple basic block 36

;; 

(code_label 339 338 340 212 (nil) [0 uses])

(note 340 339 0 NOTE_INSN_BASIC_BLOCK)

;; _106 = serwer_178(D)->skarb.count_one_coin;

(insn 341 340 342 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1211 -1
     (nil))

(insn 342 341 0 (set (reg:SI 192 [ _106 ])
        (mem:SI (plus:DI (reg/f:DI 349)
                (const_int 8048 [0x1f70])) [3 serwer_178(D)->skarb.count_one_coin+0 S4 A64])) "function.c":1211 -1
     (nil))

;; if (i_171 < _106)

(insn 344 342 345 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
            (reg:SI 192 [ _106 ]))) "function.c":1211 -1
     (nil))

(jump_insn 345 344 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) "function.c":1211 -1
     (nil))

;; Generating RTL for gimple basic block 37

;; i_209 = 0;

(insn 347 346 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1221 -1
     (nil))

;; Generating RTL for gimple basic block 38

;; _107 = serwer_178(D)->mapa;

(insn 351 350 352 (set (reg/f:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1223 -1
     (nil))

(insn 352 351 0 (set (reg/f:DI 193 [ _107 ])
        (mem/f:DI (plus:DI (reg/f:DI 350)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1223 -1
     (nil))

;; _108 = (long unsigned int) y_202;

(insn 353 352 354 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1223 -1
     (nil))

(insn 354 353 0 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 351))) "function.c":1223 -1
     (nil))

;; _109 = _108 * 8;

(insn 355 354 0 (parallel [
            (set (reg:DI 195 [ _109 ])
                (ashift:DI (reg:DI 194 [ _108 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))

;; _110 = _107 + _109;

(insn 356 355 0 (parallel [
            (set (reg/f:DI 196 [ _110 ])
                (plus:DI (reg/f:DI 193 [ _107 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))

;; _111 = *_110;

(insn 357 356 0 (set (reg/f:DI 197 [ _111 ])
        (mem/f:DI (reg/f:DI 196 [ _110 ]) [10 *_110+0 S8 A64])) "function.c":1223 -1
     (nil))

;; _112 = (sizetype) x_203;

(insn 358 357 359 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1223 -1
     (nil))

(insn 359 358 0 (set (reg:DI 198 [ _112 ])
        (sign_extend:DI (reg:SI 352))) "function.c":1223 -1
     (nil))

;; _113 = _111 + _112;

(insn 360 359 0 (parallel [
            (set (reg/f:DI 199 [ _113 ])
                (plus:DI (reg/f:DI 197 [ _111 ])
                    (reg:DI 198 [ _112 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))

;; _114 = *_113;

(insn 361 360 0 (set (reg:QI 200 [ _114 ])
        (mem:QI (reg/f:DI 199 [ _113 ]) [0 *_113+0 S1 A8])) "function.c":1223 -1
     (nil))

;; if (_114 == 116)

(insn 362 361 363 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 200 [ _114 ])
            (const_int 116 [0x74]))) "function.c":1223 -1
     (nil))

(jump_insn 363 362 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1223 -1
     (nil))

;; Generating RTL for gimple basic block 39

;; _115 = serwer_178(D)->skarb.treasure_coin[i_172][0];

(insn 365 364 366 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1223 -1
     (nil))

(insn 366 365 367 (set (reg:SI 355)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])) "function.c":1223 -1
     (nil))

(insn 367 366 368 (set (reg:DI 354)
        (sign_extend:DI (reg:SI 355))) "function.c":1223 -1
     (nil))

(insn 368 367 369 (parallel [
            (set (reg:DI 356)
                (plus:DI (reg:DI 354)
                    (const_int 1006 [0x3ee])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))

(insn 369 368 0 (set (reg:SI 201 [ _115 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 356)
                        (const_int 8 [0x8]))
                    (reg/f:DI 353))
                (const_int 4 [0x4])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1223 -1
     (nil))

;; if (y_202 == _115)

(insn 370 369 371 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 201 [ _115 ]))) "function.c":1223 -1
     (nil))

(jump_insn 371 370 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1223 -1
     (nil))

;; Generating RTL for gimple basic block 40

;; _116 = serwer_178(D)->skarb.treasure_coin[i_172][1];

(insn 373 372 374 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1223 -1
     (nil))

(insn 374 373 375 (set (reg:SI 359)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])) "function.c":1223 -1
     (nil))

(insn 375 374 376 (set (reg:DI 358)
        (sign_extend:DI (reg:SI 359))) "function.c":1223 -1
     (nil))

(insn 376 375 0 (set (reg:SI 202 [ _116 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 358)
                        (const_int 8 [0x8]))
                    (reg/f:DI 357))
                (const_int 8056 [0x1f78])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1223 -1
     (nil))

;; if (x_203 == _116)

(insn 377 376 378 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 202 [ _116 ]))) "function.c":1223 -1
     (nil))

(jump_insn 378 377 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1223 -1
     (nil))

;; Generating RTL for gimple basic block 41

;; _117 = serwer_178(D)->player1;

(insn 380 379 381 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1225 -1
     (nil))

(insn 381 380 0 (set (reg/f:DI 203 [ _117 ])
        (mem/f:DI (plus:DI (reg/f:DI 360)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1225 -1
     (nil))

;; _118 = _117->coins_carried;

(insn 382 381 0 (set (reg:SI 204 [ _118 ])
        (mem:SI (plus:DI (reg/f:DI 203 [ _117 ])
                (const_int 32 [0x20])) [3 _117->coins_carried+0 S4 A64])) "function.c":1225 -1
     (nil))

;; _119 = serwer_178(D)->player2;

(insn 383 382 384 (set (reg/f:DI 361)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1225 -1
     (nil))

(insn 384 383 0 (set (reg/f:DI 205 [ _119 ])
        (mem/f:DI (plus:DI (reg/f:DI 361)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1225 -1
     (nil))

;; _120 = _118 + 10;

(insn 385 384 0 (parallel [
            (set (reg:SI 206 [ _120 ])
                (plus:SI (reg:SI 204 [ _118 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1225 -1
     (nil))

;; _119->coins_carried = _120;

(insn 386 385 0 (set (mem:SI (plus:DI (reg/f:DI 205 [ _119 ])
                (const_int 32 [0x20])) [3 _119->coins_carried+0 S4 A64])
        (reg:SI 206 [ _120 ])) "function.c":1225 -1
     (nil))

;; _121 = serwer_178(D)->mapa;

(insn 387 386 388 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1226 -1
     (nil))

(insn 388 387 0 (set (reg/f:DI 207 [ _121 ])
        (mem/f:DI (plus:DI (reg/f:DI 362)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1226 -1
     (nil))

;; _122 = (long unsigned int) y_202;

(insn 389 388 390 (set (reg:SI 363)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1226 -1
     (nil))

(insn 390 389 0 (set (reg:DI 208 [ _122 ])
        (sign_extend:DI (reg:SI 363))) "function.c":1226 -1
     (nil))

;; _123 = _122 * 8;

(insn 391 390 0 (parallel [
            (set (reg:DI 209 [ _123 ])
                (ashift:DI (reg:DI 208 [ _122 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1226 -1
     (nil))

;; _124 = _121 + _123;

(insn 392 391 0 (parallel [
            (set (reg/f:DI 210 [ _124 ])
                (plus:DI (reg/f:DI 207 [ _121 ])
                    (reg:DI 209 [ _123 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1226 -1
     (nil))

;; _125 = *_124;

(insn 393 392 0 (set (reg/f:DI 211 [ _125 ])
        (mem/f:DI (reg/f:DI 210 [ _124 ]) [10 *_124+0 S8 A64])) "function.c":1226 -1
     (nil))

;; _126 = (sizetype) x_203;

(insn 394 393 395 (set (reg:SI 364)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1226 -1
     (nil))

(insn 395 394 0 (set (reg:DI 212 [ _126 ])
        (sign_extend:DI (reg:SI 364))) "function.c":1226 -1
     (nil))

;; _127 = _125 + _126;

(insn 396 395 0 (parallel [
            (set (reg/f:DI 213 [ _127 ])
                (plus:DI (reg/f:DI 211 [ _125 ])
                    (reg:DI 212 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1226 -1
     (nil))

;; *_127 = 46;

(insn 397 396 0 (set (mem:QI (reg/f:DI 213 [ _127 ]) [0 *_127+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1226 -1
     (nil))

;; _212 = 0B;

(insn 398 397 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1227 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 42

;; 

(code_label 401 400 402 216 (nil) [0 uses])

(note 402 401 0 NOTE_INSN_BASIC_BLOCK)

;; i_213 = i_172 + 1;

(insn 403 402 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1221 -1
     (nil))

;; Generating RTL for gimple basic block 43

;; 

(code_label 404 403 405 215 (nil) [0 uses])

(note 405 404 0 NOTE_INSN_BASIC_BLOCK)

;; _128 = serwer_178(D)->skarb.count_treasure_coin;

(insn 406 405 407 (set (reg/f:DI 365)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1221 -1
     (nil))

(insn 407 406 0 (set (reg:SI 214 [ _128 ])
        (mem:SI (plus:DI (reg/f:DI 365)
                (const_int 16052 [0x3eb4])) [3 serwer_178(D)->skarb.count_treasure_coin+0 S4 A32])) "function.c":1221 -1
     (nil))

;; if (i_172 < _128)

(insn 409 407 410 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
            (reg:SI 214 [ _128 ]))) "function.c":1221 -1
     (nil))

(jump_insn 410 409 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 408)
            (pc))) "function.c":1221 -1
     (nil))

;; Generating RTL for gimple basic block 44

;; i_214 = 0;

(insn 412 411 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1231 -1
     (nil))

;; Generating RTL for gimple basic block 45

;; _129 = serwer_178(D)->mapa;

(insn 416 415 417 (set (reg/f:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1233 -1
     (nil))

(insn 417 416 0 (set (reg/f:DI 215 [ _129 ])
        (mem/f:DI (plus:DI (reg/f:DI 366)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1233 -1
     (nil))

;; _130 = (long unsigned int) y_202;

(insn 418 417 419 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1233 -1
     (nil))

(insn 419 418 0 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 367))) "function.c":1233 -1
     (nil))

;; _131 = _130 * 8;

(insn 420 419 0 (parallel [
            (set (reg:DI 217 [ _131 ])
                (ashift:DI (reg:DI 216 [ _130 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))

;; _132 = _129 + _131;

(insn 421 420 0 (parallel [
            (set (reg/f:DI 218 [ _132 ])
                (plus:DI (reg/f:DI 215 [ _129 ])
                    (reg:DI 217 [ _131 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))

;; _133 = *_132;

(insn 422 421 0 (set (reg/f:DI 219 [ _133 ])
        (mem/f:DI (reg/f:DI 218 [ _132 ]) [10 *_132+0 S8 A64])) "function.c":1233 -1
     (nil))

;; _134 = (sizetype) x_203;

(insn 423 422 424 (set (reg:SI 368)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1233 -1
     (nil))

(insn 424 423 0 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 368))) "function.c":1233 -1
     (nil))

;; _135 = _133 + _134;

(insn 425 424 0 (parallel [
            (set (reg/f:DI 221 [ _135 ])
                (plus:DI (reg/f:DI 219 [ _133 ])
                    (reg:DI 220 [ _134 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))

;; _136 = *_135;

(insn 426 425 0 (set (reg:QI 222 [ _136 ])
        (mem:QI (reg/f:DI 221 [ _135 ]) [0 *_135+0 S1 A8])) "function.c":1233 -1
     (nil))

;; if (_136 == 84)

(insn 427 426 428 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 222 [ _136 ])
            (const_int 84 [0x54]))) "function.c":1233 -1
     (nil))

(jump_insn 428 427 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1233 -1
     (nil))

;; Generating RTL for gimple basic block 46

;; _137 = serwer_178(D)->skarb.large_treasure_coin[i_173][0];

(insn 430 429 431 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1233 -1
     (nil))

(insn 431 430 432 (set (reg:SI 371)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])) "function.c":1233 -1
     (nil))

(insn 432 431 433 (set (reg:DI 370)
        (sign_extend:DI (reg:SI 371))) "function.c":1233 -1
     (nil))

(insn 433 432 434 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg:DI 370)
                    (const_int 2006 [0x7d6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))

(insn 434 433 0 (set (reg:SI 223 [ _137 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 372)
                        (const_int 8 [0x8]))
                    (reg/f:DI 369))
                (const_int 8 [0x8])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A64])) "function.c":1233 -1
     (nil))

;; if (y_202 == _137)

(insn 435 434 436 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 223 [ _137 ]))) "function.c":1233 -1
     (nil))

(jump_insn 436 435 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1233 -1
     (nil))

;; Generating RTL for gimple basic block 47

;; _138 = serwer_178(D)->skarb.large_treasure_coin[i_173][1];

(insn 438 437 439 (set (reg/f:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1233 -1
     (nil))

(insn 439 438 440 (set (reg:SI 375)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])) "function.c":1233 -1
     (nil))

(insn 440 439 441 (set (reg:DI 374)
        (sign_extend:DI (reg:SI 375))) "function.c":1233 -1
     (nil))

(insn 441 440 0 (set (reg:SI 224 [ _138 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 374)
                        (const_int 8 [0x8]))
                    (reg/f:DI 373))
                (const_int 16060 [0x3ebc])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A32])) "function.c":1233 -1
     (nil))

;; if (x_203 == _138)

(insn 442 441 443 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 224 [ _138 ]))) "function.c":1233 -1
     (nil))

(jump_insn 443 442 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1233 -1
     (nil))

;; Generating RTL for gimple basic block 48

;; _139 = serwer_178(D)->player2;

(insn 445 444 446 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1235 -1
     (nil))

(insn 446 445 0 (set (reg/f:DI 225 [ _139 ])
        (mem/f:DI (plus:DI (reg/f:DI 376)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1235 -1
     (nil))

;; _140 = _139->coins_carried;

(insn 447 446 0 (set (reg:SI 226 [ _140 ])
        (mem:SI (plus:DI (reg/f:DI 225 [ _139 ])
                (const_int 32 [0x20])) [3 _139->coins_carried+0 S4 A64])) "function.c":1235 -1
     (nil))

;; _141 = serwer_178(D)->player2;

(insn 448 447 449 (set (reg/f:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1235 -1
     (nil))

(insn 449 448 0 (set (reg/f:DI 227 [ _141 ])
        (mem/f:DI (plus:DI (reg/f:DI 377)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1235 -1
     (nil))

;; _142 = _140 + 50;

(insn 450 449 0 (parallel [
            (set (reg:SI 228 [ _142 ])
                (plus:SI (reg:SI 226 [ _140 ])
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1235 -1
     (nil))

;; _141->coins_carried = _142;

(insn 451 450 0 (set (mem:SI (plus:DI (reg/f:DI 227 [ _141 ])
                (const_int 32 [0x20])) [3 _141->coins_carried+0 S4 A64])
        (reg:SI 228 [ _142 ])) "function.c":1235 -1
     (nil))

;; _143 = serwer_178(D)->mapa;

(insn 452 451 453 (set (reg/f:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1236 -1
     (nil))

(insn 453 452 0 (set (reg/f:DI 229 [ _143 ])
        (mem/f:DI (plus:DI (reg/f:DI 378)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1236 -1
     (nil))

;; _144 = (long unsigned int) y_202;

(insn 454 453 455 (set (reg:SI 379)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1236 -1
     (nil))

(insn 455 454 0 (set (reg:DI 230 [ _144 ])
        (sign_extend:DI (reg:SI 379))) "function.c":1236 -1
     (nil))

;; _145 = _144 * 8;

(insn 456 455 0 (parallel [
            (set (reg:DI 231 [ _145 ])
                (ashift:DI (reg:DI 230 [ _144 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1236 -1
     (nil))

;; _146 = _143 + _145;

(insn 457 456 0 (parallel [
            (set (reg/f:DI 232 [ _146 ])
                (plus:DI (reg/f:DI 229 [ _143 ])
                    (reg:DI 231 [ _145 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1236 -1
     (nil))

;; _147 = *_146;

(insn 458 457 0 (set (reg/f:DI 233 [ _147 ])
        (mem/f:DI (reg/f:DI 232 [ _146 ]) [10 *_146+0 S8 A64])) "function.c":1236 -1
     (nil))

;; _148 = (sizetype) x_203;

(insn 459 458 460 (set (reg:SI 380)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1236 -1
     (nil))

(insn 460 459 0 (set (reg:DI 234 [ _148 ])
        (sign_extend:DI (reg:SI 380))) "function.c":1236 -1
     (nil))

;; _149 = _147 + _148;

(insn 461 460 0 (parallel [
            (set (reg/f:DI 235 [ _149 ])
                (plus:DI (reg/f:DI 233 [ _147 ])
                    (reg:DI 234 [ _148 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1236 -1
     (nil))

;; *_149 = 46;

(insn 462 461 0 (set (mem:QI (reg/f:DI 235 [ _149 ]) [0 *_149+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1236 -1
     (nil))

;; _217 = 0B;

(insn 463 462 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1237 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 49

;; 

(code_label 466 465 467 219 (nil) [0 uses])

(note 467 466 0 NOTE_INSN_BASIC_BLOCK)

;; i_218 = i_173 + 1;

(insn 468 467 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1231 -1
     (nil))

;; Generating RTL for gimple basic block 50

;; 

(code_label 469 468 470 218 (nil) [0 uses])

(note 470 469 0 NOTE_INSN_BASIC_BLOCK)

;; _150 = serwer_178(D)->skarb.count_large_treasure_coin;

(insn 471 470 472 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1231 -1
     (nil))

(insn 472 471 0 (set (reg:SI 236 [ _150 ])
        (mem:SI (plus:DI (reg/f:DI 381)
                (const_int 24056 [0x5df8])) [3 serwer_178(D)->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1231 -1
     (nil))

;; if (i_173 < _150)

(insn 474 472 475 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
            (reg:SI 236 [ _150 ]))) "function.c":1231 -1
     (nil))

(jump_insn 475 474 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 473)
            (pc))) "function.c":1231 -1
     (nil))

;; Generating RTL for gimple basic block 51

;; i_219 = 0;

(insn 477 476 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1241 -1
     (nil))

;; Generating RTL for gimple basic block 52

;; _151 = serwer_178(D)->skarb.value_all_dropped_coin[i_174];

(insn 481 480 482 (set (reg/f:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1243 -1
     (nil))

(insn 482 481 483 (set (reg:SI 384)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1243 -1
     (nil))

(insn 483 482 484 (set (reg:DI 383)
        (sign_extend:DI (reg:SI 384))) "function.c":1243 -1
     (nil))

(insn 484 483 485 (parallel [
            (set (reg:DI 385)
                (plus:DI (reg:DI 383)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1243 -1
     (nil))

(insn 485 484 0 (set (reg:SI 237 [ _151 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 385)
                    (const_int 4 [0x4]))
                (reg/f:DI 382)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1243 -1
     (nil))

;; if (_151 >= 0)

(insn 486 485 487 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 237 [ _151 ])
            (const_int 0 [0]))) "function.c":1243 -1
     (nil))

(jump_insn 487 486 0 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1243 -1
     (nil))

;; Generating RTL for gimple basic block 53

;; _152 = serwer_178(D)->skarb.dropped_coin[i_174][0];

(insn 489 488 490 (set (reg/f:DI 386)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1243 -1
     (nil))

(insn 490 489 491 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1243 -1
     (nil))

(insn 491 490 492 (set (reg:DI 387)
        (sign_extend:DI (reg:SI 388))) "function.c":1243 -1
     (nil))

(insn 492 491 493 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg:DI 387)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1243 -1
     (nil))

(insn 493 492 0 (set (reg:SI 238 [ _152 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 389)
                    (const_int 8 [0x8]))
                (reg/f:DI 386)) [3 serwer_178(D)->skarb.dropped_coin S4 A64])) "function.c":1243 -1
     (nil))

;; if (y_202 == _152)

(insn 494 493 495 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 238 [ _152 ]))) "function.c":1243 -1
     (nil))

(jump_insn 495 494 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1243 -1
     (nil))

;; Generating RTL for gimple basic block 54

;; _153 = serwer_178(D)->skarb.dropped_coin[i_174][1];

(insn 497 496 498 (set (reg/f:DI 390)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1243 -1
     (nil))

(insn 498 497 499 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1243 -1
     (nil))

(insn 499 498 500 (set (reg:DI 391)
        (sign_extend:DI (reg:SI 392))) "function.c":1243 -1
     (nil))

(insn 500 499 0 (set (reg:SI 239 [ _153 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 391)
                        (const_int 8 [0x8]))
                    (reg/f:DI 390))
                (const_int 24068 [0x5e04])) [3 serwer_178(D)->skarb.dropped_coin S4 A32])) "function.c":1243 -1
     (nil))

;; if (x_203 == _153)

(insn 501 500 502 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 239 [ _153 ]))) "function.c":1243 -1
     (nil))

(jump_insn 502 501 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1243 -1
     (nil))

;; Generating RTL for gimple basic block 55

;; _154 = serwer_178(D)->player1;

(insn 504 503 505 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1245 -1
     (nil))

(insn 505 504 0 (set (reg/f:DI 240 [ _154 ])
        (mem/f:DI (plus:DI (reg/f:DI 393)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1245 -1
     (nil))

;; _155 = _154->coins_carried;

(insn 506 505 0 (set (reg:SI 241 [ _155 ])
        (mem:SI (plus:DI (reg/f:DI 240 [ _154 ])
                (const_int 32 [0x20])) [3 _154->coins_carried+0 S4 A64])) "function.c":1245 -1
     (nil))

;; _156 = serwer_178(D)->skarb.value_all_dropped_coin[i_174];

(insn 507 506 508 (set (reg/f:DI 394)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1245 -1
     (nil))

(insn 508 507 509 (set (reg:SI 396)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1245 -1
     (nil))

(insn 509 508 510 (set (reg:DI 395)
        (sign_extend:DI (reg:SI 396))) "function.c":1245 -1
     (nil))

(insn 510 509 511 (parallel [
            (set (reg:DI 397)
                (plus:DI (reg:DI 395)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1245 -1
     (nil))

(insn 511 510 0 (set (reg:SI 242 [ _156 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 397)
                    (const_int 4 [0x4]))
                (reg/f:DI 394)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1245 -1
     (nil))

;; _157 = serwer_178(D)->player2;

(insn 512 511 513 (set (reg/f:DI 398)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1245 -1
     (nil))

(insn 513 512 0 (set (reg/f:DI 243 [ _157 ])
        (mem/f:DI (plus:DI (reg/f:DI 398)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1245 -1
     (nil))

;; _158 = _155 + _156;

(insn 514 513 0 (parallel [
            (set (reg:SI 244 [ _158 ])
                (plus:SI (reg:SI 241 [ _155 ])
                    (reg:SI 242 [ _156 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1245 -1
     (nil))

;; _157->coins_carried = _158;

(insn 515 514 0 (set (mem:SI (plus:DI (reg/f:DI 243 [ _157 ])
                (const_int 32 [0x20])) [3 _157->coins_carried+0 S4 A64])
        (reg:SI 244 [ _158 ])) "function.c":1245 -1
     (nil))

;; serwer_178(D)->skarb.value_all_dropped_coin[i_174] = -1;

(insn 516 515 517 (set (reg/f:DI 399)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1246 -1
     (nil))

(insn 517 516 518 (set (reg:SI 401)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1246 -1
     (nil))

(insn 518 517 519 (set (reg:DI 400)
        (sign_extend:DI (reg:SI 401))) "function.c":1246 -1
     (nil))

(insn 519 518 520 (parallel [
            (set (reg:DI 402)
                (plus:DI (reg:DI 400)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1246 -1
     (nil))

(insn 520 519 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 402)
                    (const_int 4 [0x4]))
                (reg/f:DI 399)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])
        (const_int -1 [0xffffffffffffffff])) "function.c":1246 -1
     (nil))

;; _159 = serwer_178(D)->mapa;

(insn 521 520 522 (set (reg/f:DI 403)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1247 -1
     (nil))

(insn 522 521 0 (set (reg/f:DI 245 [ _159 ])
        (mem/f:DI (plus:DI (reg/f:DI 403)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1247 -1
     (nil))

;; _160 = (long unsigned int) y_202;

(insn 523 522 524 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1247 -1
     (nil))

(insn 524 523 0 (set (reg:DI 246 [ _160 ])
        (sign_extend:DI (reg:SI 404))) "function.c":1247 -1
     (nil))

;; _161 = _160 * 8;

(insn 525 524 0 (parallel [
            (set (reg:DI 247 [ _161 ])
                (ashift:DI (reg:DI 246 [ _160 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1247 -1
     (nil))

;; _162 = _159 + _161;

(insn 526 525 0 (parallel [
            (set (reg/f:DI 248 [ _162 ])
                (plus:DI (reg/f:DI 245 [ _159 ])
                    (reg:DI 247 [ _161 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1247 -1
     (nil))

;; _163 = *_162;

(insn 527 526 0 (set (reg/f:DI 249 [ _163 ])
        (mem/f:DI (reg/f:DI 248 [ _162 ]) [10 *_162+0 S8 A64])) "function.c":1247 -1
     (nil))

;; _164 = (sizetype) x_203;

(insn 528 527 529 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1247 -1
     (nil))

(insn 529 528 0 (set (reg:DI 250 [ _164 ])
        (sign_extend:DI (reg:SI 405))) "function.c":1247 -1
     (nil))

;; _165 = _163 + _164;

(insn 530 529 0 (parallel [
            (set (reg/f:DI 251 [ _165 ])
                (plus:DI (reg/f:DI 249 [ _163 ])
                    (reg:DI 250 [ _164 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1247 -1
     (nil))

;; *_165 = 46;

(insn 531 530 0 (set (mem:QI (reg/f:DI 251 [ _165 ]) [0 *_165+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1247 -1
     (nil))

;; _223 = 0B;

(insn 532 531 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1248 -1
     (nil))

;; // predicted unlikely by early return (on trees) predictor.

(nil)

;; Generating RTL for gimple basic block 56

;; 

(code_label 535 534 536 222 (nil) [0 uses])

(note 536 535 0 NOTE_INSN_BASIC_BLOCK)

;; i_224 = i_174 + 1;

(insn 537 536 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1241 -1
     (nil))

;; Generating RTL for gimple basic block 57

;; 

(code_label 538 537 539 221 (nil) [0 uses])

(note 539 538 0 NOTE_INSN_BASIC_BLOCK)

;; _166 = serwer_178(D)->skarb.count_drop_coin;

(insn 540 539 541 (set (reg/f:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1241 -1
     (nil))

(insn 541 540 0 (set (reg:SI 252 [ _166 ])
        (mem:SI (plus:DI (reg/f:DI 406)
                (const_int 24060 [0x5dfc])) [3 serwer_178(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1241 -1
     (nil))

;; if (i_174 < _166)

(insn 543 541 544 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
            (reg:SI 252 [ _166 ]))) "function.c":1241 -1
     (nil))

(jump_insn 544 543 0 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 542)
            (pc))) "function.c":1241 -1
     (nil))

;; Generating RTL for gimple basic block 58

;; _225 = 0B;

(insn 546 545 0 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1251 -1
     (nil))

;; Generating RTL for gimple basic block 59

;; <L72>:

(code_label 547 546 548 201 (nil) [0 uses])

(note 548 547 0 NOTE_INSN_BASIC_BLOCK)

;; return _175;

(insn 549 548 550 (set (reg/f:DI 254 [ <retval> ])
        (reg/f:DI 253 [ _175 ])) -1
     (nil))

(jump_insn 550 549 551 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 551 550 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Removing jump 550.
Merging block 61 into block 60...
Merged blocks 60 and 61.
Merged 60 and 61 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1163 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 255)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1164 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 255)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1164 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 256)
        (mem:SI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 16 [0x10])) [3 _1->y_current+0 S4 A64])) "function.c":1164 -1
     (nil))
(insn 9 8 10 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
        (reg:SI 256)) "function.c":1164 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 257)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1165 -1
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 257)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1165 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 258)
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":1165 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
        (reg:SI 258)) "function.c":1165 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1167 -1
     (nil))
(jump_insn 15 14 16 2 (set (pc)
        (label_ref 69)) "function.c":1167 -1
     (nil)
 -> 69)
;;  succ:       9

(barrier 16 15 73)
;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 73 16 17 4 202 (nil) [1 uses])
(note 17 73 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 4 (set (reg/f:DI 259)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1169 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 259)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1169 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 260)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1169 -1
     (nil))
(insn 21 20 22 4 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 260))) "function.c":1169 -1
     (nil))
(insn 22 21 23 4 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))
(insn 23 22 24 4 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 89 [ _3 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))
(insn 24 23 25 4 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":1169 -1
     (nil))
(insn 25 24 26 4 (set (reg:SI 261)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1169 -1
     (nil))
(insn 26 25 27 4 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 261))) "function.c":1169 -1
     (nil))
(insn 27 26 28 4 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))
(insn 28 27 29 4 (set (reg:QI 96 [ _10 ])
        (mem:QI (reg/f:DI 95 [ _9 ]) [0 *_9+0 S1 A8])) "function.c":1169 -1
     (nil))
(insn 29 28 30 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ _10 ])
            (const_int 99 [0x63]))) "function.c":1169 -1
     (nil))
(jump_insn 30 29 31 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "function.c":1169 -1
     (nil)
 -> 66)
;;  succ:       5 (FALLTHRU)
;;              8

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 31 30 32 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 5 (set (reg/f:DI 262)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1169 -1
     (nil))
(insn 33 32 34 5 (set (reg:SI 264)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1169 -1
     (nil))
(insn 34 33 35 5 (set (reg:DI 263)
        (sign_extend:DI (reg:SI 264))) "function.c":1169 -1
     (nil))
(insn 35 34 36 5 (parallel [
            (set (reg:DI 265)
                (plus:DI (reg:DI 263)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1169 -1
     (nil))
(insn 36 35 37 5 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 265)
                    (const_int 8 [0x8]))
                (reg/f:DI 262)) [3 serwer_178(D)->skarb.one_coin S4 A64])) "function.c":1169 -1
     (nil))
(insn 37 36 38 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 97 [ _11 ]))) "function.c":1169 -1
     (nil))
(jump_insn 38 37 39 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "function.c":1169 -1
     (nil)
 -> 66)
;;  succ:       6 (FALLTHRU)
;;              8

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 39 38 40 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 6 (set (reg/f:DI 266)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1169 -1
     (nil))
(insn 41 40 42 6 (set (reg:SI 268)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])) "function.c":1169 -1
     (nil))
(insn 42 41 43 6 (set (reg:DI 267)
        (sign_extend:DI (reg:SI 268))) "function.c":1169 -1
     (nil))
(insn 43 42 44 6 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 267)
                        (const_int 8 [0x8]))
                    (reg/f:DI 266))
                (const_int 52 [0x34])) [3 serwer_178(D)->skarb.one_coin S4 A32])) "function.c":1169 -1
     (nil))
(insn 44 43 45 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 98 [ _12 ]))) "function.c":1169 -1
     (nil))
(jump_insn 45 44 46 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 66)
            (pc))) "function.c":1169 -1
     (nil)
 -> 66)
;;  succ:       7 (FALLTHRU)
;;              8

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 46 45 47 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 7 (set (reg/f:DI 269)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1171 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 269)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1171 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 32 [0x20])) [3 _13->coins_carried+0 S4 A64])) "function.c":1171 -1
     (nil))
(insn 50 49 51 7 (parallel [
            (set (reg:SI 101 [ _15 ])
                (plus:SI (reg:SI 100 [ _14 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1171 -1
     (nil))
(insn 51 50 52 7 (set (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 32 [0x20])) [3 _13->coins_carried+0 S4 A64])
        (reg:SI 101 [ _15 ])) "function.c":1171 -1
     (nil))
(insn 52 51 53 7 (set (reg/f:DI 270)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1172 -1
     (nil))
(insn 53 52 54 7 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 270)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1172 -1
     (nil))
(insn 54 53 55 7 (set (reg:SI 271)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1172 -1
     (nil))
(insn 55 54 56 7 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 271))) "function.c":1172 -1
     (nil))
(insn 56 55 57 7 (parallel [
            (set (reg:DI 104 [ _18 ])
                (ashift:DI (reg:DI 103 [ _17 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1172 -1
     (nil))
(insn 57 56 58 7 (parallel [
            (set (reg/f:DI 105 [ _19 ])
                (plus:DI (reg/f:DI 102 [ _16 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1172 -1
     (nil))
(insn 58 57 59 7 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (reg/f:DI 105 [ _19 ]) [10 *_19+0 S8 A64])) "function.c":1172 -1
     (nil))
(insn 59 58 60 7 (set (reg:SI 272)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1172 -1
     (nil))
(insn 60 59 61 7 (set (reg:DI 107 [ _21 ])
        (sign_extend:DI (reg:SI 272))) "function.c":1172 -1
     (nil))
(insn 61 60 62 7 (parallel [
            (set (reg/f:DI 108 [ _22 ])
                (plus:DI (reg/f:DI 106 [ _20 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1172 -1
     (nil))
(insn 62 61 63 7 (set (mem:QI (reg/f:DI 108 [ _22 ]) [0 *_22+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1172 -1
     (nil))
(insn 63 62 64 7 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1173 -1
     (nil))
(jump_insn 64 63 65 7 (set (pc)
        (label_ref 547)) "function.c":1173 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 65 64 66)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
;;              5
;;              6
(code_label 66 65 67 8 200 (nil) [3 uses])
(note 67 66 68 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 68 67 69 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1167 -1
     (nil))
;;  succ:       9 (FALLTHRU,DFS_BACK)

;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8 (FALLTHRU,DFS_BACK)
(code_label 69 68 70 9 199 (nil) [1 uses])
(note 70 69 71 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 9 (set (reg/f:DI 273)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1167 -1
     (nil))
(insn 72 71 74 9 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 273)
                (const_int 8048 [0x1f70])) [3 serwer_178(D)->skarb.count_one_coin+0 S4 A64])) "function.c":1167 -1
     (nil))
(insn 74 72 75 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [3 i+0 S4 A32])
            (reg:SI 109 [ _23 ]))) "function.c":1167 -1
     (nil))
(jump_insn 75 74 76 9 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "function.c":1167 -1
     (nil)
 -> 73)
;;  succ:       4
;;              10 (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 76 75 77 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 10 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1177 -1
     (nil))
(jump_insn 78 77 79 10 (set (pc)
        (label_ref 134)) "function.c":1177 -1
     (nil)
 -> 134)
;;  succ:       16

(barrier 79 78 138)
;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 138 79 80 11 205 (nil) [1 uses])
(note 80 138 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 11 (set (reg/f:DI 274)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1179 -1
     (nil))
(insn 82 81 83 11 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 274)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1179 -1
     (nil))
(insn 83 82 84 11 (set (reg:SI 275)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1179 -1
     (nil))
(insn 84 83 85 11 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 275))) "function.c":1179 -1
     (nil))
(insn 85 84 86 11 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))
(insn 86 85 87 11 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 110 [ _24 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))
(insn 87 86 88 11 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":1179 -1
     (nil))
(insn 88 87 89 11 (set (reg:SI 276)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1179 -1
     (nil))
(insn 89 88 90 11 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 276))) "function.c":1179 -1
     (nil))
(insn 90 89 91 11 (parallel [
            (set (reg/f:DI 116 [ _30 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))
(insn 91 90 92 11 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 116 [ _30 ]) [0 *_30+0 S1 A8])) "function.c":1179 -1
     (nil))
(insn 92 91 93 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 116 [0x74]))) "function.c":1179 -1
     (nil))
(jump_insn 93 92 94 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "function.c":1179 -1
     (nil)
 -> 131)
;;  succ:       12 (FALLTHRU)
;;              15

;; basic block 12, loop depth 1, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 94 93 95 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 96 12 (set (reg/f:DI 277)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1179 -1
     (nil))
(insn 96 95 97 12 (set (reg:SI 279)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])) "function.c":1179 -1
     (nil))
(insn 97 96 98 12 (set (reg:DI 278)
        (sign_extend:DI (reg:SI 279))) "function.c":1179 -1
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg:DI 280)
                (plus:DI (reg:DI 278)
                    (const_int 1006 [0x3ee])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1179 -1
     (nil))
(insn 99 98 100 12 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 280)
                        (const_int 8 [0x8]))
                    (reg/f:DI 277))
                (const_int 4 [0x4])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1179 -1
     (nil))
(insn 100 99 101 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 118 [ _32 ]))) "function.c":1179 -1
     (nil))
(jump_insn 101 100 102 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "function.c":1179 -1
     (nil)
 -> 131)
;;  succ:       13 (FALLTHRU)
;;              15

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 13 (set (reg/f:DI 281)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1179 -1
     (nil))
(insn 104 103 105 13 (set (reg:SI 283)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])) "function.c":1179 -1
     (nil))
(insn 105 104 106 13 (set (reg:DI 282)
        (sign_extend:DI (reg:SI 283))) "function.c":1179 -1
     (nil))
(insn 106 105 107 13 (set (reg:SI 119 [ _33 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 282)
                        (const_int 8 [0x8]))
                    (reg/f:DI 281))
                (const_int 8056 [0x1f78])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1179 -1
     (nil))
(insn 107 106 108 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 119 [ _33 ]))) "function.c":1179 -1
     (nil))
(jump_insn 108 107 109 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "function.c":1179 -1
     (nil)
 -> 131)
;;  succ:       14 (FALLTHRU)
;;              15

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 109 108 110 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 14 (set (reg/f:DI 284)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1181 -1
     (nil))
(insn 111 110 112 14 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 284)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1181 -1
     (nil))
(insn 112 111 113 14 (set (reg:SI 121 [ _35 ])
        (mem:SI (plus:DI (reg/f:DI 120 [ _34 ])
                (const_int 32 [0x20])) [3 _34->coins_carried+0 S4 A64])) "function.c":1181 -1
     (nil))
(insn 113 112 114 14 (set (reg/f:DI 285)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1181 -1
     (nil))
(insn 114 113 115 14 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 285)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1181 -1
     (nil))
(insn 115 114 116 14 (parallel [
            (set (reg:SI 123 [ _37 ])
                (plus:SI (reg:SI 121 [ _35 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1181 -1
     (nil))
(insn 116 115 117 14 (set (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 32 [0x20])) [3 _36->coins_carried+0 S4 A64])
        (reg:SI 123 [ _37 ])) "function.c":1181 -1
     (nil))
(insn 117 116 118 14 (set (reg/f:DI 286)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1182 -1
     (nil))
(insn 118 117 119 14 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 286)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1182 -1
     (nil))
(insn 119 118 120 14 (set (reg:SI 287)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1182 -1
     (nil))
(insn 120 119 121 14 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 287))) "function.c":1182 -1
     (nil))
(insn 121 120 122 14 (parallel [
            (set (reg:DI 126 [ _40 ])
                (ashift:DI (reg:DI 125 [ _39 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1182 -1
     (nil))
(insn 122 121 123 14 (parallel [
            (set (reg/f:DI 127 [ _41 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 126 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1182 -1
     (nil))
(insn 123 122 124 14 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (reg/f:DI 127 [ _41 ]) [10 *_41+0 S8 A64])) "function.c":1182 -1
     (nil))
(insn 124 123 125 14 (set (reg:SI 288)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1182 -1
     (nil))
(insn 125 124 126 14 (set (reg:DI 129 [ _43 ])
        (sign_extend:DI (reg:SI 288))) "function.c":1182 -1
     (nil))
(insn 126 125 127 14 (parallel [
            (set (reg/f:DI 130 [ _44 ])
                (plus:DI (reg/f:DI 128 [ _42 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1182 -1
     (nil))
(insn 127 126 128 14 (set (mem:QI (reg/f:DI 130 [ _44 ]) [0 *_44+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1182 -1
     (nil))
(insn 128 127 129 14 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1183 -1
     (nil))
(jump_insn 129 128 130 14 (set (pc)
        (label_ref 547)) "function.c":1183 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 130 129 131)
;; basic block 15, loop depth 1, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
;;              12
;;              13
(code_label 131 130 132 15 204 (nil) [3 uses])
(note 132 131 133 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1177 -1
     (nil))
;;  succ:       16 (FALLTHRU,DFS_BACK)

;; basic block 16, loop depth 1, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              15 (FALLTHRU,DFS_BACK)
(code_label 134 133 135 16 203 (nil) [1 uses])
(note 135 134 136 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 16 (set (reg/f:DI 289)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1177 -1
     (nil))
(insn 137 136 139 16 (set (reg:SI 131 [ _45 ])
        (mem:SI (plus:DI (reg/f:DI 289)
                (const_int 16052 [0x3eb4])) [3 serwer_178(D)->skarb.count_treasure_coin+0 S4 A32])) "function.c":1177 -1
     (nil))
(insn 139 137 140 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [3 i+0 S4 A32])
            (reg:SI 131 [ _45 ]))) "function.c":1177 -1
     (nil))
(jump_insn 140 139 141 16 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 138)
            (pc))) "function.c":1177 -1
     (nil)
 -> 138)
;;  succ:       11
;;              17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
(note 141 140 142 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1187 -1
     (nil))
(jump_insn 143 142 144 17 (set (pc)
        (label_ref 199)) "function.c":1187 -1
     (nil)
 -> 199)
;;  succ:       23

(barrier 144 143 203)
;; basic block 18, loop depth 1, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 203 144 145 18 208 (nil) [1 uses])
(note 145 203 146 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 146 145 147 18 (set (reg/f:DI 290)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1189 -1
     (nil))
(insn 147 146 148 18 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (plus:DI (reg/f:DI 290)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1189 -1
     (nil))
(insn 148 147 149 18 (set (reg:SI 291)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1189 -1
     (nil))
(insn 149 148 150 18 (set (reg:DI 133 [ _47 ])
        (sign_extend:DI (reg:SI 291))) "function.c":1189 -1
     (nil))
(insn 150 149 151 18 (parallel [
            (set (reg:DI 134 [ _48 ])
                (ashift:DI (reg:DI 133 [ _47 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))
(insn 151 150 152 18 (parallel [
            (set (reg/f:DI 135 [ _49 ])
                (plus:DI (reg/f:DI 132 [ _46 ])
                    (reg:DI 134 [ _48 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))
(insn 152 151 153 18 (set (reg/f:DI 136 [ _50 ])
        (mem/f:DI (reg/f:DI 135 [ _49 ]) [10 *_49+0 S8 A64])) "function.c":1189 -1
     (nil))
(insn 153 152 154 18 (set (reg:SI 292)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1189 -1
     (nil))
(insn 154 153 155 18 (set (reg:DI 137 [ _51 ])
        (sign_extend:DI (reg:SI 292))) "function.c":1189 -1
     (nil))
(insn 155 154 156 18 (parallel [
            (set (reg/f:DI 138 [ _52 ])
                (plus:DI (reg/f:DI 136 [ _50 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))
(insn 156 155 157 18 (set (reg:QI 139 [ _53 ])
        (mem:QI (reg/f:DI 138 [ _52 ]) [0 *_52+0 S1 A8])) "function.c":1189 -1
     (nil))
(insn 157 156 158 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 139 [ _53 ])
            (const_int 84 [0x54]))) "function.c":1189 -1
     (nil))
(jump_insn 158 157 159 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) "function.c":1189 -1
     (nil)
 -> 196)
;;  succ:       19 (FALLTHRU)
;;              22

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 159 158 160 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 19 (set (reg/f:DI 293)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1189 -1
     (nil))
(insn 161 160 162 19 (set (reg:SI 295)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "function.c":1189 -1
     (nil))
(insn 162 161 163 19 (set (reg:DI 294)
        (sign_extend:DI (reg:SI 295))) "function.c":1189 -1
     (nil))
(insn 163 162 164 19 (parallel [
            (set (reg:DI 296)
                (plus:DI (reg:DI 294)
                    (const_int 2006 [0x7d6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1189 -1
     (nil))
(insn 164 163 165 19 (set (reg:SI 140 [ _54 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 296)
                        (const_int 8 [0x8]))
                    (reg/f:DI 293))
                (const_int 8 [0x8])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A64])) "function.c":1189 -1
     (nil))
(insn 165 164 166 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 140 [ _54 ]))) "function.c":1189 -1
     (nil))
(jump_insn 166 165 167 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) "function.c":1189 -1
     (nil)
 -> 196)
;;  succ:       20 (FALLTHRU)
;;              22

;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 167 166 168 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 20 (set (reg/f:DI 297)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1189 -1
     (nil))
(insn 169 168 170 20 (set (reg:SI 299)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])) "function.c":1189 -1
     (nil))
(insn 170 169 171 20 (set (reg:DI 298)
        (sign_extend:DI (reg:SI 299))) "function.c":1189 -1
     (nil))
(insn 171 170 172 20 (set (reg:SI 141 [ _55 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 298)
                        (const_int 8 [0x8]))
                    (reg/f:DI 297))
                (const_int 16060 [0x3ebc])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A32])) "function.c":1189 -1
     (nil))
(insn 172 171 173 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 141 [ _55 ]))) "function.c":1189 -1
     (nil))
(jump_insn 173 172 174 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) "function.c":1189 -1
     (nil)
 -> 196)
;;  succ:       21 (FALLTHRU)
;;              22

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
(note 174 173 175 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 21 (set (reg/f:DI 300)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1191 -1
     (nil))
(insn 176 175 177 21 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 300)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1191 -1
     (nil))
(insn 177 176 178 21 (set (reg:SI 143 [ _57 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 32 [0x20])) [3 _56->coins_carried+0 S4 A64])) "function.c":1191 -1
     (nil))
(insn 178 177 179 21 (set (reg/f:DI 301)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1191 -1
     (nil))
(insn 179 178 180 21 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (plus:DI (reg/f:DI 301)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1191 -1
     (nil))
(insn 180 179 181 21 (parallel [
            (set (reg:SI 145 [ _59 ])
                (plus:SI (reg:SI 143 [ _57 ])
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1191 -1
     (nil))
(insn 181 180 182 21 (set (mem:SI (plus:DI (reg/f:DI 144 [ _58 ])
                (const_int 32 [0x20])) [3 _58->coins_carried+0 S4 A64])
        (reg:SI 145 [ _59 ])) "function.c":1191 -1
     (nil))
(insn 182 181 183 21 (set (reg/f:DI 302)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1192 -1
     (nil))
(insn 183 182 184 21 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (plus:DI (reg/f:DI 302)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1192 -1
     (nil))
(insn 184 183 185 21 (set (reg:SI 303)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1192 -1
     (nil))
(insn 185 184 186 21 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 303))) "function.c":1192 -1
     (nil))
(insn 186 185 187 21 (parallel [
            (set (reg:DI 148 [ _62 ])
                (ashift:DI (reg:DI 147 [ _61 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1192 -1
     (nil))
(insn 187 186 188 21 (parallel [
            (set (reg/f:DI 149 [ _63 ])
                (plus:DI (reg/f:DI 146 [ _60 ])
                    (reg:DI 148 [ _62 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1192 -1
     (nil))
(insn 188 187 189 21 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (reg/f:DI 149 [ _63 ]) [10 *_63+0 S8 A64])) "function.c":1192 -1
     (nil))
(insn 189 188 190 21 (set (reg:SI 304)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1192 -1
     (nil))
(insn 190 189 191 21 (set (reg:DI 151 [ _65 ])
        (sign_extend:DI (reg:SI 304))) "function.c":1192 -1
     (nil))
(insn 191 190 192 21 (parallel [
            (set (reg/f:DI 152 [ _66 ])
                (plus:DI (reg/f:DI 150 [ _64 ])
                    (reg:DI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1192 -1
     (nil))
(insn 192 191 193 21 (set (mem:QI (reg/f:DI 152 [ _66 ]) [0 *_66+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1192 -1
     (nil))
(insn 193 192 194 21 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1193 -1
     (nil))
(jump_insn 194 193 195 21 (set (pc)
        (label_ref 547)) "function.c":1193 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 195 194 196)
;; basic block 22, loop depth 1, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
;;              19
;;              20
(code_label 196 195 197 22 207 (nil) [3 uses])
(note 197 196 198 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1187 -1
     (nil))
;;  succ:       23 (FALLTHRU,DFS_BACK)

;; basic block 23, loop depth 1, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
;;              22 (FALLTHRU,DFS_BACK)
(code_label 199 198 200 23 206 (nil) [1 uses])
(note 200 199 201 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 201 200 202 23 (set (reg/f:DI 305)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1187 -1
     (nil))
(insn 202 201 204 23 (set (reg:SI 153 [ _67 ])
        (mem:SI (plus:DI (reg/f:DI 305)
                (const_int 24056 [0x5df8])) [3 serwer_178(D)->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1187 -1
     (nil))
(insn 204 202 205 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [3 i+0 S4 A32])
            (reg:SI 153 [ _67 ]))) "function.c":1187 -1
     (nil))
(jump_insn 205 204 206 23 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 203)
            (pc))) "function.c":1187 -1
     (nil)
 -> 203)
;;  succ:       18
;;              24 (FALLTHRU)

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 206 205 207 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 207 206 208 24 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1197 -1
     (nil))
(jump_insn 208 207 209 24 (set (pc)
        (label_ref 268)) "function.c":1197 -1
     (nil)
 -> 268)
;;  succ:       30

(barrier 209 208 272)
;; basic block 25, loop depth 1, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       30
(code_label 272 209 210 25 211 (nil) [1 uses])
(note 210 272 211 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 211 210 212 25 (set (reg/f:DI 306)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1199 -1
     (nil))
(insn 212 211 213 25 (set (reg:SI 308)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1199 -1
     (nil))
(insn 213 212 214 25 (set (reg:DI 307)
        (sign_extend:DI (reg:SI 308))) "function.c":1199 -1
     (nil))
(insn 214 213 215 25 (parallel [
            (set (reg:DI 309)
                (plus:DI (reg:DI 307)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1199 -1
     (nil))
(insn 215 214 216 25 (set (reg:SI 154 [ _68 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 309)
                    (const_int 4 [0x4]))
                (reg/f:DI 306)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1199 -1
     (nil))
(insn 216 215 217 25 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 154 [ _68 ])
            (const_int 0 [0]))) "function.c":1199 -1
     (nil))
(jump_insn 217 216 218 25 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) "function.c":1199 -1
     (nil)
 -> 265)
;;  succ:       26 (FALLTHRU)
;;              29

;; basic block 26, loop depth 1, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       25 (FALLTHRU)
(note 218 217 219 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 26 (set (reg/f:DI 310)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1199 -1
     (nil))
(insn 220 219 221 26 (set (reg:SI 312)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1199 -1
     (nil))
(insn 221 220 222 26 (set (reg:DI 311)
        (sign_extend:DI (reg:SI 312))) "function.c":1199 -1
     (nil))
(insn 222 221 223 26 (parallel [
            (set (reg:DI 313)
                (plus:DI (reg:DI 311)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1199 -1
     (nil))
(insn 223 222 224 26 (set (reg:SI 155 [ _69 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 313)
                    (const_int 8 [0x8]))
                (reg/f:DI 310)) [3 serwer_178(D)->skarb.dropped_coin S4 A64])) "function.c":1199 -1
     (nil))
(insn 224 223 225 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 155 [ _69 ]))) "function.c":1199 -1
     (nil))
(jump_insn 225 224 226 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) "function.c":1199 -1
     (nil)
 -> 265)
;;  succ:       27 (FALLTHRU)
;;              29

;; basic block 27, loop depth 1, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 (FALLTHRU)
(note 226 225 227 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 27 (set (reg/f:DI 314)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1199 -1
     (nil))
(insn 228 227 229 27 (set (reg:SI 316)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1199 -1
     (nil))
(insn 229 228 230 27 (set (reg:DI 315)
        (sign_extend:DI (reg:SI 316))) "function.c":1199 -1
     (nil))
(insn 230 229 231 27 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 315)
                        (const_int 8 [0x8]))
                    (reg/f:DI 314))
                (const_int 24068 [0x5e04])) [3 serwer_178(D)->skarb.dropped_coin S4 A32])) "function.c":1199 -1
     (nil))
(insn 231 230 232 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 156 [ _70 ]))) "function.c":1199 -1
     (nil))
(jump_insn 232 231 233 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 265)
            (pc))) "function.c":1199 -1
     (nil)
 -> 265)
;;  succ:       28 (FALLTHRU)
;;              29

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 233 232 234 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 234 233 235 28 (set (reg/f:DI 317)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1201 -1
     (nil))
(insn 235 234 236 28 (set (reg/f:DI 157 [ _71 ])
        (mem/f:DI (plus:DI (reg/f:DI 317)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1201 -1
     (nil))
(insn 236 235 237 28 (set (reg:SI 158 [ _72 ])
        (mem:SI (plus:DI (reg/f:DI 157 [ _71 ])
                (const_int 32 [0x20])) [3 _71->coins_carried+0 S4 A64])) "function.c":1201 -1
     (nil))
(insn 237 236 238 28 (set (reg/f:DI 318)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1201 -1
     (nil))
(insn 238 237 239 28 (set (reg:SI 320)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1201 -1
     (nil))
(insn 239 238 240 28 (set (reg:DI 319)
        (sign_extend:DI (reg:SI 320))) "function.c":1201 -1
     (nil))
(insn 240 239 241 28 (parallel [
            (set (reg:DI 321)
                (plus:DI (reg:DI 319)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1201 -1
     (nil))
(insn 241 240 242 28 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 321)
                    (const_int 4 [0x4]))
                (reg/f:DI 318)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1201 -1
     (nil))
(insn 242 241 243 28 (set (reg/f:DI 322)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1201 -1
     (nil))
(insn 243 242 244 28 (set (reg/f:DI 160 [ _74 ])
        (mem/f:DI (plus:DI (reg/f:DI 322)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1201 -1
     (nil))
(insn 244 243 245 28 (parallel [
            (set (reg:SI 161 [ _75 ])
                (plus:SI (reg:SI 158 [ _72 ])
                    (reg:SI 159 [ _73 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1201 -1
     (nil))
(insn 245 244 246 28 (set (mem:SI (plus:DI (reg/f:DI 160 [ _74 ])
                (const_int 32 [0x20])) [3 _74->coins_carried+0 S4 A64])
        (reg:SI 161 [ _75 ])) "function.c":1201 -1
     (nil))
(insn 246 245 247 28 (set (reg/f:DI 323)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1202 -1
     (nil))
(insn 247 246 248 28 (set (reg:SI 325)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])) "function.c":1202 -1
     (nil))
(insn 248 247 249 28 (set (reg:DI 324)
        (sign_extend:DI (reg:SI 325))) "function.c":1202 -1
     (nil))
(insn 249 248 250 28 (parallel [
            (set (reg:DI 326)
                (plus:DI (reg:DI 324)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1202 -1
     (nil))
(insn 250 249 251 28 (set (mem:SI (plus:DI (mult:DI (reg:DI 326)
                    (const_int 4 [0x4]))
                (reg/f:DI 323)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])
        (const_int -1 [0xffffffffffffffff])) "function.c":1202 -1
     (nil))
(insn 251 250 252 28 (set (reg/f:DI 327)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1203 -1
     (nil))
(insn 252 251 253 28 (set (reg/f:DI 162 [ _76 ])
        (mem/f:DI (plus:DI (reg/f:DI 327)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1203 -1
     (nil))
(insn 253 252 254 28 (set (reg:SI 328)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1203 -1
     (nil))
(insn 254 253 255 28 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 328))) "function.c":1203 -1
     (nil))
(insn 255 254 256 28 (parallel [
            (set (reg:DI 164 [ _78 ])
                (ashift:DI (reg:DI 163 [ _77 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1203 -1
     (nil))
(insn 256 255 257 28 (parallel [
            (set (reg/f:DI 165 [ _79 ])
                (plus:DI (reg/f:DI 162 [ _76 ])
                    (reg:DI 164 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1203 -1
     (nil))
(insn 257 256 258 28 (set (reg/f:DI 166 [ _80 ])
        (mem/f:DI (reg/f:DI 165 [ _79 ]) [10 *_79+0 S8 A64])) "function.c":1203 -1
     (nil))
(insn 258 257 259 28 (set (reg:SI 329)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1203 -1
     (nil))
(insn 259 258 260 28 (set (reg:DI 167 [ _81 ])
        (sign_extend:DI (reg:SI 329))) "function.c":1203 -1
     (nil))
(insn 260 259 261 28 (parallel [
            (set (reg/f:DI 168 [ _82 ])
                (plus:DI (reg/f:DI 166 [ _80 ])
                    (reg:DI 167 [ _81 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1203 -1
     (nil))
(insn 261 260 262 28 (set (mem:QI (reg/f:DI 168 [ _82 ]) [0 *_82+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1203 -1
     (nil))
(insn 262 261 263 28 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1204 -1
     (nil))
(jump_insn 263 262 264 28 (set (pc)
        (label_ref 547)) "function.c":1204 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 264 263 265)
;; basic block 29, loop depth 1, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              26
;;              27
(code_label 265 264 266 29 210 (nil) [3 uses])
(note 266 265 267 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 267 266 268 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1197 -1
     (nil))
;;  succ:       30 (FALLTHRU,DFS_BACK)

;; basic block 30, loop depth 1, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       24
;;              29 (FALLTHRU,DFS_BACK)
(code_label 268 267 269 30 209 (nil) [1 uses])
(note 269 268 270 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 270 269 271 30 (set (reg/f:DI 330)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1197 -1
     (nil))
(insn 271 270 273 30 (set (reg:SI 169 [ _83 ])
        (mem:SI (plus:DI (reg/f:DI 330)
                (const_int 24060 [0x5dfc])) [3 serwer_178(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1197 -1
     (nil))
(insn 273 271 274 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [3 i+0 S4 A32])
            (reg:SI 169 [ _83 ]))) "function.c":1197 -1
     (nil))
(jump_insn 274 273 275 30 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 272)
            (pc))) "function.c":1197 -1
     (nil)
 -> 272)
;;  succ:       25
;;              31 (FALLTHRU)

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       30 (FALLTHRU)
(note 275 274 276 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 276 275 277 31 (set (reg/f:DI 331)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1208 -1
     (nil))
(insn 277 276 278 31 (set (reg/f:DI 170 [ _84 ])
        (mem/f:DI (plus:DI (reg/f:DI 331)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1208 -1
     (nil))
(insn 278 277 279 31 (set (reg:SI 332)
        (mem:SI (plus:DI (reg/f:DI 170 [ _84 ])
                (const_int 16 [0x10])) [3 _84->y_current+0 S4 A64])) "function.c":1208 -1
     (nil))
(insn 279 278 280 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
        (reg:SI 332)) "function.c":1208 -1
     (nil))
(insn 280 279 281 31 (set (reg/f:DI 333)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1209 -1
     (nil))
(insn 281 280 282 31 (set (reg/f:DI 171 [ _85 ])
        (mem/f:DI (plus:DI (reg/f:DI 333)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1209 -1
     (nil))
(insn 282 281 283 31 (set (reg:SI 334)
        (mem:SI (plus:DI (reg/f:DI 171 [ _85 ])
                (const_int 12 [0xc])) [3 _85->x_current+0 S4 A32])) "function.c":1209 -1
     (nil))
(insn 283 282 284 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
        (reg:SI 334)) "function.c":1209 -1
     (nil))
(insn 284 283 285 31 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1211 -1
     (nil))
(jump_insn 285 284 286 31 (set (pc)
        (label_ref 339)) "function.c":1211 -1
     (nil)
 -> 339)
;;  succ:       37

(barrier 286 285 343)
;; basic block 32, loop depth 1, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       37
(code_label 343 286 287 32 214 (nil) [1 uses])
(note 287 343 288 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 289 32 (set (reg/f:DI 335)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1213 -1
     (nil))
(insn 289 288 290 32 (set (reg/f:DI 172 [ _86 ])
        (mem/f:DI (plus:DI (reg/f:DI 335)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1213 -1
     (nil))
(insn 290 289 291 32 (set (reg:SI 336)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1213 -1
     (nil))
(insn 291 290 292 32 (set (reg:DI 173 [ _87 ])
        (sign_extend:DI (reg:SI 336))) "function.c":1213 -1
     (nil))
(insn 292 291 293 32 (parallel [
            (set (reg:DI 174 [ _88 ])
                (ashift:DI (reg:DI 173 [ _87 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))
(insn 293 292 294 32 (parallel [
            (set (reg/f:DI 175 [ _89 ])
                (plus:DI (reg/f:DI 172 [ _86 ])
                    (reg:DI 174 [ _88 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))
(insn 294 293 295 32 (set (reg/f:DI 176 [ _90 ])
        (mem/f:DI (reg/f:DI 175 [ _89 ]) [10 *_89+0 S8 A64])) "function.c":1213 -1
     (nil))
(insn 295 294 296 32 (set (reg:SI 337)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1213 -1
     (nil))
(insn 296 295 297 32 (set (reg:DI 177 [ _91 ])
        (sign_extend:DI (reg:SI 337))) "function.c":1213 -1
     (nil))
(insn 297 296 298 32 (parallel [
            (set (reg/f:DI 178 [ _92 ])
                (plus:DI (reg/f:DI 176 [ _90 ])
                    (reg:DI 177 [ _91 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))
(insn 298 297 299 32 (set (reg:QI 179 [ _93 ])
        (mem:QI (reg/f:DI 178 [ _92 ]) [0 *_92+0 S1 A8])) "function.c":1213 -1
     (nil))
(insn 299 298 300 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 179 [ _93 ])
            (const_int 99 [0x63]))) "function.c":1213 -1
     (nil))
(jump_insn 300 299 301 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) "function.c":1213 -1
     (nil)
 -> 336)
;;  succ:       33 (FALLTHRU)
;;              36

;; basic block 33, loop depth 1, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
(note 301 300 302 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 303 33 (set (reg/f:DI 338)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1213 -1
     (nil))
(insn 303 302 304 33 (set (reg:SI 340)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])) "function.c":1213 -1
     (nil))
(insn 304 303 305 33 (set (reg:DI 339)
        (sign_extend:DI (reg:SI 340))) "function.c":1213 -1
     (nil))
(insn 305 304 306 33 (parallel [
            (set (reg:DI 341)
                (plus:DI (reg:DI 339)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1213 -1
     (nil))
(insn 306 305 307 33 (set (reg:SI 180 [ _94 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 341)
                    (const_int 8 [0x8]))
                (reg/f:DI 338)) [3 serwer_178(D)->skarb.one_coin S4 A64])) "function.c":1213 -1
     (nil))
(insn 307 306 308 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 180 [ _94 ]))) "function.c":1213 -1
     (nil))
(jump_insn 308 307 309 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) "function.c":1213 -1
     (nil)
 -> 336)
;;  succ:       34 (FALLTHRU)
;;              36

;; basic block 34, loop depth 1, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 309 308 310 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 34 (set (reg/f:DI 342)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1213 -1
     (nil))
(insn 311 310 312 34 (set (reg:SI 344)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])) "function.c":1213 -1
     (nil))
(insn 312 311 313 34 (set (reg:DI 343)
        (sign_extend:DI (reg:SI 344))) "function.c":1213 -1
     (nil))
(insn 313 312 314 34 (set (reg:SI 181 [ _95 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 343)
                        (const_int 8 [0x8]))
                    (reg/f:DI 342))
                (const_int 52 [0x34])) [3 serwer_178(D)->skarb.one_coin S4 A32])) "function.c":1213 -1
     (nil))
(insn 314 313 315 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 181 [ _95 ]))) "function.c":1213 -1
     (nil))
(jump_insn 315 314 316 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 336)
            (pc))) "function.c":1213 -1
     (nil)
 -> 336)
;;  succ:       35 (FALLTHRU)
;;              36

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 (FALLTHRU)
(note 316 315 317 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 35 (set (reg/f:DI 345)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1215 -1
     (nil))
(insn 318 317 319 35 (set (reg/f:DI 182 [ _96 ])
        (mem/f:DI (plus:DI (reg/f:DI 345)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1215 -1
     (nil))
(insn 319 318 320 35 (set (reg:SI 183 [ _97 ])
        (mem:SI (plus:DI (reg/f:DI 182 [ _96 ])
                (const_int 32 [0x20])) [3 _96->coins_carried+0 S4 A64])) "function.c":1215 -1
     (nil))
(insn 320 319 321 35 (parallel [
            (set (reg:SI 184 [ _98 ])
                (plus:SI (reg:SI 183 [ _97 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1215 -1
     (nil))
(insn 321 320 322 35 (set (mem:SI (plus:DI (reg/f:DI 182 [ _96 ])
                (const_int 32 [0x20])) [3 _96->coins_carried+0 S4 A64])
        (reg:SI 184 [ _98 ])) "function.c":1215 -1
     (nil))
(insn 322 321 323 35 (set (reg/f:DI 346)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1216 -1
     (nil))
(insn 323 322 324 35 (set (reg/f:DI 185 [ _99 ])
        (mem/f:DI (plus:DI (reg/f:DI 346)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1216 -1
     (nil))
(insn 324 323 325 35 (set (reg:SI 347)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1216 -1
     (nil))
(insn 325 324 326 35 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 347))) "function.c":1216 -1
     (nil))
(insn 326 325 327 35 (parallel [
            (set (reg:DI 187 [ _101 ])
                (ashift:DI (reg:DI 186 [ _100 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1216 -1
     (nil))
(insn 327 326 328 35 (parallel [
            (set (reg/f:DI 188 [ _102 ])
                (plus:DI (reg/f:DI 185 [ _99 ])
                    (reg:DI 187 [ _101 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1216 -1
     (nil))
(insn 328 327 329 35 (set (reg/f:DI 189 [ _103 ])
        (mem/f:DI (reg/f:DI 188 [ _102 ]) [10 *_102+0 S8 A64])) "function.c":1216 -1
     (nil))
(insn 329 328 330 35 (set (reg:SI 348)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1216 -1
     (nil))
(insn 330 329 331 35 (set (reg:DI 190 [ _104 ])
        (sign_extend:DI (reg:SI 348))) "function.c":1216 -1
     (nil))
(insn 331 330 332 35 (parallel [
            (set (reg/f:DI 191 [ _105 ])
                (plus:DI (reg/f:DI 189 [ _103 ])
                    (reg:DI 190 [ _104 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1216 -1
     (nil))
(insn 332 331 333 35 (set (mem:QI (reg/f:DI 191 [ _105 ]) [0 *_105+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1216 -1
     (nil))
(insn 333 332 334 35 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1217 -1
     (nil))
(jump_insn 334 333 335 35 (set (pc)
        (label_ref 547)) "function.c":1217 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 335 334 336)
;; basic block 36, loop depth 1, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       32
;;              33
;;              34
(code_label 336 335 337 36 213 (nil) [3 uses])
(note 337 336 338 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 338 337 339 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1211 -1
     (nil))
;;  succ:       37 (FALLTHRU,DFS_BACK)

;; basic block 37, loop depth 1, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       31
;;              36 (FALLTHRU,DFS_BACK)
(code_label 339 338 340 37 212 (nil) [1 uses])
(note 340 339 341 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 37 (set (reg/f:DI 349)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1211 -1
     (nil))
(insn 342 341 344 37 (set (reg:SI 192 [ _106 ])
        (mem:SI (plus:DI (reg/f:DI 349)
                (const_int 8048 [0x1f70])) [3 serwer_178(D)->skarb.count_one_coin+0 S4 A64])) "function.c":1211 -1
     (nil))
(insn 344 342 345 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [3 i+0 S4 A32])
            (reg:SI 192 [ _106 ]))) "function.c":1211 -1
     (nil))
(jump_insn 345 344 346 37 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 343)
            (pc))) "function.c":1211 -1
     (nil)
 -> 343)
;;  succ:       32
;;              38 (FALLTHRU)

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       37 (FALLTHRU)
(note 346 345 347 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 38 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1221 -1
     (nil))
(jump_insn 348 347 349 38 (set (pc)
        (label_ref 404)) "function.c":1221 -1
     (nil)
 -> 404)
;;  succ:       44

(barrier 349 348 408)
;; basic block 39, loop depth 1, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       44
(code_label 408 349 350 39 217 (nil) [1 uses])
(note 350 408 351 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 39 (set (reg/f:DI 350)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1223 -1
     (nil))
(insn 352 351 353 39 (set (reg/f:DI 193 [ _107 ])
        (mem/f:DI (plus:DI (reg/f:DI 350)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1223 -1
     (nil))
(insn 353 352 354 39 (set (reg:SI 351)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1223 -1
     (nil))
(insn 354 353 355 39 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 351))) "function.c":1223 -1
     (nil))
(insn 355 354 356 39 (parallel [
            (set (reg:DI 195 [ _109 ])
                (ashift:DI (reg:DI 194 [ _108 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))
(insn 356 355 357 39 (parallel [
            (set (reg/f:DI 196 [ _110 ])
                (plus:DI (reg/f:DI 193 [ _107 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))
(insn 357 356 358 39 (set (reg/f:DI 197 [ _111 ])
        (mem/f:DI (reg/f:DI 196 [ _110 ]) [10 *_110+0 S8 A64])) "function.c":1223 -1
     (nil))
(insn 358 357 359 39 (set (reg:SI 352)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1223 -1
     (nil))
(insn 359 358 360 39 (set (reg:DI 198 [ _112 ])
        (sign_extend:DI (reg:SI 352))) "function.c":1223 -1
     (nil))
(insn 360 359 361 39 (parallel [
            (set (reg/f:DI 199 [ _113 ])
                (plus:DI (reg/f:DI 197 [ _111 ])
                    (reg:DI 198 [ _112 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))
(insn 361 360 362 39 (set (reg:QI 200 [ _114 ])
        (mem:QI (reg/f:DI 199 [ _113 ]) [0 *_113+0 S1 A8])) "function.c":1223 -1
     (nil))
(insn 362 361 363 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 200 [ _114 ])
            (const_int 116 [0x74]))) "function.c":1223 -1
     (nil))
(jump_insn 363 362 364 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) "function.c":1223 -1
     (nil)
 -> 401)
;;  succ:       40 (FALLTHRU)
;;              43

;; basic block 40, loop depth 1, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
(note 364 363 365 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 40 (set (reg/f:DI 353)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1223 -1
     (nil))
(insn 366 365 367 40 (set (reg:SI 355)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])) "function.c":1223 -1
     (nil))
(insn 367 366 368 40 (set (reg:DI 354)
        (sign_extend:DI (reg:SI 355))) "function.c":1223 -1
     (nil))
(insn 368 367 369 40 (parallel [
            (set (reg:DI 356)
                (plus:DI (reg:DI 354)
                    (const_int 1006 [0x3ee])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1223 -1
     (nil))
(insn 369 368 370 40 (set (reg:SI 201 [ _115 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 356)
                        (const_int 8 [0x8]))
                    (reg/f:DI 353))
                (const_int 4 [0x4])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1223 -1
     (nil))
(insn 370 369 371 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 201 [ _115 ]))) "function.c":1223 -1
     (nil))
(jump_insn 371 370 372 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) "function.c":1223 -1
     (nil)
 -> 401)
;;  succ:       41 (FALLTHRU)
;;              43

;; basic block 41, loop depth 1, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
(note 372 371 373 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 41 (set (reg/f:DI 357)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1223 -1
     (nil))
(insn 374 373 375 41 (set (reg:SI 359)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])) "function.c":1223 -1
     (nil))
(insn 375 374 376 41 (set (reg:DI 358)
        (sign_extend:DI (reg:SI 359))) "function.c":1223 -1
     (nil))
(insn 376 375 377 41 (set (reg:SI 202 [ _116 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 358)
                        (const_int 8 [0x8]))
                    (reg/f:DI 357))
                (const_int 8056 [0x1f78])) [3 serwer_178(D)->skarb.treasure_coin S4 A32])) "function.c":1223 -1
     (nil))
(insn 377 376 378 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 202 [ _116 ]))) "function.c":1223 -1
     (nil))
(jump_insn 378 377 379 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 401)
            (pc))) "function.c":1223 -1
     (nil)
 -> 401)
;;  succ:       42 (FALLTHRU)
;;              43

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       41 (FALLTHRU)
(note 379 378 380 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 380 379 381 42 (set (reg/f:DI 360)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1225 -1
     (nil))
(insn 381 380 382 42 (set (reg/f:DI 203 [ _117 ])
        (mem/f:DI (plus:DI (reg/f:DI 360)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1225 -1
     (nil))
(insn 382 381 383 42 (set (reg:SI 204 [ _118 ])
        (mem:SI (plus:DI (reg/f:DI 203 [ _117 ])
                (const_int 32 [0x20])) [3 _117->coins_carried+0 S4 A64])) "function.c":1225 -1
     (nil))
(insn 383 382 384 42 (set (reg/f:DI 361)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1225 -1
     (nil))
(insn 384 383 385 42 (set (reg/f:DI 205 [ _119 ])
        (mem/f:DI (plus:DI (reg/f:DI 361)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1225 -1
     (nil))
(insn 385 384 386 42 (parallel [
            (set (reg:SI 206 [ _120 ])
                (plus:SI (reg:SI 204 [ _118 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1225 -1
     (nil))
(insn 386 385 387 42 (set (mem:SI (plus:DI (reg/f:DI 205 [ _119 ])
                (const_int 32 [0x20])) [3 _119->coins_carried+0 S4 A64])
        (reg:SI 206 [ _120 ])) "function.c":1225 -1
     (nil))
(insn 387 386 388 42 (set (reg/f:DI 362)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1226 -1
     (nil))
(insn 388 387 389 42 (set (reg/f:DI 207 [ _121 ])
        (mem/f:DI (plus:DI (reg/f:DI 362)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1226 -1
     (nil))
(insn 389 388 390 42 (set (reg:SI 363)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1226 -1
     (nil))
(insn 390 389 391 42 (set (reg:DI 208 [ _122 ])
        (sign_extend:DI (reg:SI 363))) "function.c":1226 -1
     (nil))
(insn 391 390 392 42 (parallel [
            (set (reg:DI 209 [ _123 ])
                (ashift:DI (reg:DI 208 [ _122 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1226 -1
     (nil))
(insn 392 391 393 42 (parallel [
            (set (reg/f:DI 210 [ _124 ])
                (plus:DI (reg/f:DI 207 [ _121 ])
                    (reg:DI 209 [ _123 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1226 -1
     (nil))
(insn 393 392 394 42 (set (reg/f:DI 211 [ _125 ])
        (mem/f:DI (reg/f:DI 210 [ _124 ]) [10 *_124+0 S8 A64])) "function.c":1226 -1
     (nil))
(insn 394 393 395 42 (set (reg:SI 364)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1226 -1
     (nil))
(insn 395 394 396 42 (set (reg:DI 212 [ _126 ])
        (sign_extend:DI (reg:SI 364))) "function.c":1226 -1
     (nil))
(insn 396 395 397 42 (parallel [
            (set (reg/f:DI 213 [ _127 ])
                (plus:DI (reg/f:DI 211 [ _125 ])
                    (reg:DI 212 [ _126 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1226 -1
     (nil))
(insn 397 396 398 42 (set (mem:QI (reg/f:DI 213 [ _127 ]) [0 *_127+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1226 -1
     (nil))
(insn 398 397 399 42 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1227 -1
     (nil))
(jump_insn 399 398 400 42 (set (pc)
        (label_ref 547)) "function.c":1227 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 400 399 401)
;; basic block 43, loop depth 1, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
;;              40
;;              41
(code_label 401 400 402 43 216 (nil) [3 uses])
(note 402 401 403 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1221 -1
     (nil))
;;  succ:       44 (FALLTHRU,DFS_BACK)

;; basic block 44, loop depth 1, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       38
;;              43 (FALLTHRU,DFS_BACK)
(code_label 404 403 405 44 215 (nil) [1 uses])
(note 405 404 406 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 44 (set (reg/f:DI 365)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1221 -1
     (nil))
(insn 407 406 409 44 (set (reg:SI 214 [ _128 ])
        (mem:SI (plus:DI (reg/f:DI 365)
                (const_int 16052 [0x3eb4])) [3 serwer_178(D)->skarb.count_treasure_coin+0 S4 A32])) "function.c":1221 -1
     (nil))
(insn 409 407 410 44 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [3 i+0 S4 A32])
            (reg:SI 214 [ _128 ]))) "function.c":1221 -1
     (nil))
(jump_insn 410 409 411 44 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 408)
            (pc))) "function.c":1221 -1
     (nil)
 -> 408)
;;  succ:       39
;;              45 (FALLTHRU)

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       44 (FALLTHRU)
(note 411 410 412 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 412 411 413 45 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1231 -1
     (nil))
(jump_insn 413 412 414 45 (set (pc)
        (label_ref 469)) "function.c":1231 -1
     (nil)
 -> 469)
;;  succ:       51

(barrier 414 413 473)
;; basic block 46, loop depth 1, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       51
(code_label 473 414 415 46 220 (nil) [1 uses])
(note 415 473 416 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 416 415 417 46 (set (reg/f:DI 366)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1233 -1
     (nil))
(insn 417 416 418 46 (set (reg/f:DI 215 [ _129 ])
        (mem/f:DI (plus:DI (reg/f:DI 366)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1233 -1
     (nil))
(insn 418 417 419 46 (set (reg:SI 367)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1233 -1
     (nil))
(insn 419 418 420 46 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 367))) "function.c":1233 -1
     (nil))
(insn 420 419 421 46 (parallel [
            (set (reg:DI 217 [ _131 ])
                (ashift:DI (reg:DI 216 [ _130 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))
(insn 421 420 422 46 (parallel [
            (set (reg/f:DI 218 [ _132 ])
                (plus:DI (reg/f:DI 215 [ _129 ])
                    (reg:DI 217 [ _131 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))
(insn 422 421 423 46 (set (reg/f:DI 219 [ _133 ])
        (mem/f:DI (reg/f:DI 218 [ _132 ]) [10 *_132+0 S8 A64])) "function.c":1233 -1
     (nil))
(insn 423 422 424 46 (set (reg:SI 368)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1233 -1
     (nil))
(insn 424 423 425 46 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 368))) "function.c":1233 -1
     (nil))
(insn 425 424 426 46 (parallel [
            (set (reg/f:DI 221 [ _135 ])
                (plus:DI (reg/f:DI 219 [ _133 ])
                    (reg:DI 220 [ _134 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))
(insn 426 425 427 46 (set (reg:QI 222 [ _136 ])
        (mem:QI (reg/f:DI 221 [ _135 ]) [0 *_135+0 S1 A8])) "function.c":1233 -1
     (nil))
(insn 427 426 428 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 222 [ _136 ])
            (const_int 84 [0x54]))) "function.c":1233 -1
     (nil))
(jump_insn 428 427 429 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) "function.c":1233 -1
     (nil)
 -> 466)
;;  succ:       47 (FALLTHRU)
;;              50

;; basic block 47, loop depth 1, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       46 (FALLTHRU)
(note 429 428 430 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 47 (set (reg/f:DI 369)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1233 -1
     (nil))
(insn 431 430 432 47 (set (reg:SI 371)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])) "function.c":1233 -1
     (nil))
(insn 432 431 433 47 (set (reg:DI 370)
        (sign_extend:DI (reg:SI 371))) "function.c":1233 -1
     (nil))
(insn 433 432 434 47 (parallel [
            (set (reg:DI 372)
                (plus:DI (reg:DI 370)
                    (const_int 2006 [0x7d6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1233 -1
     (nil))
(insn 434 433 435 47 (set (reg:SI 223 [ _137 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 372)
                        (const_int 8 [0x8]))
                    (reg/f:DI 369))
                (const_int 8 [0x8])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A64])) "function.c":1233 -1
     (nil))
(insn 435 434 436 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 223 [ _137 ]))) "function.c":1233 -1
     (nil))
(jump_insn 436 435 437 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) "function.c":1233 -1
     (nil)
 -> 466)
;;  succ:       48 (FALLTHRU)
;;              50

;; basic block 48, loop depth 1, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
(note 437 436 438 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 48 (set (reg/f:DI 373)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1233 -1
     (nil))
(insn 439 438 440 48 (set (reg:SI 375)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])) "function.c":1233 -1
     (nil))
(insn 440 439 441 48 (set (reg:DI 374)
        (sign_extend:DI (reg:SI 375))) "function.c":1233 -1
     (nil))
(insn 441 440 442 48 (set (reg:SI 224 [ _138 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 374)
                        (const_int 8 [0x8]))
                    (reg/f:DI 373))
                (const_int 16060 [0x3ebc])) [3 serwer_178(D)->skarb.large_treasure_coin S4 A32])) "function.c":1233 -1
     (nil))
(insn 442 441 443 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 224 [ _138 ]))) "function.c":1233 -1
     (nil))
(jump_insn 443 442 444 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 466)
            (pc))) "function.c":1233 -1
     (nil)
 -> 466)
;;  succ:       49 (FALLTHRU)
;;              50

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 444 443 445 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 49 (set (reg/f:DI 376)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1235 -1
     (nil))
(insn 446 445 447 49 (set (reg/f:DI 225 [ _139 ])
        (mem/f:DI (plus:DI (reg/f:DI 376)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1235 -1
     (nil))
(insn 447 446 448 49 (set (reg:SI 226 [ _140 ])
        (mem:SI (plus:DI (reg/f:DI 225 [ _139 ])
                (const_int 32 [0x20])) [3 _139->coins_carried+0 S4 A64])) "function.c":1235 -1
     (nil))
(insn 448 447 449 49 (set (reg/f:DI 377)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1235 -1
     (nil))
(insn 449 448 450 49 (set (reg/f:DI 227 [ _141 ])
        (mem/f:DI (plus:DI (reg/f:DI 377)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1235 -1
     (nil))
(insn 450 449 451 49 (parallel [
            (set (reg:SI 228 [ _142 ])
                (plus:SI (reg:SI 226 [ _140 ])
                    (const_int 50 [0x32])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1235 -1
     (nil))
(insn 451 450 452 49 (set (mem:SI (plus:DI (reg/f:DI 227 [ _141 ])
                (const_int 32 [0x20])) [3 _141->coins_carried+0 S4 A64])
        (reg:SI 228 [ _142 ])) "function.c":1235 -1
     (nil))
(insn 452 451 453 49 (set (reg/f:DI 378)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1236 -1
     (nil))
(insn 453 452 454 49 (set (reg/f:DI 229 [ _143 ])
        (mem/f:DI (plus:DI (reg/f:DI 378)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1236 -1
     (nil))
(insn 454 453 455 49 (set (reg:SI 379)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1236 -1
     (nil))
(insn 455 454 456 49 (set (reg:DI 230 [ _144 ])
        (sign_extend:DI (reg:SI 379))) "function.c":1236 -1
     (nil))
(insn 456 455 457 49 (parallel [
            (set (reg:DI 231 [ _145 ])
                (ashift:DI (reg:DI 230 [ _144 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1236 -1
     (nil))
(insn 457 456 458 49 (parallel [
            (set (reg/f:DI 232 [ _146 ])
                (plus:DI (reg/f:DI 229 [ _143 ])
                    (reg:DI 231 [ _145 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1236 -1
     (nil))
(insn 458 457 459 49 (set (reg/f:DI 233 [ _147 ])
        (mem/f:DI (reg/f:DI 232 [ _146 ]) [10 *_146+0 S8 A64])) "function.c":1236 -1
     (nil))
(insn 459 458 460 49 (set (reg:SI 380)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1236 -1
     (nil))
(insn 460 459 461 49 (set (reg:DI 234 [ _148 ])
        (sign_extend:DI (reg:SI 380))) "function.c":1236 -1
     (nil))
(insn 461 460 462 49 (parallel [
            (set (reg/f:DI 235 [ _149 ])
                (plus:DI (reg/f:DI 233 [ _147 ])
                    (reg:DI 234 [ _148 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1236 -1
     (nil))
(insn 462 461 463 49 (set (mem:QI (reg/f:DI 235 [ _149 ]) [0 *_149+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1236 -1
     (nil))
(insn 463 462 464 49 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1237 -1
     (nil))
(jump_insn 464 463 465 49 (set (pc)
        (label_ref 547)) "function.c":1237 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 465 464 466)
;; basic block 50, loop depth 1, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       46
;;              47
;;              48
(code_label 466 465 467 50 219 (nil) [3 uses])
(note 467 466 468 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1231 -1
     (nil))
;;  succ:       51 (FALLTHRU,DFS_BACK)

;; basic block 51, loop depth 1, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL)
;;  pred:       45
;;              50 (FALLTHRU,DFS_BACK)
(code_label 469 468 470 51 218 (nil) [1 uses])
(note 470 469 471 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 471 470 472 51 (set (reg/f:DI 381)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1231 -1
     (nil))
(insn 472 471 474 51 (set (reg:SI 236 [ _150 ])
        (mem:SI (plus:DI (reg/f:DI 381)
                (const_int 24056 [0x5df8])) [3 serwer_178(D)->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1231 -1
     (nil))
(insn 474 472 475 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -28 [0xffffffffffffffe4])) [3 i+0 S4 A32])
            (reg:SI 236 [ _150 ]))) "function.c":1231 -1
     (nil))
(jump_insn 475 474 476 51 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 473)
            (pc))) "function.c":1231 -1
     (nil)
 -> 473)
;;  succ:       46
;;              52 (FALLTHRU)

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL)
;;  pred:       51 (FALLTHRU)
(note 476 475 477 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 52 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
        (const_int 0 [0])) "function.c":1241 -1
     (nil))
(jump_insn 478 477 479 52 (set (pc)
        (label_ref 538)) "function.c":1241 -1
     (nil)
 -> 538)
;;  succ:       58

(barrier 479 478 542)
;; basic block 53, loop depth 1, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL)
;;  pred:       58
(code_label 542 479 480 53 223 (nil) [1 uses])
(note 480 542 481 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 481 480 482 53 (set (reg/f:DI 382)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1243 -1
     (nil))
(insn 482 481 483 53 (set (reg:SI 384)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1243 -1
     (nil))
(insn 483 482 484 53 (set (reg:DI 383)
        (sign_extend:DI (reg:SI 384))) "function.c":1243 -1
     (nil))
(insn 484 483 485 53 (parallel [
            (set (reg:DI 385)
                (plus:DI (reg:DI 383)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1243 -1
     (nil))
(insn 485 484 486 53 (set (reg:SI 237 [ _151 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 385)
                    (const_int 4 [0x4]))
                (reg/f:DI 382)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1243 -1
     (nil))
(insn 486 485 487 53 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 237 [ _151 ])
            (const_int 0 [0]))) "function.c":1243 -1
     (nil))
(jump_insn 487 486 488 53 (set (pc)
        (if_then_else (lt (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) "function.c":1243 -1
     (nil)
 -> 535)
;;  succ:       54 (FALLTHRU)
;;              57

;; basic block 54, loop depth 1, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL)
;;  pred:       53 (FALLTHRU)
(note 488 487 489 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 54 (set (reg/f:DI 386)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1243 -1
     (nil))
(insn 490 489 491 54 (set (reg:SI 388)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1243 -1
     (nil))
(insn 491 490 492 54 (set (reg:DI 387)
        (sign_extend:DI (reg:SI 388))) "function.c":1243 -1
     (nil))
(insn 492 491 493 54 (parallel [
            (set (reg:DI 389)
                (plus:DI (reg:DI 387)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1243 -1
     (nil))
(insn 493 492 494 54 (set (reg:SI 238 [ _152 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 389)
                    (const_int 8 [0x8]))
                (reg/f:DI 386)) [3 serwer_178(D)->skarb.dropped_coin S4 A64])) "function.c":1243 -1
     (nil))
(insn 494 493 495 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])
            (reg:SI 238 [ _152 ]))) "function.c":1243 -1
     (nil))
(jump_insn 495 494 496 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) "function.c":1243 -1
     (nil)
 -> 535)
;;  succ:       55 (FALLTHRU)
;;              57

;; basic block 55, loop depth 1, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL)
;;  pred:       54 (FALLTHRU)
(note 496 495 497 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 497 496 498 55 (set (reg/f:DI 390)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1243 -1
     (nil))
(insn 498 497 499 55 (set (reg:SI 392)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1243 -1
     (nil))
(insn 499 498 500 55 (set (reg:DI 391)
        (sign_extend:DI (reg:SI 392))) "function.c":1243 -1
     (nil))
(insn 500 499 501 55 (set (reg:SI 239 [ _153 ])
        (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 391)
                        (const_int 8 [0x8]))
                    (reg/f:DI 390))
                (const_int 24068 [0x5e04])) [3 serwer_178(D)->skarb.dropped_coin S4 A32])) "function.c":1243 -1
     (nil))
(insn 501 500 502 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])
            (reg:SI 239 [ _153 ]))) "function.c":1243 -1
     (nil))
(jump_insn 502 501 503 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 535)
            (pc))) "function.c":1243 -1
     (nil)
 -> 535)
;;  succ:       56 (FALLTHRU)
;;              57

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL)
;;  pred:       55 (FALLTHRU)
(note 503 502 504 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 504 503 505 56 (set (reg/f:DI 393)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1245 -1
     (nil))
(insn 505 504 506 56 (set (reg/f:DI 240 [ _154 ])
        (mem/f:DI (plus:DI (reg/f:DI 393)
                (const_int 32 [0x20])) [14 serwer_178(D)->player1+0 S8 A64])) "function.c":1245 -1
     (nil))
(insn 506 505 507 56 (set (reg:SI 241 [ _155 ])
        (mem:SI (plus:DI (reg/f:DI 240 [ _154 ])
                (const_int 32 [0x20])) [3 _154->coins_carried+0 S4 A64])) "function.c":1245 -1
     (nil))
(insn 507 506 508 56 (set (reg/f:DI 394)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1245 -1
     (nil))
(insn 508 507 509 56 (set (reg:SI 396)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1245 -1
     (nil))
(insn 509 508 510 56 (set (reg:DI 395)
        (sign_extend:DI (reg:SI 396))) "function.c":1245 -1
     (nil))
(insn 510 509 511 56 (parallel [
            (set (reg:DI 397)
                (plus:DI (reg:DI 395)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1245 -1
     (nil))
(insn 511 510 512 56 (set (reg:SI 242 [ _156 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 397)
                    (const_int 4 [0x4]))
                (reg/f:DI 394)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])) "function.c":1245 -1
     (nil))
(insn 512 511 513 56 (set (reg/f:DI 398)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1245 -1
     (nil))
(insn 513 512 514 56 (set (reg/f:DI 243 [ _157 ])
        (mem/f:DI (plus:DI (reg/f:DI 398)
                (const_int 40 [0x28])) [14 serwer_178(D)->player2+0 S8 A64])) "function.c":1245 -1
     (nil))
(insn 514 513 515 56 (parallel [
            (set (reg:SI 244 [ _158 ])
                (plus:SI (reg:SI 241 [ _155 ])
                    (reg:SI 242 [ _156 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1245 -1
     (nil))
(insn 515 514 516 56 (set (mem:SI (plus:DI (reg/f:DI 243 [ _157 ])
                (const_int 32 [0x20])) [3 _157->coins_carried+0 S4 A64])
        (reg:SI 244 [ _158 ])) "function.c":1245 -1
     (nil))
(insn 516 515 517 56 (set (reg/f:DI 399)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1246 -1
     (nil))
(insn 517 516 518 56 (set (reg:SI 401)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])) "function.c":1246 -1
     (nil))
(insn 518 517 519 56 (set (reg:DI 400)
        (sign_extend:DI (reg:SI 401))) "function.c":1246 -1
     (nil))
(insn 519 518 520 56 (parallel [
            (set (reg:DI 402)
                (plus:DI (reg:DI 400)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1246 -1
     (nil))
(insn 520 519 521 56 (set (mem:SI (plus:DI (mult:DI (reg:DI 402)
                    (const_int 4 [0x4]))
                (reg/f:DI 399)) [3 serwer_178(D)->skarb.value_all_dropped_coin S4 A32])
        (const_int -1 [0xffffffffffffffff])) "function.c":1246 -1
     (nil))
(insn 521 520 522 56 (set (reg/f:DI 403)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1247 -1
     (nil))
(insn 522 521 523 56 (set (reg/f:DI 245 [ _159 ])
        (mem/f:DI (plus:DI (reg/f:DI 403)
                (const_int 16 [0x10])) [9 serwer_178(D)->mapa+0 S8 A64])) "function.c":1247 -1
     (nil))
(insn 523 522 524 56 (set (reg:SI 404)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -36 [0xffffffffffffffdc])) [3 y+0 S4 A32])) "function.c":1247 -1
     (nil))
(insn 524 523 525 56 (set (reg:DI 246 [ _160 ])
        (sign_extend:DI (reg:SI 404))) "function.c":1247 -1
     (nil))
(insn 525 524 526 56 (parallel [
            (set (reg:DI 247 [ _161 ])
                (ashift:DI (reg:DI 246 [ _160 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1247 -1
     (nil))
(insn 526 525 527 56 (parallel [
            (set (reg/f:DI 248 [ _162 ])
                (plus:DI (reg/f:DI 245 [ _159 ])
                    (reg:DI 247 [ _161 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1247 -1
     (nil))
(insn 527 526 528 56 (set (reg/f:DI 249 [ _163 ])
        (mem/f:DI (reg/f:DI 248 [ _162 ]) [10 *_162+0 S8 A64])) "function.c":1247 -1
     (nil))
(insn 528 527 529 56 (set (reg:SI 405)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 x+0 S4 A32])) "function.c":1247 -1
     (nil))
(insn 529 528 530 56 (set (reg:DI 250 [ _164 ])
        (sign_extend:DI (reg:SI 405))) "function.c":1247 -1
     (nil))
(insn 530 529 531 56 (parallel [
            (set (reg/f:DI 251 [ _165 ])
                (plus:DI (reg/f:DI 249 [ _163 ])
                    (reg:DI 250 [ _164 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1247 -1
     (nil))
(insn 531 530 532 56 (set (mem:QI (reg/f:DI 251 [ _165 ]) [0 *_165+0 S1 A8])
        (const_int 46 [0x2e])) "function.c":1247 -1
     (nil))
(insn 532 531 533 56 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1248 -1
     (nil))
(jump_insn 533 532 534 56 (set (pc)
        (label_ref 547)) "function.c":1248 -1
     (nil)
 -> 547)
;;  succ:       60

(barrier 534 533 535)
;; basic block 57, loop depth 1, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       53
;;              54
;;              55
(code_label 535 534 536 57 222 (nil) [3 uses])
(note 536 535 537 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1241 -1
     (nil))
;;  succ:       58 (FALLTHRU,DFS_BACK)

;; basic block 58, loop depth 1, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       52
;;              57 (FALLTHRU,DFS_BACK)
(code_label 538 537 539 58 221 (nil) [1 uses])
(note 539 538 540 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 58 (set (reg/f:DI 406)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [12 serwer+0 S8 A64])) "function.c":1241 -1
     (nil))
(insn 541 540 543 58 (set (reg:SI 252 [ _166 ])
        (mem:SI (plus:DI (reg/f:DI 406)
                (const_int 24060 [0x5dfc])) [3 serwer_178(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1241 -1
     (nil))
(insn 543 541 544 58 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -32 [0xffffffffffffffe0])) [3 i+0 S4 A32])
            (reg:SI 252 [ _166 ]))) "function.c":1241 -1
     (nil))
(jump_insn 544 543 545 58 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 542)
            (pc))) "function.c":1241 -1
     (nil)
 -> 542)
;;  succ:       53
;;              59 (FALLTHRU)

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       58 (FALLTHRU)
(note 545 544 546 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 546 545 547 59 (set (reg/f:DI 253 [ _175 ])
        (const_int 0 [0])) "function.c":1251 -1
     (nil))
;;  succ:       60 (FALLTHRU)

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
;;              14
;;              21
;;              28
;;              35
;;              42
;;              49
;;              56
;;              59 (FALLTHRU)
(code_label 547 546 548 60 201 (nil) [8 uses])
(note 548 547 549 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 549 548 553 60 (set (reg/f:DI 254 [ <retval> ])
        (reg/f:DI 253 [ _175 ])) -1
     (nil))
(insn 553 549 554 60 (set (reg/i:DI 0 ax)
        (reg/f:DI 254 [ <retval> ])) "function.c":1252 -1
     (nil))
(insn 554 553 0 60 (use (reg/i:DI 0 ax)) "function.c":1252 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function oboz_random (oboz_random, funcdef_no=25, decl_uid=6257, cgraph_uid=25, symbol_order=28)

oboz_random (struct serwer_info * serwer)
{
  int y;
  int x;
  int upp;
  int low;
  long int _1;
  unsigned int _2;
  char * * _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  sizetype _8;
  char * _9;
  char _10;
  char * * _11;
  long unsigned int _12;
  long unsigned int _13;
  char * * _14;
  char * _15;
  sizetype _16;
  char * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  low_22 = 0;
  upp_23 = 0;
  x_24 = 0;
  y_25 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  low_26 = 1;
  upp_27 = 29;
  x_29 = random_return (low_26, upp_27);
  low_30 = 1;
  upp_31 = 19;
  y_33 = random_return (low_30, upp_31);
  _3 = serwer_34(D)->mapa;
  _4 = (long unsigned int) y_33;
  _5 = _4 * 8;
  _6 = _3 + _5;
  _7 = *_6;
  _8 = (sizetype) x_29;
  _9 = _7 + _8;
  _10 = *_9;
  if (_10 == 46)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _11 = serwer_34(D)->mapa;
  _12 = (long unsigned int) y_33;
  _13 = _12 * 8;
  _14 = _11 + _13;
  _15 = *_14;
  _16 = (sizetype) x_29;
  _17 = _15 + _16;
  *_17 = 65;
  serwer_34(D)->x_camp = x_29;
  serwer_34(D)->y_camp = y_33;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L4>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 22 (low_22 - 22 )
Partition 23 (upp_23 - 23 )
Partition 24 (x_24 - 24 )
Partition 25 (y_25 - 25 )
Partition 26 (low_26 - 26 )
Partition 27 (upp_27 - 27 )
Partition 29 (x_29 - 29 )
Partition 30 (low_30 - 30 )
Partition 31 (upp_31 - 31 )
Partition 33 (y_33 - 33 )
Partition 34 (serwer_34(D) - 34 )


Coalescible Partition map 

Partition 0, base 0 (low_22 - 22 26 30 )
Partition 1, base 1 (upp_23 - 23 27 31 )
Partition 2, base 2 (x_24 - 24 29 )
Partition 3, base 3 (y_25 - 25 33 )
Partition 10, base 4 (serwer_34(D) - 34 )


Partition map 

Partition 0 (low_22 - 22 )
Partition 1 (upp_23 - 23 )
Partition 2 (x_24 - 24 )
Partition 3 (y_25 - 25 )
Partition 4 (low_26 - 26 )
Partition 5 (upp_27 - 27 )
Partition 6 (x_29 - 29 )
Partition 7 (low_30 - 30 )
Partition 8 (upp_31 - 31 )
Partition 9 (y_33 - 33 )
Partition 10 (serwer_34(D) - 34 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) low_22 <-> low_26
(2147483646, 0) upp_23 <-> upp_27
(2147483646, 0) x_24 <-> x_29
(2147483646, 0) low_22 <-> low_30
(2147483646, 0) upp_23 <-> upp_31
(2147483646, 0) y_25 <-> y_33

Partition map 

Partition 0 (low_22 - 22 )
Partition 1 (upp_23 - 23 )
Partition 2 (x_24 - 24 )
Partition 3 (y_25 - 25 )
Partition 4 (low_26 - 26 )
Partition 5 (upp_27 - 27 )
Partition 6 (x_29 - 29 )
Partition 7 (low_30 - 30 )
Partition 8 (upp_31 - 31 )
Partition 9 (y_33 - 33 )
Partition 10 (serwer_34(D) - 34 )

Coalesce list: (22)low_22 & (26)low_26 [map: 0, 4] : Success -> 0
Coalesce list: (23)upp_23 & (27)upp_27 [map: 1, 5] : Success -> 1
Coalesce list: (24)x_24 & (29)x_29 [map: 2, 6] : Success -> 2
Coalesce list: (22)low_22 & (30)low_30 [map: 0, 7] : Success -> 0
Coalesce list: (23)upp_23 & (31)upp_31 [map: 1, 8] : Success -> 1
Coalesce list: (25)y_25 & (33)y_33 [map: 3, 9] : Success -> 3
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (low_22 - 22 26 30 )
Partition 18 (upp_23 - 23 27 31 )
Partition 19 (x_24 - 24 29 )
Partition 20 (y_25 - 25 33 )
Partition 21 (serwer_34(D) - 34 )

oboz_random (struct serwer_info * serwer)
{
  int y;
  int x;
  int upp;
  int low;
  long int _1;
  unsigned int _2;
  char * * _3;
  long unsigned int _4;
  long unsigned int _5;
  char * * _6;
  char * _7;
  sizetype _8;
  char * _9;
  char _10;
  char * * _11;
  long unsigned int _12;
  long unsigned int _13;
  char * * _14;
  char * _15;
  sizetype _16;
  char * _17;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  low_22 = 0;
  upp_23 = 0;
  x_24 = 0;
  y_25 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  low_26 = 1;
  upp_27 = 29;
  x_29 = random_return (low_26, upp_27);
  low_30 = 1;
  upp_31 = 19;
  y_33 = random_return (low_30, upp_31);
  _3 = serwer_34(D)->mapa;
  _4 = (long unsigned int) y_33;
  _5 = _4 * 8;
  _6 = _3 + _5;
  _7 = *_6;
  _8 = (sizetype) x_29;
  _9 = _7 + _8;
  _10 = *_9;
  if (_10 == 46)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _11 = serwer_34(D)->mapa;
  _12 = (long unsigned int) y_33;
  _13 = _12 * 8;
  _14 = _11 + _13;
  _15 = *_14;
  _16 = (sizetype) x_29;
  _17 = _15 + _16;
  *_17 = 65;
  serwer_34(D)->x_camp = x_29;
  serwer_34(D)->y_camp = y_33;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 6, loop depth 0
;;    pred:       4
;;    succ:       7

;;   basic block 7, loop depth 0
;;    pred:       6
<L4>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = time (0B);

(insn 6 5 7 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":1256 -1
     (nil))

(call_insn 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":1256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 8 7 0 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":1256 -1
     (nil))

;; _2 = (unsigned int) _1;

(insn 9 8 0 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":1256 -1
     (nil))

;; srand (_2);

(insn 10 9 11 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":1256 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":1256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; low_22 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 0 [0])) "function.c":1257 -1
     (nil))

;; upp_23 = 0;

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1258 -1
     (nil))

;; x_24 = 0;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":1259 -1
     (nil))

;; y_25 = 0;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":1260 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; low_26 = 1;

(insn 17 16 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1264 -1
     (nil))

;; upp_27 = 29;

(insn 18 17 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":1264 -1
     (nil))

;; x_29 = random_return (low_26, upp_27);

(insn 19 18 20 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1265 -1
     (nil))

(insn 20 19 21 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1265 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg:SI 104)) "function.c":1265 -1
     (nil))

(insn 22 21 23 (set (reg:SI 5 di)
        (reg:SI 105)) "function.c":1265 -1
     (nil))

(call_insn 23 22 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1265 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 24 23 25 (set (reg:SI 106)
        (reg:SI 0 ax)) "function.c":1265 -1
     (nil))

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 106)) "function.c":1265 -1
     (nil))

;; low_30 = 1;

(insn 26 25 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1268 -1
     (nil))

;; upp_31 = 19;

(insn 27 26 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":1268 -1
     (nil))

;; y_33 = random_return (low_30, upp_31);

(insn 28 27 29 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1269 -1
     (nil))

(insn 29 28 30 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1269 -1
     (nil))

(insn 30 29 31 (set (reg:SI 4 si)
        (reg:SI 107)) "function.c":1269 -1
     (nil))

(insn 31 30 32 (set (reg:SI 5 di)
        (reg:SI 108)) "function.c":1269 -1
     (nil))

(call_insn 32 31 33 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1269 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 33 32 34 (set (reg:SI 109)
        (reg:SI 0 ax)) "function.c":1269 -1
     (nil))

(insn 34 33 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 109)) "function.c":1269 -1
     (nil))

;; _3 = serwer_34(D)->mapa;

(insn 35 34 36 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1271 -1
     (nil))

(insn 36 35 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 110)
                (const_int 16 [0x10])) [9 serwer_34(D)->mapa+0 S8 A64])) "function.c":1271 -1
     (nil))

;; _4 = (long unsigned int) y_33;

(insn 37 36 38 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1271 -1
     (nil))

(insn 38 37 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 111))) "function.c":1271 -1
     (nil))

;; _5 = _4 * 8;

(insn 39 38 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1271 -1
     (nil))

;; _6 = _3 + _5;

(insn 40 39 0 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 89 [ _3 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1271 -1
     (nil))

;; _7 = *_6;

(insn 41 40 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":1271 -1
     (nil))

;; _8 = (sizetype) x_29;

(insn 42 41 43 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1271 -1
     (nil))

(insn 43 42 0 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 112))) "function.c":1271 -1
     (nil))

;; _9 = _7 + _8;

(insn 44 43 0 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1271 -1
     (nil))

;; _10 = *_9;

(insn 45 44 0 (set (reg:QI 96 [ _10 ])
        (mem:QI (reg/f:DI 95 [ _9 ]) [0 *_9+0 S1 A8])) "function.c":1271 -1
     (nil))

;; if (_10 == 46)

(insn 46 45 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ _10 ])
            (const_int 46 [0x2e]))) "function.c":1271 -1
     (nil))

(jump_insn 47 46 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1271 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _11 = serwer_34(D)->mapa;

(insn 49 48 50 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1273 -1
     (nil))

(insn 50 49 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 113)
                (const_int 16 [0x10])) [9 serwer_34(D)->mapa+0 S8 A64])) "function.c":1273 -1
     (nil))

;; _12 = (long unsigned int) y_33;

(insn 51 50 52 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1273 -1
     (nil))

(insn 52 51 0 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 114))) "function.c":1273 -1
     (nil))

;; _13 = _12 * 8;

(insn 53 52 0 (parallel [
            (set (reg:DI 99 [ _13 ])
                (ashift:DI (reg:DI 98 [ _12 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1273 -1
     (nil))

;; _14 = _11 + _13;

(insn 54 53 0 (parallel [
            (set (reg/f:DI 100 [ _14 ])
                (plus:DI (reg/f:DI 97 [ _11 ])
                    (reg:DI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1273 -1
     (nil))

;; _15 = *_14;

(insn 55 54 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (reg/f:DI 100 [ _14 ]) [10 *_14+0 S8 A64])) "function.c":1273 -1
     (nil))

;; _16 = (sizetype) x_29;

(insn 56 55 57 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1273 -1
     (nil))

(insn 57 56 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 115))) "function.c":1273 -1
     (nil))

;; _17 = _15 + _16;

(insn 58 57 0 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 101 [ _15 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1273 -1
     (nil))

;; *_17 = 65;

(insn 59 58 0 (set (mem:QI (reg/f:DI 103 [ _17 ]) [0 *_17+0 S1 A8])
        (const_int 65 [0x41])) "function.c":1273 -1
     (nil))

;; serwer_34(D)->x_camp = x_29;

(insn 60 59 61 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1274 -1
     (nil))

(insn 61 60 62 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1274 -1
     (nil))

(insn 62 61 0 (set (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 4 [0x4])) [3 serwer_34(D)->x_camp+0 S4 A32])
        (reg:SI 117)) "function.c":1274 -1
     (nil))

;; serwer_34(D)->y_camp = y_33;

(insn 63 62 64 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1275 -1
     (nil))

(insn 64 63 65 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1275 -1
     (nil))

(insn 65 64 0 (set (mem:SI (plus:DI (reg/f:DI 118)
                (const_int 8 [0x8])) [3 serwer_34(D)->y_camp+0 S4 A64])
        (reg:SI 119)) "function.c":1275 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 68 67 69 225 (nil) [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 6

;; 

(code_label 73 72 74 226 (nil) [0 uses])

(note 74 73 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 7

;; <L4>:

(code_label 75 74 76 228 (nil) [0 uses])

(note 76 75 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 8 into block 7...
Merged blocks 7 and 8.
Merged 7 and 8 without moving.
Merging block 9 into block 7...
Merged blocks 7 and 9.
Merged 7 and 9 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1255 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":1256 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":1256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":1256 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":1256 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":1256 -1
     (nil))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":1256 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 0 [0])) "function.c":1257 -1
     (nil))
(insn 13 12 14 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1258 -1
     (nil))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":1259 -1
     (nil))
(insn 15 14 70 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":1260 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              6 (DFS_BACK)
(code_label 70 15 16 4 227 (nil) [1 uses])
(note 16 70 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1264 -1
     (nil))
(insn 18 17 19 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":1264 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1265 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 105)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1265 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 4 si)
        (reg:SI 104)) "function.c":1265 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 5 di)
        (reg:SI 105)) "function.c":1265 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1265 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg:SI 106)
        (reg:SI 0 ax)) "function.c":1265 -1
     (nil))
(insn 25 24 26 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 106)) "function.c":1265 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1268 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":1268 -1
     (nil))
(insn 28 27 29 4 (set (reg:SI 107)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1269 -1
     (nil))
(insn 29 28 30 4 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1269 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 4 si)
        (reg:SI 107)) "function.c":1269 -1
     (nil))
(insn 31 30 32 4 (set (reg:SI 5 di)
        (reg:SI 108)) "function.c":1269 -1
     (nil))
(call_insn 32 31 33 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1269 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 33 32 34 4 (set (reg:SI 109)
        (reg:SI 0 ax)) "function.c":1269 -1
     (nil))
(insn 34 33 35 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 109)) "function.c":1269 -1
     (nil))
(insn 35 34 36 4 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1271 -1
     (nil))
(insn 36 35 37 4 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 110)
                (const_int 16 [0x10])) [9 serwer_34(D)->mapa+0 S8 A64])) "function.c":1271 -1
     (nil))
(insn 37 36 38 4 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1271 -1
     (nil))
(insn 38 37 39 4 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 111))) "function.c":1271 -1
     (nil))
(insn 39 38 40 4 (parallel [
            (set (reg:DI 91 [ _5 ])
                (ashift:DI (reg:DI 90 [ _4 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1271 -1
     (nil))
(insn 40 39 41 4 (parallel [
            (set (reg/f:DI 92 [ _6 ])
                (plus:DI (reg/f:DI 89 [ _3 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1271 -1
     (nil))
(insn 41 40 42 4 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (reg/f:DI 92 [ _6 ]) [10 *_6+0 S8 A64])) "function.c":1271 -1
     (nil))
(insn 42 41 43 4 (set (reg:SI 112)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1271 -1
     (nil))
(insn 43 42 44 4 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 112))) "function.c":1271 -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1271 -1
     (nil))
(insn 45 44 46 4 (set (reg:QI 96 [ _10 ])
        (mem:QI (reg/f:DI 95 [ _9 ]) [0 *_9+0 S1 A8])) "function.c":1271 -1
     (nil))
(insn 46 45 47 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 96 [ _10 ])
            (const_int 46 [0x2e]))) "function.c":1271 -1
     (nil))
(jump_insn 47 46 48 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 68)
            (pc))) "function.c":1271 -1
     (nil)
 -> 68)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 48 47 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 50 5 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1273 -1
     (nil))
(insn 50 49 51 5 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 113)
                (const_int 16 [0x10])) [9 serwer_34(D)->mapa+0 S8 A64])) "function.c":1273 -1
     (nil))
(insn 51 50 52 5 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1273 -1
     (nil))
(insn 52 51 53 5 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 114))) "function.c":1273 -1
     (nil))
(insn 53 52 54 5 (parallel [
            (set (reg:DI 99 [ _13 ])
                (ashift:DI (reg:DI 98 [ _12 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1273 -1
     (nil))
(insn 54 53 55 5 (parallel [
            (set (reg/f:DI 100 [ _14 ])
                (plus:DI (reg/f:DI 97 [ _11 ])
                    (reg:DI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1273 -1
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (reg/f:DI 100 [ _14 ]) [10 *_14+0 S8 A64])) "function.c":1273 -1
     (nil))
(insn 56 55 57 5 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1273 -1
     (nil))
(insn 57 56 58 5 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 115))) "function.c":1273 -1
     (nil))
(insn 58 57 59 5 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 101 [ _15 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1273 -1
     (nil))
(insn 59 58 60 5 (set (mem:QI (reg/f:DI 103 [ _17 ]) [0 *_17+0 S1 A8])
        (const_int 65 [0x41])) "function.c":1273 -1
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1274 -1
     (nil))
(insn 61 60 62 5 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1274 -1
     (nil))
(insn 62 61 63 5 (set (mem:SI (plus:DI (reg/f:DI 116)
                (const_int 4 [0x4])) [3 serwer_34(D)->x_camp+0 S4 A32])
        (reg:SI 117)) "function.c":1274 -1
     (nil))
(insn 63 62 64 5 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1275 -1
     (nil))
(insn 64 63 65 5 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1275 -1
     (nil))
(insn 65 64 66 5 (set (mem:SI (plus:DI (reg/f:DI 118)
                (const_int 8 [0x8])) [3 serwer_34(D)->y_camp+0 S4 A64])
        (reg:SI 119)) "function.c":1275 -1
     (nil))
(jump_insn 66 65 67 5 (set (pc)
        (label_ref 73)) "function.c":1276 -1
     (nil)
 -> 73)
;;  succ:       7

(barrier 67 66 68)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 68 67 69 6 225 (nil) [1 uses])
(note 69 68 71 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 71 69 72 6 (set (pc)
        (label_ref 70)) "function.c":1264 -1
     (nil)
 -> 70)
;;  succ:       4 (DFS_BACK)

(barrier 72 71 73)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 73 72 74 7 226 (nil) [1 uses])
(note 74 73 79 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 79 74 0 7 (const_int 0 [0]) "function.c":1279 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function oboz_coins (oboz_coins, funcdef_no=26, decl_uid=6259, cgraph_uid=26, symbol_order=29)

oboz_coins (struct serwer_info * serwer)
{
  int _1;
  struct player_info * _2;
  int _3;
  int _4;
  struct player_info * _5;
  int _6;
  struct player_info * _7;
  int _8;
  struct player_info * _9;
  int _10;
  struct player_info * _11;
  int _12;
  struct player_info * _13;
  int _14;
  struct player_info * _15;
  int _16;
  int _17;
  struct player_info * _18;
  int _19;
  struct player_info * _20;
  int _21;
  struct player_info * _22;
  int _23;
  struct player_info * _24;
  int _25;
  struct player_info * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_30(D)->x_camp;
  _2 = serwer_30(D)->player1;
  _3 = _2->x_current;
  if (_1 == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = serwer_30(D)->y_camp;
  _5 = serwer_30(D)->player1;
  _6 = _5->y_current;
  if (_4 == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _7 = serwer_30(D)->player1;
  _8 = _7->coins_brought;
  _9 = serwer_30(D)->player1;
  _10 = _9->coins_carried;
  _11 = serwer_30(D)->player1;
  _12 = _8 + _10;
  _11->coins_brought = _12;
  _13 = serwer_30(D)->player1;
  _13->coins_carried = 0;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
;;                4
  _14 = serwer_30(D)->x_camp;
  _15 = serwer_30(D)->player2;
  _16 = _15->x_current;
  if (_14 == _16)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       5
  _17 = serwer_30(D)->y_camp;
  _18 = serwer_30(D)->player2;
  _19 = _18->y_current;
  if (_17 == _19)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _20 = serwer_30(D)->player2;
  _21 = _20->coins_brought;
  _22 = serwer_30(D)->player2;
  _23 = _22->coins_carried;
  _24 = serwer_30(D)->player2;
  _25 = _21 + _23;
  _24->coins_brought = _25;
  _26 = serwer_30(D)->player2;
  _26->coins_carried = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       5
;;                6
;;                7
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L8>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 30 (serwer_30(D) - 30 )


Coalescible Partition map 

Partition 0, base 0 (serwer_30(D) - 30 )


Partition map 

Partition 0 (serwer_30(D) - 30 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (serwer_30(D) - 30 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (serwer_30(D) - 30 )

oboz_coins (struct serwer_info * serwer)
{
  int _1;
  struct player_info * _2;
  int _3;
  int _4;
  struct player_info * _5;
  int _6;
  struct player_info * _7;
  int _8;
  struct player_info * _9;
  int _10;
  struct player_info * _11;
  int _12;
  struct player_info * _13;
  int _14;
  struct player_info * _15;
  int _16;
  int _17;
  struct player_info * _18;
  int _19;
  struct player_info * _20;
  int _21;
  struct player_info * _22;
  int _23;
  struct player_info * _24;
  int _25;
  struct player_info * _26;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_30(D)->x_camp;
  _2 = serwer_30(D)->player1;
  _3 = _2->x_current;
  if (_1 == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = serwer_30(D)->y_camp;
  _5 = serwer_30(D)->player1;
  _6 = _5->y_current;
  if (_4 == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _7 = serwer_30(D)->player1;
  _8 = _7->coins_brought;
  _9 = serwer_30(D)->player1;
  _10 = _9->coins_carried;
  _11 = serwer_30(D)->player1;
  _12 = _8 + _10;
  _11->coins_brought = _12;
  _13 = serwer_30(D)->player1;
  _13->coins_carried = 0;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
;;                4
  _14 = serwer_30(D)->x_camp;
  _15 = serwer_30(D)->player2;
  _16 = _15->x_current;
  if (_14 == _16)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       5
  _17 = serwer_30(D)->y_camp;
  _18 = serwer_30(D)->player2;
  _19 = _18->y_current;
  if (_17 == _19)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _20 = serwer_30(D)->player2;
  _21 = _20->coins_brought;
  _22 = serwer_30(D)->player2;
  _23 = _22->coins_carried;
  _24 = serwer_30(D)->player2;
  _25 = _21 + _23;
  _24->coins_brought = _25;
  _26 = serwer_30(D)->player2;
  _26->coins_carried = 0;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       5
;;                6
;;                7
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L8>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = serwer_30(D)->x_camp;

(insn 6 5 7 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))

(insn 7 6 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 113)
                (const_int 4 [0x4])) [3 serwer_30(D)->x_camp+0 S4 A32])) "function.c":1284 -1
     (nil))

;; _2 = serwer_30(D)->player1;

(insn 8 7 9 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))

(insn 9 8 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 114)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1284 -1
     (nil))

;; _3 = _2->x_current;

(insn 10 9 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":1284 -1
     (nil))

;; if (_1 == _3)

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (reg:SI 89 [ _3 ]))) "function.c":1284 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1284 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = serwer_30(D)->y_camp;

(insn 14 13 15 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))

(insn 15 14 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 115)
                (const_int 8 [0x8])) [3 serwer_30(D)->y_camp+0 S4 A64])) "function.c":1284 -1
     (nil))

;; _5 = serwer_30(D)->player1;

(insn 16 15 17 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))

(insn 17 16 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 116)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1284 -1
     (nil))

;; _6 = _5->y_current;

(insn 18 17 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1284 -1
     (nil))

;; if (_4 == _6)

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (reg:SI 92 [ _6 ]))) "function.c":1284 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1284 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _7 = serwer_30(D)->player1;

(insn 22 21 23 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1285 -1
     (nil))

(insn 23 22 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 117)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1285 -1
     (nil))

;; _8 = _7->coins_brought;

(insn 24 23 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 36 [0x24])) [3 _7->coins_brought+0 S4 A32])) "function.c":1285 -1
     (nil))

;; _9 = serwer_30(D)->player1;

(insn 25 24 26 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1285 -1
     (nil))

(insn 26 25 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1285 -1
     (nil))

;; _10 = _9->coins_carried;

(insn 27 26 0 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 32 [0x20])) [3 _9->coins_carried+0 S4 A64])) "function.c":1285 -1
     (nil))

;; _11 = serwer_30(D)->player1;

(insn 28 27 29 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1285 -1
     (nil))

(insn 29 28 0 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 119)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1285 -1
     (nil))

;; _12 = _8 + _10;

(insn 30 29 0 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1285 -1
     (nil))

;; _11->coins_brought = _12;

(insn 31 30 0 (set (mem:SI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 36 [0x24])) [3 _11->coins_brought+0 S4 A32])
        (reg:SI 98 [ _12 ])) "function.c":1285 -1
     (nil))

;; _13 = serwer_30(D)->player1;

(insn 32 31 33 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1286 -1
     (nil))

(insn 33 32 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 120)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1286 -1
     (nil))

;; _13->coins_carried = 0;

(insn 34 33 0 (set (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 32 [0x20])) [3 _13->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1286 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 35 34 36 231 (nil) [0 uses])

(note 36 35 0 NOTE_INSN_BASIC_BLOCK)

;; _14 = serwer_30(D)->x_camp;

(insn 37 36 38 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))

(insn 38 37 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 121)
                (const_int 4 [0x4])) [3 serwer_30(D)->x_camp+0 S4 A32])) "function.c":1289 -1
     (nil))

;; _15 = serwer_30(D)->player2;

(insn 39 38 40 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 122)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1289 -1
     (nil))

;; _16 = _15->x_current;

(insn 41 40 0 (set (reg:SI 102 [ _16 ])
        (mem:SI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 12 [0xc])) [3 _15->x_current+0 S4 A32])) "function.c":1289 -1
     (nil))

;; if (_14 == _16)

(insn 42 41 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (reg:SI 102 [ _16 ]))) "function.c":1289 -1
     (nil))

(jump_insn 43 42 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1289 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _17 = serwer_30(D)->y_camp;

(insn 45 44 46 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))

(insn 46 45 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 123)
                (const_int 8 [0x8])) [3 serwer_30(D)->y_camp+0 S4 A64])) "function.c":1289 -1
     (nil))

;; _18 = serwer_30(D)->player2;

(insn 47 46 48 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))

(insn 48 47 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 124)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1289 -1
     (nil))

;; _19 = _18->y_current;

(insn 49 48 0 (set (reg:SI 105 [ _19 ])
        (mem:SI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 16 [0x10])) [3 _18->y_current+0 S4 A64])) "function.c":1289 -1
     (nil))

;; if (_17 == _19)

(insn 50 49 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ _17 ])
            (reg:SI 105 [ _19 ]))) "function.c":1289 -1
     (nil))

(jump_insn 51 50 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1289 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _20 = serwer_30(D)->player2;

(insn 53 52 54 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1290 -1
     (nil))

(insn 54 53 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 125)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1290 -1
     (nil))

;; _21 = _20->coins_brought;

(insn 55 54 0 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 36 [0x24])) [3 _20->coins_brought+0 S4 A32])) "function.c":1290 -1
     (nil))

;; _22 = serwer_30(D)->player2;

(insn 56 55 57 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1290 -1
     (nil))

(insn 57 56 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 126)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1290 -1
     (nil))

;; _23 = _22->coins_carried;

(insn 58 57 0 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 32 [0x20])) [3 _22->coins_carried+0 S4 A64])) "function.c":1290 -1
     (nil))

;; _24 = serwer_30(D)->player2;

(insn 59 58 60 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1290 -1
     (nil))

(insn 60 59 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 127)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1290 -1
     (nil))

;; _25 = _21 + _23;

(insn 61 60 0 (parallel [
            (set (reg:SI 111 [ _25 ])
                (plus:SI (reg:SI 107 [ _21 ])
                    (reg:SI 109 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1290 -1
     (nil))

;; _24->coins_brought = _25;

(insn 62 61 0 (set (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 36 [0x24])) [3 _24->coins_brought+0 S4 A32])
        (reg:SI 111 [ _25 ])) "function.c":1290 -1
     (nil))

;; _26 = serwer_30(D)->player2;

(insn 63 62 64 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1291 -1
     (nil))

(insn 64 63 0 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (plus:DI (reg/f:DI 128)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1291 -1
     (nil))

;; _26->coins_carried = 0;

(insn 65 64 0 (set (mem:SI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 32 [0x20])) [3 _26->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1291 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 66 65 67 232 (nil) [0 uses])

(note 67 66 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; <L8>:

(code_label 68 67 69 233 (nil) [0 uses])

(note 69 68 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 6->9 redirected to 11
Edge 7->9 redirected to 11
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1283 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 113)
                (const_int 4 [0x4])) [3 serwer_30(D)->x_camp+0 S4 A32])) "function.c":1284 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 114)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1284 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":1284 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (reg:SI 89 [ _3 ]))) "function.c":1284 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "function.c":1284 -1
     (nil)
 -> 35)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 115)
                (const_int 8 [0x8])) [3 serwer_30(D)->y_camp+0 S4 A64])) "function.c":1284 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1284 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 116)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1284 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1284 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (reg:SI 92 [ _6 ]))) "function.c":1284 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 35)
            (pc))) "function.c":1284 -1
     (nil)
 -> 35)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1285 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 117)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1285 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 36 [0x24])) [3 _7->coins_brought+0 S4 A32])) "function.c":1285 -1
     (nil))
(insn 25 24 26 5 (set (reg/f:DI 118)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1285 -1
     (nil))
(insn 26 25 27 5 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 118)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1285 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 32 [0x20])) [3 _9->coins_carried+0 S4 A64])) "function.c":1285 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1285 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 97 [ _11 ])
        (mem/f:DI (plus:DI (reg/f:DI 119)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1285 -1
     (nil))
(insn 30 29 31 5 (parallel [
            (set (reg:SI 98 [ _12 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (reg:SI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1285 -1
     (nil))
(insn 31 30 32 5 (set (mem:SI (plus:DI (reg/f:DI 97 [ _11 ])
                (const_int 36 [0x24])) [3 _11->coins_brought+0 S4 A32])
        (reg:SI 98 [ _12 ])) "function.c":1285 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 120)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1286 -1
     (nil))
(insn 33 32 34 5 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 120)
                (const_int 32 [0x20])) [14 serwer_30(D)->player1+0 S8 A64])) "function.c":1286 -1
     (nil))
(insn 34 33 35 5 (set (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 32 [0x20])) [3 _13->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1286 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              4
;;              5 (FALLTHRU)
(code_label 35 34 36 6 231 (nil) [2 uses])
(note 36 35 37 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 37 36 38 6 (set (reg/f:DI 121)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))
(insn 38 37 39 6 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 121)
                (const_int 4 [0x4])) [3 serwer_30(D)->x_camp+0 S4 A32])) "function.c":1289 -1
     (nil))
(insn 39 38 40 6 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 122)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1289 -1
     (nil))
(insn 41 40 42 6 (set (reg:SI 102 [ _16 ])
        (mem:SI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 12 [0xc])) [3 _15->x_current+0 S4 A32])) "function.c":1289 -1
     (nil))
(insn 42 41 43 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (reg:SI 102 [ _16 ]))) "function.c":1289 -1
     (nil))
(jump_insn 43 42 44 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) "function.c":1289 682 {*jcc}
     (nil)
 -> 70)
;;  succ:       7 (FALLTHRU)
;;              11

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 44 43 45 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 7 (set (reg/f:DI 123)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))
(insn 46 45 47 7 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 123)
                (const_int 8 [0x8])) [3 serwer_30(D)->y_camp+0 S4 A64])) "function.c":1289 -1
     (nil))
(insn 47 46 48 7 (set (reg/f:DI 124)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1289 -1
     (nil))
(insn 48 47 49 7 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 124)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1289 -1
     (nil))
(insn 49 48 50 7 (set (reg:SI 105 [ _19 ])
        (mem:SI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 16 [0x10])) [3 _18->y_current+0 S4 A64])) "function.c":1289 -1
     (nil))
(insn 50 49 51 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 103 [ _17 ])
            (reg:SI 105 [ _19 ]))) "function.c":1289 -1
     (nil))
(jump_insn 51 50 52 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 70)
            (pc))) "function.c":1289 682 {*jcc}
     (nil)
 -> 70)
;;  succ:       8 (FALLTHRU)
;;              11

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 52 51 53 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 8 (set (reg/f:DI 125)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1290 -1
     (nil))
(insn 54 53 55 8 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 125)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1290 -1
     (nil))
(insn 55 54 56 8 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 36 [0x24])) [3 _20->coins_brought+0 S4 A32])) "function.c":1290 -1
     (nil))
(insn 56 55 57 8 (set (reg/f:DI 126)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1290 -1
     (nil))
(insn 57 56 58 8 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 126)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1290 -1
     (nil))
(insn 58 57 59 8 (set (reg:SI 109 [ _23 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 32 [0x20])) [3 _22->coins_carried+0 S4 A64])) "function.c":1290 -1
     (nil))
(insn 59 58 60 8 (set (reg/f:DI 127)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1290 -1
     (nil))
(insn 60 59 61 8 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 127)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1290 -1
     (nil))
(insn 61 60 62 8 (parallel [
            (set (reg:SI 111 [ _25 ])
                (plus:SI (reg:SI 107 [ _21 ])
                    (reg:SI 109 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1290 -1
     (nil))
(insn 62 61 63 8 (set (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 36 [0x24])) [3 _24->coins_brought+0 S4 A32])
        (reg:SI 111 [ _25 ])) "function.c":1290 -1
     (nil))
(insn 63 62 64 8 (set (reg/f:DI 128)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1291 -1
     (nil))
(insn 64 63 65 8 (set (reg/f:DI 112 [ _26 ])
        (mem/f:DI (plus:DI (reg/f:DI 128)
                (const_int 40 [0x28])) [14 serwer_30(D)->player2+0 S8 A64])) "function.c":1291 -1
     (nil))
(insn 65 64 72 8 (set (mem:SI (plus:DI (reg/f:DI 112 [ _26 ])
                (const_int 32 [0x20])) [3 _26->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1291 -1
     (nil))
(insn 72 65 70 8 (const_int 0 [0]) "function.c":1293 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              6
;;              7
(code_label 70 72 71 11 230 (nil) [2 uses])
(note 71 70 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function player_position_random (player_position_random, funcdef_no=27, decl_uid=6261, cgraph_uid=27, symbol_order=30)

player_position_random (struct serwer_info * serwer)
{
  int upp;
  int low;
  long int _1;
  unsigned int _2;
  struct player_info * _3;
  int _4;
  struct player_info * _5;
  int _6;
  char * * _7;
  struct player_info * _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  char * * _12;
  char * _13;
  struct player_info * _14;
  int _15;
  sizetype _16;
  char * _17;
  char _18;
  struct player_info * _19;
  struct player_info * _20;
  int _21;
  struct player_info * _22;
  struct player_info * _23;
  int _24;
  struct player_info * _25;
  int _26;
  struct player_info * _27;
  int _28;
  char * * _29;
  struct player_info * _30;
  int _31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  char * _35;
  struct player_info * _36;
  int _37;
  sizetype _38;
  char * _39;
  char _40;
  struct player_info * _41;
  struct player_info * _42;
  int _43;
  struct player_info * _44;
  struct player_info * _45;
  int _46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  low_52 = 0;
  upp_53 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  low_54 = 1;
  upp_55 = 19;
  _3 = serwer_56(D)->player1;
  _4 = random_return (low_54, upp_55);
  _3->y_start = _4;
  low_59 = 1;
  upp_60 = 29;
  _5 = serwer_56(D)->player1;
  _6 = random_return (low_59, upp_60);
  _5->x_start = _6;
  _7 = serwer_56(D)->mapa;
  _8 = serwer_56(D)->player1;
  _9 = _8->y_start;
  _10 = (long unsigned int) _9;
  _11 = _10 * 8;
  _12 = _7 + _11;
  _13 = *_12;
  _14 = serwer_56(D)->player1;
  _15 = _14->x_start;
  _16 = (sizetype) _15;
  _17 = _13 + _16;
  _18 = *_17;
  if (_18 == 46)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _19 = serwer_56(D)->player1;
  _20 = serwer_56(D)->player1;
  _21 = _19->x_start;
  _20->x_current = _21;
  _22 = serwer_56(D)->player1;
  _23 = serwer_56(D)->player1;
  _24 = _22->y_start;
  _23->y_current = _24;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
;;                8
  low_65 = 1;
  upp_66 = 19;
  _25 = serwer_56(D)->player2;
  _26 = random_return (low_65, upp_66);
  _25->y_start = _26;
  low_69 = 1;
  upp_70 = 29;
  _27 = serwer_56(D)->player2;
  _28 = random_return (low_69, upp_70);
  _27->x_start = _28;
  _29 = serwer_56(D)->mapa;
  _30 = serwer_56(D)->player2;
  _31 = _30->y_start;
  _32 = (long unsigned int) _31;
  _33 = _32 * 8;
  _34 = _29 + _33;
  _35 = *_34;
  _36 = serwer_56(D)->player2;
  _37 = _36->x_start;
  _38 = (sizetype) _37;
  _39 = _35 + _38;
  _40 = *_39;
  if (_40 == 46)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _41 = serwer_56(D)->player2;
  _42 = serwer_56(D)->player2;
  _43 = _41->x_start;
  _42->x_current = _43;
  _44 = serwer_56(D)->player2;
  _45 = serwer_56(D)->player2;
  _46 = _44->y_start;
  _45->y_current = _46;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 8, loop depth 1
;;    pred:       6
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 9, loop depth 0
;;    pred:       7
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       9
<L8>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 52 (low_52 - 52 )
Partition 53 (upp_53 - 53 )
Partition 54 (low_54 - 54 )
Partition 55 (upp_55 - 55 )
Partition 56 (serwer_56(D) - 56 )
Partition 59 (low_59 - 59 )
Partition 60 (upp_60 - 60 )
Partition 65 (low_65 - 65 )
Partition 66 (upp_66 - 66 )
Partition 69 (low_69 - 69 )
Partition 70 (upp_70 - 70 )


Coalescible Partition map 

Partition 0, base 0 (low_52 - 52 54 59 65 69 )
Partition 1, base 1 (upp_53 - 53 55 60 66 70 )
Partition 4, base 2 (serwer_56(D) - 56 )


Partition map 

Partition 0 (low_52 - 52 )
Partition 1 (upp_53 - 53 )
Partition 2 (low_54 - 54 )
Partition 3 (upp_55 - 55 )
Partition 4 (serwer_56(D) - 56 )
Partition 5 (low_59 - 59 )
Partition 6 (upp_60 - 60 )
Partition 7 (low_65 - 65 )
Partition 8 (upp_66 - 66 )
Partition 9 (low_69 - 69 )
Partition 10 (upp_70 - 70 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) low_52 <-> low_54
(2147483646, 0) upp_53 <-> upp_55
(2147483646, 0) low_52 <-> low_59
(2147483646, 0) upp_53 <-> upp_60
(2147483646, 0) low_52 <-> low_65
(2147483646, 0) upp_53 <-> upp_66
(2147483646, 0) low_52 <-> low_69
(2147483646, 0) upp_53 <-> upp_70

Partition map 

Partition 0 (low_52 - 52 )
Partition 1 (upp_53 - 53 )
Partition 2 (low_54 - 54 )
Partition 3 (upp_55 - 55 )
Partition 4 (serwer_56(D) - 56 )
Partition 5 (low_59 - 59 )
Partition 6 (upp_60 - 60 )
Partition 7 (low_65 - 65 )
Partition 8 (upp_66 - 66 )
Partition 9 (low_69 - 69 )
Partition 10 (upp_70 - 70 )

Coalesce list: (52)low_52 & (54)low_54 [map: 0, 2] : Success -> 0
Coalesce list: (53)upp_53 & (55)upp_55 [map: 1, 3] : Success -> 1
Coalesce list: (52)low_52 & (59)low_59 [map: 0, 5] : Success -> 0
Coalesce list: (53)upp_53 & (60)upp_60 [map: 1, 6] : Success -> 1
Coalesce list: (52)low_52 & (65)low_65 [map: 0, 7] : Success -> 0
Coalesce list: (53)upp_53 & (66)upp_66 [map: 1, 8] : Success -> 1
Coalesce list: (52)low_52 & (69)low_69 [map: 0, 9] : Success -> 0
Coalesce list: (53)upp_53 & (70)upp_70 [map: 1, 10] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (low_52 - 52 54 59 65 69 )
Partition 47 (upp_53 - 53 55 60 66 70 )
Partition 48 (serwer_56(D) - 56 )

player_position_random (struct serwer_info * serwer)
{
  int upp;
  int low;
  long int _1;
  unsigned int _2;
  struct player_info * _3;
  int _4;
  struct player_info * _5;
  int _6;
  char * * _7;
  struct player_info * _8;
  int _9;
  long unsigned int _10;
  long unsigned int _11;
  char * * _12;
  char * _13;
  struct player_info * _14;
  int _15;
  sizetype _16;
  char * _17;
  char _18;
  struct player_info * _19;
  struct player_info * _20;
  int _21;
  struct player_info * _22;
  struct player_info * _23;
  int _24;
  struct player_info * _25;
  int _26;
  struct player_info * _27;
  int _28;
  char * * _29;
  struct player_info * _30;
  int _31;
  long unsigned int _32;
  long unsigned int _33;
  char * * _34;
  char * _35;
  struct player_info * _36;
  int _37;
  sizetype _38;
  char * _39;
  char _40;
  struct player_info * _41;
  struct player_info * _42;
  int _43;
  struct player_info * _44;
  struct player_info * _45;
  int _46;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  low_52 = 0;
  upp_53 = 0;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                5
  low_54 = 1;
  upp_55 = 19;
  _3 = serwer_56(D)->player1;
  _4 = random_return (low_54, upp_55);
  _3->y_start = _4;
  low_59 = 1;
  upp_60 = 29;
  _5 = serwer_56(D)->player1;
  _6 = random_return (low_59, upp_60);
  _5->x_start = _6;
  _7 = serwer_56(D)->mapa;
  _8 = serwer_56(D)->player1;
  _9 = _8->y_start;
  _10 = (long unsigned int) _9;
  _11 = _10 * 8;
  _12 = _7 + _11;
  _13 = *_12;
  _14 = serwer_56(D)->player1;
  _15 = _14->x_start;
  _16 = (sizetype) _15;
  _17 = _13 + _16;
  _18 = *_17;
  if (_18 == 46)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _19 = serwer_56(D)->player1;
  _20 = serwer_56(D)->player1;
  _21 = _19->x_start;
  _20->x_current = _21;
  _22 = serwer_56(D)->player1;
  _23 = serwer_56(D)->player1;
  _24 = _22->y_start;
  _23->y_current = _24;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 5, loop depth 1
;;    pred:       3
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 6, loop depth 1
;;    pred:       4
;;                8
  low_65 = 1;
  upp_66 = 19;
  _25 = serwer_56(D)->player2;
  _26 = random_return (low_65, upp_66);
  _25->y_start = _26;
  low_69 = 1;
  upp_70 = 29;
  _27 = serwer_56(D)->player2;
  _28 = random_return (low_69, upp_70);
  _27->x_start = _28;
  _29 = serwer_56(D)->mapa;
  _30 = serwer_56(D)->player2;
  _31 = _30->y_start;
  _32 = (long unsigned int) _31;
  _33 = _32 * 8;
  _34 = _29 + _33;
  _35 = *_34;
  _36 = serwer_56(D)->player2;
  _37 = _36->x_start;
  _38 = (sizetype) _37;
  _39 = _35 + _38;
  _40 = *_39;
  if (_40 == 46)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _41 = serwer_56(D)->player2;
  _42 = serwer_56(D)->player2;
  _43 = _41->x_start;
  _42->x_current = _43;
  _44 = serwer_56(D)->player2;
  _45 = serwer_56(D)->player2;
  _46 = _44->y_start;
  _45->y_current = _46;
  goto <bb 9>; [INV]
;;    succ:       9

;;   basic block 8, loop depth 1
;;    pred:       6
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 9, loop depth 0
;;    pred:       7
;;    succ:       10

;;   basic block 10, loop depth 0
;;    pred:       9
<L8>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = time (0B);

(insn 6 5 7 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":1298 -1
     (nil))

(call_insn 7 6 8 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":1298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 8 7 0 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":1298 -1
     (nil))

;; _2 = (unsigned int) _1;

(insn 9 8 0 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":1298 -1
     (nil))

;; srand (_2);

(insn 10 9 11 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":1298 -1
     (nil))

(call_insn 11 10 0 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":1298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; low_52 = 0;

(insn 12 11 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 0 [0])) "function.c":1299 -1
     (nil))

;; upp_53 = 0;

(insn 13 12 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1300 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; low_54 = 1;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1304 -1
     (nil))

;; upp_55 = 19;

(insn 16 15 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":1304 -1
     (nil))

;; _3 = serwer_56(D)->player1;

(insn 17 16 18 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1305 -1
     (nil))

(insn 18 17 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 133)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1305 -1
     (nil))

;; _4 = random_return (low_54, upp_55);

(insn 19 18 20 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1305 -1
     (nil))

(insn 20 19 21 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1305 -1
     (nil))

(insn 21 20 22 (set (reg:SI 4 si)
        (reg:SI 134)) "function.c":1305 -1
     (nil))

(insn 22 21 23 (set (reg:SI 5 di)
        (reg:SI 135)) "function.c":1305 -1
     (nil))

(call_insn 23 22 24 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1305 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 24 23 0 (set (reg:SI 90 [ _4 ])
        (reg:SI 0 ax)) "function.c":1305 -1
     (nil))

;; _3->y_start = _4;

(insn 25 24 0 (set (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 24 [0x18])) [3 _3->y_start+0 S4 A64])
        (reg:SI 90 [ _4 ])) "function.c":1305 -1
     (nil))

;; low_59 = 1;

(insn 26 25 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1307 -1
     (nil))

;; upp_60 = 29;

(insn 27 26 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":1307 -1
     (nil))

;; _5 = serwer_56(D)->player1;

(insn 28 27 29 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1308 -1
     (nil))

(insn 29 28 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 136)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1308 -1
     (nil))

;; _6 = random_return (low_59, upp_60);

(insn 30 29 31 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1308 -1
     (nil))

(insn 31 30 32 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1308 -1
     (nil))

(insn 32 31 33 (set (reg:SI 4 si)
        (reg:SI 137)) "function.c":1308 -1
     (nil))

(insn 33 32 34 (set (reg:SI 5 di)
        (reg:SI 138)) "function.c":1308 -1
     (nil))

(call_insn 34 33 35 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1308 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 35 34 0 (set (reg:SI 92 [ _6 ])
        (reg:SI 0 ax)) "function.c":1308 -1
     (nil))

;; _5->x_start = _6;

(insn 36 35 0 (set (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 20 [0x14])) [3 _5->x_start+0 S4 A32])
        (reg:SI 92 [ _6 ])) "function.c":1308 -1
     (nil))

;; _7 = serwer_56(D)->mapa;

(insn 37 36 38 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1310 -1
     (nil))

(insn 38 37 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 139)
                (const_int 16 [0x10])) [9 serwer_56(D)->mapa+0 S8 A64])) "function.c":1310 -1
     (nil))

;; _8 = serwer_56(D)->player1;

(insn 39 38 40 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1310 -1
     (nil))

(insn 40 39 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 140)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1310 -1
     (nil))

;; _9 = _8->y_start;

(insn 41 40 0 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 24 [0x18])) [3 _8->y_start+0 S4 A64])) "function.c":1310 -1
     (nil))

;; _10 = (long unsigned int) _9;

(insn 42 41 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "function.c":1310 -1
     (nil))

;; _11 = _10 * 8;

(insn 43 42 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (ashift:DI (reg:DI 96 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1310 -1
     (nil))

;; _12 = _7 + _11;

(insn 44 43 0 (parallel [
            (set (reg/f:DI 98 [ _12 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 97 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1310 -1
     (nil))

;; _13 = *_12;

(insn 45 44 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (reg/f:DI 98 [ _12 ]) [10 *_12+0 S8 A64])) "function.c":1310 -1
     (nil))

;; _14 = serwer_56(D)->player1;

(insn 46 45 47 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1310 -1
     (nil))

(insn 47 46 0 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 141)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1310 -1
     (nil))

;; _15 = _14->x_start;

(insn 48 47 0 (set (reg:SI 101 [ _15 ])
        (mem:SI (plus:DI (reg/f:DI 100 [ _14 ])
                (const_int 20 [0x14])) [3 _14->x_start+0 S4 A32])) "function.c":1310 -1
     (nil))

;; _16 = (sizetype) _15;

(insn 49 48 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "function.c":1310 -1
     (nil))

;; _17 = _13 + _16;

(insn 50 49 0 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 99 [ _13 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1310 -1
     (nil))

;; _18 = *_17;

(insn 51 50 0 (set (reg:QI 104 [ _18 ])
        (mem:QI (reg/f:DI 103 [ _17 ]) [0 *_17+0 S1 A8])) "function.c":1310 -1
     (nil))

;; if (_18 == 46)

(insn 52 51 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ _18 ])
            (const_int 46 [0x2e]))) "function.c":1310 -1
     (nil))

(jump_insn 53 52 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1310 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _19 = serwer_56(D)->player1;

(insn 55 54 56 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1312 -1
     (nil))

(insn 56 55 0 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 142)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1312 -1
     (nil))

;; _20 = serwer_56(D)->player1;

(insn 57 56 58 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1312 -1
     (nil))

(insn 58 57 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 143)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1312 -1
     (nil))

;; _21 = _19->x_start;

(insn 59 58 0 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 20 [0x14])) [3 _19->x_start+0 S4 A32])) "function.c":1312 -1
     (nil))

;; _20->x_current = _21;

(insn 60 59 0 (set (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 12 [0xc])) [3 _20->x_current+0 S4 A32])
        (reg:SI 107 [ _21 ])) "function.c":1312 -1
     (nil))

;; _22 = serwer_56(D)->player1;

(insn 61 60 62 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1313 -1
     (nil))

(insn 62 61 0 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1313 -1
     (nil))

;; _23 = serwer_56(D)->player1;

(insn 63 62 64 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1313 -1
     (nil))

(insn 64 63 0 (set (reg/f:DI 109 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 145)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1313 -1
     (nil))

;; _24 = _22->y_start;

(insn 65 64 0 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 24 [0x18])) [3 _22->y_start+0 S4 A64])) "function.c":1313 -1
     (nil))

;; _23->y_current = _24;

(insn 66 65 0 (set (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 16 [0x10])) [3 _23->y_current+0 S4 A64])
        (reg:SI 110 [ _24 ])) "function.c":1313 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 69 68 70 236 (nil) [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 6

;; 

(code_label 74 73 75 237 (nil) [0 uses])

(note 75 74 0 NOTE_INSN_BASIC_BLOCK)

;; low_65 = 1;

(insn 76 75 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1320 -1
     (nil))

;; upp_66 = 19;

(insn 77 76 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":1320 -1
     (nil))

;; _25 = serwer_56(D)->player2;

(insn 78 77 79 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1321 -1
     (nil))

(insn 79 78 0 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 146)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1321 -1
     (nil))

;; _26 = random_return (low_65, upp_66);

(insn 80 79 81 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1321 -1
     (nil))

(insn 81 80 82 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1321 -1
     (nil))

(insn 82 81 83 (set (reg:SI 4 si)
        (reg:SI 147)) "function.c":1321 -1
     (nil))

(insn 83 82 84 (set (reg:SI 5 di)
        (reg:SI 148)) "function.c":1321 -1
     (nil))

(call_insn 84 83 85 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1321 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 85 84 0 (set (reg:SI 112 [ _26 ])
        (reg:SI 0 ax)) "function.c":1321 -1
     (nil))

;; _25->y_start = _26;

(insn 86 85 0 (set (mem:SI (plus:DI (reg/f:DI 111 [ _25 ])
                (const_int 24 [0x18])) [3 _25->y_start+0 S4 A64])
        (reg:SI 112 [ _26 ])) "function.c":1321 -1
     (nil))

;; low_69 = 1;

(insn 87 86 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1323 -1
     (nil))

;; upp_70 = 29;

(insn 88 87 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":1323 -1
     (nil))

;; _27 = serwer_56(D)->player2;

(insn 89 88 90 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1324 -1
     (nil))

(insn 90 89 0 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 149)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1324 -1
     (nil))

;; _28 = random_return (low_69, upp_70);

(insn 91 90 92 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1324 -1
     (nil))

(insn 92 91 93 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1324 -1
     (nil))

(insn 93 92 94 (set (reg:SI 4 si)
        (reg:SI 150)) "function.c":1324 -1
     (nil))

(insn 94 93 95 (set (reg:SI 5 di)
        (reg:SI 151)) "function.c":1324 -1
     (nil))

(call_insn 95 94 96 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1324 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 96 95 0 (set (reg:SI 114 [ _28 ])
        (reg:SI 0 ax)) "function.c":1324 -1
     (nil))

;; _27->x_start = _28;

(insn 97 96 0 (set (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 20 [0x14])) [3 _27->x_start+0 S4 A32])
        (reg:SI 114 [ _28 ])) "function.c":1324 -1
     (nil))

;; _29 = serwer_56(D)->mapa;

(insn 98 97 99 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1326 -1
     (nil))

(insn 99 98 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 16 [0x10])) [9 serwer_56(D)->mapa+0 S8 A64])) "function.c":1326 -1
     (nil))

;; _30 = serwer_56(D)->player2;

(insn 100 99 101 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1326 -1
     (nil))

(insn 101 100 0 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 153)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1326 -1
     (nil))

;; _31 = _30->y_start;

(insn 102 101 0 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 24 [0x18])) [3 _30->y_start+0 S4 A64])) "function.c":1326 -1
     (nil))

;; _32 = (long unsigned int) _31;

(insn 103 102 0 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 117 [ _31 ]))) "function.c":1326 -1
     (nil))

;; _33 = _32 * 8;

(insn 104 103 0 (parallel [
            (set (reg:DI 119 [ _33 ])
                (ashift:DI (reg:DI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1326 -1
     (nil))

;; _34 = _29 + _33;

(insn 105 104 0 (parallel [
            (set (reg/f:DI 120 [ _34 ])
                (plus:DI (reg/f:DI 115 [ _29 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1326 -1
     (nil))

;; _35 = *_34;

(insn 106 105 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 120 [ _34 ]) [10 *_34+0 S8 A64])) "function.c":1326 -1
     (nil))

;; _36 = serwer_56(D)->player2;

(insn 107 106 108 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1326 -1
     (nil))

(insn 108 107 0 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 154)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1326 -1
     (nil))

;; _37 = _36->x_start;

(insn 109 108 0 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 20 [0x14])) [3 _36->x_start+0 S4 A32])) "function.c":1326 -1
     (nil))

;; _38 = (sizetype) _37;

(insn 110 109 0 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 123 [ _37 ]))) "function.c":1326 -1
     (nil))

;; _39 = _35 + _38;

(insn 111 110 0 (parallel [
            (set (reg/f:DI 125 [ _39 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 124 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1326 -1
     (nil))

;; _40 = *_39;

(insn 112 111 0 (set (reg:QI 126 [ _40 ])
        (mem:QI (reg/f:DI 125 [ _39 ]) [0 *_39+0 S1 A8])) "function.c":1326 -1
     (nil))

;; if (_40 == 46)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ _40 ])
            (const_int 46 [0x2e]))) "function.c":1326 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1326 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _41 = serwer_56(D)->player2;

(insn 116 115 117 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1328 -1
     (nil))

(insn 117 116 0 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (plus:DI (reg/f:DI 155)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1328 -1
     (nil))

;; _42 = serwer_56(D)->player2;

(insn 118 117 119 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1328 -1
     (nil))

(insn 119 118 0 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 156)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1328 -1
     (nil))

;; _43 = _41->x_start;

(insn 120 119 0 (set (reg:SI 129 [ _43 ])
        (mem:SI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 20 [0x14])) [3 _41->x_start+0 S4 A32])) "function.c":1328 -1
     (nil))

;; _42->x_current = _43;

(insn 121 120 0 (set (mem:SI (plus:DI (reg/f:DI 128 [ _42 ])
                (const_int 12 [0xc])) [3 _42->x_current+0 S4 A32])
        (reg:SI 129 [ _43 ])) "function.c":1328 -1
     (nil))

;; _44 = serwer_56(D)->player2;

(insn 122 121 123 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1329 -1
     (nil))

(insn 123 122 0 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (plus:DI (reg/f:DI 157)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1329 -1
     (nil))

;; _45 = serwer_56(D)->player2;

(insn 124 123 125 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1329 -1
     (nil))

(insn 125 124 0 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1329 -1
     (nil))

;; _46 = _44->y_start;

(insn 126 125 0 (set (reg:SI 132 [ _46 ])
        (mem:SI (plus:DI (reg/f:DI 130 [ _44 ])
                (const_int 24 [0x18])) [3 _44->y_start+0 S4 A64])) "function.c":1329 -1
     (nil))

;; _45->y_current = _46;

(insn 127 126 0 (set (mem:SI (plus:DI (reg/f:DI 131 [ _45 ])
                (const_int 16 [0x10])) [3 _45->y_current+0 S4 A64])
        (reg:SI 132 [ _46 ])) "function.c":1329 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 130 129 131 239 (nil) [0 uses])

(note 131 130 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; 

(code_label 134 133 135 240 (nil) [0 uses])

(note 135 134 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 10

;; <L8>:

(code_label 136 135 137 241 (nil) [0 uses])

(note 137 136 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 11 into block 10...
Merged blocks 10 and 11.
Merged 10 and 11 without moving.
Merging block 12 into block 10...
Merged blocks 10 and 12.
Merged 10 and 12 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1297 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":1298 -1
     (nil))
(call_insn 7 6 8 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":1298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 8 7 9 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":1298 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":1298 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":1298 -1
     (nil))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":1298 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 12 11 13 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 0 [0])) "function.c":1299 -1
     (nil))
(insn 13 12 71 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 0 [0])) "function.c":1300 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              6 (DFS_BACK)
(code_label 71 13 14 4 238 (nil) [1 uses])
(note 14 71 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1304 -1
     (nil))
(insn 16 15 17 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":1304 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1305 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 133)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1305 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 134)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1305 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 135)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1305 -1
     (nil))
(insn 21 20 22 4 (set (reg:SI 4 si)
        (reg:SI 134)) "function.c":1305 -1
     (nil))
(insn 22 21 23 4 (set (reg:SI 5 di)
        (reg:SI 135)) "function.c":1305 -1
     (nil))
(call_insn 23 22 24 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1305 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 24 23 25 4 (set (reg:SI 90 [ _4 ])
        (reg:SI 0 ax)) "function.c":1305 -1
     (nil))
(insn 25 24 26 4 (set (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 24 [0x18])) [3 _3->y_start+0 S4 A64])
        (reg:SI 90 [ _4 ])) "function.c":1305 -1
     (nil))
(insn 26 25 27 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1307 -1
     (nil))
(insn 27 26 28 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":1307 -1
     (nil))
(insn 28 27 29 4 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1308 -1
     (nil))
(insn 29 28 30 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 136)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1308 -1
     (nil))
(insn 30 29 31 4 (set (reg:SI 137)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1308 -1
     (nil))
(insn 31 30 32 4 (set (reg:SI 138)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1308 -1
     (nil))
(insn 32 31 33 4 (set (reg:SI 4 si)
        (reg:SI 137)) "function.c":1308 -1
     (nil))
(insn 33 32 34 4 (set (reg:SI 5 di)
        (reg:SI 138)) "function.c":1308 -1
     (nil))
(call_insn 34 33 35 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1308 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 35 34 36 4 (set (reg:SI 92 [ _6 ])
        (reg:SI 0 ax)) "function.c":1308 -1
     (nil))
(insn 36 35 37 4 (set (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 20 [0x14])) [3 _5->x_start+0 S4 A32])
        (reg:SI 92 [ _6 ])) "function.c":1308 -1
     (nil))
(insn 37 36 38 4 (set (reg/f:DI 139)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 38 37 39 4 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 139)
                (const_int 16 [0x10])) [9 serwer_56(D)->mapa+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 39 38 40 4 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 40 39 41 4 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (plus:DI (reg/f:DI 140)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 41 40 42 4 (set (reg:SI 95 [ _9 ])
        (mem:SI (plus:DI (reg/f:DI 94 [ _8 ])
                (const_int 24 [0x18])) [3 _8->y_start+0 S4 A64])) "function.c":1310 -1
     (nil))
(insn 42 41 43 4 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 95 [ _9 ]))) "function.c":1310 -1
     (nil))
(insn 43 42 44 4 (parallel [
            (set (reg:DI 97 [ _11 ])
                (ashift:DI (reg:DI 96 [ _10 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1310 -1
     (nil))
(insn 44 43 45 4 (parallel [
            (set (reg/f:DI 98 [ _12 ])
                (plus:DI (reg/f:DI 93 [ _7 ])
                    (reg:DI 97 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1310 -1
     (nil))
(insn 45 44 46 4 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (reg/f:DI 98 [ _12 ]) [10 *_12+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 46 45 47 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 47 46 48 4 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 141)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1310 -1
     (nil))
(insn 48 47 49 4 (set (reg:SI 101 [ _15 ])
        (mem:SI (plus:DI (reg/f:DI 100 [ _14 ])
                (const_int 20 [0x14])) [3 _14->x_start+0 S4 A32])) "function.c":1310 -1
     (nil))
(insn 49 48 50 4 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 101 [ _15 ]))) "function.c":1310 -1
     (nil))
(insn 50 49 51 4 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 99 [ _13 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1310 -1
     (nil))
(insn 51 50 52 4 (set (reg:QI 104 [ _18 ])
        (mem:QI (reg/f:DI 103 [ _17 ]) [0 *_17+0 S1 A8])) "function.c":1310 -1
     (nil))
(insn 52 51 53 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 104 [ _18 ])
            (const_int 46 [0x2e]))) "function.c":1310 -1
     (nil))
(jump_insn 53 52 54 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 69)
            (pc))) "function.c":1310 -1
     (nil)
 -> 69)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 54 53 55 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 55 54 56 5 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1312 -1
     (nil))
(insn 56 55 57 5 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 142)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1312 -1
     (nil))
(insn 57 56 58 5 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1312 -1
     (nil))
(insn 58 57 59 5 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 143)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1312 -1
     (nil))
(insn 59 58 60 5 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 20 [0x14])) [3 _19->x_start+0 S4 A32])) "function.c":1312 -1
     (nil))
(insn 60 59 61 5 (set (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 12 [0xc])) [3 _20->x_current+0 S4 A32])
        (reg:SI 107 [ _21 ])) "function.c":1312 -1
     (nil))
(insn 61 60 62 5 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1313 -1
     (nil))
(insn 62 61 63 5 (set (reg/f:DI 108 [ _22 ])
        (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1313 -1
     (nil))
(insn 63 62 64 5 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1313 -1
     (nil))
(insn 64 63 65 5 (set (reg/f:DI 109 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 145)
                (const_int 32 [0x20])) [14 serwer_56(D)->player1+0 S8 A64])) "function.c":1313 -1
     (nil))
(insn 65 64 66 5 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (reg/f:DI 108 [ _22 ])
                (const_int 24 [0x18])) [3 _22->y_start+0 S4 A64])) "function.c":1313 -1
     (nil))
(insn 66 65 67 5 (set (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 16 [0x10])) [3 _23->y_current+0 S4 A64])
        (reg:SI 110 [ _24 ])) "function.c":1313 -1
     (nil))
(jump_insn 67 66 68 5 (set (pc)
        (label_ref 74)) "function.c":1314 -1
     (nil)
 -> 74)
;;  succ:       7

(barrier 68 67 69)
;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 69 68 70 6 236 (nil) [1 uses])
(note 70 69 72 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(jump_insn 72 70 73 6 (set (pc)
        (label_ref 71)) "function.c":1304 -1
     (nil)
 -> 71)
;;  succ:       4 (DFS_BACK)

(barrier 73 72 74)
;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
;;              9 (DFS_BACK)
(code_label 74 73 75 7 237 (nil) [2 uses])
(note 75 74 76 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1320 -1
     (nil))
(insn 77 76 78 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 19 [0x13])) "function.c":1320 -1
     (nil))
(insn 78 77 79 7 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1321 -1
     (nil))
(insn 79 78 80 7 (set (reg/f:DI 111 [ _25 ])
        (mem/f:DI (plus:DI (reg/f:DI 146)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1321 -1
     (nil))
(insn 80 79 81 7 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1321 -1
     (nil))
(insn 81 80 82 7 (set (reg:SI 148)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1321 -1
     (nil))
(insn 82 81 83 7 (set (reg:SI 4 si)
        (reg:SI 147)) "function.c":1321 -1
     (nil))
(insn 83 82 84 7 (set (reg:SI 5 di)
        (reg:SI 148)) "function.c":1321 -1
     (nil))
(call_insn 84 83 85 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1321 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 85 84 86 7 (set (reg:SI 112 [ _26 ])
        (reg:SI 0 ax)) "function.c":1321 -1
     (nil))
(insn 86 85 87 7 (set (mem:SI (plus:DI (reg/f:DI 111 [ _25 ])
                (const_int 24 [0x18])) [3 _25->y_start+0 S4 A64])
        (reg:SI 112 [ _26 ])) "function.c":1321 -1
     (nil))
(insn 87 86 88 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])
        (const_int 1 [0x1])) "function.c":1323 -1
     (nil))
(insn 88 87 89 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])
        (const_int 29 [0x1d])) "function.c":1323 -1
     (nil))
(insn 89 88 90 7 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1324 -1
     (nil))
(insn 90 89 91 7 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 149)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1324 -1
     (nil))
(insn 91 90 92 7 (set (reg:SI 150)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [3 upp+0 S4 A32])) "function.c":1324 -1
     (nil))
(insn 92 91 93 7 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [3 low+0 S4 A32])) "function.c":1324 -1
     (nil))
(insn 93 92 94 7 (set (reg:SI 4 si)
        (reg:SI 150)) "function.c":1324 -1
     (nil))
(insn 94 93 95 7 (set (reg:SI 5 di)
        (reg:SI 151)) "function.c":1324 -1
     (nil))
(call_insn 95 94 96 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1324 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 96 95 97 7 (set (reg:SI 114 [ _28 ])
        (reg:SI 0 ax)) "function.c":1324 -1
     (nil))
(insn 97 96 98 7 (set (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 20 [0x14])) [3 _27->x_start+0 S4 A32])
        (reg:SI 114 [ _28 ])) "function.c":1324 -1
     (nil))
(insn 98 97 99 7 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 99 98 100 7 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 16 [0x10])) [9 serwer_56(D)->mapa+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 100 99 101 7 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 101 100 102 7 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 153)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 102 101 103 7 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 24 [0x18])) [3 _30->y_start+0 S4 A64])) "function.c":1326 -1
     (nil))
(insn 103 102 104 7 (set (reg:DI 118 [ _32 ])
        (sign_extend:DI (reg:SI 117 [ _31 ]))) "function.c":1326 -1
     (nil))
(insn 104 103 105 7 (parallel [
            (set (reg:DI 119 [ _33 ])
                (ashift:DI (reg:DI 118 [ _32 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1326 -1
     (nil))
(insn 105 104 106 7 (parallel [
            (set (reg/f:DI 120 [ _34 ])
                (plus:DI (reg/f:DI 115 [ _29 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1326 -1
     (nil))
(insn 106 105 107 7 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (reg/f:DI 120 [ _34 ]) [10 *_34+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 107 106 108 7 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 108 107 109 7 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 154)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1326 -1
     (nil))
(insn 109 108 110 7 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 20 [0x14])) [3 _36->x_start+0 S4 A32])) "function.c":1326 -1
     (nil))
(insn 110 109 111 7 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 123 [ _37 ]))) "function.c":1326 -1
     (nil))
(insn 111 110 112 7 (parallel [
            (set (reg/f:DI 125 [ _39 ])
                (plus:DI (reg/f:DI 121 [ _35 ])
                    (reg:DI 124 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1326 -1
     (nil))
(insn 112 111 113 7 (set (reg:QI 126 [ _40 ])
        (mem:QI (reg/f:DI 125 [ _39 ]) [0 *_39+0 S1 A8])) "function.c":1326 -1
     (nil))
(insn 113 112 114 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 126 [ _40 ])
            (const_int 46 [0x2e]))) "function.c":1326 -1
     (nil))
(jump_insn 114 113 115 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 130)
            (pc))) "function.c":1326 -1
     (nil)
 -> 130)
;;  succ:       8 (FALLTHRU)
;;              9

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 115 114 116 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 8 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1328 -1
     (nil))
(insn 117 116 118 8 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (plus:DI (reg/f:DI 155)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1328 -1
     (nil))
(insn 118 117 119 8 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1328 -1
     (nil))
(insn 119 118 120 8 (set (reg/f:DI 128 [ _42 ])
        (mem/f:DI (plus:DI (reg/f:DI 156)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1328 -1
     (nil))
(insn 120 119 121 8 (set (reg:SI 129 [ _43 ])
        (mem:SI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 20 [0x14])) [3 _41->x_start+0 S4 A32])) "function.c":1328 -1
     (nil))
(insn 121 120 122 8 (set (mem:SI (plus:DI (reg/f:DI 128 [ _42 ])
                (const_int 12 [0xc])) [3 _42->x_current+0 S4 A32])
        (reg:SI 129 [ _43 ])) "function.c":1328 -1
     (nil))
(insn 122 121 123 8 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1329 -1
     (nil))
(insn 123 122 124 8 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (plus:DI (reg/f:DI 157)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1329 -1
     (nil))
(insn 124 123 125 8 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [12 serwer+0 S8 A64])) "function.c":1329 -1
     (nil))
(insn 125 124 126 8 (set (reg/f:DI 131 [ _45 ])
        (mem/f:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [14 serwer_56(D)->player2+0 S8 A64])) "function.c":1329 -1
     (nil))
(insn 126 125 127 8 (set (reg:SI 132 [ _46 ])
        (mem:SI (plus:DI (reg/f:DI 130 [ _44 ])
                (const_int 24 [0x18])) [3 _44->y_start+0 S4 A64])) "function.c":1329 -1
     (nil))
(insn 127 126 128 8 (set (mem:SI (plus:DI (reg/f:DI 131 [ _45 ])
                (const_int 16 [0x10])) [3 _45->y_current+0 S4 A64])
        (reg:SI 132 [ _46 ])) "function.c":1329 -1
     (nil))
(jump_insn 128 127 129 8 (set (pc)
        (label_ref 134)) "function.c":1330 -1
     (nil)
 -> 134)
;;  succ:       10

(barrier 129 128 130)
;; basic block 9, loop depth 1, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 130 129 131 9 239 (nil) [1 uses])
(note 131 130 132 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(jump_insn 132 131 133 9 (set (pc)
        (label_ref 74)) "function.c":1320 -1
     (nil)
 -> 74)
;;  succ:       7 (DFS_BACK)

(barrier 133 132 134)
;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 134 133 135 10 240 (nil) [1 uses])
(note 135 134 140 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 140 135 0 10 (const_int 0 [0]) "function.c":1333 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function bestia_kolizja (bestia_kolizja, funcdef_no=28, decl_uid=6263, cgraph_uid=28, symbol_order=31)

bestia_kolizja (struct serwer_info * serwer)
{
  int _1;
  struct player_info * _2;
  int _3;
  int _4;
  struct player_info * _5;
  int _6;
  struct player_info * _7;
  int _8;
  int _9;
  struct player_info * _10;
  int _11;
  int _12;
  struct player_info * _13;
  int _14;
  int _15;
  struct player_info * _16;
  int _17;
  int _18;
  struct player_info * _19;
  struct player_info * _20;
  struct player_info * _21;
  int _22;
  struct player_info * _23;
  struct player_info * _24;
  int _25;
  int _26;
  int _27;
  char * * _28;
  int _29;
  long unsigned int _30;
  long unsigned int _31;
  char * * _32;
  char * _33;
  int _34;
  sizetype _35;
  char * _36;
  int _37;
  struct player_info * _38;
  int _39;
  int _40;
  struct player_info * _41;
  int _42;
  struct player_info * _43;
  int _44;
  int _45;
  struct player_info * _46;
  int _47;
  int _48;
  struct player_info * _49;
  int _50;
  int _51;
  struct player_info * _52;
  int _53;
  int _54;
  struct player_info * _55;
  struct player_info * _56;
  struct player_info * _57;
  int _58;
  struct player_info * _59;
  struct player_info * _60;
  int _61;
  int _62;
  int _63;
  char * * _64;
  int _65;
  long unsigned int _66;
  long unsigned int _67;
  char * * _68;
  char * _69;
  int _70;
  sizetype _71;
  char * _72;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_76(D)->bestia.x;
  _2 = serwer_76(D)->player1;
  _3 = _2->x_current;
  if (_1 == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = serwer_76(D)->bestia.y;
  _5 = serwer_76(D)->player1;
  _6 = _5->y_current;
  if (_4 == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _7 = serwer_76(D)->player1;
  _8 = _7->deaths;
  _9 = _8 + 1;
  _7->deaths = _9;
  _10 = serwer_76(D)->player1;
  _11 = serwer_76(D)->skarb.count_drop_coin;
  _12 = _10->y_current;
  serwer_76(D)->skarb.dropped_coin[_11][0] = _12;
  _13 = serwer_76(D)->player1;
  _14 = serwer_76(D)->skarb.count_drop_coin;
  _15 = _13->x_current;
  serwer_76(D)->skarb.dropped_coin[_14][1] = _15;
  _16 = serwer_76(D)->player1;
  _17 = serwer_76(D)->skarb.count_drop_coin;
  _18 = _16->coins_carried;
  serwer_76(D)->skarb.value_all_dropped_coin[_17] = _18;
  _19 = serwer_76(D)->player1;
  _19->coins_carried = 0;
  _20 = serwer_76(D)->player1;
  _21 = serwer_76(D)->player1;
  _22 = _20->x_start;
  _21->x_current = _22;
  _23 = serwer_76(D)->player1;
  _24 = serwer_76(D)->player1;
  _25 = _23->y_start;
  _24->y_current = _25;
  _26 = serwer_76(D)->skarb.count_drop_coin;
  _27 = _26 + 1;
  serwer_76(D)->skarb.count_drop_coin = _27;
  _28 = serwer_76(D)->mapa;
  _29 = serwer_76(D)->bestia.y;
  _30 = (long unsigned int) _29;
  _31 = _30 * 8;
  _32 = _28 + _31;
  _33 = *_32;
  _34 = serwer_76(D)->bestia.x;
  _35 = (sizetype) _34;
  _36 = _33 + _35;
  *_36 = 68;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
;;                4
  _37 = serwer_76(D)->bestia.x;
  _38 = serwer_76(D)->player2;
  _39 = _38->x_current;
  if (_37 == _39)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       5
  _40 = serwer_76(D)->bestia.y;
  _41 = serwer_76(D)->player2;
  _42 = _41->y_current;
  if (_40 == _42)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _43 = serwer_76(D)->player2;
  _44 = _43->deaths;
  _45 = _44 + 1;
  _43->deaths = _45;
  _46 = serwer_76(D)->player2;
  _47 = serwer_76(D)->skarb.count_drop_coin;
  _48 = _46->y_current;
  serwer_76(D)->skarb.dropped_coin[_47][0] = _48;
  _49 = serwer_76(D)->player2;
  _50 = serwer_76(D)->skarb.count_drop_coin;
  _51 = _49->x_current;
  serwer_76(D)->skarb.dropped_coin[_50][1] = _51;
  _52 = serwer_76(D)->player2;
  _53 = serwer_76(D)->skarb.count_drop_coin;
  _54 = _52->coins_carried;
  serwer_76(D)->skarb.value_all_dropped_coin[_53] = _54;
  _55 = serwer_76(D)->player2;
  _55->coins_carried = 0;
  _56 = serwer_76(D)->player2;
  _57 = serwer_76(D)->player2;
  _58 = _56->x_start;
  _57->x_current = _58;
  _59 = serwer_76(D)->player2;
  _60 = serwer_76(D)->player2;
  _61 = _59->y_start;
  _60->y_current = _61;
  _62 = serwer_76(D)->skarb.count_drop_coin;
  _63 = _62 + 1;
  serwer_76(D)->skarb.count_drop_coin = _63;
  _64 = serwer_76(D)->mapa;
  _65 = serwer_76(D)->bestia.y;
  _66 = (long unsigned int) _65;
  _67 = _66 * 8;
  _68 = _64 + _67;
  _69 = *_68;
  _70 = serwer_76(D)->bestia.x;
  _71 = (sizetype) _70;
  _72 = _69 + _71;
  *_72 = 68;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       5
;;                6
;;                7
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L8>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (_72 - 72 )
Partition 76 (serwer_76(D) - 76 )


Coalescible Partition map 

Partition 0, base 0 (serwer_76(D) - 76 )


Partition map 

Partition 0 (serwer_76(D) - 76 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (serwer_76(D) - 76 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (_72 - 72 )
Partition 72 (serwer_76(D) - 76 )

bestia_kolizja (struct serwer_info * serwer)
{
  int _1;
  struct player_info * _2;
  int _3;
  int _4;
  struct player_info * _5;
  int _6;
  struct player_info * _7;
  int _8;
  int _9;
  struct player_info * _10;
  int _11;
  int _12;
  struct player_info * _13;
  int _14;
  int _15;
  struct player_info * _16;
  int _17;
  int _18;
  struct player_info * _19;
  struct player_info * _20;
  struct player_info * _21;
  int _22;
  struct player_info * _23;
  struct player_info * _24;
  int _25;
  int _26;
  int _27;
  char * * _28;
  int _29;
  long unsigned int _30;
  long unsigned int _31;
  char * * _32;
  char * _33;
  int _34;
  sizetype _35;
  char * _36;
  int _37;
  struct player_info * _38;
  int _39;
  int _40;
  struct player_info * _41;
  int _42;
  struct player_info * _43;
  int _44;
  int _45;
  struct player_info * _46;
  int _47;
  int _48;
  struct player_info * _49;
  int _50;
  int _51;
  struct player_info * _52;
  int _53;
  int _54;
  struct player_info * _55;
  struct player_info * _56;
  struct player_info * _57;
  int _58;
  struct player_info * _59;
  struct player_info * _60;
  int _61;
  int _62;
  int _63;
  char * * _64;
  int _65;
  long unsigned int _66;
  long unsigned int _67;
  char * * _68;
  char * _69;
  int _70;
  sizetype _71;
  char * _72;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_76(D)->bestia.x;
  _2 = serwer_76(D)->player1;
  _3 = _2->x_current;
  if (_1 == _3)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _4 = serwer_76(D)->bestia.y;
  _5 = serwer_76(D)->player1;
  _6 = _5->y_current;
  if (_4 == _6)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _7 = serwer_76(D)->player1;
  _8 = _7->deaths;
  _9 = _8 + 1;
  _7->deaths = _9;
  _10 = serwer_76(D)->player1;
  _11 = serwer_76(D)->skarb.count_drop_coin;
  _12 = _10->y_current;
  serwer_76(D)->skarb.dropped_coin[_11][0] = _12;
  _13 = serwer_76(D)->player1;
  _14 = serwer_76(D)->skarb.count_drop_coin;
  _15 = _13->x_current;
  serwer_76(D)->skarb.dropped_coin[_14][1] = _15;
  _16 = serwer_76(D)->player1;
  _17 = serwer_76(D)->skarb.count_drop_coin;
  _18 = _16->coins_carried;
  serwer_76(D)->skarb.value_all_dropped_coin[_17] = _18;
  _19 = serwer_76(D)->player1;
  _19->coins_carried = 0;
  _20 = serwer_76(D)->player1;
  _21 = serwer_76(D)->player1;
  _22 = _20->x_start;
  _21->x_current = _22;
  _23 = serwer_76(D)->player1;
  _24 = serwer_76(D)->player1;
  _25 = _23->y_start;
  _24->y_current = _25;
  _26 = serwer_76(D)->skarb.count_drop_coin;
  _27 = _26 + 1;
  serwer_76(D)->skarb.count_drop_coin = _27;
  _28 = serwer_76(D)->mapa;
  _29 = serwer_76(D)->bestia.y;
  _30 = (long unsigned int) _29;
  _31 = _30 * 8;
  _32 = _28 + _31;
  _33 = *_32;
  _34 = serwer_76(D)->bestia.x;
  _35 = (sizetype) _34;
  _36 = _33 + _35;
  *_36 = 68;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
;;                4
  _37 = serwer_76(D)->bestia.x;
  _38 = serwer_76(D)->player2;
  _39 = _38->x_current;
  if (_37 == _39)
    goto <bb 6>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       6
;;                8

;;   basic block 6, loop depth 0
;;    pred:       5
  _40 = serwer_76(D)->bestia.y;
  _41 = serwer_76(D)->player2;
  _42 = _41->y_current;
  if (_40 == _42)
    goto <bb 7>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       7
;;                8

;;   basic block 7, loop depth 0
;;    pred:       6
  _43 = serwer_76(D)->player2;
  _44 = _43->deaths;
  _45 = _44 + 1;
  _43->deaths = _45;
  _46 = serwer_76(D)->player2;
  _47 = serwer_76(D)->skarb.count_drop_coin;
  _48 = _46->y_current;
  serwer_76(D)->skarb.dropped_coin[_47][0] = _48;
  _49 = serwer_76(D)->player2;
  _50 = serwer_76(D)->skarb.count_drop_coin;
  _51 = _49->x_current;
  serwer_76(D)->skarb.dropped_coin[_50][1] = _51;
  _52 = serwer_76(D)->player2;
  _53 = serwer_76(D)->skarb.count_drop_coin;
  _54 = _52->coins_carried;
  serwer_76(D)->skarb.value_all_dropped_coin[_53] = _54;
  _55 = serwer_76(D)->player2;
  _55->coins_carried = 0;
  _56 = serwer_76(D)->player2;
  _57 = serwer_76(D)->player2;
  _58 = _56->x_start;
  _57->x_current = _58;
  _59 = serwer_76(D)->player2;
  _60 = serwer_76(D)->player2;
  _61 = _59->y_start;
  _60->y_current = _61;
  _62 = serwer_76(D)->skarb.count_drop_coin;
  _63 = _62 + 1;
  serwer_76(D)->skarb.count_drop_coin = _63;
  _64 = serwer_76(D)->mapa;
  _65 = serwer_76(D)->bestia.y;
  _66 = (long unsigned int) _65;
  _67 = _66 * 8;
  _68 = _64 + _67;
  _69 = *_68;
  _70 = serwer_76(D)->bestia.x;
  _71 = (sizetype) _70;
  _72 = _69 + _71;
  *_72 = 68;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       5
;;                6
;;                7
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L8>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = serwer_76(D)->bestia.x;

(insn 6 5 7 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))

(insn 7 6 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 159)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1338 -1
     (nil))

;; _2 = serwer_76(D)->player1;

(insn 8 7 9 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))

(insn 9 8 0 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1338 -1
     (nil))

;; _3 = _2->x_current;

(insn 10 9 0 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":1338 -1
     (nil))

;; if (_1 == _3)

(insn 11 10 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (reg:SI 89 [ _3 ]))) "function.c":1338 -1
     (nil))

(jump_insn 12 11 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1338 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _4 = serwer_76(D)->bestia.y;

(insn 14 13 15 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))

(insn 15 14 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 161)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1338 -1
     (nil))

;; _5 = serwer_76(D)->player1;

(insn 16 15 17 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))

(insn 17 16 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1338 -1
     (nil))

;; _6 = _5->y_current;

(insn 18 17 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1338 -1
     (nil))

;; if (_4 == _6)

(insn 19 18 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (reg:SI 92 [ _6 ]))) "function.c":1338 -1
     (nil))

(jump_insn 20 19 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1338 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _7 = serwer_76(D)->player1;

(insn 22 21 23 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1340 -1
     (nil))

(insn 23 22 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1340 -1
     (nil))

;; _8 = _7->deaths;

(insn 24 23 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 28 [0x1c])) [3 _7->deaths+0 S4 A32])) "function.c":1340 -1
     (nil))

;; _9 = _8 + 1;

(insn 25 24 0 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1340 -1
     (nil))

;; _7->deaths = _9;

(insn 26 25 0 (set (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 28 [0x1c])) [3 _7->deaths+0 S4 A32])
        (reg:SI 95 [ _9 ])) "function.c":1340 -1
     (nil))

;; _10 = serwer_76(D)->player1;

(insn 27 26 28 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1342 -1
     (nil))

(insn 28 27 0 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1342 -1
     (nil))

;; _11 = serwer_76(D)->skarb.count_drop_coin;

(insn 29 28 30 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1342 -1
     (nil))

(insn 30 29 0 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 165)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1342 -1
     (nil))

;; _12 = _10->y_current;

(insn 31 30 0 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _10 ])
                (const_int 16 [0x10])) [3 _10->y_current+0 S4 A64])) "function.c":1342 -1
     (nil))

;; serwer_76(D)->skarb.dropped_coin[_11][0] = _12;

(insn 32 31 33 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1342 -1
     (nil))

(insn 33 32 34 (set (reg:DI 167)
        (sign_extend:DI (reg:SI 97 [ _11 ]))) "function.c":1342 -1
     (nil))

(insn 34 33 35 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg:DI 167)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1342 -1
     (nil))

(insn 35 34 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 168)
                    (const_int 8 [0x8]))
                (reg/f:DI 166)) [3 serwer_76(D)->skarb.dropped_coin S4 A64])
        (reg:SI 98 [ _12 ])) "function.c":1342 -1
     (nil))

;; _13 = serwer_76(D)->player1;

(insn 36 35 37 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1343 -1
     (nil))

(insn 37 36 0 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1343 -1
     (nil))

;; _14 = serwer_76(D)->skarb.count_drop_coin;

(insn 38 37 39 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1343 -1
     (nil))

(insn 39 38 0 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 170)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1343 -1
     (nil))

;; _15 = _13->x_current;

(insn 40 39 0 (set (reg:SI 101 [ _15 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 12 [0xc])) [3 _13->x_current+0 S4 A32])) "function.c":1343 -1
     (nil))

;; serwer_76(D)->skarb.dropped_coin[_14][1] = _15;

(insn 41 40 42 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1343 -1
     (nil))

(insn 42 41 43 (set (reg:DI 172)
        (sign_extend:DI (reg:SI 100 [ _14 ]))) "function.c":1343 -1
     (nil))

(insn 43 42 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 172)
                        (const_int 8 [0x8]))
                    (reg/f:DI 171))
                (const_int 24068 [0x5e04])) [3 serwer_76(D)->skarb.dropped_coin S4 A32])
        (reg:SI 101 [ _15 ])) "function.c":1343 -1
     (nil))

;; _16 = serwer_76(D)->player1;

(insn 44 43 45 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1345 -1
     (nil))

(insn 45 44 0 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1345 -1
     (nil))

;; _17 = serwer_76(D)->skarb.count_drop_coin;

(insn 46 45 47 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1345 -1
     (nil))

(insn 47 46 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 174)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1345 -1
     (nil))

;; _18 = _16->coins_carried;

(insn 48 47 0 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 102 [ _16 ])
                (const_int 32 [0x20])) [3 _16->coins_carried+0 S4 A64])) "function.c":1345 -1
     (nil))

;; serwer_76(D)->skarb.value_all_dropped_coin[_17] = _18;

(insn 49 48 50 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1345 -1
     (nil))

(insn 50 49 51 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "function.c":1345 -1
     (nil))

(insn 51 50 52 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg:DI 176)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1345 -1
     (nil))

(insn 52 51 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 177)
                    (const_int 4 [0x4]))
                (reg/f:DI 175)) [3 serwer_76(D)->skarb.value_all_dropped_coin S4 A32])
        (reg:SI 104 [ _18 ])) "function.c":1345 -1
     (nil))

;; _19 = serwer_76(D)->player1;

(insn 53 52 54 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1347 -1
     (nil))

(insn 54 53 0 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1347 -1
     (nil))

;; _19->coins_carried = 0;

(insn 55 54 0 (set (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 32 [0x20])) [3 _19->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1347 -1
     (nil))

;; _20 = serwer_76(D)->player1;

(insn 56 55 57 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1349 -1
     (nil))

(insn 57 56 0 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 179)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1349 -1
     (nil))

;; _21 = serwer_76(D)->player1;

(insn 58 57 59 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1349 -1
     (nil))

(insn 59 58 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1349 -1
     (nil))

;; _22 = _20->x_start;

(insn 60 59 0 (set (reg:SI 108 [ _22 ])
        (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 20 [0x14])) [3 _20->x_start+0 S4 A32])) "function.c":1349 -1
     (nil))

;; _21->x_current = _22;

(insn 61 60 0 (set (mem:SI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 12 [0xc])) [3 _21->x_current+0 S4 A32])
        (reg:SI 108 [ _22 ])) "function.c":1349 -1
     (nil))

;; _23 = serwer_76(D)->player1;

(insn 62 61 63 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1350 -1
     (nil))

(insn 63 62 0 (set (reg/f:DI 109 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 181)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1350 -1
     (nil))

;; _24 = serwer_76(D)->player1;

(insn 64 63 65 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1350 -1
     (nil))

(insn 65 64 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 182)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1350 -1
     (nil))

;; _25 = _23->y_start;

(insn 66 65 0 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 24 [0x18])) [3 _23->y_start+0 S4 A64])) "function.c":1350 -1
     (nil))

;; _24->y_current = _25;

(insn 67 66 0 (set (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 16 [0x10])) [3 _24->y_current+0 S4 A64])
        (reg:SI 111 [ _25 ])) "function.c":1350 -1
     (nil))

;; _26 = serwer_76(D)->skarb.count_drop_coin;

(insn 68 67 69 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1352 -1
     (nil))

(insn 69 68 0 (set (reg:SI 112 [ _26 ])
        (mem:SI (plus:DI (reg/f:DI 183)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1352 -1
     (nil))

;; _27 = _26 + 1;

(insn 70 69 0 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1352 -1
     (nil))

;; serwer_76(D)->skarb.count_drop_coin = _27;

(insn 71 70 72 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1352 -1
     (nil))

(insn 72 71 0 (set (mem:SI (plus:DI (reg/f:DI 184)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])
        (reg:SI 113 [ _27 ])) "function.c":1352 -1
     (nil))

;; _28 = serwer_76(D)->mapa;

(insn 73 72 74 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1354 -1
     (nil))

(insn 74 73 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 185)
                (const_int 16 [0x10])) [9 serwer_76(D)->mapa+0 S8 A64])) "function.c":1354 -1
     (nil))

;; _29 = serwer_76(D)->bestia.y;

(insn 75 74 76 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1354 -1
     (nil))

(insn 76 75 0 (set (reg:SI 115 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 186)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1354 -1
     (nil))

;; _30 = (long unsigned int) _29;

(insn 77 76 0 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "function.c":1354 -1
     (nil))

;; _31 = _30 * 8;

(insn 78 77 0 (parallel [
            (set (reg:DI 117 [ _31 ])
                (ashift:DI (reg:DI 116 [ _30 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1354 -1
     (nil))

;; _32 = _28 + _31;

(insn 79 78 0 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1354 -1
     (nil))

;; _33 = *_32;

(insn 80 79 0 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (reg/f:DI 118 [ _32 ]) [10 *_32+0 S8 A64])) "function.c":1354 -1
     (nil))

;; _34 = serwer_76(D)->bestia.x;

(insn 81 80 82 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1354 -1
     (nil))

(insn 82 81 0 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 187)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1354 -1
     (nil))

;; _35 = (sizetype) _34;

(insn 83 82 0 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 120 [ _34 ]))) "function.c":1354 -1
     (nil))

;; _36 = _33 + _35;

(insn 84 83 0 (parallel [
            (set (reg/f:DI 122 [ _36 ])
                (plus:DI (reg/f:DI 119 [ _33 ])
                    (reg:DI 121 [ _35 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1354 -1
     (nil))

;; *_36 = 68;

(insn 85 84 0 (set (mem:QI (reg/f:DI 122 [ _36 ]) [0 *_36+0 S1 A8])
        (const_int 68 [0x44])) "function.c":1354 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 86 85 87 244 (nil) [0 uses])

(note 87 86 0 NOTE_INSN_BASIC_BLOCK)

;; _37 = serwer_76(D)->bestia.x;

(insn 88 87 89 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))

(insn 89 88 0 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 188)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1357 -1
     (nil))

;; _38 = serwer_76(D)->player2;

(insn 90 89 91 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))

(insn 91 90 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 189)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1357 -1
     (nil))

;; _39 = _38->x_current;

(insn 92 91 0 (set (reg:SI 125 [ _39 ])
        (mem:SI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 12 [0xc])) [3 _38->x_current+0 S4 A32])) "function.c":1357 -1
     (nil))

;; if (_37 == _39)

(insn 93 92 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ _37 ])
            (reg:SI 125 [ _39 ]))) "function.c":1357 -1
     (nil))

(jump_insn 94 93 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1357 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _40 = serwer_76(D)->bestia.y;

(insn 96 95 97 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))

(insn 97 96 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 190)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1357 -1
     (nil))

;; _41 = serwer_76(D)->player2;

(insn 98 97 99 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))

(insn 99 98 0 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (plus:DI (reg/f:DI 191)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1357 -1
     (nil))

;; _42 = _41->y_current;

(insn 100 99 0 (set (reg:SI 128 [ _42 ])
        (mem:SI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 16 [0x10])) [3 _41->y_current+0 S4 A64])) "function.c":1357 -1
     (nil))

;; if (_40 == _42)

(insn 101 100 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ _40 ])
            (reg:SI 128 [ _42 ]))) "function.c":1357 -1
     (nil))

(jump_insn 102 101 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1357 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _43 = serwer_76(D)->player2;

(insn 104 103 105 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1359 -1
     (nil))

(insn 105 104 0 (set (reg/f:DI 129 [ _43 ])
        (mem/f:DI (plus:DI (reg/f:DI 192)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1359 -1
     (nil))

;; _44 = _43->deaths;

(insn 106 105 0 (set (reg:SI 130 [ _44 ])
        (mem:SI (plus:DI (reg/f:DI 129 [ _43 ])
                (const_int 28 [0x1c])) [3 _43->deaths+0 S4 A32])) "function.c":1359 -1
     (nil))

;; _45 = _44 + 1;

(insn 107 106 0 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1359 -1
     (nil))

;; _43->deaths = _45;

(insn 108 107 0 (set (mem:SI (plus:DI (reg/f:DI 129 [ _43 ])
                (const_int 28 [0x1c])) [3 _43->deaths+0 S4 A32])
        (reg:SI 131 [ _45 ])) "function.c":1359 -1
     (nil))

;; _46 = serwer_76(D)->player2;

(insn 109 108 110 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1361 -1
     (nil))

(insn 110 109 0 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (plus:DI (reg/f:DI 193)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1361 -1
     (nil))

;; _47 = serwer_76(D)->skarb.count_drop_coin;

(insn 111 110 112 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1361 -1
     (nil))

(insn 112 111 0 (set (reg:SI 133 [ _47 ])
        (mem:SI (plus:DI (reg/f:DI 194)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1361 -1
     (nil))

;; _48 = _46->y_current;

(insn 113 112 0 (set (reg:SI 134 [ _48 ])
        (mem:SI (plus:DI (reg/f:DI 132 [ _46 ])
                (const_int 16 [0x10])) [3 _46->y_current+0 S4 A64])) "function.c":1361 -1
     (nil))

;; serwer_76(D)->skarb.dropped_coin[_47][0] = _48;

(insn 114 113 115 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1361 -1
     (nil))

(insn 115 114 116 (set (reg:DI 196)
        (sign_extend:DI (reg:SI 133 [ _47 ]))) "function.c":1361 -1
     (nil))

(insn 116 115 117 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg:DI 196)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1361 -1
     (nil))

(insn 117 116 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 197)
                    (const_int 8 [0x8]))
                (reg/f:DI 195)) [3 serwer_76(D)->skarb.dropped_coin S4 A64])
        (reg:SI 134 [ _48 ])) "function.c":1361 -1
     (nil))

;; _49 = serwer_76(D)->player2;

(insn 118 117 119 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1362 -1
     (nil))

(insn 119 118 0 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (plus:DI (reg/f:DI 198)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1362 -1
     (nil))

;; _50 = serwer_76(D)->skarb.count_drop_coin;

(insn 120 119 121 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1362 -1
     (nil))

(insn 121 120 0 (set (reg:SI 136 [ _50 ])
        (mem:SI (plus:DI (reg/f:DI 199)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1362 -1
     (nil))

;; _51 = _49->x_current;

(insn 122 121 0 (set (reg:SI 137 [ _51 ])
        (mem:SI (plus:DI (reg/f:DI 135 [ _49 ])
                (const_int 12 [0xc])) [3 _49->x_current+0 S4 A32])) "function.c":1362 -1
     (nil))

;; serwer_76(D)->skarb.dropped_coin[_50][1] = _51;

(insn 123 122 124 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1362 -1
     (nil))

(insn 124 123 125 (set (reg:DI 201)
        (sign_extend:DI (reg:SI 136 [ _50 ]))) "function.c":1362 -1
     (nil))

(insn 125 124 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 201)
                        (const_int 8 [0x8]))
                    (reg/f:DI 200))
                (const_int 24068 [0x5e04])) [3 serwer_76(D)->skarb.dropped_coin S4 A32])
        (reg:SI 137 [ _51 ])) "function.c":1362 -1
     (nil))

;; _52 = serwer_76(D)->player2;

(insn 126 125 127 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1364 -1
     (nil))

(insn 127 126 0 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (plus:DI (reg/f:DI 202)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1364 -1
     (nil))

;; _53 = serwer_76(D)->skarb.count_drop_coin;

(insn 128 127 129 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1364 -1
     (nil))

(insn 129 128 0 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 203)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1364 -1
     (nil))

;; _54 = _52->coins_carried;

(insn 130 129 0 (set (reg:SI 140 [ _54 ])
        (mem:SI (plus:DI (reg/f:DI 138 [ _52 ])
                (const_int 32 [0x20])) [3 _52->coins_carried+0 S4 A64])) "function.c":1364 -1
     (nil))

;; serwer_76(D)->skarb.value_all_dropped_coin[_53] = _54;

(insn 131 130 132 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1364 -1
     (nil))

(insn 132 131 133 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "function.c":1364 -1
     (nil))

(insn 133 132 134 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg:DI 205)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1364 -1
     (nil))

(insn 134 133 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 206)
                    (const_int 4 [0x4]))
                (reg/f:DI 204)) [3 serwer_76(D)->skarb.value_all_dropped_coin S4 A32])
        (reg:SI 140 [ _54 ])) "function.c":1364 -1
     (nil))

;; _55 = serwer_76(D)->player2;

(insn 135 134 136 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1366 -1
     (nil))

(insn 136 135 0 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (plus:DI (reg/f:DI 207)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1366 -1
     (nil))

;; _55->coins_carried = 0;

(insn 137 136 0 (set (mem:SI (plus:DI (reg/f:DI 141 [ _55 ])
                (const_int 32 [0x20])) [3 _55->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1366 -1
     (nil))

;; _56 = serwer_76(D)->player2;

(insn 138 137 139 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1368 -1
     (nil))

(insn 139 138 0 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 208)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1368 -1
     (nil))

;; _57 = serwer_76(D)->player2;

(insn 140 139 141 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1368 -1
     (nil))

(insn 141 140 0 (set (reg/f:DI 143 [ _57 ])
        (mem/f:DI (plus:DI (reg/f:DI 209)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1368 -1
     (nil))

;; _58 = _56->x_start;

(insn 142 141 0 (set (reg:SI 144 [ _58 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 20 [0x14])) [3 _56->x_start+0 S4 A32])) "function.c":1368 -1
     (nil))

;; _57->x_current = _58;

(insn 143 142 0 (set (mem:SI (plus:DI (reg/f:DI 143 [ _57 ])
                (const_int 12 [0xc])) [3 _57->x_current+0 S4 A32])
        (reg:SI 144 [ _58 ])) "function.c":1368 -1
     (nil))

;; _59 = serwer_76(D)->player2;

(insn 144 143 145 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1369 -1
     (nil))

(insn 145 144 0 (set (reg/f:DI 145 [ _59 ])
        (mem/f:DI (plus:DI (reg/f:DI 210)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1369 -1
     (nil))

;; _60 = serwer_76(D)->player2;

(insn 146 145 147 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1369 -1
     (nil))

(insn 147 146 0 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (plus:DI (reg/f:DI 211)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1369 -1
     (nil))

;; _61 = _59->y_start;

(insn 148 147 0 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (reg/f:DI 145 [ _59 ])
                (const_int 24 [0x18])) [3 _59->y_start+0 S4 A64])) "function.c":1369 -1
     (nil))

;; _60->y_current = _61;

(insn 149 148 0 (set (mem:SI (plus:DI (reg/f:DI 146 [ _60 ])
                (const_int 16 [0x10])) [3 _60->y_current+0 S4 A64])
        (reg:SI 147 [ _61 ])) "function.c":1369 -1
     (nil))

;; _62 = serwer_76(D)->skarb.count_drop_coin;

(insn 150 149 151 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1371 -1
     (nil))

(insn 151 150 0 (set (reg:SI 148 [ _62 ])
        (mem:SI (plus:DI (reg/f:DI 212)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1371 -1
     (nil))

;; _63 = _62 + 1;

(insn 152 151 0 (parallel [
            (set (reg:SI 149 [ _63 ])
                (plus:SI (reg:SI 148 [ _62 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1371 -1
     (nil))

;; serwer_76(D)->skarb.count_drop_coin = _63;

(insn 153 152 154 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1371 -1
     (nil))

(insn 154 153 0 (set (mem:SI (plus:DI (reg/f:DI 213)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])
        (reg:SI 149 [ _63 ])) "function.c":1371 -1
     (nil))

;; _64 = serwer_76(D)->mapa;

(insn 155 154 156 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1373 -1
     (nil))

(insn 156 155 0 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (plus:DI (reg/f:DI 214)
                (const_int 16 [0x10])) [9 serwer_76(D)->mapa+0 S8 A64])) "function.c":1373 -1
     (nil))

;; _65 = serwer_76(D)->bestia.y;

(insn 157 156 158 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1373 -1
     (nil))

(insn 158 157 0 (set (reg:SI 151 [ _65 ])
        (mem:SI (plus:DI (reg/f:DI 215)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1373 -1
     (nil))

;; _66 = (long unsigned int) _65;

(insn 159 158 0 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 151 [ _65 ]))) "function.c":1373 -1
     (nil))

;; _67 = _66 * 8;

(insn 160 159 0 (parallel [
            (set (reg:DI 153 [ _67 ])
                (ashift:DI (reg:DI 152 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1373 -1
     (nil))

;; _68 = _64 + _67;

(insn 161 160 0 (parallel [
            (set (reg/f:DI 154 [ _68 ])
                (plus:DI (reg/f:DI 150 [ _64 ])
                    (reg:DI 153 [ _67 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1373 -1
     (nil))

;; _69 = *_68;

(insn 162 161 0 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (reg/f:DI 154 [ _68 ]) [10 *_68+0 S8 A64])) "function.c":1373 -1
     (nil))

;; _70 = serwer_76(D)->bestia.x;

(insn 163 162 164 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1373 -1
     (nil))

(insn 164 163 0 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (reg/f:DI 216)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1373 -1
     (nil))

;; _71 = (sizetype) _70;

(insn 165 164 0 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 156 [ _70 ]))) "function.c":1373 -1
     (nil))

;; _72 = _69 + _71;

(insn 166 165 0 (parallel [
            (set (reg/f:DI 158 [ _72 ])
                (plus:DI (reg/f:DI 155 [ _69 ])
                    (reg:DI 157 [ _71 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1373 -1
     (nil))

;; *_72 = 68;

(insn 167 166 0 (set (mem:QI (reg/f:DI 158 [ _72 ]) [0 *_72+0 S1 A8])
        (const_int 68 [0x44])) "function.c":1373 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 168 167 169 245 (nil) [0 uses])

(note 169 168 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; <L8>:

(code_label 170 169 171 246 (nil) [0 uses])

(note 171 170 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 6->9 redirected to 11
Edge 7->9 redirected to 11
Merging block 9 into block 8...
Merged blocks 8 and 9.
Merged 8 and 9 without moving.
Merging block 10 into block 8...
Merged blocks 8 and 10.
Merged 8 and 10 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1337 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (plus:DI (reg/f:DI 159)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1338 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 88 [ _2 ])
        (mem/f:DI (plus:DI (reg/f:DI 160)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1338 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 89 [ _3 ])
        (mem:SI (plus:DI (reg/f:DI 88 [ _2 ])
                (const_int 12 [0xc])) [3 _2->x_current+0 S4 A32])) "function.c":1338 -1
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (reg:SI 89 [ _3 ]))) "function.c":1338 -1
     (nil))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "function.c":1338 -1
     (nil)
 -> 86)
;;  succ:       4 (FALLTHRU)
;;              6

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))
(insn 15 14 16 4 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 161)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1338 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 162)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1338 -1
     (nil))
(insn 17 16 18 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 162)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1338 -1
     (nil))
(insn 18 17 19 4 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1338 -1
     (nil))
(insn 19 18 20 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 90 [ _4 ])
            (reg:SI 92 [ _6 ]))) "function.c":1338 -1
     (nil))
(jump_insn 20 19 21 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 86)
            (pc))) "function.c":1338 -1
     (nil)
 -> 86)
;;  succ:       5 (FALLTHRU)
;;              6

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 21 20 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1340 -1
     (nil))
(insn 23 22 24 5 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 163)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1340 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 28 [0x1c])) [3 _7->deaths+0 S4 A32])) "function.c":1340 -1
     (nil))
(insn 25 24 26 5 (parallel [
            (set (reg:SI 95 [ _9 ])
                (plus:SI (reg:SI 94 [ _8 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1340 -1
     (nil))
(insn 26 25 27 5 (set (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 28 [0x1c])) [3 _7->deaths+0 S4 A32])
        (reg:SI 95 [ _9 ])) "function.c":1340 -1
     (nil))
(insn 27 26 28 5 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1342 -1
     (nil))
(insn 28 27 29 5 (set (reg/f:DI 96 [ _10 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1342 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 165)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1342 -1
     (nil))
(insn 30 29 31 5 (set (reg:SI 97 [ _11 ])
        (mem:SI (plus:DI (reg/f:DI 165)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1342 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 96 [ _10 ])
                (const_int 16 [0x10])) [3 _10->y_current+0 S4 A64])) "function.c":1342 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1342 -1
     (nil))
(insn 33 32 34 5 (set (reg:DI 167)
        (sign_extend:DI (reg:SI 97 [ _11 ]))) "function.c":1342 -1
     (nil))
(insn 34 33 35 5 (parallel [
            (set (reg:DI 168)
                (plus:DI (reg:DI 167)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1342 -1
     (nil))
(insn 35 34 36 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 168)
                    (const_int 8 [0x8]))
                (reg/f:DI 166)) [3 serwer_76(D)->skarb.dropped_coin S4 A64])
        (reg:SI 98 [ _12 ])) "function.c":1342 -1
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1343 -1
     (nil))
(insn 37 36 38 5 (set (reg/f:DI 99 [ _13 ])
        (mem/f:DI (plus:DI (reg/f:DI 169)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1343 -1
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 170)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1343 -1
     (nil))
(insn 39 38 40 5 (set (reg:SI 100 [ _14 ])
        (mem:SI (plus:DI (reg/f:DI 170)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1343 -1
     (nil))
(insn 40 39 41 5 (set (reg:SI 101 [ _15 ])
        (mem:SI (plus:DI (reg/f:DI 99 [ _13 ])
                (const_int 12 [0xc])) [3 _13->x_current+0 S4 A32])) "function.c":1343 -1
     (nil))
(insn 41 40 42 5 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1343 -1
     (nil))
(insn 42 41 43 5 (set (reg:DI 172)
        (sign_extend:DI (reg:SI 100 [ _14 ]))) "function.c":1343 -1
     (nil))
(insn 43 42 44 5 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 172)
                        (const_int 8 [0x8]))
                    (reg/f:DI 171))
                (const_int 24068 [0x5e04])) [3 serwer_76(D)->skarb.dropped_coin S4 A32])
        (reg:SI 101 [ _15 ])) "function.c":1343 -1
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 173)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1345 -1
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 102 [ _16 ])
        (mem/f:DI (plus:DI (reg/f:DI 173)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1345 -1
     (nil))
(insn 46 45 47 5 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1345 -1
     (nil))
(insn 47 46 48 5 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 174)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1345 -1
     (nil))
(insn 48 47 49 5 (set (reg:SI 104 [ _18 ])
        (mem:SI (plus:DI (reg/f:DI 102 [ _16 ])
                (const_int 32 [0x20])) [3 _16->coins_carried+0 S4 A64])) "function.c":1345 -1
     (nil))
(insn 49 48 50 5 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1345 -1
     (nil))
(insn 50 49 51 5 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 103 [ _17 ]))) "function.c":1345 -1
     (nil))
(insn 51 50 52 5 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg:DI 176)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1345 -1
     (nil))
(insn 52 51 53 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 177)
                    (const_int 4 [0x4]))
                (reg/f:DI 175)) [3 serwer_76(D)->skarb.value_all_dropped_coin S4 A32])
        (reg:SI 104 [ _18 ])) "function.c":1345 -1
     (nil))
(insn 53 52 54 5 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1347 -1
     (nil))
(insn 54 53 55 5 (set (reg/f:DI 105 [ _19 ])
        (mem/f:DI (plus:DI (reg/f:DI 178)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1347 -1
     (nil))
(insn 55 54 56 5 (set (mem:SI (plus:DI (reg/f:DI 105 [ _19 ])
                (const_int 32 [0x20])) [3 _19->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1347 -1
     (nil))
(insn 56 55 57 5 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1349 -1
     (nil))
(insn 57 56 58 5 (set (reg/f:DI 106 [ _20 ])
        (mem/f:DI (plus:DI (reg/f:DI 179)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1349 -1
     (nil))
(insn 58 57 59 5 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1349 -1
     (nil))
(insn 59 58 60 5 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 180)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1349 -1
     (nil))
(insn 60 59 61 5 (set (reg:SI 108 [ _22 ])
        (mem:SI (plus:DI (reg/f:DI 106 [ _20 ])
                (const_int 20 [0x14])) [3 _20->x_start+0 S4 A32])) "function.c":1349 -1
     (nil))
(insn 61 60 62 5 (set (mem:SI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 12 [0xc])) [3 _21->x_current+0 S4 A32])
        (reg:SI 108 [ _22 ])) "function.c":1349 -1
     (nil))
(insn 62 61 63 5 (set (reg/f:DI 181)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1350 -1
     (nil))
(insn 63 62 64 5 (set (reg/f:DI 109 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 181)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1350 -1
     (nil))
(insn 64 63 65 5 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1350 -1
     (nil))
(insn 65 64 66 5 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 182)
                (const_int 32 [0x20])) [14 serwer_76(D)->player1+0 S8 A64])) "function.c":1350 -1
     (nil))
(insn 66 65 67 5 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 24 [0x18])) [3 _23->y_start+0 S4 A64])) "function.c":1350 -1
     (nil))
(insn 67 66 68 5 (set (mem:SI (plus:DI (reg/f:DI 110 [ _24 ])
                (const_int 16 [0x10])) [3 _24->y_current+0 S4 A64])
        (reg:SI 111 [ _25 ])) "function.c":1350 -1
     (nil))
(insn 68 67 69 5 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1352 -1
     (nil))
(insn 69 68 70 5 (set (reg:SI 112 [ _26 ])
        (mem:SI (plus:DI (reg/f:DI 183)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1352 -1
     (nil))
(insn 70 69 71 5 (parallel [
            (set (reg:SI 113 [ _27 ])
                (plus:SI (reg:SI 112 [ _26 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1352 -1
     (nil))
(insn 71 70 72 5 (set (reg/f:DI 184)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1352 -1
     (nil))
(insn 72 71 73 5 (set (mem:SI (plus:DI (reg/f:DI 184)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])
        (reg:SI 113 [ _27 ])) "function.c":1352 -1
     (nil))
(insn 73 72 74 5 (set (reg/f:DI 185)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1354 -1
     (nil))
(insn 74 73 75 5 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 185)
                (const_int 16 [0x10])) [9 serwer_76(D)->mapa+0 S8 A64])) "function.c":1354 -1
     (nil))
(insn 75 74 76 5 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1354 -1
     (nil))
(insn 76 75 77 5 (set (reg:SI 115 [ _29 ])
        (mem:SI (plus:DI (reg/f:DI 186)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1354 -1
     (nil))
(insn 77 76 78 5 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 115 [ _29 ]))) "function.c":1354 -1
     (nil))
(insn 78 77 79 5 (parallel [
            (set (reg:DI 117 [ _31 ])
                (ashift:DI (reg:DI 116 [ _30 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1354 -1
     (nil))
(insn 79 78 80 5 (parallel [
            (set (reg/f:DI 118 [ _32 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1354 -1
     (nil))
(insn 80 79 81 5 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (reg/f:DI 118 [ _32 ]) [10 *_32+0 S8 A64])) "function.c":1354 -1
     (nil))
(insn 81 80 82 5 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1354 -1
     (nil))
(insn 82 81 83 5 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 187)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1354 -1
     (nil))
(insn 83 82 84 5 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 120 [ _34 ]))) "function.c":1354 -1
     (nil))
(insn 84 83 85 5 (parallel [
            (set (reg/f:DI 122 [ _36 ])
                (plus:DI (reg/f:DI 119 [ _33 ])
                    (reg:DI 121 [ _35 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1354 -1
     (nil))
(insn 85 84 86 5 (set (mem:QI (reg/f:DI 122 [ _36 ]) [0 *_36+0 S1 A8])
        (const_int 68 [0x44])) "function.c":1354 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              4
;;              5 (FALLTHRU)
(code_label 86 85 87 6 244 (nil) [2 uses])
(note 87 86 88 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 6 (set (reg/f:DI 188)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))
(insn 89 88 90 6 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 188)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1357 -1
     (nil))
(insn 90 89 91 6 (set (reg/f:DI 189)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))
(insn 91 90 92 6 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 189)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1357 -1
     (nil))
(insn 92 91 93 6 (set (reg:SI 125 [ _39 ])
        (mem:SI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 12 [0xc])) [3 _38->x_current+0 S4 A32])) "function.c":1357 -1
     (nil))
(insn 93 92 94 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 123 [ _37 ])
            (reg:SI 125 [ _39 ]))) "function.c":1357 -1
     (nil))
(jump_insn 94 93 95 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 172)
            (pc))) "function.c":1357 682 {*jcc}
     (nil)
 -> 172)
;;  succ:       7 (FALLTHRU)
;;              11

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
(note 95 94 96 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 7 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))
(insn 97 96 98 7 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 190)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1357 -1
     (nil))
(insn 98 97 99 7 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1357 -1
     (nil))
(insn 99 98 100 7 (set (reg/f:DI 127 [ _41 ])
        (mem/f:DI (plus:DI (reg/f:DI 191)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1357 -1
     (nil))
(insn 100 99 101 7 (set (reg:SI 128 [ _42 ])
        (mem:SI (plus:DI (reg/f:DI 127 [ _41 ])
                (const_int 16 [0x10])) [3 _41->y_current+0 S4 A64])) "function.c":1357 -1
     (nil))
(insn 101 100 102 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 126 [ _40 ])
            (reg:SI 128 [ _42 ]))) "function.c":1357 -1
     (nil))
(jump_insn 102 101 103 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 172)
            (pc))) "function.c":1357 682 {*jcc}
     (nil)
 -> 172)
;;  succ:       8 (FALLTHRU)
;;              11

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 103 102 104 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 8 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1359 -1
     (nil))
(insn 105 104 106 8 (set (reg/f:DI 129 [ _43 ])
        (mem/f:DI (plus:DI (reg/f:DI 192)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1359 -1
     (nil))
(insn 106 105 107 8 (set (reg:SI 130 [ _44 ])
        (mem:SI (plus:DI (reg/f:DI 129 [ _43 ])
                (const_int 28 [0x1c])) [3 _43->deaths+0 S4 A32])) "function.c":1359 -1
     (nil))
(insn 107 106 108 8 (parallel [
            (set (reg:SI 131 [ _45 ])
                (plus:SI (reg:SI 130 [ _44 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1359 -1
     (nil))
(insn 108 107 109 8 (set (mem:SI (plus:DI (reg/f:DI 129 [ _43 ])
                (const_int 28 [0x1c])) [3 _43->deaths+0 S4 A32])
        (reg:SI 131 [ _45 ])) "function.c":1359 -1
     (nil))
(insn 109 108 110 8 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1361 -1
     (nil))
(insn 110 109 111 8 (set (reg/f:DI 132 [ _46 ])
        (mem/f:DI (plus:DI (reg/f:DI 193)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1361 -1
     (nil))
(insn 111 110 112 8 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1361 -1
     (nil))
(insn 112 111 113 8 (set (reg:SI 133 [ _47 ])
        (mem:SI (plus:DI (reg/f:DI 194)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1361 -1
     (nil))
(insn 113 112 114 8 (set (reg:SI 134 [ _48 ])
        (mem:SI (plus:DI (reg/f:DI 132 [ _46 ])
                (const_int 16 [0x10])) [3 _46->y_current+0 S4 A64])) "function.c":1361 -1
     (nil))
(insn 114 113 115 8 (set (reg/f:DI 195)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1361 -1
     (nil))
(insn 115 114 116 8 (set (reg:DI 196)
        (sign_extend:DI (reg:SI 133 [ _47 ]))) "function.c":1361 -1
     (nil))
(insn 116 115 117 8 (parallel [
            (set (reg:DI 197)
                (plus:DI (reg:DI 196)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1361 -1
     (nil))
(insn 117 116 118 8 (set (mem:SI (plus:DI (mult:DI (reg:DI 197)
                    (const_int 8 [0x8]))
                (reg/f:DI 195)) [3 serwer_76(D)->skarb.dropped_coin S4 A64])
        (reg:SI 134 [ _48 ])) "function.c":1361 -1
     (nil))
(insn 118 117 119 8 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1362 -1
     (nil))
(insn 119 118 120 8 (set (reg/f:DI 135 [ _49 ])
        (mem/f:DI (plus:DI (reg/f:DI 198)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1362 -1
     (nil))
(insn 120 119 121 8 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1362 -1
     (nil))
(insn 121 120 122 8 (set (reg:SI 136 [ _50 ])
        (mem:SI (plus:DI (reg/f:DI 199)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1362 -1
     (nil))
(insn 122 121 123 8 (set (reg:SI 137 [ _51 ])
        (mem:SI (plus:DI (reg/f:DI 135 [ _49 ])
                (const_int 12 [0xc])) [3 _49->x_current+0 S4 A32])) "function.c":1362 -1
     (nil))
(insn 123 122 124 8 (set (reg/f:DI 200)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1362 -1
     (nil))
(insn 124 123 125 8 (set (reg:DI 201)
        (sign_extend:DI (reg:SI 136 [ _50 ]))) "function.c":1362 -1
     (nil))
(insn 125 124 126 8 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 201)
                        (const_int 8 [0x8]))
                    (reg/f:DI 200))
                (const_int 24068 [0x5e04])) [3 serwer_76(D)->skarb.dropped_coin S4 A32])
        (reg:SI 137 [ _51 ])) "function.c":1362 -1
     (nil))
(insn 126 125 127 8 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1364 -1
     (nil))
(insn 127 126 128 8 (set (reg/f:DI 138 [ _52 ])
        (mem/f:DI (plus:DI (reg/f:DI 202)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1364 -1
     (nil))
(insn 128 127 129 8 (set (reg/f:DI 203)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1364 -1
     (nil))
(insn 129 128 130 8 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 203)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1364 -1
     (nil))
(insn 130 129 131 8 (set (reg:SI 140 [ _54 ])
        (mem:SI (plus:DI (reg/f:DI 138 [ _52 ])
                (const_int 32 [0x20])) [3 _52->coins_carried+0 S4 A64])) "function.c":1364 -1
     (nil))
(insn 131 130 132 8 (set (reg/f:DI 204)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1364 -1
     (nil))
(insn 132 131 133 8 (set (reg:DI 205)
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "function.c":1364 -1
     (nil))
(insn 133 132 134 8 (parallel [
            (set (reg:DI 206)
                (plus:DI (reg:DI 205)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1364 -1
     (nil))
(insn 134 133 135 8 (set (mem:SI (plus:DI (mult:DI (reg:DI 206)
                    (const_int 4 [0x4]))
                (reg/f:DI 204)) [3 serwer_76(D)->skarb.value_all_dropped_coin S4 A32])
        (reg:SI 140 [ _54 ])) "function.c":1364 -1
     (nil))
(insn 135 134 136 8 (set (reg/f:DI 207)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1366 -1
     (nil))
(insn 136 135 137 8 (set (reg/f:DI 141 [ _55 ])
        (mem/f:DI (plus:DI (reg/f:DI 207)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1366 -1
     (nil))
(insn 137 136 138 8 (set (mem:SI (plus:DI (reg/f:DI 141 [ _55 ])
                (const_int 32 [0x20])) [3 _55->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1366 -1
     (nil))
(insn 138 137 139 8 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1368 -1
     (nil))
(insn 139 138 140 8 (set (reg/f:DI 142 [ _56 ])
        (mem/f:DI (plus:DI (reg/f:DI 208)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1368 -1
     (nil))
(insn 140 139 141 8 (set (reg/f:DI 209)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1368 -1
     (nil))
(insn 141 140 142 8 (set (reg/f:DI 143 [ _57 ])
        (mem/f:DI (plus:DI (reg/f:DI 209)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1368 -1
     (nil))
(insn 142 141 143 8 (set (reg:SI 144 [ _58 ])
        (mem:SI (plus:DI (reg/f:DI 142 [ _56 ])
                (const_int 20 [0x14])) [3 _56->x_start+0 S4 A32])) "function.c":1368 -1
     (nil))
(insn 143 142 144 8 (set (mem:SI (plus:DI (reg/f:DI 143 [ _57 ])
                (const_int 12 [0xc])) [3 _57->x_current+0 S4 A32])
        (reg:SI 144 [ _58 ])) "function.c":1368 -1
     (nil))
(insn 144 143 145 8 (set (reg/f:DI 210)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1369 -1
     (nil))
(insn 145 144 146 8 (set (reg/f:DI 145 [ _59 ])
        (mem/f:DI (plus:DI (reg/f:DI 210)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1369 -1
     (nil))
(insn 146 145 147 8 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1369 -1
     (nil))
(insn 147 146 148 8 (set (reg/f:DI 146 [ _60 ])
        (mem/f:DI (plus:DI (reg/f:DI 211)
                (const_int 40 [0x28])) [14 serwer_76(D)->player2+0 S8 A64])) "function.c":1369 -1
     (nil))
(insn 148 147 149 8 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (reg/f:DI 145 [ _59 ])
                (const_int 24 [0x18])) [3 _59->y_start+0 S4 A64])) "function.c":1369 -1
     (nil))
(insn 149 148 150 8 (set (mem:SI (plus:DI (reg/f:DI 146 [ _60 ])
                (const_int 16 [0x10])) [3 _60->y_current+0 S4 A64])
        (reg:SI 147 [ _61 ])) "function.c":1369 -1
     (nil))
(insn 150 149 151 8 (set (reg/f:DI 212)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1371 -1
     (nil))
(insn 151 150 152 8 (set (reg:SI 148 [ _62 ])
        (mem:SI (plus:DI (reg/f:DI 212)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1371 -1
     (nil))
(insn 152 151 153 8 (parallel [
            (set (reg:SI 149 [ _63 ])
                (plus:SI (reg:SI 148 [ _62 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1371 -1
     (nil))
(insn 153 152 154 8 (set (reg/f:DI 213)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1371 -1
     (nil))
(insn 154 153 155 8 (set (mem:SI (plus:DI (reg/f:DI 213)
                (const_int 24060 [0x5dfc])) [3 serwer_76(D)->skarb.count_drop_coin+0 S4 A32])
        (reg:SI 149 [ _63 ])) "function.c":1371 -1
     (nil))
(insn 155 154 156 8 (set (reg/f:DI 214)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1373 -1
     (nil))
(insn 156 155 157 8 (set (reg/f:DI 150 [ _64 ])
        (mem/f:DI (plus:DI (reg/f:DI 214)
                (const_int 16 [0x10])) [9 serwer_76(D)->mapa+0 S8 A64])) "function.c":1373 -1
     (nil))
(insn 157 156 158 8 (set (reg/f:DI 215)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1373 -1
     (nil))
(insn 158 157 159 8 (set (reg:SI 151 [ _65 ])
        (mem:SI (plus:DI (reg/f:DI 215)
                (const_int 36068 [0x8ce4])) [3 serwer_76(D)->bestia.y+0 S4 A32])) "function.c":1373 -1
     (nil))
(insn 159 158 160 8 (set (reg:DI 152 [ _66 ])
        (sign_extend:DI (reg:SI 151 [ _65 ]))) "function.c":1373 -1
     (nil))
(insn 160 159 161 8 (parallel [
            (set (reg:DI 153 [ _67 ])
                (ashift:DI (reg:DI 152 [ _66 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1373 -1
     (nil))
(insn 161 160 162 8 (parallel [
            (set (reg/f:DI 154 [ _68 ])
                (plus:DI (reg/f:DI 150 [ _64 ])
                    (reg:DI 153 [ _67 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1373 -1
     (nil))
(insn 162 161 163 8 (set (reg/f:DI 155 [ _69 ])
        (mem/f:DI (reg/f:DI 154 [ _68 ]) [10 *_68+0 S8 A64])) "function.c":1373 -1
     (nil))
(insn 163 162 164 8 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1373 -1
     (nil))
(insn 164 163 165 8 (set (reg:SI 156 [ _70 ])
        (mem:SI (plus:DI (reg/f:DI 216)
                (const_int 36064 [0x8ce0])) [3 serwer_76(D)->bestia.x+0 S4 A64])) "function.c":1373 -1
     (nil))
(insn 165 164 166 8 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 156 [ _70 ]))) "function.c":1373 -1
     (nil))
(insn 166 165 167 8 (parallel [
            (set (reg/f:DI 158 [ _72 ])
                (plus:DI (reg/f:DI 155 [ _69 ])
                    (reg:DI 157 [ _71 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1373 -1
     (nil))
(insn 167 166 174 8 (set (mem:QI (reg/f:DI 158 [ _72 ]) [0 *_72+0 S1 A8])
        (const_int 68 [0x44])) "function.c":1373 -1
     (nil))
(insn 174 167 172 8 (const_int 0 [0]) "function.c":1375 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
;;              6
;;              7
(code_label 172 174 173 11 243 (nil) [2 uses])
(note 173 172 0 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function player_kolizja (player_kolizja, funcdef_no=29, decl_uid=6265, cgraph_uid=29, symbol_order=32)

player_kolizja (struct serwer_info * serwer)
{
  struct player_info * _1;
  int _2;
  struct player_info * _3;
  int _4;
  struct player_info * _5;
  int _6;
  struct player_info * _7;
  int _8;
  struct player_info * _9;
  int _10;
  int _11;
  struct player_info * _12;
  int _13;
  int _14;
  struct player_info * _15;
  int _16;
  int _17;
  struct player_info * _18;
  int _19;
  int _20;
  struct player_info * _21;
  int _22;
  struct player_info * _23;
  int _24;
  int _25;
  int _26;
  struct player_info * _27;
  struct player_info * _28;
  struct player_info * _29;
  struct player_info * _30;
  int _31;
  struct player_info * _32;
  struct player_info * _33;
  int _34;
  struct player_info * _35;
  struct player_info * _36;
  int _37;
  struct player_info * _38;
  struct player_info * _39;
  int _40;
  int _41;
  int _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_45(D)->player1;
  _2 = _1->x_current;
  _3 = serwer_45(D)->player2;
  _4 = _3->x_current;
  if (_2 == _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = serwer_45(D)->player1;
  _6 = _5->y_current;
  _7 = serwer_45(D)->player2;
  _8 = _7->y_current;
  if (_6 == _8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = serwer_45(D)->player1;
  _10 = _9->deaths;
  _11 = _10 + 1;
  _9->deaths = _11;
  _12 = serwer_45(D)->player2;
  _13 = _12->deaths;
  _14 = _13 + 1;
  _12->deaths = _14;
  _15 = serwer_45(D)->player1;
  _16 = serwer_45(D)->skarb.count_drop_coin;
  _17 = _15->y_current;
  serwer_45(D)->skarb.dropped_coin[_16][0] = _17;
  _18 = serwer_45(D)->player1;
  _19 = serwer_45(D)->skarb.count_drop_coin;
  _20 = _18->x_current;
  serwer_45(D)->skarb.dropped_coin[_19][1] = _20;
  _21 = serwer_45(D)->player1;
  _22 = _21->coins_carried;
  _23 = serwer_45(D)->player2;
  _24 = _23->coins_carried;
  _25 = serwer_45(D)->skarb.count_drop_coin;
  _26 = _22 + _24;
  serwer_45(D)->skarb.value_all_dropped_coin[_25] = _26;
  _27 = serwer_45(D)->player1;
  _27->coins_carried = 0;
  _28 = serwer_45(D)->player2;
  _28->coins_carried = 0;
  _29 = serwer_45(D)->player1;
  _30 = serwer_45(D)->player1;
  _31 = _29->x_start;
  _30->x_current = _31;
  _32 = serwer_45(D)->player1;
  _33 = serwer_45(D)->player1;
  _34 = _32->y_start;
  _33->y_current = _34;
  _35 = serwer_45(D)->player2;
  _36 = serwer_45(D)->player2;
  _37 = _35->x_start;
  _36->x_current = _37;
  _38 = serwer_45(D)->player2;
  _39 = serwer_45(D)->player2;
  _40 = _38->y_start;
  _39->y_current = _40;
  _41 = serwer_45(D)->skarb.count_drop_coin;
  _42 = _41 + 1;
  serwer_45(D)->skarb.count_drop_coin = _42;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
;;                4
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L4>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 45 (serwer_45(D) - 45 )


Coalescible Partition map 

Partition 0, base 0 (serwer_45(D) - 45 )


Partition map 

Partition 0 (serwer_45(D) - 45 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (serwer_45(D) - 45 )

After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (serwer_45(D) - 45 )

player_kolizja (struct serwer_info * serwer)
{
  struct player_info * _1;
  int _2;
  struct player_info * _3;
  int _4;
  struct player_info * _5;
  int _6;
  struct player_info * _7;
  int _8;
  struct player_info * _9;
  int _10;
  int _11;
  struct player_info * _12;
  int _13;
  int _14;
  struct player_info * _15;
  int _16;
  int _17;
  struct player_info * _18;
  int _19;
  int _20;
  struct player_info * _21;
  int _22;
  struct player_info * _23;
  int _24;
  int _25;
  int _26;
  struct player_info * _27;
  struct player_info * _28;
  struct player_info * _29;
  struct player_info * _30;
  int _31;
  struct player_info * _32;
  struct player_info * _33;
  int _34;
  struct player_info * _35;
  struct player_info * _36;
  int _37;
  struct player_info * _38;
  struct player_info * _39;
  int _40;
  int _41;
  int _42;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = serwer_45(D)->player1;
  _2 = _1->x_current;
  _3 = serwer_45(D)->player2;
  _4 = _3->x_current;
  if (_2 == _4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       3
;;                5

;;   basic block 3, loop depth 0
;;    pred:       2
  _5 = serwer_45(D)->player1;
  _6 = _5->y_current;
  _7 = serwer_45(D)->player2;
  _8 = _7->y_current;
  if (_6 == _8)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       4
;;                5

;;   basic block 4, loop depth 0
;;    pred:       3
  _9 = serwer_45(D)->player1;
  _10 = _9->deaths;
  _11 = _10 + 1;
  _9->deaths = _11;
  _12 = serwer_45(D)->player2;
  _13 = _12->deaths;
  _14 = _13 + 1;
  _12->deaths = _14;
  _15 = serwer_45(D)->player1;
  _16 = serwer_45(D)->skarb.count_drop_coin;
  _17 = _15->y_current;
  serwer_45(D)->skarb.dropped_coin[_16][0] = _17;
  _18 = serwer_45(D)->player1;
  _19 = serwer_45(D)->skarb.count_drop_coin;
  _20 = _18->x_current;
  serwer_45(D)->skarb.dropped_coin[_19][1] = _20;
  _21 = serwer_45(D)->player1;
  _22 = _21->coins_carried;
  _23 = serwer_45(D)->player2;
  _24 = _23->coins_carried;
  _25 = serwer_45(D)->skarb.count_drop_coin;
  _26 = _22 + _24;
  serwer_45(D)->skarb.value_all_dropped_coin[_25] = _26;
  _27 = serwer_45(D)->player1;
  _27->coins_carried = 0;
  _28 = serwer_45(D)->player2;
  _28->coins_carried = 0;
  _29 = serwer_45(D)->player1;
  _30 = serwer_45(D)->player1;
  _31 = _29->x_start;
  _30->x_current = _31;
  _32 = serwer_45(D)->player1;
  _33 = serwer_45(D)->player1;
  _34 = _32->y_start;
  _33->y_current = _34;
  _35 = serwer_45(D)->player2;
  _36 = serwer_45(D)->player2;
  _37 = _35->x_start;
  _36->x_current = _37;
  _38 = serwer_45(D)->player2;
  _39 = serwer_45(D)->player2;
  _40 = _38->y_start;
  _39->y_current = _40;
  _41 = serwer_45(D)->skarb.count_drop_coin;
  _42 = _41 + 1;
  serwer_45(D)->skarb.count_drop_coin = _42;
;;    succ:       5

;;   basic block 5, loop depth 0
;;    pred:       2
;;                3
;;                4
;;    succ:       6

;;   basic block 6, loop depth 0
;;    pred:       5
<L4>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = serwer_45(D)->player1;

(insn 6 5 7 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))

(insn 7 6 0 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 129)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1380 -1
     (nil))

;; _2 = _1->x_current;

(insn 8 7 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 12 [0xc])) [3 _1->x_current+0 S4 A32])) "function.c":1380 -1
     (nil))

;; _3 = serwer_45(D)->player2;

(insn 9 8 10 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))

(insn 10 9 0 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 130)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1380 -1
     (nil))

;; _4 = _3->x_current;

(insn 11 10 0 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 12 [0xc])) [3 _3->x_current+0 S4 A32])) "function.c":1380 -1
     (nil))

;; if (_2 == _4)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _2 ])
            (reg:SI 90 [ _4 ]))) "function.c":1380 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1380 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _5 = serwer_45(D)->player1;

(insn 15 14 16 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))

(insn 16 15 0 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 131)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1380 -1
     (nil))

;; _6 = _5->y_current;

(insn 17 16 0 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1380 -1
     (nil))

;; _7 = serwer_45(D)->player2;

(insn 18 17 19 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))

(insn 19 18 0 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 132)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1380 -1
     (nil))

;; _8 = _7->y_current;

(insn 20 19 0 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 16 [0x10])) [3 _7->y_current+0 S4 A64])) "function.c":1380 -1
     (nil))

;; if (_6 == _8)

(insn 21 20 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _6 ])
            (reg:SI 94 [ _8 ]))) "function.c":1380 -1
     (nil))

(jump_insn 22 21 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1380 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _9 = serwer_45(D)->player1;

(insn 24 23 25 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1382 -1
     (nil))

(insn 25 24 0 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 133)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1382 -1
     (nil))

;; _10 = _9->deaths;

(insn 26 25 0 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 28 [0x1c])) [3 _9->deaths+0 S4 A32])) "function.c":1382 -1
     (nil))

;; _11 = _10 + 1;

(insn 27 26 0 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1382 -1
     (nil))

;; _9->deaths = _11;

(insn 28 27 0 (set (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 28 [0x1c])) [3 _9->deaths+0 S4 A32])
        (reg:SI 97 [ _11 ])) "function.c":1382 -1
     (nil))

;; _12 = serwer_45(D)->player2;

(insn 29 28 30 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1383 -1
     (nil))

(insn 30 29 0 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 134)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1383 -1
     (nil))

;; _13 = _12->deaths;

(insn 31 30 0 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 28 [0x1c])) [3 _12->deaths+0 S4 A32])) "function.c":1383 -1
     (nil))

;; _14 = _13 + 1;

(insn 32 31 0 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 99 [ _13 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1383 -1
     (nil))

;; _12->deaths = _14;

(insn 33 32 0 (set (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 28 [0x1c])) [3 _12->deaths+0 S4 A32])
        (reg:SI 100 [ _14 ])) "function.c":1383 -1
     (nil))

;; _15 = serwer_45(D)->player1;

(insn 34 33 35 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1385 -1
     (nil))

(insn 35 34 0 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 135)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1385 -1
     (nil))

;; _16 = serwer_45(D)->skarb.count_drop_coin;

(insn 36 35 37 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1385 -1
     (nil))

(insn 37 36 0 (set (reg:SI 102 [ _16 ])
        (mem:SI (plus:DI (reg/f:DI 136)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1385 -1
     (nil))

;; _17 = _15->y_current;

(insn 38 37 0 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 16 [0x10])) [3 _15->y_current+0 S4 A64])) "function.c":1385 -1
     (nil))

;; serwer_45(D)->skarb.dropped_coin[_16][0] = _17;

(insn 39 38 40 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1385 -1
     (nil))

(insn 40 39 41 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "function.c":1385 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg:DI 138)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1385 -1
     (nil))

(insn 42 41 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 139)
                    (const_int 8 [0x8]))
                (reg/f:DI 137)) [3 serwer_45(D)->skarb.dropped_coin S4 A64])
        (reg:SI 103 [ _17 ])) "function.c":1385 -1
     (nil))

;; _18 = serwer_45(D)->player1;

(insn 43 42 44 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1386 -1
     (nil))

(insn 44 43 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 140)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1386 -1
     (nil))

;; _19 = serwer_45(D)->skarb.count_drop_coin;

(insn 45 44 46 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1386 -1
     (nil))

(insn 46 45 0 (set (reg:SI 105 [ _19 ])
        (mem:SI (plus:DI (reg/f:DI 141)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1386 -1
     (nil))

;; _20 = _18->x_current;

(insn 47 46 0 (set (reg:SI 106 [ _20 ])
        (mem:SI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 12 [0xc])) [3 _18->x_current+0 S4 A32])) "function.c":1386 -1
     (nil))

;; serwer_45(D)->skarb.dropped_coin[_19][1] = _20;

(insn 48 47 49 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1386 -1
     (nil))

(insn 49 48 50 (set (reg:DI 143)
        (sign_extend:DI (reg:SI 105 [ _19 ]))) "function.c":1386 -1
     (nil))

(insn 50 49 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 143)
                        (const_int 8 [0x8]))
                    (reg/f:DI 142))
                (const_int 24068 [0x5e04])) [3 serwer_45(D)->skarb.dropped_coin S4 A32])
        (reg:SI 106 [ _20 ])) "function.c":1386 -1
     (nil))

;; _21 = serwer_45(D)->player1;

(insn 51 50 52 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))

(insn 52 51 0 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1387 -1
     (nil))

;; _22 = _21->coins_carried;

(insn 53 52 0 (set (reg:SI 108 [ _22 ])
        (mem:SI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 32 [0x20])) [3 _21->coins_carried+0 S4 A64])) "function.c":1387 -1
     (nil))

;; _23 = serwer_45(D)->player2;

(insn 54 53 55 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))

(insn 55 54 0 (set (reg/f:DI 109 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 145)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1387 -1
     (nil))

;; _24 = _23->coins_carried;

(insn 56 55 0 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 32 [0x20])) [3 _23->coins_carried+0 S4 A64])) "function.c":1387 -1
     (nil))

;; _25 = serwer_45(D)->skarb.count_drop_coin;

(insn 57 56 58 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))

(insn 58 57 0 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 146)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1387 -1
     (nil))

;; _26 = _22 + _24;

(insn 59 58 0 (parallel [
            (set (reg:SI 112 [ _26 ])
                (plus:SI (reg:SI 108 [ _22 ])
                    (reg:SI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1387 -1
     (nil))

;; serwer_45(D)->skarb.value_all_dropped_coin[_25] = _26;

(insn 60 59 61 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))

(insn 61 60 62 (set (reg:DI 148)
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "function.c":1387 -1
     (nil))

(insn 62 61 63 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 148)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1387 -1
     (nil))

(insn 63 62 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 149)
                    (const_int 4 [0x4]))
                (reg/f:DI 147)) [3 serwer_45(D)->skarb.value_all_dropped_coin S4 A32])
        (reg:SI 112 [ _26 ])) "function.c":1387 -1
     (nil))

;; _27 = serwer_45(D)->player1;

(insn 64 63 65 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1389 -1
     (nil))

(insn 65 64 0 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 150)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1389 -1
     (nil))

;; _27->coins_carried = 0;

(insn 66 65 0 (set (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 32 [0x20])) [3 _27->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1389 -1
     (nil))

;; _28 = serwer_45(D)->player2;

(insn 67 66 68 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1390 -1
     (nil))

(insn 68 67 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 151)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1390 -1
     (nil))

;; _28->coins_carried = 0;

(insn 69 68 0 (set (mem:SI (plus:DI (reg/f:DI 114 [ _28 ])
                (const_int 32 [0x20])) [3 _28->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1390 -1
     (nil))

;; _29 = serwer_45(D)->player1;

(insn 70 69 71 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1392 -1
     (nil))

(insn 71 70 0 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1392 -1
     (nil))

;; _30 = serwer_45(D)->player1;

(insn 72 71 73 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1392 -1
     (nil))

(insn 73 72 0 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 153)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1392 -1
     (nil))

;; _31 = _29->x_start;

(insn 74 73 0 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 20 [0x14])) [3 _29->x_start+0 S4 A32])) "function.c":1392 -1
     (nil))

;; _30->x_current = _31;

(insn 75 74 0 (set (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 12 [0xc])) [3 _30->x_current+0 S4 A32])
        (reg:SI 117 [ _31 ])) "function.c":1392 -1
     (nil))

;; _32 = serwer_45(D)->player1;

(insn 76 75 77 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1393 -1
     (nil))

(insn 77 76 0 (set (reg/f:DI 118 [ _32 ])
        (mem/f:DI (plus:DI (reg/f:DI 154)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1393 -1
     (nil))

;; _33 = serwer_45(D)->player1;

(insn 78 77 79 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1393 -1
     (nil))

(insn 79 78 0 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 155)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1393 -1
     (nil))

;; _34 = _32->y_start;

(insn 80 79 0 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 118 [ _32 ])
                (const_int 24 [0x18])) [3 _32->y_start+0 S4 A64])) "function.c":1393 -1
     (nil))

;; _33->y_current = _34;

(insn 81 80 0 (set (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 16 [0x10])) [3 _33->y_current+0 S4 A64])
        (reg:SI 120 [ _34 ])) "function.c":1393 -1
     (nil))

;; _35 = serwer_45(D)->player2;

(insn 82 81 83 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1395 -1
     (nil))

(insn 83 82 0 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 156)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1395 -1
     (nil))

;; _36 = serwer_45(D)->player2;

(insn 84 83 85 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1395 -1
     (nil))

(insn 85 84 0 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 157)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1395 -1
     (nil))

;; _37 = _35->x_start;

(insn 86 85 0 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 20 [0x14])) [3 _35->x_start+0 S4 A32])) "function.c":1395 -1
     (nil))

;; _36->x_current = _37;

(insn 87 86 0 (set (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 12 [0xc])) [3 _36->x_current+0 S4 A32])
        (reg:SI 123 [ _37 ])) "function.c":1395 -1
     (nil))

;; _38 = serwer_45(D)->player2;

(insn 88 87 89 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1396 -1
     (nil))

(insn 89 88 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1396 -1
     (nil))

;; _39 = serwer_45(D)->player2;

(insn 90 89 91 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1396 -1
     (nil))

(insn 91 90 0 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 159)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1396 -1
     (nil))

;; _40 = _38->y_start;

(insn 92 91 0 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 24 [0x18])) [3 _38->y_start+0 S4 A64])) "function.c":1396 -1
     (nil))

;; _39->y_current = _40;

(insn 93 92 0 (set (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 16 [0x10])) [3 _39->y_current+0 S4 A64])
        (reg:SI 126 [ _40 ])) "function.c":1396 -1
     (nil))

;; _41 = serwer_45(D)->skarb.count_drop_coin;

(insn 94 93 95 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1398 -1
     (nil))

(insn 95 94 0 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (reg/f:DI 160)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1398 -1
     (nil))

;; _42 = _41 + 1;

(insn 96 95 0 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 127 [ _41 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1398 -1
     (nil))

;; serwer_45(D)->skarb.count_drop_coin = _42;

(insn 97 96 98 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1398 -1
     (nil))

(insn 98 97 0 (set (mem:SI (plus:DI (reg/f:DI 161)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])
        (reg:SI 128 [ _42 ])) "function.c":1398 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; 

(code_label 99 98 100 249 (nil) [0 uses])

(note 100 99 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 6

;; <L4>:

(code_label 101 100 102 250 (nil) [0 uses])

(note 102 101 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->6 redirected to 8
Edge 4->6 redirected to 8
Merging block 6 into block 5...
Merged blocks 5 and 6.
Merged 5 and 6 without moving.
Merging block 7 into block 5...
Merged blocks 5 and 7.
Merged 5 and 7 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg:DI 5 di [ serwer ])) "function.c":1379 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 129)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 87 [ _1 ])
        (mem/f:DI (plus:DI (reg/f:DI 129)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ _2 ])
        (mem:SI (plus:DI (reg/f:DI 87 [ _1 ])
                (const_int 12 [0xc])) [3 _1->x_current+0 S4 A32])) "function.c":1380 -1
     (nil))
(insn 9 8 10 2 (set (reg/f:DI 130)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 10 9 11 2 (set (reg/f:DI 89 [ _3 ])
        (mem/f:DI (plus:DI (reg/f:DI 130)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 90 [ _4 ])
        (mem:SI (plus:DI (reg/f:DI 89 [ _3 ])
                (const_int 12 [0xc])) [3 _3->x_current+0 S4 A32])) "function.c":1380 -1
     (nil))
(insn 12 11 13 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 88 [ _2 ])
            (reg:SI 90 [ _4 ]))) "function.c":1380 -1
     (nil))
(jump_insn 13 12 14 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) "function.c":1380 682 {*jcc}
     (nil)
 -> 103)
;;  succ:       4 (FALLTHRU)
;;              8

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg/f:DI 131)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 16 15 17 4 (set (reg/f:DI 91 [ _5 ])
        (mem/f:DI (plus:DI (reg/f:DI 131)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 17 16 18 4 (set (reg:SI 92 [ _6 ])
        (mem:SI (plus:DI (reg/f:DI 91 [ _5 ])
                (const_int 16 [0x10])) [3 _5->y_current+0 S4 A64])) "function.c":1380 -1
     (nil))
(insn 18 17 19 4 (set (reg/f:DI 132)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 19 18 20 4 (set (reg/f:DI 93 [ _7 ])
        (mem/f:DI (plus:DI (reg/f:DI 132)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1380 -1
     (nil))
(insn 20 19 21 4 (set (reg:SI 94 [ _8 ])
        (mem:SI (plus:DI (reg/f:DI 93 [ _7 ])
                (const_int 16 [0x10])) [3 _7->y_current+0 S4 A64])) "function.c":1380 -1
     (nil))
(insn 21 20 22 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _6 ])
            (reg:SI 94 [ _8 ]))) "function.c":1380 -1
     (nil))
(jump_insn 22 21 23 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 103)
            (pc))) "function.c":1380 682 {*jcc}
     (nil)
 -> 103)
;;  succ:       5 (FALLTHRU)
;;              8

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 23 22 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg/f:DI 133)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1382 -1
     (nil))
(insn 25 24 26 5 (set (reg/f:DI 95 [ _9 ])
        (mem/f:DI (plus:DI (reg/f:DI 133)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1382 -1
     (nil))
(insn 26 25 27 5 (set (reg:SI 96 [ _10 ])
        (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 28 [0x1c])) [3 _9->deaths+0 S4 A32])) "function.c":1382 -1
     (nil))
(insn 27 26 28 5 (parallel [
            (set (reg:SI 97 [ _11 ])
                (plus:SI (reg:SI 96 [ _10 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1382 -1
     (nil))
(insn 28 27 29 5 (set (mem:SI (plus:DI (reg/f:DI 95 [ _9 ])
                (const_int 28 [0x1c])) [3 _9->deaths+0 S4 A32])
        (reg:SI 97 [ _11 ])) "function.c":1382 -1
     (nil))
(insn 29 28 30 5 (set (reg/f:DI 134)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1383 -1
     (nil))
(insn 30 29 31 5 (set (reg/f:DI 98 [ _12 ])
        (mem/f:DI (plus:DI (reg/f:DI 134)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1383 -1
     (nil))
(insn 31 30 32 5 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 28 [0x1c])) [3 _12->deaths+0 S4 A32])) "function.c":1383 -1
     (nil))
(insn 32 31 33 5 (parallel [
            (set (reg:SI 100 [ _14 ])
                (plus:SI (reg:SI 99 [ _13 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1383 -1
     (nil))
(insn 33 32 34 5 (set (mem:SI (plus:DI (reg/f:DI 98 [ _12 ])
                (const_int 28 [0x1c])) [3 _12->deaths+0 S4 A32])
        (reg:SI 100 [ _14 ])) "function.c":1383 -1
     (nil))
(insn 34 33 35 5 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1385 -1
     (nil))
(insn 35 34 36 5 (set (reg/f:DI 101 [ _15 ])
        (mem/f:DI (plus:DI (reg/f:DI 135)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1385 -1
     (nil))
(insn 36 35 37 5 (set (reg/f:DI 136)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1385 -1
     (nil))
(insn 37 36 38 5 (set (reg:SI 102 [ _16 ])
        (mem:SI (plus:DI (reg/f:DI 136)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1385 -1
     (nil))
(insn 38 37 39 5 (set (reg:SI 103 [ _17 ])
        (mem:SI (plus:DI (reg/f:DI 101 [ _15 ])
                (const_int 16 [0x10])) [3 _15->y_current+0 S4 A64])) "function.c":1385 -1
     (nil))
(insn 39 38 40 5 (set (reg/f:DI 137)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1385 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 138)
        (sign_extend:DI (reg:SI 102 [ _16 ]))) "function.c":1385 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg:DI 139)
                (plus:DI (reg:DI 138)
                    (const_int 3008 [0xbc0])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1385 -1
     (nil))
(insn 42 41 43 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 139)
                    (const_int 8 [0x8]))
                (reg/f:DI 137)) [3 serwer_45(D)->skarb.dropped_coin S4 A64])
        (reg:SI 103 [ _17 ])) "function.c":1385 -1
     (nil))
(insn 43 42 44 5 (set (reg/f:DI 140)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1386 -1
     (nil))
(insn 44 43 45 5 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (plus:DI (reg/f:DI 140)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1386 -1
     (nil))
(insn 45 44 46 5 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1386 -1
     (nil))
(insn 46 45 47 5 (set (reg:SI 105 [ _19 ])
        (mem:SI (plus:DI (reg/f:DI 141)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1386 -1
     (nil))
(insn 47 46 48 5 (set (reg:SI 106 [ _20 ])
        (mem:SI (plus:DI (reg/f:DI 104 [ _18 ])
                (const_int 12 [0xc])) [3 _18->x_current+0 S4 A32])) "function.c":1386 -1
     (nil))
(insn 48 47 49 5 (set (reg/f:DI 142)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1386 -1
     (nil))
(insn 49 48 50 5 (set (reg:DI 143)
        (sign_extend:DI (reg:SI 105 [ _19 ]))) "function.c":1386 -1
     (nil))
(insn 50 49 51 5 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 143)
                        (const_int 8 [0x8]))
                    (reg/f:DI 142))
                (const_int 24068 [0x5e04])) [3 serwer_45(D)->skarb.dropped_coin S4 A32])
        (reg:SI 106 [ _20 ])) "function.c":1386 -1
     (nil))
(insn 51 50 52 5 (set (reg/f:DI 144)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))
(insn 52 51 53 5 (set (reg/f:DI 107 [ _21 ])
        (mem/f:DI (plus:DI (reg/f:DI 144)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1387 -1
     (nil))
(insn 53 52 54 5 (set (reg:SI 108 [ _22 ])
        (mem:SI (plus:DI (reg/f:DI 107 [ _21 ])
                (const_int 32 [0x20])) [3 _21->coins_carried+0 S4 A64])) "function.c":1387 -1
     (nil))
(insn 54 53 55 5 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))
(insn 55 54 56 5 (set (reg/f:DI 109 [ _23 ])
        (mem/f:DI (plus:DI (reg/f:DI 145)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1387 -1
     (nil))
(insn 56 55 57 5 (set (reg:SI 110 [ _24 ])
        (mem:SI (plus:DI (reg/f:DI 109 [ _23 ])
                (const_int 32 [0x20])) [3 _23->coins_carried+0 S4 A64])) "function.c":1387 -1
     (nil))
(insn 57 56 58 5 (set (reg/f:DI 146)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))
(insn 58 57 59 5 (set (reg:SI 111 [ _25 ])
        (mem:SI (plus:DI (reg/f:DI 146)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1387 -1
     (nil))
(insn 59 58 60 5 (parallel [
            (set (reg:SI 112 [ _26 ])
                (plus:SI (reg:SI 108 [ _22 ])
                    (reg:SI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1387 -1
     (nil))
(insn 60 59 61 5 (set (reg/f:DI 147)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1387 -1
     (nil))
(insn 61 60 62 5 (set (reg:DI 148)
        (sign_extend:DI (reg:SI 111 [ _25 ]))) "function.c":1387 -1
     (nil))
(insn 62 61 63 5 (parallel [
            (set (reg:DI 149)
                (plus:DI (reg:DI 148)
                    (const_int 8016 [0x1f50])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1387 -1
     (nil))
(insn 63 62 64 5 (set (mem:SI (plus:DI (mult:DI (reg:DI 149)
                    (const_int 4 [0x4]))
                (reg/f:DI 147)) [3 serwer_45(D)->skarb.value_all_dropped_coin S4 A32])
        (reg:SI 112 [ _26 ])) "function.c":1387 -1
     (nil))
(insn 64 63 65 5 (set (reg/f:DI 150)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1389 -1
     (nil))
(insn 65 64 66 5 (set (reg/f:DI 113 [ _27 ])
        (mem/f:DI (plus:DI (reg/f:DI 150)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1389 -1
     (nil))
(insn 66 65 67 5 (set (mem:SI (plus:DI (reg/f:DI 113 [ _27 ])
                (const_int 32 [0x20])) [3 _27->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1389 -1
     (nil))
(insn 67 66 68 5 (set (reg/f:DI 151)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1390 -1
     (nil))
(insn 68 67 69 5 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (plus:DI (reg/f:DI 151)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1390 -1
     (nil))
(insn 69 68 70 5 (set (mem:SI (plus:DI (reg/f:DI 114 [ _28 ])
                (const_int 32 [0x20])) [3 _28->coins_carried+0 S4 A64])
        (const_int 0 [0])) "function.c":1390 -1
     (nil))
(insn 70 69 71 5 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1392 -1
     (nil))
(insn 71 70 72 5 (set (reg/f:DI 115 [ _29 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1392 -1
     (nil))
(insn 72 71 73 5 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1392 -1
     (nil))
(insn 73 72 74 5 (set (reg/f:DI 116 [ _30 ])
        (mem/f:DI (plus:DI (reg/f:DI 153)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1392 -1
     (nil))
(insn 74 73 75 5 (set (reg:SI 117 [ _31 ])
        (mem:SI (plus:DI (reg/f:DI 115 [ _29 ])
                (const_int 20 [0x14])) [3 _29->x_start+0 S4 A32])) "function.c":1392 -1
     (nil))
(insn 75 74 76 5 (set (mem:SI (plus:DI (reg/f:DI 116 [ _30 ])
                (const_int 12 [0xc])) [3 _30->x_current+0 S4 A32])
        (reg:SI 117 [ _31 ])) "function.c":1392 -1
     (nil))
(insn 76 75 77 5 (set (reg/f:DI 154)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1393 -1
     (nil))
(insn 77 76 78 5 (set (reg/f:DI 118 [ _32 ])
        (mem/f:DI (plus:DI (reg/f:DI 154)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1393 -1
     (nil))
(insn 78 77 79 5 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1393 -1
     (nil))
(insn 79 78 80 5 (set (reg/f:DI 119 [ _33 ])
        (mem/f:DI (plus:DI (reg/f:DI 155)
                (const_int 32 [0x20])) [14 serwer_45(D)->player1+0 S8 A64])) "function.c":1393 -1
     (nil))
(insn 80 79 81 5 (set (reg:SI 120 [ _34 ])
        (mem:SI (plus:DI (reg/f:DI 118 [ _32 ])
                (const_int 24 [0x18])) [3 _32->y_start+0 S4 A64])) "function.c":1393 -1
     (nil))
(insn 81 80 82 5 (set (mem:SI (plus:DI (reg/f:DI 119 [ _33 ])
                (const_int 16 [0x10])) [3 _33->y_current+0 S4 A64])
        (reg:SI 120 [ _34 ])) "function.c":1393 -1
     (nil))
(insn 82 81 83 5 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1395 -1
     (nil))
(insn 83 82 84 5 (set (reg/f:DI 121 [ _35 ])
        (mem/f:DI (plus:DI (reg/f:DI 156)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1395 -1
     (nil))
(insn 84 83 85 5 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1395 -1
     (nil))
(insn 85 84 86 5 (set (reg/f:DI 122 [ _36 ])
        (mem/f:DI (plus:DI (reg/f:DI 157)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1395 -1
     (nil))
(insn 86 85 87 5 (set (reg:SI 123 [ _37 ])
        (mem:SI (plus:DI (reg/f:DI 121 [ _35 ])
                (const_int 20 [0x14])) [3 _35->x_start+0 S4 A32])) "function.c":1395 -1
     (nil))
(insn 87 86 88 5 (set (mem:SI (plus:DI (reg/f:DI 122 [ _36 ])
                (const_int 12 [0xc])) [3 _36->x_current+0 S4 A32])
        (reg:SI 123 [ _37 ])) "function.c":1395 -1
     (nil))
(insn 88 87 89 5 (set (reg/f:DI 158)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1396 -1
     (nil))
(insn 89 88 90 5 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (plus:DI (reg/f:DI 158)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1396 -1
     (nil))
(insn 90 89 91 5 (set (reg/f:DI 159)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1396 -1
     (nil))
(insn 91 90 92 5 (set (reg/f:DI 125 [ _39 ])
        (mem/f:DI (plus:DI (reg/f:DI 159)
                (const_int 40 [0x28])) [14 serwer_45(D)->player2+0 S8 A64])) "function.c":1396 -1
     (nil))
(insn 92 91 93 5 (set (reg:SI 126 [ _40 ])
        (mem:SI (plus:DI (reg/f:DI 124 [ _38 ])
                (const_int 24 [0x18])) [3 _38->y_start+0 S4 A64])) "function.c":1396 -1
     (nil))
(insn 93 92 94 5 (set (mem:SI (plus:DI (reg/f:DI 125 [ _39 ])
                (const_int 16 [0x10])) [3 _39->y_current+0 S4 A64])
        (reg:SI 126 [ _40 ])) "function.c":1396 -1
     (nil))
(insn 94 93 95 5 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1398 -1
     (nil))
(insn 95 94 96 5 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (reg/f:DI 160)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])) "function.c":1398 -1
     (nil))
(insn 96 95 97 5 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 127 [ _41 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1398 -1
     (nil))
(insn 97 96 98 5 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1398 -1
     (nil))
(insn 98 97 105 5 (set (mem:SI (plus:DI (reg/f:DI 161)
                (const_int 24060 [0x5dfc])) [3 serwer_45(D)->skarb.count_drop_coin+0 S4 A32])
        (reg:SI 128 [ _42 ])) "function.c":1398 -1
     (nil))
(insn 105 98 103 5 (const_int 0 [0]) "function.c":1401 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 5, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              2
;;              4
(code_label 103 105 104 8 248 (nil) [2 uses])
(note 104 103 0 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)


;; Function skarbunio (skarbunio, funcdef_no=30, decl_uid=6267, cgraph_uid=30, symbol_order=33)

skarbunio (void * pom)
{
  int y;
  int x;
  struct serwer_info * serwer;
  long int _1;
  unsigned int _2;
  char END.133_3;
  char * * _4;
  long unsigned int _5;
  long unsigned int _6;
  char * * _7;
  char * _8;
  sizetype _9;
  char * _10;
  char _11;
  int _12;
  int _13;
  char * * _14;
  long unsigned int _15;
  long unsigned int _16;
  char * * _17;
  char * _18;
  sizetype _19;
  char * _20;
  int _21;
  int _22;
  char END.134_23;
  char * * _24;
  long unsigned int _25;
  long unsigned int _26;
  char * * _27;
  char * _28;
  sizetype _29;
  char * _30;
  char _31;
  int _32;
  int _33;
  char * * _34;
  long unsigned int _35;
  long unsigned int _36;
  char * * _37;
  char * _38;
  sizetype _39;
  char * _40;
  int _41;
  int _42;
  char END.135_43;
  char * * _44;
  long unsigned int _45;
  long unsigned int _46;
  char * * _47;
  char * _48;
  sizetype _49;
  char * _50;
  char _51;
  int _52;
  int _53;
  char * * _54;
  long unsigned int _55;
  long unsigned int _56;
  char * * _57;
  char * _58;
  sizetype _59;
  char * _60;
  int _61;
  int _62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  serwer_70 = pom_69(D);
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  x_74 = 0;
  y_75 = 0;
  END.133_3 = END;
  if (END.133_3 == 99)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  END = 48;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       3
;;                6
  y_78 = random_return (1, 19);
  x_80 = random_return (1, 29);
  _4 = serwer_70->mapa;
  _5 = (long unsigned int) y_78;
  _6 = _5 * 8;
  _7 = _4 + _6;
  _8 = *_7;
  _9 = (sizetype) x_80;
  _10 = _8 + _9;
  _11 = *_10;
  if (_11 == 46)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _12 = serwer_70->skarb.count_one_coin;
  serwer_70->skarb.one_coin[_12][0] = y_78;
  _13 = serwer_70->skarb.count_one_coin;
  serwer_70->skarb.one_coin[_13][1] = x_80;
  _14 = serwer_70->mapa;
  _15 = (long unsigned int) y_78;
  _16 = _15 * 8;
  _17 = _14 + _16;
  _18 = *_17;
  _19 = (sizetype) x_80;
  _20 = _18 + _19;
  *_20 = 99;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 1
;;    pred:       4
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 7, loop depth 0
;;    pred:       5
  _21 = serwer_70->skarb.count_one_coin;
  _22 = _21 + 1;
  serwer_70->skarb.count_one_coin = _22;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       2
;;                7
  END.134_23 = END;
  if (END.134_23 == 116)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       9
;;                14

;;   basic block 9, loop depth 0
;;    pred:       8
  END = 48;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       9
;;                12
  y_87 = random_return (1, 19);
  x_89 = random_return (1, 29);
  _24 = serwer_70->mapa;
  _25 = (long unsigned int) y_87;
  _26 = _25 * 8;
  _27 = _24 + _26;
  _28 = *_27;
  _29 = (sizetype) x_89;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 == 46)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _32 = serwer_70->skarb.count_treasure_coin;
  serwer_70->skarb.treasure_coin[_32][0] = y_87;
  _33 = serwer_70->skarb.count_treasure_coin;
  serwer_70->skarb.treasure_coin[_33][1] = x_89;
  _34 = serwer_70->mapa;
  _35 = (long unsigned int) y_87;
  _36 = _35 * 8;
  _37 = _34 + _36;
  _38 = *_37;
  _39 = (sizetype) x_89;
  _40 = _38 + _39;
  *_40 = 116;
  goto <bb 13>; [INV]
;;    succ:       13

;;   basic block 12, loop depth 1
;;    pred:       10
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 13, loop depth 0
;;    pred:       11
  _41 = serwer_70->skarb.count_treasure_coin;
  _42 = _41 + 1;
  serwer_70->skarb.count_treasure_coin = _42;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       8
;;                13
  END.135_43 = END;
  if (END.135_43 == 84)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       15
;;                20

;;   basic block 15, loop depth 0
;;    pred:       14
  END = 48;
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       15
;;                18
  y_96 = random_return (1, 19);
  x_98 = random_return (1, 29);
  _44 = serwer_70->mapa;
  _45 = (long unsigned int) y_96;
  _46 = _45 * 8;
  _47 = _44 + _46;
  _48 = *_47;
  _49 = (sizetype) x_98;
  _50 = _48 + _49;
  _51 = *_50;
  if (_51 == 46)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _52 = serwer_70->skarb.count_large_treasure_coin;
  serwer_70->skarb.large_treasure_coin[_52][0] = y_96;
  _53 = serwer_70->skarb.count_large_treasure_coin;
  serwer_70->skarb.large_treasure_coin[_53][1] = x_98;
  _54 = serwer_70->mapa;
  _55 = (long unsigned int) y_96;
  _56 = _55 * 8;
  _57 = _54 + _56;
  _58 = *_57;
  _59 = (sizetype) x_98;
  _60 = _58 + _59;
  *_60 = 84;
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 18, loop depth 1
;;    pred:       16
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 19, loop depth 0
;;    pred:       17
  _61 = serwer_70->skarb.count_large_treasure_coin;
  _62 = _61 + 1;
  serwer_70->skarb.count_large_treasure_coin = _62;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       14
;;                19
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L18>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (END.133_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (END.134_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (END.135_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 69 (pom_69(D) - 69 )
Partition 70 (serwer_70 - 70 )
Partition 74 (x_74 - 74 )
Partition 75 (y_75 - 75 )
Partition 78 (y_78 - 78 )
Partition 80 (x_80 - 80 )
Partition 87 (y_87 - 87 )
Partition 89 (x_89 - 89 )
Partition 96 (y_96 - 96 )
Partition 98 (x_98 - 98 )


Coalescible Partition map 

Partition 0, base 0 (pom_69(D) - 69 )
Partition 1, base 1 (x_74 - 74 80 89 98 )
Partition 2, base 2 (y_75 - 75 78 87 96 )


Partition map 

Partition 0 (pom_69(D) - 69 )
Partition 1 (x_74 - 74 )
Partition 2 (y_75 - 75 )
Partition 3 (y_78 - 78 )
Partition 4 (x_80 - 80 )
Partition 5 (y_87 - 87 )
Partition 6 (x_89 - 89 )
Partition 7 (y_96 - 96 )
Partition 8 (x_98 - 98 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) y_75 <-> y_78
(2147483646, 0) x_74 <-> x_80
(2147483646, 0) y_75 <-> y_87
(2147483646, 0) x_74 <-> x_89
(2147483646, 0) y_75 <-> y_96
(2147483646, 0) x_74 <-> x_98

Partition map 

Partition 0 (pom_69(D) - 69 )
Partition 1 (x_74 - 74 )
Partition 2 (y_75 - 75 )
Partition 3 (y_78 - 78 )
Partition 4 (x_80 - 80 )
Partition 5 (y_87 - 87 )
Partition 6 (x_89 - 89 )
Partition 7 (y_96 - 96 )
Partition 8 (x_98 - 98 )

Coalesce list: (75)y_75 & (78)y_78 [map: 2, 3] : Success -> 2
Coalesce list: (74)x_74 & (80)x_80 [map: 1, 4] : Success -> 1
Coalesce list: (75)y_75 & (87)y_87 [map: 2, 5] : Success -> 2
Coalesce list: (74)x_74 & (89)x_89 [map: 1, 6] : Success -> 1
Coalesce list: (75)y_75 & (96)y_96 [map: 2, 7] : Success -> 2
Coalesce list: (74)x_74 & (98)x_98 [map: 1, 8] : Success -> 1
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (END.133_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (END.134_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (END.135_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (pom_69(D) - 69 )
Partition 63 (serwer_70 - 70 )
Partition 64 (x_74 - 74 80 89 98 )
Partition 65 (y_75 - 75 78 87 96 )

skarbunio (void * pom)
{
  int y;
  int x;
  struct serwer_info * serwer;
  long int _1;
  unsigned int _2;
  char END.133_3;
  char * * _4;
  long unsigned int _5;
  long unsigned int _6;
  char * * _7;
  char * _8;
  sizetype _9;
  char * _10;
  char _11;
  int _12;
  int _13;
  char * * _14;
  long unsigned int _15;
  long unsigned int _16;
  char * * _17;
  char * _18;
  sizetype _19;
  char * _20;
  int _21;
  int _22;
  char END.134_23;
  char * * _24;
  long unsigned int _25;
  long unsigned int _26;
  char * * _27;
  char * _28;
  sizetype _29;
  char * _30;
  char _31;
  int _32;
  int _33;
  char * * _34;
  long unsigned int _35;
  long unsigned int _36;
  char * * _37;
  char * _38;
  sizetype _39;
  char * _40;
  int _41;
  int _42;
  char END.135_43;
  char * * _44;
  long unsigned int _45;
  long unsigned int _46;
  char * * _47;
  char * _48;
  sizetype _49;
  char * _50;
  char _51;
  int _52;
  int _53;
  char * * _54;
  long unsigned int _55;
  long unsigned int _56;
  char * * _57;
  char * _58;
  sizetype _59;
  char * _60;
  int _61;
  int _62;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  serwer_70 = pom_69(D);
  _1 = time (0B);
  _2 = (unsigned int) _1;
  srand (_2);
  x_74 = 0;
  y_75 = 0;
  END.133_3 = END;
  if (END.133_3 == 99)
    goto <bb 3>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       3
;;                8

;;   basic block 3, loop depth 0
;;    pred:       2
  END = 48;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       3
;;                6
  y_78 = random_return (1, 19);
  x_80 = random_return (1, 29);
  _4 = serwer_70->mapa;
  _5 = (long unsigned int) y_78;
  _6 = _5 * 8;
  _7 = _4 + _6;
  _8 = *_7;
  _9 = (sizetype) x_80;
  _10 = _8 + _9;
  _11 = *_10;
  if (_11 == 46)
    goto <bb 5>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       5
;;                6

;;   basic block 5, loop depth 0
;;    pred:       4
  _12 = serwer_70->skarb.count_one_coin;
  serwer_70->skarb.one_coin[_12][0] = y_78;
  _13 = serwer_70->skarb.count_one_coin;
  serwer_70->skarb.one_coin[_13][1] = x_80;
  _14 = serwer_70->mapa;
  _15 = (long unsigned int) y_78;
  _16 = _15 * 8;
  _17 = _14 + _16;
  _18 = *_17;
  _19 = (sizetype) x_80;
  _20 = _18 + _19;
  *_20 = 99;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 6, loop depth 1
;;    pred:       4
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 7, loop depth 0
;;    pred:       5
  _21 = serwer_70->skarb.count_one_coin;
  _22 = _21 + 1;
  serwer_70->skarb.count_one_coin = _22;
;;    succ:       8

;;   basic block 8, loop depth 0
;;    pred:       2
;;                7
  END.134_23 = END;
  if (END.134_23 == 116)
    goto <bb 9>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       9
;;                14

;;   basic block 9, loop depth 0
;;    pred:       8
  END = 48;
;;    succ:       10

;;   basic block 10, loop depth 1
;;    pred:       9
;;                12
  y_87 = random_return (1, 19);
  x_89 = random_return (1, 29);
  _24 = serwer_70->mapa;
  _25 = (long unsigned int) y_87;
  _26 = _25 * 8;
  _27 = _24 + _26;
  _28 = *_27;
  _29 = (sizetype) x_89;
  _30 = _28 + _29;
  _31 = *_30;
  if (_31 == 46)
    goto <bb 11>; [INV]
  else
    goto <bb 12>; [INV]
;;    succ:       11
;;                12

;;   basic block 11, loop depth 0
;;    pred:       10
  _32 = serwer_70->skarb.count_treasure_coin;
  serwer_70->skarb.treasure_coin[_32][0] = y_87;
  _33 = serwer_70->skarb.count_treasure_coin;
  serwer_70->skarb.treasure_coin[_33][1] = x_89;
  _34 = serwer_70->mapa;
  _35 = (long unsigned int) y_87;
  _36 = _35 * 8;
  _37 = _34 + _36;
  _38 = *_37;
  _39 = (sizetype) x_89;
  _40 = _38 + _39;
  *_40 = 116;
  goto <bb 13>; [INV]
;;    succ:       13

;;   basic block 12, loop depth 1
;;    pred:       10
  goto <bb 10>; [INV]
;;    succ:       10

;;   basic block 13, loop depth 0
;;    pred:       11
  _41 = serwer_70->skarb.count_treasure_coin;
  _42 = _41 + 1;
  serwer_70->skarb.count_treasure_coin = _42;
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       8
;;                13
  END.135_43 = END;
  if (END.135_43 == 84)
    goto <bb 15>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       15
;;                20

;;   basic block 15, loop depth 0
;;    pred:       14
  END = 48;
;;    succ:       16

;;   basic block 16, loop depth 1
;;    pred:       15
;;                18
  y_96 = random_return (1, 19);
  x_98 = random_return (1, 29);
  _44 = serwer_70->mapa;
  _45 = (long unsigned int) y_96;
  _46 = _45 * 8;
  _47 = _44 + _46;
  _48 = *_47;
  _49 = (sizetype) x_98;
  _50 = _48 + _49;
  _51 = *_50;
  if (_51 == 46)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 0
;;    pred:       16
  _52 = serwer_70->skarb.count_large_treasure_coin;
  serwer_70->skarb.large_treasure_coin[_52][0] = y_96;
  _53 = serwer_70->skarb.count_large_treasure_coin;
  serwer_70->skarb.large_treasure_coin[_53][1] = x_98;
  _54 = serwer_70->mapa;
  _55 = (long unsigned int) y_96;
  _56 = _55 * 8;
  _57 = _54 + _56;
  _58 = *_57;
  _59 = (sizetype) x_98;
  _60 = _58 + _59;
  *_60 = 84;
  goto <bb 19>; [INV]
;;    succ:       19

;;   basic block 18, loop depth 1
;;    pred:       16
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 19, loop depth 0
;;    pred:       17
  _61 = serwer_70->skarb.count_large_treasure_coin;
  _62 = _61 + 1;
  serwer_70->skarb.count_large_treasure_coin = _62;
;;    succ:       20

;;   basic block 20, loop depth 0
;;    pred:       14
;;                19
;;    succ:       21

;;   basic block 21, loop depth 0
;;    pred:       20
<L18>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; serwer_70 = pom_69(D);

(insn 6 5 7 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [19 pom+0 S8 A64])) "function.c":1406 -1
     (nil))

(insn 7 6 0 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg/f:DI 149)) "function.c":1406 -1
     (nil))

;; _1 = time (0B);

(insn 8 7 9 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":1407 -1
     (nil))

(call_insn 9 8 10 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":1407 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

(insn 10 9 0 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":1407 -1
     (nil))

;; _2 = (unsigned int) _1;

(insn 11 10 0 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":1407 -1
     (nil))

;; srand (_2);

(insn 12 11 13 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":1407 -1
     (nil))

(call_insn 13 12 0 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":1407 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; x_74 = 0;

(insn 14 13 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":1408 -1
     (nil))

;; y_75 = 0;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":1409 -1
     (nil))

;; END.133_3 = END;

(insn 16 15 0 (set (reg:QI 89 [ END.133_3 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":1411 -1
     (nil))

;; if (END.133_3 == 99)

(insn 17 16 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ END.133_3 ])
            (const_int 99 [0x63]))) "function.c":1411 -1
     (nil))

(jump_insn 18 17 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1411 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; END = 48;

(insn 20 19 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":1413 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; y_78 = random_return (1, 19);

(insn 22 21 23 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":1416 -1
     (nil))

(insn 23 22 24 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1416 -1
     (nil))

(call_insn 24 23 25 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1416 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 25 24 26 (set (reg:SI 150)
        (reg:SI 0 ax)) "function.c":1416 -1
     (nil))

(insn 26 25 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 150)) "function.c":1416 -1
     (nil))

;; x_80 = random_return (1, 29);

(insn 27 26 28 (set (reg:SI 4 si)
        (const_int 29 [0x1d])) "function.c":1417 -1
     (nil))

(insn 28 27 29 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1417 -1
     (nil))

(call_insn 29 28 30 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1417 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 30 29 31 (set (reg:SI 151)
        (reg:SI 0 ax)) "function.c":1417 -1
     (nil))

(insn 31 30 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 151)) "function.c":1417 -1
     (nil))

;; _4 = serwer_70->mapa;

(insn 32 31 33 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1418 -1
     (nil))

(insn 33 32 0 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1418 -1
     (nil))

;; _5 = (long unsigned int) y_78;

(insn 34 33 35 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1418 -1
     (nil))

(insn 35 34 0 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 153))) "function.c":1418 -1
     (nil))

;; _6 = _5 * 8;

(insn 36 35 0 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1418 -1
     (nil))

;; _7 = _4 + _6;

(insn 37 36 0 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1418 -1
     (nil))

;; _8 = *_7;

(insn 38 37 0 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 93 [ _7 ]) [10 *_7+0 S8 A64])) "function.c":1418 -1
     (nil))

;; _9 = (sizetype) x_80;

(insn 39 38 40 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1418 -1
     (nil))

(insn 40 39 0 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 154))) "function.c":1418 -1
     (nil))

;; _10 = _8 + _9;

(insn 41 40 0 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1418 -1
     (nil))

;; _11 = *_10;

(insn 42 41 0 (set (reg:QI 97 [ _11 ])
        (mem:QI (reg/f:DI 96 [ _10 ]) [0 *_10+0 S1 A8])) "function.c":1418 -1
     (nil))

;; if (_11 == 46)

(insn 43 42 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ _11 ])
            (const_int 46 [0x2e]))) "function.c":1418 -1
     (nil))

(jump_insn 44 43 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1418 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _12 = serwer_70->skarb.count_one_coin;

(insn 46 45 47 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1420 -1
     (nil))

(insn 47 46 0 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 155)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])) "function.c":1420 -1
     (nil))

;; serwer_70->skarb.one_coin[_12][0] = y_78;

(insn 48 47 49 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1420 -1
     (nil))

(insn 49 48 50 (set (reg:DI 157)
        (sign_extend:DI (reg:SI 98 [ _12 ]))) "function.c":1420 -1
     (nil))

(insn 50 49 51 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 157)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1420 -1
     (nil))

(insn 51 50 52 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1420 -1
     (nil))

(insn 52 51 0 (set (mem:SI (plus:DI (mult:DI (reg:DI 158)
                    (const_int 8 [0x8]))
                (reg/f:DI 156)) [3 serwer_70->skarb.one_coin S4 A64])
        (reg:SI 159)) "function.c":1420 -1
     (nil))

;; _13 = serwer_70->skarb.count_one_coin;

(insn 53 52 54 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1421 -1
     (nil))

(insn 54 53 0 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 160)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])) "function.c":1421 -1
     (nil))

;; serwer_70->skarb.one_coin[_13][1] = x_80;

(insn 55 54 56 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1421 -1
     (nil))

(insn 56 55 57 (set (reg:DI 162)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "function.c":1421 -1
     (nil))

(insn 57 56 58 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1421 -1
     (nil))

(insn 58 57 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 162)
                        (const_int 8 [0x8]))
                    (reg/f:DI 161))
                (const_int 52 [0x34])) [3 serwer_70->skarb.one_coin S4 A32])
        (reg:SI 163)) "function.c":1421 -1
     (nil))

;; _14 = serwer_70->mapa;

(insn 59 58 60 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1422 -1
     (nil))

(insn 60 59 0 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1422 -1
     (nil))

;; _15 = (long unsigned int) y_78;

(insn 61 60 62 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1422 -1
     (nil))

(insn 62 61 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 165))) "function.c":1422 -1
     (nil))

;; _16 = _15 * 8;

(insn 63 62 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1422 -1
     (nil))

;; _17 = _14 + _16;

(insn 64 63 0 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 100 [ _14 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1422 -1
     (nil))

;; _18 = *_17;

(insn 65 64 0 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 103 [ _17 ]) [10 *_17+0 S8 A64])) "function.c":1422 -1
     (nil))

;; _19 = (sizetype) x_80;

(insn 66 65 67 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1422 -1
     (nil))

(insn 67 66 0 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 166))) "function.c":1422 -1
     (nil))

;; _20 = _18 + _19;

(insn 68 67 0 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg/f:DI 104 [ _18 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1422 -1
     (nil))

;; *_20 = 99;

(insn 69 68 0 (set (mem:QI (reg/f:DI 106 [ _20 ]) [0 *_20+0 S1 A8])
        (const_int 99 [0x63])) "function.c":1422 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; 

(code_label 72 71 73 254 (nil) [0 uses])

(note 73 72 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 7

;; 

(code_label 77 76 78 255 (nil) [0 uses])

(note 78 77 0 NOTE_INSN_BASIC_BLOCK)

;; _21 = serwer_70->skarb.count_one_coin;

(insn 79 78 80 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1426 -1
     (nil))

(insn 80 79 0 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 167)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])) "function.c":1426 -1
     (nil))

;; _22 = _21 + 1;

(insn 81 80 0 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 107 [ _21 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1426 -1
     (nil))

;; serwer_70->skarb.count_one_coin = _22;

(insn 82 81 83 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1426 -1
     (nil))

(insn 83 82 0 (set (mem:SI (plus:DI (reg/f:DI 168)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])
        (reg:SI 108 [ _22 ])) "function.c":1426 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 84 83 85 253 (nil) [0 uses])

(note 85 84 0 NOTE_INSN_BASIC_BLOCK)

;; END.134_23 = END;

(insn 86 85 0 (set (reg:QI 109 [ END.134_23 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":1429 -1
     (nil))

;; if (END.134_23 == 116)

(insn 87 86 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ END.134_23 ])
            (const_int 116 [0x74]))) "function.c":1429 -1
     (nil))

(jump_insn 88 87 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1429 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; END = 48;

(insn 90 89 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":1431 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; y_87 = random_return (1, 19);

(insn 92 91 93 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":1434 -1
     (nil))

(insn 93 92 94 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1434 -1
     (nil))

(call_insn 94 93 95 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1434 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 95 94 96 (set (reg:SI 169)
        (reg:SI 0 ax)) "function.c":1434 -1
     (nil))

(insn 96 95 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 169)) "function.c":1434 -1
     (nil))

;; x_89 = random_return (1, 29);

(insn 97 96 98 (set (reg:SI 4 si)
        (const_int 29 [0x1d])) "function.c":1435 -1
     (nil))

(insn 98 97 99 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1435 -1
     (nil))

(call_insn 99 98 100 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1435 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 100 99 101 (set (reg:SI 170)
        (reg:SI 0 ax)) "function.c":1435 -1
     (nil))

(insn 101 100 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 170)) "function.c":1435 -1
     (nil))

;; _24 = serwer_70->mapa;

(insn 102 101 103 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1436 -1
     (nil))

(insn 103 102 0 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1436 -1
     (nil))

;; _25 = (long unsigned int) y_87;

(insn 104 103 105 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1436 -1
     (nil))

(insn 105 104 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 172))) "function.c":1436 -1
     (nil))

;; _26 = _25 * 8;

(insn 106 105 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1436 -1
     (nil))

;; _27 = _24 + _26;

(insn 107 106 0 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 110 [ _24 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1436 -1
     (nil))

;; _28 = *_27;

(insn 108 107 0 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":1436 -1
     (nil))

;; _29 = (sizetype) x_89;

(insn 109 108 110 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1436 -1
     (nil))

(insn 110 109 0 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 173))) "function.c":1436 -1
     (nil))

;; _30 = _28 + _29;

(insn 111 110 0 (parallel [
            (set (reg/f:DI 116 [ _30 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1436 -1
     (nil))

;; _31 = *_30;

(insn 112 111 0 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 116 [ _30 ]) [0 *_30+0 S1 A8])) "function.c":1436 -1
     (nil))

;; if (_31 == 46)

(insn 113 112 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 46 [0x2e]))) "function.c":1436 -1
     (nil))

(jump_insn 114 113 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1436 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; _32 = serwer_70->skarb.count_treasure_coin;

(insn 116 115 117 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1438 -1
     (nil))

(insn 117 116 0 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (reg/f:DI 174)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])) "function.c":1438 -1
     (nil))

;; serwer_70->skarb.treasure_coin[_32][0] = y_87;

(insn 118 117 119 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1438 -1
     (nil))

(insn 119 118 120 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 118 [ _32 ]))) "function.c":1438 -1
     (nil))

(insn 120 119 121 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg:DI 176)
                    (const_int 1006 [0x3ee])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1438 -1
     (nil))

(insn 121 120 122 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1438 -1
     (nil))

(insn 122 121 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 177)
                        (const_int 8 [0x8]))
                    (reg/f:DI 175))
                (const_int 4 [0x4])) [3 serwer_70->skarb.treasure_coin S4 A32])
        (reg:SI 178)) "function.c":1438 -1
     (nil))

;; _33 = serwer_70->skarb.count_treasure_coin;

(insn 123 122 124 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1439 -1
     (nil))

(insn 124 123 0 (set (reg:SI 119 [ _33 ])
        (mem:SI (plus:DI (reg/f:DI 179)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])) "function.c":1439 -1
     (nil))

;; serwer_70->skarb.treasure_coin[_33][1] = x_89;

(insn 125 124 126 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1439 -1
     (nil))

(insn 126 125 127 (set (reg:DI 181)
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "function.c":1439 -1
     (nil))

(insn 127 126 128 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1439 -1
     (nil))

(insn 128 127 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 181)
                        (const_int 8 [0x8]))
                    (reg/f:DI 180))
                (const_int 8056 [0x1f78])) [3 serwer_70->skarb.treasure_coin S4 A32])
        (reg:SI 182)) "function.c":1439 -1
     (nil))

;; _34 = serwer_70->mapa;

(insn 129 128 130 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1440 -1
     (nil))

(insn 130 129 0 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 183)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1440 -1
     (nil))

;; _35 = (long unsigned int) y_87;

(insn 131 130 132 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1440 -1
     (nil))

(insn 132 131 0 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 184))) "function.c":1440 -1
     (nil))

;; _36 = _35 * 8;

(insn 133 132 0 (parallel [
            (set (reg:DI 122 [ _36 ])
                (ashift:DI (reg:DI 121 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1440 -1
     (nil))

;; _37 = _34 + _36;

(insn 134 133 0 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 120 [ _34 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1440 -1
     (nil))

;; _38 = *_37;

(insn 135 134 0 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 123 [ _37 ]) [10 *_37+0 S8 A64])) "function.c":1440 -1
     (nil))

;; _39 = (sizetype) x_89;

(insn 136 135 137 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1440 -1
     (nil))

(insn 137 136 0 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 185))) "function.c":1440 -1
     (nil))

;; _40 = _38 + _39;

(insn 138 137 0 (parallel [
            (set (reg/f:DI 126 [ _40 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1440 -1
     (nil))

;; *_40 = 116;

(insn 139 138 0 (set (mem:QI (reg/f:DI 126 [ _40 ]) [0 *_40+0 S1 A8])
        (const_int 116 [0x74])) "function.c":1440 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 142 141 143 258 (nil) [0 uses])

(note 143 142 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 13

;; 

(code_label 147 146 148 259 (nil) [0 uses])

(note 148 147 0 NOTE_INSN_BASIC_BLOCK)

;; _41 = serwer_70->skarb.count_treasure_coin;

(insn 149 148 150 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1444 -1
     (nil))

(insn 150 149 0 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (reg/f:DI 186)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])) "function.c":1444 -1
     (nil))

;; _42 = _41 + 1;

(insn 151 150 0 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 127 [ _41 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1444 -1
     (nil))

;; serwer_70->skarb.count_treasure_coin = _42;

(insn 152 151 153 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1444 -1
     (nil))

(insn 153 152 0 (set (mem:SI (plus:DI (reg/f:DI 187)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])
        (reg:SI 128 [ _42 ])) "function.c":1444 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; 

(code_label 154 153 155 257 (nil) [0 uses])

(note 155 154 0 NOTE_INSN_BASIC_BLOCK)

;; END.135_43 = END;

(insn 156 155 0 (set (reg:QI 129 [ END.135_43 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":1447 -1
     (nil))

;; if (END.135_43 == 84)

(insn 157 156 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ END.135_43 ])
            (const_int 84 [0x54]))) "function.c":1447 -1
     (nil))

(jump_insn 158 157 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1447 -1
     (nil))

;; Generating RTL for gimple basic block 15

;; END = 48;

(insn 160 159 0 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":1449 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; y_96 = random_return (1, 19);

(insn 162 161 163 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":1452 -1
     (nil))

(insn 163 162 164 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1452 -1
     (nil))

(call_insn 164 163 165 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1452 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 165 164 166 (set (reg:SI 188)
        (reg:SI 0 ax)) "function.c":1452 -1
     (nil))

(insn 166 165 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 188)) "function.c":1452 -1
     (nil))

;; x_98 = random_return (1, 29);

(insn 167 166 168 (set (reg:SI 4 si)
        (const_int 29 [0x1d])) "function.c":1453 -1
     (nil))

(insn 168 167 169 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1453 -1
     (nil))

(call_insn 169 168 170 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1453 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))

(insn 170 169 171 (set (reg:SI 189)
        (reg:SI 0 ax)) "function.c":1453 -1
     (nil))

(insn 171 170 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 189)) "function.c":1453 -1
     (nil))

;; _44 = serwer_70->mapa;

(insn 172 171 173 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1454 -1
     (nil))

(insn 173 172 0 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (plus:DI (reg/f:DI 190)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1454 -1
     (nil))

;; _45 = (long unsigned int) y_96;

(insn 174 173 175 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1454 -1
     (nil))

(insn 175 174 0 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 191))) "function.c":1454 -1
     (nil))

;; _46 = _45 * 8;

(insn 176 175 0 (parallel [
            (set (reg:DI 132 [ _46 ])
                (ashift:DI (reg:DI 131 [ _45 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1454 -1
     (nil))

;; _47 = _44 + _46;

(insn 177 176 0 (parallel [
            (set (reg/f:DI 133 [ _47 ])
                (plus:DI (reg/f:DI 130 [ _44 ])
                    (reg:DI 132 [ _46 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1454 -1
     (nil))

;; _48 = *_47;

(insn 178 177 0 (set (reg/f:DI 134 [ _48 ])
        (mem/f:DI (reg/f:DI 133 [ _47 ]) [10 *_47+0 S8 A64])) "function.c":1454 -1
     (nil))

;; _49 = (sizetype) x_98;

(insn 179 178 180 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1454 -1
     (nil))

(insn 180 179 0 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 192))) "function.c":1454 -1
     (nil))

;; _50 = _48 + _49;

(insn 181 180 0 (parallel [
            (set (reg/f:DI 136 [ _50 ])
                (plus:DI (reg/f:DI 134 [ _48 ])
                    (reg:DI 135 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1454 -1
     (nil))

;; _51 = *_50;

(insn 182 181 0 (set (reg:QI 137 [ _51 ])
        (mem:QI (reg/f:DI 136 [ _50 ]) [0 *_50+0 S1 A8])) "function.c":1454 -1
     (nil))

;; if (_51 == 46)

(insn 183 182 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ _51 ])
            (const_int 46 [0x2e]))) "function.c":1454 -1
     (nil))

(jump_insn 184 183 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "function.c":1454 -1
     (nil))

;; Generating RTL for gimple basic block 17

;; _52 = serwer_70->skarb.count_large_treasure_coin;

(insn 186 185 187 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1456 -1
     (nil))

(insn 187 186 0 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (reg/f:DI 193)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1456 -1
     (nil))

;; serwer_70->skarb.large_treasure_coin[_52][0] = y_96;

(insn 188 187 189 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1456 -1
     (nil))

(insn 189 188 190 (set (reg:DI 195)
        (sign_extend:DI (reg:SI 138 [ _52 ]))) "function.c":1456 -1
     (nil))

(insn 190 189 191 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 195)
                    (const_int 2006 [0x7d6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1456 -1
     (nil))

(insn 191 190 192 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1456 -1
     (nil))

(insn 192 191 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 196)
                        (const_int 8 [0x8]))
                    (reg/f:DI 194))
                (const_int 8 [0x8])) [3 serwer_70->skarb.large_treasure_coin S4 A64])
        (reg:SI 197)) "function.c":1456 -1
     (nil))

;; _53 = serwer_70->skarb.count_large_treasure_coin;

(insn 193 192 194 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1457 -1
     (nil))

(insn 194 193 0 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 198)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1457 -1
     (nil))

;; serwer_70->skarb.large_treasure_coin[_53][1] = x_98;

(insn 195 194 196 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1457 -1
     (nil))

(insn 196 195 197 (set (reg:DI 200)
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "function.c":1457 -1
     (nil))

(insn 197 196 198 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1457 -1
     (nil))

(insn 198 197 0 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 200)
                        (const_int 8 [0x8]))
                    (reg/f:DI 199))
                (const_int 16060 [0x3ebc])) [3 serwer_70->skarb.large_treasure_coin S4 A32])
        (reg:SI 201)) "function.c":1457 -1
     (nil))

;; _54 = serwer_70->mapa;

(insn 199 198 200 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1458 -1
     (nil))

(insn 200 199 0 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (plus:DI (reg/f:DI 202)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1458 -1
     (nil))

;; _55 = (long unsigned int) y_96;

(insn 201 200 202 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1458 -1
     (nil))

(insn 202 201 0 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 203))) "function.c":1458 -1
     (nil))

;; _56 = _55 * 8;

(insn 203 202 0 (parallel [
            (set (reg:DI 142 [ _56 ])
                (ashift:DI (reg:DI 141 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1458 -1
     (nil))

;; _57 = _54 + _56;

(insn 204 203 0 (parallel [
            (set (reg/f:DI 143 [ _57 ])
                (plus:DI (reg/f:DI 140 [ _54 ])
                    (reg:DI 142 [ _56 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1458 -1
     (nil))

;; _58 = *_57;

(insn 205 204 0 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 143 [ _57 ]) [10 *_57+0 S8 A64])) "function.c":1458 -1
     (nil))

;; _59 = (sizetype) x_98;

(insn 206 205 207 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1458 -1
     (nil))

(insn 207 206 0 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 204))) "function.c":1458 -1
     (nil))

;; _60 = _58 + _59;

(insn 208 207 0 (parallel [
            (set (reg/f:DI 146 [ _60 ])
                (plus:DI (reg/f:DI 144 [ _58 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1458 -1
     (nil))

;; *_60 = 84;

(insn 209 208 0 (set (mem:QI (reg/f:DI 146 [ _60 ]) [0 *_60+0 S1 A8])
        (const_int 84 [0x54])) "function.c":1458 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 212 211 213 262 (nil) [0 uses])

(note 213 212 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 19

;; 

(code_label 217 216 218 263 (nil) [0 uses])

(note 218 217 0 NOTE_INSN_BASIC_BLOCK)

;; _61 = serwer_70->skarb.count_large_treasure_coin;

(insn 219 218 220 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1462 -1
     (nil))

(insn 220 219 0 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (reg/f:DI 205)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1462 -1
     (nil))

;; _62 = _61 + 1;

(insn 221 220 0 (parallel [
            (set (reg:SI 148 [ _62 ])
                (plus:SI (reg:SI 147 [ _61 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1462 -1
     (nil))

;; serwer_70->skarb.count_large_treasure_coin = _62;

(insn 222 221 223 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1462 -1
     (nil))

(insn 223 222 0 (set (mem:SI (plus:DI (reg/f:DI 206)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])
        (reg:SI 148 [ _62 ])) "function.c":1462 -1
     (nil))

;; Generating RTL for gimple basic block 20

;; 

(code_label 224 223 225 261 (nil) [0 uses])

(note 225 224 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 21

;; <L18>:

(code_label 226 225 227 265 (nil) [0 uses])

(note 227 226 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 15->21 redirected to 23
Merging block 21 into block 20...
Merged blocks 20 and 21.
Merged 20 and 21 without moving.
Merging block 22 into block 20...
Merged blocks 20 and 22.
Merged 20 and 22 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [19 pom+0 S8 A64])
        (reg:DI 5 di [ pom ])) "function.c":1405 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 149)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [19 pom+0 S8 A64])) "function.c":1406 -1
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])
        (reg/f:DI 149)) "function.c":1406 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (const_int 0 [0])) "function.c":1407 -1
     (nil))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("time") [flags 0x41]  <function_decl 0x7f7cd1000300 time>) [0 time S1 A8])
            (const_int 0 [0]))) "function.c":1407 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg:DI 87 [ _1 ])
        (reg:DI 0 ax)) "function.c":1407 -1
     (nil))
(insn 11 10 12 2 (set (reg:SI 88 [ _2 ])
        (subreg:SI (reg:DI 87 [ _1 ]) 0)) "function.c":1407 -1
     (nil))
(insn 12 11 13 2 (set (reg:SI 5 di)
        (reg:SI 88 [ _2 ])) "function.c":1407 -1
     (nil))
(call_insn 13 12 14 2 (call (mem:QI (symbol_ref:DI ("srand") [flags 0x41]  <function_decl 0x7f7cd0fe1700 srand>) [0 srand S1 A8])
        (const_int 0 [0])) "function.c":1407 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 14 13 15 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (const_int 0 [0])) "function.c":1408 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (const_int 0 [0])) "function.c":1409 -1
     (nil))
(insn 16 15 17 2 (set (reg:QI 89 [ END.133_3 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":1411 -1
     (nil))
(insn 17 16 18 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 89 [ END.133_3 ])
            (const_int 99 [0x63]))) "function.c":1411 -1
     (nil))
(jump_insn 18 17 19 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) "function.c":1411 -1
     (nil)
 -> 84)
;;  succ:       4 (FALLTHRU)
;;              9

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 19 18 20 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 74 4 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":1413 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 74 20 21 5 256 (nil) [1 uses])
(note 21 74 22 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 5 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":1416 -1
     (nil))
(insn 23 22 24 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1416 -1
     (nil))
(call_insn 24 23 25 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1416 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 25 24 26 5 (set (reg:SI 150)
        (reg:SI 0 ax)) "function.c":1416 -1
     (nil))
(insn 26 25 27 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 150)) "function.c":1416 -1
     (nil))
(insn 27 26 28 5 (set (reg:SI 4 si)
        (const_int 29 [0x1d])) "function.c":1417 -1
     (nil))
(insn 28 27 29 5 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1417 -1
     (nil))
(call_insn 29 28 30 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1417 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 30 29 31 5 (set (reg:SI 151)
        (reg:SI 0 ax)) "function.c":1417 -1
     (nil))
(insn 31 30 32 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 151)) "function.c":1417 -1
     (nil))
(insn 32 31 33 5 (set (reg/f:DI 152)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1418 -1
     (nil))
(insn 33 32 34 5 (set (reg/f:DI 90 [ _4 ])
        (mem/f:DI (plus:DI (reg/f:DI 152)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1418 -1
     (nil))
(insn 34 33 35 5 (set (reg:SI 153)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1418 -1
     (nil))
(insn 35 34 36 5 (set (reg:DI 91 [ _5 ])
        (sign_extend:DI (reg:SI 153))) "function.c":1418 -1
     (nil))
(insn 36 35 37 5 (parallel [
            (set (reg:DI 92 [ _6 ])
                (ashift:DI (reg:DI 91 [ _5 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1418 -1
     (nil))
(insn 37 36 38 5 (parallel [
            (set (reg/f:DI 93 [ _7 ])
                (plus:DI (reg/f:DI 90 [ _4 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1418 -1
     (nil))
(insn 38 37 39 5 (set (reg/f:DI 94 [ _8 ])
        (mem/f:DI (reg/f:DI 93 [ _7 ]) [10 *_7+0 S8 A64])) "function.c":1418 -1
     (nil))
(insn 39 38 40 5 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1418 -1
     (nil))
(insn 40 39 41 5 (set (reg:DI 95 [ _9 ])
        (sign_extend:DI (reg:SI 154))) "function.c":1418 -1
     (nil))
(insn 41 40 42 5 (parallel [
            (set (reg/f:DI 96 [ _10 ])
                (plus:DI (reg/f:DI 94 [ _8 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1418 -1
     (nil))
(insn 42 41 43 5 (set (reg:QI 97 [ _11 ])
        (mem:QI (reg/f:DI 96 [ _10 ]) [0 *_10+0 S1 A8])) "function.c":1418 -1
     (nil))
(insn 43 42 44 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 97 [ _11 ])
            (const_int 46 [0x2e]))) "function.c":1418 -1
     (nil))
(jump_insn 44 43 45 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 72)
            (pc))) "function.c":1418 -1
     (nil)
 -> 72)
;;  succ:       6 (FALLTHRU)
;;              7

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 45 44 46 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 6 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1420 -1
     (nil))
(insn 47 46 48 6 (set (reg:SI 98 [ _12 ])
        (mem:SI (plus:DI (reg/f:DI 155)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])) "function.c":1420 -1
     (nil))
(insn 48 47 49 6 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1420 -1
     (nil))
(insn 49 48 50 6 (set (reg:DI 157)
        (sign_extend:DI (reg:SI 98 [ _12 ]))) "function.c":1420 -1
     (nil))
(insn 50 49 51 6 (parallel [
            (set (reg:DI 158)
                (plus:DI (reg:DI 157)
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1420 -1
     (nil))
(insn 51 50 52 6 (set (reg:SI 159)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1420 -1
     (nil))
(insn 52 51 53 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 158)
                    (const_int 8 [0x8]))
                (reg/f:DI 156)) [3 serwer_70->skarb.one_coin S4 A64])
        (reg:SI 159)) "function.c":1420 -1
     (nil))
(insn 53 52 54 6 (set (reg/f:DI 160)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1421 -1
     (nil))
(insn 54 53 55 6 (set (reg:SI 99 [ _13 ])
        (mem:SI (plus:DI (reg/f:DI 160)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])) "function.c":1421 -1
     (nil))
(insn 55 54 56 6 (set (reg/f:DI 161)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1421 -1
     (nil))
(insn 56 55 57 6 (set (reg:DI 162)
        (sign_extend:DI (reg:SI 99 [ _13 ]))) "function.c":1421 -1
     (nil))
(insn 57 56 58 6 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1421 -1
     (nil))
(insn 58 57 59 6 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 162)
                        (const_int 8 [0x8]))
                    (reg/f:DI 161))
                (const_int 52 [0x34])) [3 serwer_70->skarb.one_coin S4 A32])
        (reg:SI 163)) "function.c":1421 -1
     (nil))
(insn 59 58 60 6 (set (reg/f:DI 164)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1422 -1
     (nil))
(insn 60 59 61 6 (set (reg/f:DI 100 [ _14 ])
        (mem/f:DI (plus:DI (reg/f:DI 164)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1422 -1
     (nil))
(insn 61 60 62 6 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1422 -1
     (nil))
(insn 62 61 63 6 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 165))) "function.c":1422 -1
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 102 [ _16 ])
                (ashift:DI (reg:DI 101 [ _15 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1422 -1
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg/f:DI 103 [ _17 ])
                (plus:DI (reg/f:DI 100 [ _14 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1422 -1
     (nil))
(insn 65 64 66 6 (set (reg/f:DI 104 [ _18 ])
        (mem/f:DI (reg/f:DI 103 [ _17 ]) [10 *_17+0 S8 A64])) "function.c":1422 -1
     (nil))
(insn 66 65 67 6 (set (reg:SI 166)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1422 -1
     (nil))
(insn 67 66 68 6 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 166))) "function.c":1422 -1
     (nil))
(insn 68 67 69 6 (parallel [
            (set (reg/f:DI 106 [ _20 ])
                (plus:DI (reg/f:DI 104 [ _18 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1422 -1
     (nil))
(insn 69 68 70 6 (set (mem:QI (reg/f:DI 106 [ _20 ]) [0 *_20+0 S1 A8])
        (const_int 99 [0x63])) "function.c":1422 -1
     (nil))
(jump_insn 70 69 71 6 (set (pc)
        (label_ref 77)) "function.c":1423 -1
     (nil)
 -> 77)
;;  succ:       8

(barrier 71 70 72)
;; basic block 7, loop depth 1, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 72 71 73 7 254 (nil) [1 uses])
(note 73 72 75 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(jump_insn 75 73 76 7 (set (pc)
        (label_ref 74)) "function.c":1416 -1
     (nil)
 -> 74)
;;  succ:       5 (DFS_BACK)

(barrier 76 75 77)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 77 76 78 8 255 (nil) [1 uses])
(note 78 77 79 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 8 (set (reg/f:DI 167)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1426 -1
     (nil))
(insn 80 79 81 8 (set (reg:SI 107 [ _21 ])
        (mem:SI (plus:DI (reg/f:DI 167)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])) "function.c":1426 -1
     (nil))
(insn 81 80 82 8 (parallel [
            (set (reg:SI 108 [ _22 ])
                (plus:SI (reg:SI 107 [ _21 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1426 -1
     (nil))
(insn 82 81 83 8 (set (reg/f:DI 168)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1426 -1
     (nil))
(insn 83 82 84 8 (set (mem:SI (plus:DI (reg/f:DI 168)
                (const_int 8048 [0x1f70])) [3 serwer_70->skarb.count_one_coin+0 S4 A64])
        (reg:SI 108 [ _22 ])) "function.c":1426 -1
     (nil))
;;  succ:       9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       2
;;              8 (FALLTHRU)
(code_label 84 83 85 9 253 (nil) [1 uses])
(note 85 84 86 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 9 (set (reg:QI 109 [ END.134_23 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":1429 -1
     (nil))
(insn 87 86 88 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 109 [ END.134_23 ])
            (const_int 116 [0x74]))) "function.c":1429 -1
     (nil))
(jump_insn 88 87 89 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 154)
            (pc))) "function.c":1429 -1
     (nil)
 -> 154)
;;  succ:       10 (FALLTHRU)
;;              15

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       9 (FALLTHRU)
(note 89 88 90 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 144 10 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":1431 -1
     (nil))
;;  succ:       11 (FALLTHRU)

;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       10 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 144 90 91 11 260 (nil) [1 uses])
(note 91 144 92 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 11 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":1434 -1
     (nil))
(insn 93 92 94 11 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1434 -1
     (nil))
(call_insn 94 93 95 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1434 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 95 94 96 11 (set (reg:SI 169)
        (reg:SI 0 ax)) "function.c":1434 -1
     (nil))
(insn 96 95 97 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 169)) "function.c":1434 -1
     (nil))
(insn 97 96 98 11 (set (reg:SI 4 si)
        (const_int 29 [0x1d])) "function.c":1435 -1
     (nil))
(insn 98 97 99 11 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1435 -1
     (nil))
(call_insn 99 98 100 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1435 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 100 99 101 11 (set (reg:SI 170)
        (reg:SI 0 ax)) "function.c":1435 -1
     (nil))
(insn 101 100 102 11 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 170)) "function.c":1435 -1
     (nil))
(insn 102 101 103 11 (set (reg/f:DI 171)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1436 -1
     (nil))
(insn 103 102 104 11 (set (reg/f:DI 110 [ _24 ])
        (mem/f:DI (plus:DI (reg/f:DI 171)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1436 -1
     (nil))
(insn 104 103 105 11 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1436 -1
     (nil))
(insn 105 104 106 11 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 172))) "function.c":1436 -1
     (nil))
(insn 106 105 107 11 (parallel [
            (set (reg:DI 112 [ _26 ])
                (ashift:DI (reg:DI 111 [ _25 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1436 -1
     (nil))
(insn 107 106 108 11 (parallel [
            (set (reg/f:DI 113 [ _27 ])
                (plus:DI (reg/f:DI 110 [ _24 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1436 -1
     (nil))
(insn 108 107 109 11 (set (reg/f:DI 114 [ _28 ])
        (mem/f:DI (reg/f:DI 113 [ _27 ]) [10 *_27+0 S8 A64])) "function.c":1436 -1
     (nil))
(insn 109 108 110 11 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1436 -1
     (nil))
(insn 110 109 111 11 (set (reg:DI 115 [ _29 ])
        (sign_extend:DI (reg:SI 173))) "function.c":1436 -1
     (nil))
(insn 111 110 112 11 (parallel [
            (set (reg/f:DI 116 [ _30 ])
                (plus:DI (reg/f:DI 114 [ _28 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1436 -1
     (nil))
(insn 112 111 113 11 (set (reg:QI 117 [ _31 ])
        (mem:QI (reg/f:DI 116 [ _30 ]) [0 *_30+0 S1 A8])) "function.c":1436 -1
     (nil))
(insn 113 112 114 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 117 [ _31 ])
            (const_int 46 [0x2e]))) "function.c":1436 -1
     (nil))
(jump_insn 114 113 115 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 142)
            (pc))) "function.c":1436 -1
     (nil)
 -> 142)
;;  succ:       12 (FALLTHRU)
;;              13

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       11 (FALLTHRU)
(note 115 114 116 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 12 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1438 -1
     (nil))
(insn 117 116 118 12 (set (reg:SI 118 [ _32 ])
        (mem:SI (plus:DI (reg/f:DI 174)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])) "function.c":1438 -1
     (nil))
(insn 118 117 119 12 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1438 -1
     (nil))
(insn 119 118 120 12 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 118 [ _32 ]))) "function.c":1438 -1
     (nil))
(insn 120 119 121 12 (parallel [
            (set (reg:DI 177)
                (plus:DI (reg:DI 176)
                    (const_int 1006 [0x3ee])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1438 -1
     (nil))
(insn 121 120 122 12 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1438 -1
     (nil))
(insn 122 121 123 12 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 177)
                        (const_int 8 [0x8]))
                    (reg/f:DI 175))
                (const_int 4 [0x4])) [3 serwer_70->skarb.treasure_coin S4 A32])
        (reg:SI 178)) "function.c":1438 -1
     (nil))
(insn 123 122 124 12 (set (reg/f:DI 179)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1439 -1
     (nil))
(insn 124 123 125 12 (set (reg:SI 119 [ _33 ])
        (mem:SI (plus:DI (reg/f:DI 179)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])) "function.c":1439 -1
     (nil))
(insn 125 124 126 12 (set (reg/f:DI 180)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1439 -1
     (nil))
(insn 126 125 127 12 (set (reg:DI 181)
        (sign_extend:DI (reg:SI 119 [ _33 ]))) "function.c":1439 -1
     (nil))
(insn 127 126 128 12 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1439 -1
     (nil))
(insn 128 127 129 12 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 181)
                        (const_int 8 [0x8]))
                    (reg/f:DI 180))
                (const_int 8056 [0x1f78])) [3 serwer_70->skarb.treasure_coin S4 A32])
        (reg:SI 182)) "function.c":1439 -1
     (nil))
(insn 129 128 130 12 (set (reg/f:DI 183)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1440 -1
     (nil))
(insn 130 129 131 12 (set (reg/f:DI 120 [ _34 ])
        (mem/f:DI (plus:DI (reg/f:DI 183)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1440 -1
     (nil))
(insn 131 130 132 12 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1440 -1
     (nil))
(insn 132 131 133 12 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 184))) "function.c":1440 -1
     (nil))
(insn 133 132 134 12 (parallel [
            (set (reg:DI 122 [ _36 ])
                (ashift:DI (reg:DI 121 [ _35 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1440 -1
     (nil))
(insn 134 133 135 12 (parallel [
            (set (reg/f:DI 123 [ _37 ])
                (plus:DI (reg/f:DI 120 [ _34 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1440 -1
     (nil))
(insn 135 134 136 12 (set (reg/f:DI 124 [ _38 ])
        (mem/f:DI (reg/f:DI 123 [ _37 ]) [10 *_37+0 S8 A64])) "function.c":1440 -1
     (nil))
(insn 136 135 137 12 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1440 -1
     (nil))
(insn 137 136 138 12 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 185))) "function.c":1440 -1
     (nil))
(insn 138 137 139 12 (parallel [
            (set (reg/f:DI 126 [ _40 ])
                (plus:DI (reg/f:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1440 -1
     (nil))
(insn 139 138 140 12 (set (mem:QI (reg/f:DI 126 [ _40 ]) [0 *_40+0 S1 A8])
        (const_int 116 [0x74])) "function.c":1440 -1
     (nil))
(jump_insn 140 139 141 12 (set (pc)
        (label_ref 147)) "function.c":1441 -1
     (nil)
 -> 147)
;;  succ:       14

(barrier 141 140 142)
;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       11
(code_label 142 141 143 13 258 (nil) [1 uses])
(note 143 142 145 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(jump_insn 145 143 146 13 (set (pc)
        (label_ref 144)) "function.c":1434 -1
     (nil)
 -> 144)
;;  succ:       11 (DFS_BACK)

(barrier 146 145 147)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       12
(code_label 147 146 148 14 259 (nil) [1 uses])
(note 148 147 149 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 14 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1444 -1
     (nil))
(insn 150 149 151 14 (set (reg:SI 127 [ _41 ])
        (mem:SI (plus:DI (reg/f:DI 186)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])) "function.c":1444 -1
     (nil))
(insn 151 150 152 14 (parallel [
            (set (reg:SI 128 [ _42 ])
                (plus:SI (reg:SI 127 [ _41 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1444 -1
     (nil))
(insn 152 151 153 14 (set (reg/f:DI 187)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1444 -1
     (nil))
(insn 153 152 154 14 (set (mem:SI (plus:DI (reg/f:DI 187)
                (const_int 16052 [0x3eb4])) [3 serwer_70->skarb.count_treasure_coin+0 S4 A32])
        (reg:SI 128 [ _42 ])) "function.c":1444 -1
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              14 (FALLTHRU)
(code_label 154 153 155 15 257 (nil) [1 uses])
(note 155 154 156 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 156 155 157 15 (set (reg:QI 129 [ END.135_43 ])
        (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])) "function.c":1447 -1
     (nil))
(insn 157 156 158 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 129 [ END.135_43 ])
            (const_int 84 [0x54]))) "function.c":1447 -1
     (nil))
(jump_insn 158 157 159 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 228)
            (pc))) "function.c":1447 682 {*jcc}
     (nil)
 -> 228)
;;  succ:       16 (FALLTHRU)
;;              23

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 159 158 160 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 214 16 (set (mem/c:QI (symbol_ref:DI ("END") [flags 0x2]  <var_decl 0x7f7cd111b510 END>) [0 END+0 S1 A8])
        (const_int 48 [0x30])) "function.c":1449 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       16 (FALLTHRU)
;;              19 (DFS_BACK)
(code_label 214 160 161 17 264 (nil) [1 uses])
(note 161 214 162 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 162 161 163 17 (set (reg:SI 4 si)
        (const_int 19 [0x13])) "function.c":1452 -1
     (nil))
(insn 163 162 164 17 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1452 -1
     (nil))
(call_insn 164 163 165 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1452 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 165 164 166 17 (set (reg:SI 188)
        (reg:SI 0 ax)) "function.c":1452 -1
     (nil))
(insn 166 165 167 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])
        (reg:SI 188)) "function.c":1452 -1
     (nil))
(insn 167 166 168 17 (set (reg:SI 4 si)
        (const_int 29 [0x1d])) "function.c":1453 -1
     (nil))
(insn 168 167 169 17 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "function.c":1453 -1
     (nil))
(call_insn 169 168 170 17 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("random_return") [flags 0x3]  <function_decl 0x7f7cd1169e00 random_return>) [0 random_return S1 A8])
            (const_int 0 [0]))) "function.c":1453 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 170 169 171 17 (set (reg:SI 189)
        (reg:SI 0 ax)) "function.c":1453 -1
     (nil))
(insn 171 170 172 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])
        (reg:SI 189)) "function.c":1453 -1
     (nil))
(insn 172 171 173 17 (set (reg/f:DI 190)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1454 -1
     (nil))
(insn 173 172 174 17 (set (reg/f:DI 130 [ _44 ])
        (mem/f:DI (plus:DI (reg/f:DI 190)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1454 -1
     (nil))
(insn 174 173 175 17 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1454 -1
     (nil))
(insn 175 174 176 17 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 191))) "function.c":1454 -1
     (nil))
(insn 176 175 177 17 (parallel [
            (set (reg:DI 132 [ _46 ])
                (ashift:DI (reg:DI 131 [ _45 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1454 -1
     (nil))
(insn 177 176 178 17 (parallel [
            (set (reg/f:DI 133 [ _47 ])
                (plus:DI (reg/f:DI 130 [ _44 ])
                    (reg:DI 132 [ _46 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1454 -1
     (nil))
(insn 178 177 179 17 (set (reg/f:DI 134 [ _48 ])
        (mem/f:DI (reg/f:DI 133 [ _47 ]) [10 *_47+0 S8 A64])) "function.c":1454 -1
     (nil))
(insn 179 178 180 17 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1454 -1
     (nil))
(insn 180 179 181 17 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 192))) "function.c":1454 -1
     (nil))
(insn 181 180 182 17 (parallel [
            (set (reg/f:DI 136 [ _50 ])
                (plus:DI (reg/f:DI 134 [ _48 ])
                    (reg:DI 135 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1454 -1
     (nil))
(insn 182 181 183 17 (set (reg:QI 137 [ _51 ])
        (mem:QI (reg/f:DI 136 [ _50 ]) [0 *_50+0 S1 A8])) "function.c":1454 -1
     (nil))
(insn 183 182 184 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 137 [ _51 ])
            (const_int 46 [0x2e]))) "function.c":1454 -1
     (nil))
(jump_insn 184 183 185 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 212)
            (pc))) "function.c":1454 -1
     (nil)
 -> 212)
;;  succ:       18 (FALLTHRU)
;;              19

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       17 (FALLTHRU)
(note 185 184 186 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 186 185 187 18 (set (reg/f:DI 193)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1456 -1
     (nil))
(insn 187 186 188 18 (set (reg:SI 138 [ _52 ])
        (mem:SI (plus:DI (reg/f:DI 193)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1456 -1
     (nil))
(insn 188 187 189 18 (set (reg/f:DI 194)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1456 -1
     (nil))
(insn 189 188 190 18 (set (reg:DI 195)
        (sign_extend:DI (reg:SI 138 [ _52 ]))) "function.c":1456 -1
     (nil))
(insn 190 189 191 18 (parallel [
            (set (reg:DI 196)
                (plus:DI (reg:DI 195)
                    (const_int 2006 [0x7d6])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1456 -1
     (nil))
(insn 191 190 192 18 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1456 -1
     (nil))
(insn 192 191 193 18 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 196)
                        (const_int 8 [0x8]))
                    (reg/f:DI 194))
                (const_int 8 [0x8])) [3 serwer_70->skarb.large_treasure_coin S4 A64])
        (reg:SI 197)) "function.c":1456 -1
     (nil))
(insn 193 192 194 18 (set (reg/f:DI 198)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1457 -1
     (nil))
(insn 194 193 195 18 (set (reg:SI 139 [ _53 ])
        (mem:SI (plus:DI (reg/f:DI 198)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1457 -1
     (nil))
(insn 195 194 196 18 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1457 -1
     (nil))
(insn 196 195 197 18 (set (reg:DI 200)
        (sign_extend:DI (reg:SI 139 [ _53 ]))) "function.c":1457 -1
     (nil))
(insn 197 196 198 18 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1457 -1
     (nil))
(insn 198 197 199 18 (set (mem:SI (plus:DI (plus:DI (mult:DI (reg:DI 200)
                        (const_int 8 [0x8]))
                    (reg/f:DI 199))
                (const_int 16060 [0x3ebc])) [3 serwer_70->skarb.large_treasure_coin S4 A32])
        (reg:SI 201)) "function.c":1457 -1
     (nil))
(insn 199 198 200 18 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1458 -1
     (nil))
(insn 200 199 201 18 (set (reg/f:DI 140 [ _54 ])
        (mem/f:DI (plus:DI (reg/f:DI 202)
                (const_int 16 [0x10])) [9 serwer_70->mapa+0 S8 A64])) "function.c":1458 -1
     (nil))
(insn 201 200 202 18 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [3 y+0 S4 A32])) "function.c":1458 -1
     (nil))
(insn 202 201 203 18 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 203))) "function.c":1458 -1
     (nil))
(insn 203 202 204 18 (parallel [
            (set (reg:DI 142 [ _56 ])
                (ashift:DI (reg:DI 141 [ _55 ])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1458 -1
     (nil))
(insn 204 203 205 18 (parallel [
            (set (reg/f:DI 143 [ _57 ])
                (plus:DI (reg/f:DI 140 [ _54 ])
                    (reg:DI 142 [ _56 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1458 -1
     (nil))
(insn 205 204 206 18 (set (reg/f:DI 144 [ _58 ])
        (mem/f:DI (reg/f:DI 143 [ _57 ]) [10 *_57+0 S8 A64])) "function.c":1458 -1
     (nil))
(insn 206 205 207 18 (set (reg:SI 204)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [3 x+0 S4 A32])) "function.c":1458 -1
     (nil))
(insn 207 206 208 18 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 204))) "function.c":1458 -1
     (nil))
(insn 208 207 209 18 (parallel [
            (set (reg/f:DI 146 [ _60 ])
                (plus:DI (reg/f:DI 144 [ _58 ])
                    (reg:DI 145 [ _59 ])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1458 -1
     (nil))
(insn 209 208 210 18 (set (mem:QI (reg/f:DI 146 [ _60 ]) [0 *_60+0 S1 A8])
        (const_int 84 [0x54])) "function.c":1458 -1
     (nil))
(jump_insn 210 209 211 18 (set (pc)
        (label_ref 217)) "function.c":1459 -1
     (nil)
 -> 217)
;;  succ:       20

(barrier 211 210 212)
;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       17
(code_label 212 211 213 19 262 (nil) [1 uses])
(note 213 212 215 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 215 213 216 19 (set (pc)
        (label_ref 214)) "function.c":1452 -1
     (nil)
 -> 214)
;;  succ:       17 (DFS_BACK)

(barrier 216 215 217)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       18
(code_label 217 216 218 20 263 (nil) [1 uses])
(note 218 217 219 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 219 218 220 20 (set (reg/f:DI 205)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1462 -1
     (nil))
(insn 220 219 221 20 (set (reg:SI 147 [ _61 ])
        (mem:SI (plus:DI (reg/f:DI 205)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])) "function.c":1462 -1
     (nil))
(insn 221 220 222 20 (parallel [
            (set (reg:SI 148 [ _62 ])
                (plus:SI (reg:SI 147 [ _61 ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "function.c":1462 -1
     (nil))
(insn 222 221 223 20 (set (reg/f:DI 206)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [12 serwer+0 S8 A64])) "function.c":1462 -1
     (nil))
(insn 223 222 230 20 (set (mem:SI (plus:DI (reg/f:DI 206)
                (const_int 24056 [0x5df8])) [3 serwer_70->skarb.count_large_treasure_coin+0 S4 A64])
        (reg:SI 148 [ _62 ])) "function.c":1462 -1
     (nil))
(insn 230 223 228 20 (const_int 0 [0]) "function.c":1465 -1
     (nil))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 0, maybe hot
;;  prev block 20, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
;;              15
(code_label 228 230 229 23 252 (nil) [1 uses])
(note 229 228 0 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)

